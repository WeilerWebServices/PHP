<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339251 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<sect2 xml:id="install.windows.legacy.iis6" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Microsoft IIS 5.1 et IIS 6.0</title>
 <para>
  Cette section contient les instructions pour une installation manuelle sous IIS
  (Internet Information Services) 5.1 et IIS 6.0 de PHP sous Microsoft Windows XP
  et Windows Server 2003. Pour des instructions sur la configuration sous IIS 7.0
  et supérieur sous Windows Vista, Windows Server 2008, Windows 7 et Windows Server 2008 R2,
  reportez-vous à la section
  <link linkend="install.windows.legacy.iis7">Microsoft IIS 7.0 et suivant</link>.
 </para>
 <sect3 xml:id="install.windows.legacy.iis6.fastcgi">
  <title>Configuration sous IIS pour traiter les requêtes PHP</title>
  <para>
   Téléchargez et installez PHP suivant les instructions décrites dans les 
    <link linkend="install.windows.legacy.manual">étapes d'installation manuelle</link>.
    <note>
     <para>
      La version PHP non thread-safe est recommandé lors de l'utilisation d'IIS.
      Ces versions sont disponibles sur la page
      <link xlink:href="&url.php.win.downloads;">PHP pour Windows : Binaires et sources</link>.
     </para>
    </note>
  </para>
  <para>
   Configurez les options CGI- et FastCGI du fichier <filename>php.ini</filename> comme ceci :
   <example>
    <title>Options de configuration de CGI et FastCGI du fichier <filename>php.ini</filename></title>
    <programlisting role="ini">
<![CDATA[
fastcgi.impersonate = 1
fastcgi.logging = 0
cgi.fix_pathinfo=1
cgi.force_redirect = 0
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Téléchargez et installez l'extension <link xlink:href="&url.iis.fastcgi.downloads;">Microsoft FastCGI pour IIS 5.1 et 6.0</link>.
   L'extension est disponible pour les plate-formes 32-bit et 64-bit - sélectionnez le bon paquet pour votre plate-forme..
  </para>
  <para>
   Configurez l'extension FastCGI pour gérer les requêtes spécifiques PHP en exécutant la commande ci-dessous.
   Remplacez la valeur du paramètre &quot;-path&quot; avec le chemin absolu vers le fichier
   <filename>php-cgi.exe</filename>.
   <example>
    <title>Configuration de l'extension FastCGI pour gérer les requêtes PHP</title>
    <programlisting>
<![CDATA[
cscript %windir%\system32\inetsrv\fcgiconfig.js -add -section:"PHP" ^
-extension:php -path:"C:\PHP\php-cgi.exe"
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Cette commande va créer un mapping des scripts IIS pour les extensions de fichiers *.php, ce qui
   aura pour effet la gestion de toutes les URLs se terminant par .php par l'extension FastCGI.
   De plus, la commande configurera l'extension FastCGI lui demandant d'utiliser l'exécutable
   <filename>php-cgi.exe</filename> pour traiter les requêtes PHP.
   <note>
     <para>
      A ce point, les étapes d'installation et de configuration nécessaires sont terminées.
      Les instructions qui suivent dans cette section sont optionnelles mais vivement
      recommandées afin d'atteindre des fonctionnalités et des performances optimales
      de PHP sous IIS.
     </para>
   </note>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis6.impersonation">
  <title>Usurpation d'identité et accès au système de fichiers</title>
  <para>
   Il est recommandé d'activer l'usurpation d'identité pour FastCGI en PHP
   lors de l'utilisation avec IIS. Ce mode est contrôlé par la directive
   <varname>fastcgi.impersonate</varname> du fichier <filename>php.ini</filename>.
   Lorsque ce mode est activé, PHP effectuera toutes les opérations du système
   de fichiers avec le compte utilisateur qui a été choisi pour l'authentification
   IIS. Ceci assure que, même si le même processus PHP est partagé avec différents
   sites web IIS, les scripts PHP de ces sites web ne pourront pas accéder aux autres
   fichiers tant que différents comptes utilisateurs sont utilisées pour
   l'authentification IIS de chaque site web.
  </para>
  <para>
   Par exemple, IIS 5.1 et IIS 6.0, dans leurs configurations par défaut, ont d'activé
   l'authentification anonyme avec le compte interne IUSR_&lt;MACHINE_NAME&gt; utilisé
   comme identité par défaut. Ceci signifie que, afin de permettre à IIS d'exécuter des
   scripts PHP, il est nécessaire de donner les droits de lecture au compte
   IUSR_&lt;MACHINE_NAME&gt; pour ces scripts. Si les applications PHP doivent effectuer
   des opérations en écriture sur certains fichiers ou écrire des fichiers dans des dossiers,
   le compte IUSR_&lt;MACHINE_NAME&gt; doit avoir les permissions en écriture sur ces différents
   éléments.
  </para>
  <para>
   Pour déterminer quel est le compte utilisateur utilisé par l'authentification anonyme IIS,
   suivez ces étapes :
   <procedure>
    <step>
     <simpara>Dans le menu de démarrage de Windows, choisissez :
      &quot;Run:&quot;, tapez &quot;inetmgr&quot; et cliquez sur &quot;Ok&quot;;</simpara>
    </step>
    <step>
     <simpara>
      Dépliez la liste des sites Web sous le nœud &quot;Web Sites&quot; de l'arbre, faîtes
      un clic droit sur un site web utilisé et sélectionnez &quot;Properties&quot;;
     </simpara>    
    </step>
    <step>
     <simpara>Cliquez sur l'onglet &quot;Directory Security&quot;;</simpara>    
    </step>
    <step>
     <simpara>Prenez note du champ &quot;User name:&quot; dans le dialogue &quot;Authentication Methods&quot;</simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>Authentification anonyme pour 5.1 et IIS 6.0</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis6anonauth.png" width="654" depth="461" />
    </imageobject>
   </mediaobject>
  </para>
  <para>
   Pour modifier la configuration des permissions sur des fichiers ou des dossiers, utilisez
   l'explorateur Windows ou la commande <varname>icacls</varname>.
   <example>
    <title>Configuration des permissions d'accès</title>
    <programlisting>
<![CDATA[
icacls C:\inetpub\wwwroot\upload /grant IUSR:(OI)(CI)(M)
]]>     
    </programlisting>
   </example>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis6.defaultdoc">
  <title>Définition du fichier <filename>index.php</filename> comme document par défaut sous IIS</title>
  <para>
   Les documents par défaut IIS sont utilisés pour les requêtes HTTP qui ne spécifie pas de nom de document.
   Avec les applications PHP, <filename>index.php</filename> agit généralement comme document par défaut.
   Pour ajouter <filename>index.php</filename> à la liste des documents par défaut IIS, suivez ces étapes :
   <procedure>
    <step>
     <simpara>Dans le menu de démarrage Windows, choisissez &quot;Run:&quot;, tapez &quot;inetmgr&quot; et cliquez sur &quot;Ok&quot;;</simpara>
    </step>
    <step>
     <simpara>faîtes un clic droit sur le nœud &quot;Web Sites&quot; de l'arbre et sélectionnez &quot;Properties&quot;;</simpara>
    </step>
    <step>
     <simpara>Cliquez sur l'onglet &quot;Documents&quot;;</simpara>
    </step>
    <step>
     <simpara>Cliquez sur le bouton &quot;Add...&quot; et entrez &quot;index.php&quot; comme &quot;Default content page:&quot;.</simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>Configuration de la page index.php comme document par défaut sous IIS</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis6defaultdoc.png" width="659" depth="465" />
    </imageobject>
   </mediaobject>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis6.recycling">
  <title>Configuration du recyclage FastCGI et PHP</title>
  <para>
   Configurez l'extension IIS FastCGI pour le recyclage des processus PHP en utilisant la commande ci-dessous.
   La directive <varname>instanceMaxRequests</varname> de FastCGI contrôle le nombre de requêtes a traité par
   un seul processus <filename>php-cgi.exe</filename> avant l'extinction de l'extension FastCGI. La variable
   d'environnement PHP <varname>PHP_FCGI_MAX_REQUESTS</varname> contrôle le nombre de requêtes qu'un seul processus
   <filename>php-cgi.exe</filename> peut gérer avant de ce recycler lui-même. Assurez-vous que la valeur spécifiée
   pour la directive <varname>InstanceMaxRequests</varname> FastCGI est inférieure ou égale à la valeur spécifiée
   pour la directive <varname>PHP_FCGI_MAX_REQUESTS</varname>.
   <example>
    <title>Configuration du recyclage FastCGI et PHP</title>
    <programlisting>
<![CDATA[
cscript %windir%\system32\inetsrv\fcgiconfig.js -set -section:"PHP" ^
-InstanceMaxRequests:10000

cscript %windir%\system32\inetsrv\fcgiconfig.js -set -section:"PHP" ^
-EnvironmentVars:PHP_FCGI_MAX_REQUESTS:10000
]]>     
    </programlisting>
   </example>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis6.timeouts">
  <title>Configuration du délai d'expiration FastCGI</title>
  <para>
   Augmentez le délai d'expiration pour l'extension FastCGI s'il y a des applications
   dont les scripts PHP mettent beaucoup de temps à s'exécuter. Les 2 configurations
   qui contrôlent les délais d'expiration sont <varname>ActivityTimeout</varname>
   et <varname>RequestTimeout</varname>. Referez-vous à la
   <link xlink:href="&url.iis.fastcgi.settings;">configuration de l'extension
   FastCGI pour IIS 6.0</link> pour plus d'informations sur ces configurations.
   <example>
    <title>Configuration du délai d'expiration FastCGI</title>
    <programlisting>
<![CDATA[
cscript %windir%\system32\inetsrv\fcgiconfig.js -set -section:"PHP" ^
-ActivityTimeout:90

cscript %windir%\system32\inetsrv\fcgiconfig.js -set -section:"PHP" ^
-RequestTimeout:90
]]>     
    </programlisting>
   </example>
   </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis6.phpinilocation">
  <title>Modification du dossier contenant le fichier <filename>php.ini</filename></title>
  <para>
   PHP recherche le fichier <filename>php.ini</filename> dans
   <link linkend="configuration.file">différents endroits</link> et il est possible
   de modifier ces endroits de recherche du fichier <filename>php.ini</filename> en
   utilisant la variable d'environnement <varname>PHPRC</varname>.
   Pour demander à PHP de charger le fichier de configuration depuis un dossier personnalisé,
   exécutez la commande ci-dessous. Le chemin absolu du dossier contenant le fichier
   <filename>php.ini</filename> doit être spécifié sous la variable d'environnement
   <varname>PHPRC</varname>.
   <example>
    <title>Modification du dossier contenant le fichier <filename>php.ini</filename></title>
    <programlisting>
<![CDATA[
cscript %windir%\system32\inetsrv\fcgiconfig.js -set -section:"PHP" ^
-EnvironmentVars:PHPRC:"C:\Some\Directory\"
]]>         
    </programlisting>
   </example>
  </para>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
