<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339251 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: mikaelkael -->

<sect2 xml:id="install.windows.legacy.commandline" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Ligne de commande PHP sous Microsoft Windows</title>
 <para>
  Cette section contient les notes et les astuces spécifiques à l'installation
  de PHP depuis la ligne de commande sous Windows.
 </para>
 <note>
  <para>
   Vous devriez lire les <link linkend="install.windows.legacy.manual">étapes
   du manuel d'installation</link> d'abord !
  </para>
 </note>
 <para>
  Faire fonctionner PHP depuis la ligne de commande peut être effectué
  sans aucune modification de Windows.
  <screen>
<![CDATA[
C:\PHP5\php.exe -f "C:\PHP Scripts\script.php" -- -arg1 -arg2 -arg3
]]>     
  </screen>
 </para>
 
 <para>
  Mais il existe quelques étapes à suivre pour rendre ceci plus simple.
  La plupart de ces étapes ont déjà dû être faite, mais elles sont répétées
  ici pour fournir une séquence étape par étape complète.
  <itemizedlist>
   
   <note>
    <para>
     Les variables <envar>PATH</envar> et <envar>PATHEXT</envar>
     sont des variables systèmes pré-existantes importantes sous Windows,
     et il est important de ne faire qu'ajouter des éléments, sans les
     écraser totalement.
    </para>
   </note>
   
   <listitem>
    <para>
     Ajouter la localisation de l'exécutable PHP (<filename>php.exe</filename>,
     <filename>php-win.exe</filename> ou <filename>php-cli.exe</filename>
     suivant la version de PHP ainsi que les préférences d'affichage)
     à la variable d'environnement <envar>PATH</envar>.
     Vous trouverez plus d'informations concernant l'ajout du dossier PHP
     à la variable <envar>PATH</envar> dans l'<link
     linkend="faq.installation.addtopath">entrée correspondante de la FAQ</link>.
    </para>
   </listitem>
   
   <listitem>
    <para>
     Ajouter l'extension <literal>.PHP</literal> à la variable d'environnement
     <varname>PATHEXT</varname>. Ceci peut être fait lors de la modification
     de la variable d'environnement <envar>PATH</envar>. Suivez les mêmes
     étapes que celles décrites dans la <link
     linkend="faq.installation.addtopath">FAQ</link> mais utilisez la variable
     <varname>PATHEXT</varname> au lieu de la variable d'environnement
     <envar>PATH</envar>.
     <note>
      <para>
       La position à laquelle vous placez le <literal>.PHP</literal> déterminera
       le script ou le programme à exécuter lorsqu'un nom de fichier de cette
       forme sera trouvé. Par exemple, le fait de placer <literal>.PHP</literal>
       avant <literal>.BAT</literal> fera que votre script sera exécuté à la place
       du fichier batch, s'il y a un fichier batch avec le même nom.
      </para>
     </note>
    </para>
   </listitem>
   
   <listitem>
    <para>
     Associer l'extension <literal>.PHP</literal> avec un type de fichier. Ceci
     peut être fait en exécutant la commande suivante :
     <screen>
<![CDATA[
assoc .php=phpfile
]]>     
     </screen>
    </para>
   </listitem>
   
   <listitem>
    <para>
     Associer le type de fichier <literal>phpfile</literal> avec l'exécutable
     PHP approprié. Ceci peut être fait en exécutant la commande suivante :
     <screen>
<![CDATA[
ftype phpfile="C:\PHP5\php.exe" -f "%1" -- %~2
]]>     
     </screen>
    </para>
   </listitem>
   
  </itemizedlist>
 </para>
 
 <para>
  Ces étapes permettent aux scripts PHP d'être exécutés depuis n'importe
  quel répertoire, sans pour autant spécifier l'exécutable PHP ou l'extension
  <literal>.PHP</literal>, et tous les paramètres seront passés au script
  pour traitement.
 </para>
 
 <para>
  L'exemple ci-dessous montre les modifications pouvant être faites manuellement
  au registre Windows.
  <example>
   <title>Modification du registre</title>
   <screen>
<![CDATA[
Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\.php]
@="phpfile"
"Content Type"="application/php"

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\phpfile]
@="PHP Script"
"EditFlags"=dword:00000000
"BrowserFlags"=dword:00000008
"AlwaysShowExt"=""

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\phpfile\DefaultIcon]
@="C:\\PHP5\\php-win.exe,0"

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\phpfile\shell]
@="Open"

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\phpfile\shell\Open]
@="&Open"

[HKEY_LOCAL_MACHINE\SOFTWARE\Classes\phpfile\shell\Open\command]
@="\"C:\\PHP5\\php.exe\" -f \"%1\" -- %~2"
]]>
   </screen>
  </example>
 </para>
 
 <para>
  Avec ces modifications, la même commande peut maintenant être écrite comme ceci :
  <screen>
<![CDATA[
"C:\PHP Scripts\script" -arg1 -arg2 -arg3
]]>
  </screen>
  ou, si le chemin <literal>"C:\PHP Scripts"</literal> est présent dans la
  variable d'environnement <envar>PATH</envar> :
  <screen>
<![CDATA[
script -arg1 -arg2 -arg3
]]>
  </screen>
 </para>
 
 <note>
  <para>
   Il y a un petit problème si vous tentez d'utiliser cette technique et
   qu'en même temps, vous utilisez votre script PHP comme filtre d'une commande,
   comme ceci :
   <screen>
<![CDATA[
dir | "C:\PHP Scripts\script" -arg1 -arg2 -arg3
]]>
   </screen>
   ou
   <screen>
<![CDATA[
dir | script -arg1 -arg2 -arg3
]]>
   </screen>
   Vous pourriez trouver que le script s'interrompt et que rien
   ne s'affiche. Afin de rendre ceci opérationnel, vous devez
   effectuer une nouvelle modification au registre Windows.
   <screen>
<![CDATA[
Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\policies\Explorer]
"InheritConsoleHandles"=dword:00000001
]]>
   </screen>
   Plus d'informations concernant ce problème peuvent être trouvées dans <link
   xlink:href="http://support.microsoft.com/default.aspx?scid=kb;en-us;321788">
   l'article de la base de connaissance Microsoft : 321788</link>.
   Depuis Windows 10, cette configuration semble avoir été inversé ;
   l'installation par défaut de Windows 10 supporte les gestionnaires de console hérités
   automatiquement. Ce <link
   xlink:href="https://social.msdn.microsoft.com/Forums/en-US/f19d740d-21c8-4dc2-a9ab-d5c0527e932b/nasty-file-association-regression-bug-in-windows-10-console?forum=windowssdk">
   post du forum Microsoft</link> fournit l'explication.
  </para>
 </note>
</sect2>

<!-- Keep this comment at the end of the file
     Local variables:
     mode: sgml
     sgml-omittag:t
     sgml-shorttag:t
     sgml-minimize-attributes:nil
     sgml-always-quote-attributes:t
     sgml-indent-step:1
     sgml-indent-data:t
     indent-tabs-mode:nil
     sgml-parent-document:nil
     sgml-default-dtd-file:"~/.phpdoc/manual.ced"
     sgml-exposed-tags:nil
     sgml-local-catalogs:nil
     sgml-local-ecat-files:nil
     End:
     vim600: syn=xml fen fdm=syntax fdl=2 si
     vim: et tw=78 syn=sgml
     vi: ts=1 sw=1
     -->
