<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339251 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<sect2 xml:id="install.windows.legacy.apache1" xmlns="http://docbook.org/ns/docbook">
 <title>Installer PHP sous Microsoft Windows avec Apache 1.3.x</title>
 <para>
  Cette section contient des notes et conseils spécifiques pour l'installation de PHP
  avec Apache 1.3.x sur les systèmes Microsoft Windows. Il y a aussi des 
  <!--<link linkend="install.windows.legacy.apache2">instructions et des notes
  pour Apache 2</link> sur une page séparée.-->
 </para>
 <note>
  <para>
   Lisez les <link linkend="install.windows.legacy.manual">étapes d'installation 
   du manuel</link> d'abord !
  </para>
 </note>
 
 <simpara>
  Il y a deux méthodes pour faire fonctionner PHP avec Apache 1.3.x
  sous Windows. La première est d'utiliser l'exécutable CGI 
  (<filename>php.exe</filename>
  pour PHP 4 et <filename>php-cgi.exe</filename> pour PHP 5),
  l'autre est d'utiliser les modules Apache DLL. Dans les deux cas,
  vous devez arrêter le serveur Apache, éditer votre fichier
  &httpd.conf; pour dire à Apache de prendre PHP en compte et redémarrer Apache.
 </simpara>
 
 <simpara>
  Maintenant que le module SAPI a été rendu plus stable sous Windows,
  nous recommandons son usage plutôt que celui de
  l'exécutable CGI, car il est plus transparent et sécurisé.
 </simpara>
 
 <simpara>
  Bien qu'il puisse y avoir quelques différences de configuration 
  de PHP sous Apache, le processus reste simple et à la portée du néophyte.
  Reportez-vous aux documentations Apache pour plus de détails sur
  ces directives.
 </simpara>
 
 <simpara>
  Après avoir modifié le fichier de configuration, pensez à
  redémarrer le serveur web, par exemple avec 
  <command>NET STOP APACHE</command> suivi de 
  <command>NET START APACHE</command>, si vous utilisez Apache
  comme service Windows, ou bien utilisez vos alias classiques.
 </simpara>
 
 &note.apache.slashes;
 
 <sect3 xml:id="install.windows.legacy.apache1.module">
  <title>Installation de PHP en tant que module Apache</title>
  <para>
   Vous devez ajouter les lignes suivantes à votre fichier de configuration Apache &httpd.conf; :
  </para>
  <para>
   <example>
    <title>PHP comme module Apache 1.3.x</title>
    <para>
     Cet exemple suppose que PHP est installé dans le dossier <filename>c:\php</filename>.
     Ajustez le chemin si ce n'est pas le cas.
    </para>
    <para>
     Pour PHP 4 :
    </para>
    <programlisting role="apache-conf">
<![CDATA[
# À ajouter à la fin de la section LoadModule
# N'oubliez pas de copier ce fichier depuis le dossier sapi !
LoadModule php4_module "C:/php/php4apache.dll"

# À ajouter à la fin de la section AddModule
AddModule mod_php4.c
]]>
    </programlisting>
    <para>
     Pour PHP 5 :
    </para>
    <programlisting role="apache-conf">
<![CDATA[
# À ajouter à la fin de la section LoadModule
LoadModule php5_module "C:/php/php5apache.dll"

# À ajouter à la fin de la section AddModule
AddModule mod_php5.c
]]>
    </programlisting>
    <para>
     Pour les deux :
    </para>
    <programlisting role="apache-conf">
<![CDATA[
# Ajoutez cette ligne dans les parenthèses conditionnelles <IfModule mod_mime.c>
AddType application/x-httpd-php .php

# Pour les fichiers de syntaxe colorisée .phps, ajoutez également
AddType application/x-httpd-php-source .phps
]]>
    </programlisting>
   </example>
  </para>
 </sect3>
 
 <sect3 xml:id="install.windows.legacy.apache1.cgi">
  <title>Installation comme binaire CGI</title>
  
  <para>
   Si vous avez dézippé le paquet PHP dans le répertoire
   <filename>c:\php\</filename> comme décrit dans la section 
   sur les 
   <link linkend="install.windows.legacy.manual">étapes d'installation du manuel</link>, 
   vous devez insérer ces lignes à votre
   fichier de configuration Apache pour activer le binaire CGI :
   <example>
    <title>PHP et Apache 1.3.x en tant que CGI</title>
    <programlisting role="apache-conf">
<![CDATA[
ScriptAlias /php/ "c:/php/"
AddType application/x-httpd-php .php

# Pour PHP 4
Action application/x-httpd-php "/php/php.exe"

# Pour PHP 5
Action application/x-httpd-php "/php/php-cgi.exe"

# spécifez le répertoire où se trouve php.ini
SetEnv PHPRC C:/php
]]>
    </programlisting>
   </example>
   Notez que la seconde ligne dans l'exemple ci-dessus peut être touvée
   dans l'actuelle version de votre &httpd.conf;, mais elle est commentée.
   Souvenez-vous également de faire correspondre le chemin
   <filename>c:/php/</filename> à votre chemin actuel vers PHP.
  </para>
  &warn.install.cgi;
  <simpara>
   Si vous voulez présenter la source de vos fichiers PHP avec la
   coloration syntaxique, il n'existe pas d'option équivalente de celle
   de la version module de PHP.
   Si vous choisissez de configurer Apache pour utiliser PHP en mode CGI,
   vous aurez besoin d'utiliser la fonction <function>highlight_file</function>.
   Pour réaliser cela simplement, créez un script PHP dans un fichier et ajoutez
   ce code :
   <literal>&lt;?php highlight_file('original_php_script.php'); ?&gt;</literal>.
  </simpara>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
