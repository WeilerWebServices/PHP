<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343316 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

  <sect1 xml:id="language.oop5.object-comparison" xmlns="http://docbook.org/ns/docbook">
   <title>Comparaison d'objets</title>
   <para>
    Lors de l'utilisation de l'opérateur de comparaison (<literal>==</literal>),
    les objets sont comparés de manière simple, à savoir :
    deux objets sont égaux s'ils ont les mêmes attributs et valeurs (les valeurs
    sont comparées avec l'opérateur <literal>==</literal>), et qu'ils
    sont des instances de la même classe.
   </para>
   <para>
    Lors de l'utilisation de l'opérateur d'identité
    (<literal>===</literal>), les objets sont identiques uniquement s'ils
    font référence à la même instance de la même classe.
   </para>
   <para>
    Un exemple va illustrer ces règles.
    <example>
     <title>Exemple de comparaison d'objets en PHP</title>
     <programlisting role="php">
<![CDATA[
<?php
function bool2str($bool)
{
    if ($bool === false) {
            return 'FALSE';
    } else {
            return 'TRUE';
    }
}

function compareObjects(&$o1, &$o2)
{
    echo 'o1 == o2 : '.bool2str($o1 == $o2)."\n";
    echo 'o1 != o2 : '.bool2str($o1 != $o2)."\n";
    echo 'o1 === o2 : '.bool2str($o1 === $o2)."\n";
    echo 'o1 !== o2 : '.bool2str($o1 !== $o2)."\n";
}

class Flag
{
    public $flag;

    function __construct($flag = true) {
        $this->flag = $flag;
    }
}

class OtherFlag
{
    public $flag;

    function __construct($flag = true) {
        $this->flag = $flag;
    }
}

$o = new Flag();
$p = new Flag();
$q = $o;
$r = new OtherFlag();

echo "Deux instances de la même classe\n";
compareObjects($o, $p);

echo "\nDeux références sur le même objet\n";
compareObjects($o, $q);

echo "\nInstances de classes différentes\n";
compareObjects($o, $r);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Deux instances de la même classe
o1 == o2 : TRUE
o1 != o2 : FALSE
o1 === o2 : FALSE
o1 !== o2 : TRUE

Deux références sur le même objet
o1 == o2 : TRUE
o1 != o2 : FALSE
o1 === o2 : TRUE
o1 !== o2 : FALSE

Instances de classes différentes
o1 == o2 : FALSE
o1 != o2 : TRUE
o1 === o2 : FALSE
o1 !== o2 : TRUE
]]>
     </screen>
    </example>
   </para>
   <note>
    <para>
     Les extensions peuvent définir leurs propres règles pour leurs
     comparaisons d'objets (<literal>==</literal>).
    </para>
   </note>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
