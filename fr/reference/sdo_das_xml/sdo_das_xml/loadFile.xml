<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321873 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="sdo-das-xml.loadfile" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_XML::loadFile</refname>
  <refpurpose>
   Retourne un objet SDO_DAS_XML_Document pour un chemin donné d'une instance de document xml
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDO_XMLDocument</type><methodname>SDO_DAS_XML::loadFile</methodname>
   <methodparam><type>string</type><parameter>xml_file</parameter></methodparam>
  </methodsynopsis>

  <para>
   Construit un arbre de SDO_DataObjects à partir de l'adresse donnée d'une
   instance de document xml.
   Retourne un Objet SDO_DAS_XML_Document.
   Utilisez la méthode SDO_DAS_XML_Document::getRootDataObject pour récupérer
   l'objet de données racine.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>xml_file</parameter>
     </term>
     <listitem>
      <para>
       Chemin du document d'instance.
       Cela peut être un chemin à un fichier local ou à une adresse URL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet SDO_DAS_XML_Document en cas de réussite ou émet une
   exception comme définie ci-dessous.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>SDO_TypeNotFoundException</parameter>
     </term>
     <listitem>
      <para>
       Émis si un type n'est pas défini dans le modèle sous-jacent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>SDO_PropertyNotFoundException</parameter>
     </term>
     <listitem>
      <para>
       Émis si une propriété dans un type n'est pas défini dans le modèle
       sous-jacent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>SDO_DAS_XML_ParserException</parameter>
     </term>
     <listitem>
      <para>
       Émis pour n'importe quels problèmes lors de l'analyse du fichier XSD
       donné.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>SDO_DAS_XML_FileException</parameter>
     </term>
     <listitem>
      <para>
       Émis si le fichier spécifié ne peut être trouvé.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
