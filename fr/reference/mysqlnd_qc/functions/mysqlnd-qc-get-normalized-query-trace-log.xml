<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325489 Maintainer: itanea Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-qc-get-normalized-query-trace-log" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_get_normalized_query_trace_log</refname>
  <refpurpose>Retourne une trace dans les logs d'une requête normalisée pour chaque requête inspectée par le cache de requêtes</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type>
   <methodname>mysqlnd_qc_get_normalized_query_trace_log</methodname>
   <void />
  </methodsynopsis>
  <para>
   Retourne une trace dans les logs d'une requête normalisée pour chaque
   requête inspectée par le cache de requêtes. La collection de trace de logs
   est désactivée par défaut. Pour collecter les traces de log, vous devez définir la
   directive de configuration PHP
   <literal>mysqlnd_qc.collect_normalized_query_trace</literal> à
   <literal>1</literal>.
  </para>
  <para>
   Les entrées de trace de logs sont groupées par requête normalisée.
   La requête normalisée est la requête avec toutes les valeurs de paramètres
   de requête remplacées par un marqueur. Par exemple, les deux requêtes
   <literal>SELECT id FROM test WHERE id = 1</literal> et
   <literal>SELECT id FROM test WHERE id = 2</literal> sont normalisées en
   <literal>SELECT id FROM test WHERE id = ?</literal>. Chaque fois qu'une
   requête est inspectée par le cache de requête qui correspond au masque de
   requête normalisée, ses statistiques sont groupées par la chaîne de requête
   normalisée.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un tableau de log de requêtes. Chaque entrée contient la chaîne de requête
   normalisée en plus d'autres informations.
  </para>
  
  <informaltable>
   <tgroup cols="2">
    <colspec colwidth="1*"/>
    <colspec colwidth="9*"/>
    <thead>
     <row>
      <entry>Clé</entry>
      <entry>Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <literal>query</literal>
      </entry>
      <entry>
       Chaîne de requête normalisée.
      </entry>
     </row>
     <row>
      <entry>
       <literal>occurences</literal>
      </entry>
      <entry>
       Le nombre de requêtes qui ont correspondu à la chaîne de requête
       normalisée en plus de celle qui a créée l'entrée du log.
       La valeur est zéro si une requête a été normalisée, sa représentation
       normalisée a été ajoutée au log mais qu'aucune autre requête inspectée
       par PECL/mysqlnd_qc n'avait la même chaîne de requête normalisée.
      </entry>
     </row>
     <row>
      <entry>
       <literal>eligible_for_caching</literal>
      </entry>
      <entry>
       Si la requête doit être mise en cache ou non. Une requête
       éligible pour la mise en cache ne sera pas nécessairement
       mise en cache. Il n'est pas possible de dire avec certitude
       si et combien de requêtes mises en cache a contribué
       à l'aggrégation de l'entrée du log de requête normalisée.
       Cependant, la comparaison du temps minimum d'exécution
       et du temps moyenne d'exécution permet de faire une supposition
       relativement juste.
      </entry>
     </row>
     <row>
      <entry>
       <literal>avg_run_time</literal>
      </entry>
      <entry>
       La durée d'exécution moyen de toutes les requêtes ayant
       contribuées à l'entrée du log. La durée d'exécution
       est le temps entre l'envoi de la requête à MySQL et la
       réception de la réponse depuis MySQL.
      </entry>
     </row>
     <row>
      <entry>
       <literal>avg_store_time</literal>
      </entry>
      <entry>
       La durée moyenne de stockage de toutes les requêtes ayant
       contribuées à l'entrée du log. La durée de stockage
       est le temps nécessaire pour récupérer un jeu de résultats
       d'une requête depuis le serveur vers le client, et le
       stocker sur le client.
      </entry>
     </row>
     <row>
      <entry>
       <literal>min_run_time</literal>
      </entry>
      <entry>
       La durée minimale d'exécution de toutes les requêtes ayant
       contribuées à l'entrée du log.
      </entry>
     </row>
     <row>
      <entry>
       <literal>min_store_time</literal>
      </entry>
      <entry>
       La durée minimale de stockage de toutes les requêtes ayant
       contribuées à l'entrée du log.
      </entry>
     </row>
     <row>
      <entry>
       <literal>max_run_time</literal>
      </entry>
      <entry>
       La durée maximale d'exécution de toutes les requêtes ayant contribuées
       à l'entrée du log.
      </entry>
     </row>
     <row>
      <entry>
       <literal>max_store_time</literal>
      </entry>
      <entry>
       La durée maximale de stockage de toutes les requêtes ayant contribuées
       à l'entrée du log.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <programlisting role="ini">
<![CDATA[
mysqlnd_qc.collect_normalized_query_trace=1
]]>
   </programlisting>
   <programlisting role="php">
<![CDATA[
<?php
/* Connexion, création et peuplement de la table test */
$mysqli = new mysqli("host", "user", "password", "schema", "port", "socket");
$mysqli->query("DROP TABLE IF EXISTS test");
$mysqli->query("CREATE TABLE test(id INT)");
$mysqli->query("INSERT INTO test(id) VALUES (1), (2)");

/* Non mise en cache */
$res = $mysqli->query("SELECT id FROM test WHERE id = 1");
var_dump($res->fetch_assoc());
$res->free();

/* Mise en cache */
$res = $mysqli->query("/*" . MYSQLND_QC_ENABLE_SWITCH . "*/" . "SELECT id FROM test WHERE id = 2");
var_dump($res->fetch_assoc());
$res->free();

/* Récupération depuis le cache */
$res = $mysqli->query("/*" . MYSQLND_QC_ENABLE_SWITCH . "*/" . "SELECT id FROM test WHERE id = 2");
var_dump($res->fetch_assoc());
$res->free();

var_dump(mysqlnd_qc_get_normalized_query_trace_log());
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
array(1) {
  ["id"]=>
  string(1) "1"
}
array(1) {
  ["id"]=>
  string(1) "2"
}
array(1) {
  ["id"]=>
  string(1) "2"
}
array(4) {
  [0]=>
  array(9) {
    ["query"]=>
    string(25) "DROP TABLE IF EXISTS test"
    ["occurences"]=>
    int(0)
    ["eligible_for_caching"]=>
    bool(false)
    ["avg_run_time"]=>
    int(0)
    ["min_run_time"]=>
    int(0)
    ["max_run_time"]=>
    int(0)
    ["avg_store_time"]=>
    int(0)
    ["min_store_time"]=>
    int(0)
    ["max_store_time"]=>
    int(0)
  }
  [1]=>
  array(9) {
    ["query"]=>
    string(27) "CREATE TABLE test (id INT )"
    ["occurences"]=>
    int(0)
    ["eligible_for_caching"]=>
    bool(false)
    ["avg_run_time"]=>
    int(0)
    ["min_run_time"]=>
    int(0)
    ["max_run_time"]=>
    int(0)
    ["avg_store_time"]=>
    int(0)
    ["min_store_time"]=>
    int(0)
    ["max_store_time"]=>
    int(0)
  }
  [2]=>
  array(9) {
    ["query"]=>
    string(40) "INSERT INTO test (id ) VALUES (? ), (? )"
    ["occurences"]=>
    int(0)
    ["eligible_for_caching"]=>
    bool(false)
    ["avg_run_time"]=>
    int(0)
    ["min_run_time"]=>
    int(0)
    ["max_run_time"]=>
    int(0)
    ["avg_store_time"]=>
    int(0)
    ["min_store_time"]=>
    int(0)
    ["max_store_time"]=>
    int(0)
  }
  [3]=>
  array(9) {
    ["query"]=>
    string(31) "SELECT id FROM test WHERE id =?"
    ["occurences"]=>
    int(2)
    ["eligible_for_caching"]=>
    bool(true)
    ["avg_run_time"]=>
    int(159)
    ["min_run_time"]=>
    int(12)
    ["max_run_time"]=>
    int(307)
    ["avg_store_time"]=>
    int(10)
    ["min_store_time"]=>
    int(8)
    ["max_store_time"]=>
    int(13)
  }
}
]]>
   </screen>
   
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-qc.configuration">Configuration de l'exécution</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.collect-query-trace">mysqlnd_qc.collect_normalized_query_trace</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.time-statistics">mysqlnd_qc.time_statistics</link>
    </member>
    <member>
     <function>mysqlnd_qc_get_query_trace_log</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
