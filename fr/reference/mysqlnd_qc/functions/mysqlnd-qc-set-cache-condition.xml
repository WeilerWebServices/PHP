<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325489 Maintainer: itanea Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-qc-set-cache-condition" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_set_cache_condition</refname>
  <refpurpose>Définit les conditions pour une mise en cache automatique</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type>
   <methodname>mysqlnd_qc_set_cache_condition</methodname>
   <methodparam>
    <type>int</type>
    <parameter>condition_type</parameter>
   </methodparam>
   <methodparam>
    <type>mixed</type>
    <parameter>condition</parameter>
   </methodparam>
   <methodparam>
    <type>mixed</type>
    <parameter>condition_option</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Définit une condition pour une mise en cache automatique de requêtes
   qui ne contiennent pas nécessairement d'astuces SQL pour
   l'activation de la mise en cache.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>condition_type</parameter>
    </term>
    <listitem>
     <para>
      Type de condition. La seule valeur autorisée est
      <constant>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>condition</parameter>
    </term>
    <listitem>
     <para>
      Paramètre pour la condition définie avec <literal>condition_type</literal>.
      Le type et la structure du paramètre
      dépendent de <literal>condition_type</literal>
     </para>
     <para>
      Si <literal>condition_type</literal> vaut
      <literal>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</literal>,
      <literal>condition</literal> doit être une chaîne. La chaîne
      définit un masque. Les requêtes sont mises en cache si
      l'entrée des méta-données table et base de données de leurs jeux
      de résultats correspond au masque. Le masque est vérifiée pour
      une correspondance avec les entrées méta-données <literal>db</literal>
      et <literal>org_table</literal> fournis par la bibliothèque MySQL client
      serveur sous-jacente. Reportez-vous au manuel de référence MySQL pour
      plus de détails sur ces deux entrées. Les valeurs
      <literal>db</literal> et <literal>org_table</literal> sont concaténées 
      avec un point (<literal>.</literal>) avant de tenter une équivalence
      avec la <literal>condition</literal>. La recherche de correspondance
      supporte les jokers <literal>%</literal> et <literal>_</literal>.
      Le joker <literal>%</literal> va faire correspondre un ou plusieurs
      caractères arbitraires. Le joker <literal>_</literal> va faire
      correspondre une seule caractère arbitraire. Le caractère d'échappement
      est l'anti-slashes (\).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>condition_option</parameter>
    </term>
    <listitem>
     <para>
      Option pour la <literal>condition</literal>Le type et la structure
      dépendent de <literal>condition_type</literal>.
     </para>
     <para>
      Si <literal>condition_type</literal> vaut
      <literal>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</literal>,
      <literal>condition_options</literal> sera le TTL à utiliser.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>mysqlnd_qc_set_cache_condition</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/* Met en cache tous les accès aux tables dont le nom est "new%" dans le schéma/base de données "db_example"
pendant une seconde */
if (!mysqlnd_qc_set_cache_condition(MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN, "db_example.new%", 1)) {
  die("Echec lors de la définition d'une condition de mise en cache !");
}

$mysqli = new mysqli("host", "user", "password", "db_example", "port");
/* Mise en cache, malgré l'absence d'astuce SQL */
$mysqli->query("SELECT id, title FROM news");

$pdo_mysql = new PDO("mysql:host=host;dbname=db_example;port=port", "user", "password");
/* Non mise en cache : aucune astuce SQL, aucun masque ne correspond */
$pdo_mysql->query("SELECT id, title FROM latest_news");
/* Mise en cache : TTL d'une seconde, masque trouvé */
$pdo_mysql->query("SELECT id, title FROM news");
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; en cas de succès, &false; sinon.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-qc.pattern-based-caching">Démarrage rapide : mise en cache basée sur un masque</link>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
