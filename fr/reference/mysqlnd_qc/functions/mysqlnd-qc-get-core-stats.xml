<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 327381 Maintainer: itanea Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-qc-get-core-stats" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_get_core_stats</refname>
  <refpurpose>Statistiques collectées par le cœur du cache des requêtes</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type>
   <methodname>mysqlnd_qc_get_core_stats</methodname>
   <void />
  </methodsynopsis>
  <para>
   Retourne un tableau de statistiques collectées par le cœur du plugin
   de mise en cache. Des champs identiques de données seront rapportés
   pour tous les gestionnaires de stockage, les données étant collectées
   par le cœur.
  </para>
  <para>
   La directive de configuration PHP
   <literal>mysqlnd_qc.collect_statistics</literal> contrôle la collection
   de statistiques. La collection de statistiques est désactivée par défaut
   pour des raisons de performance. La désactivation de la collection
   de statistiques désactive également la collection des temps relatifs
   aux statistiques.
  </para>
  <para>
   La direction de configuration PHP
   <literal>mysqlnd_qc.collect_time_statistics</literal> contrôle la collection
   des temps relatifs aux statistiques.
  </para>
  <para>
   Le scope des statistiques issues du cœur est le processus PHP.
   Suivant votre modèle de déploiement, un processus PHP peut
   gérer une ou plusieurs requêtes.
  </para>
  <para>
   Les statistiques sont agrégées pour toutes les entrées du cache
   et tous les gestionnaires de stockage.
   Il n'est pas possible de demander le nombre de requêtes issues
   depuis des appels à l'API <literal>mysqli</literal>,
   <literal>PDO_MySQL</literal> ou <literal>mysql</literal>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tableau de statistiques issues du cœur.
  </para>
  <informaltable>
   <tgroup cols="3">
    <colspec colwidth="10%"/>
    <colspec colwidth="70%"/>
    <colspec colwidth="20%"/>
    <thead>
     <row>
      <entry>Statistique</entry>
      <entry>Description</entry>
      <entry>Version</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <literal>cache_hit</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache
       et les données mises en cache ont été réutilisées. La requête
       est considérée comme pouvant être mise en cache et un "cache miss"
       est survenu mais la requête a été mise en cache par un autre processus
       alors que nous la traitions, et ainsi, nous avons pû récupérer le
       résultat depuis cette nouvelle mise en cache.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>cache_miss</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache...
       <itemizedlist>
        <listitem>
         <para>
          ... et a été ajoutée au cache
         </para>
        </listitem>
        <listitem>
         <para>
          ... mais la directive de configuration PHP
          <literal>mysqlnd_qc.cache_no_table = 1</literal> n'a pas autorisé la mise en cache.
         </para>
        </listitem>
        <listitem>
         <para>
          ... mais un jeu de résultats non mis en mémoire tampon est demandé.
         </para>
        </listitem>
        <listitem>
         <para>
          ... mais un jeu de résultats mis en mémoire tampon est vide.
         </para>
        </listitem>
       </itemizedlist>
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>cache_put</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache et a été
       ajoutée au cache. Faîtes attention lors d'un calcul de statistiques
       dérivées. Le gestionnaire de stockage dont la durée de stockage
       est au-delà du scope du processus peut rapporter à la fois
       <literal>cache_put = 0</literal> et <literal>cache_hit &gt; 0</literal>,
       si un autre processus a rempli le cache. Vous pouvez vouloir utiliser
       <literal>num_entries</literal> depuis <function>mysqlnd_qc_get_cache_info</function>
       si le gestionnaire le supporte ( <literal>default</literal>, <literal>APC</literal>).
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_should_cache</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache
       uniquement au vue de l'analyse de la requête. La requête peut
       (ou pas) être ajoutée au cache. Voir aussi
       <literal>cache_put</literal>.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_should_not_cache</literal>
      </entry>
      <entry>
       La requête est considérée comme ne pouvant pas être mise
       en cache uniquement au vue de l'analyse de la requête.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_not_cached</literal>
      </entry>
      <entry>
       La requête est considérée comme ne pouvant pas être mise
       en cache ou elle est considérée comme pouvant être mise
       en cache mais le gestionnaire de stockage n'a pas retourné
       de clé pour cette requête.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_could_cache</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache...
       <itemizedlist>
        <listitem>
         <para>
          ... et la requête a été exécutée sans erreur
         </para>
        </listitem>
        <listitem>
         <para>
          ... et les données méta montrent au moins une colonne dans
          le jeu de résultats
         </para>
        </listitem>
       </itemizedlist>
       La requête peut (ou pas) être déjà présente dans le cache.
       Elle peut (ou pas) être ajoutée au cache plus tard.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_found_in_cache</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache
       et nous l'avons trouvée dans le cache mais nous n'avons pas
       encore rejoué les données du cache et nous n'avons pas encore
       envoyé le jeu de résultats au client. Ce n'est pas considéré
       comme un accès au cache, car le client peut ne pas récupérer
       le résultat ou les données mises en cache peuvent être défectueuses.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_other</literal>
      </entry>
      <entry>
       La requête est considérée comme pouvant être mise en cache et
       elle peut (ou pas) être déjà dans le cache, mais soit l'accès
       à ces données du cache a échoué, soit le jeu de résultats
       n'est pas disponible, ou soit, une autre erreur est survenue.
      </entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_no_table</literal>
      </entry>
      <entry>
       La requête n'a pas été mise en cache car le jeu de résultat
       a au moins une colonne qui n'a pas de nom de table dans ses
       méta-données. Un exemple d'une telle requête est
       <literal>SELECT SLEEP(1)</literal>. Pour mettre en cache ce genre
       de requêtes, vous devez modifier la valeur par défaut de la directive
       de configuration PHP <literal>mysqlnd_qc.cache_no_table</literal>
       et définir <literal>mysqlnd_qc.cache_no_table = 1</literal>.
       Malgré tout, il n'est pas conseillé de mettre en cache ce genre
       de requêtes.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_use_result</literal>
      </entry>
      <entry>
       La requête aurait été mise en cache si le jeu de résultats
       de la mémoire tampon avait été utilisé. Cette situation
       est également considérée comme une absence de cache et
       <literal>cache_miss</literal> sera incrémenté.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_cache_hit</literal>
      </entry>
      <entry>
       Temps d'exécution agrégé (ms) de toutes les
       requêtes du cache. Les requêtes du cache sont celles
       qui ont incrémentées <literal>cache_hit</literal>.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_cache_put</literal>
      </entry>
      <entry>
       Temps d'exécution agrégé (ms) de toutes les requêtes
       non mises en cache qui ont été ajoutées dans le cache.
       Voir aussi <literal>cache_put</literal>.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_total</literal>
      </entry>
      <entry>
       Temps d'exécution agrégé (ms) de toutes les requêtes
       du cache ainsi que celles non mises en cache qui ont
       été inspectées et exécutées par le cache de requêtes.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_cache_hit</literal>
      </entry>
      <entry>
       Temps de stockage agrégé (ms) de toutes les requêtes
       du cache. Les requêtes du cache sont celles qui ont
       incrémentées <literal>cache_hit</literal>.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_cache_put</literal>
      </entry>
      <entry>
       Temps de stockage agrégé (<literal>ms</literal>) de
       toutes les requêtes non mises en cache qui ont été
       ajoutées dans le cache. Voir aussi
       <literal>cache_put</literal>.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_total</literal>
      </entry>
      <entry>
       Temps de stockage agrégé (ms) de toutes les requêtes
       mises en cache ainsi que celles non mises en cache
       qui ont été inspectées et exécutées par le cache de
       requêtes.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>receive_bytes_recorded</literal>
      </entry>
      <entry>
       Trafic réseau entrant enregistré (<literal>bytes</literal>)
       envoyé depuis MySQL vers PHP. Le trafic peut (ou pas) avoir
       été ajouté au cache. Le trafic est le total pour toutes les
       requêtes, qu'elles soient en cache ou non.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>receive_bytes_replayed</literal>
      </entry>
      <entry>
       Le trafic réseau rejoué pendant le cache. C'est la quantité
       totale de trafic entrant sauvegardée en raison de l'utilisation
       du plugin de mise en cache de requêtes.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>send_bytes_recorded</literal>
      </entry>
      <entry>
       Trafic réseau sortant enregistré (
       <literal>bytes</literal>) envoyé depuis MySQL vers PHP.
       Le trafic peut (ou pas) avoir été ajouté au cache. Le trafic
       est le total pour toutes les requêtes, qu'elles soient en cache
       ou non.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>send_bytes_replayed</literal>
      </entry>
      <entry>
       Le trafic réseau rejoué pendant le cache. C'est la quantité totale
       de trafic sortant sauvegardé en raison de l'utilisation du plugin
       de mise en cache de requêtes.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>slam_stale_refresh</literal>
      </entry>
      <entry>
       Nombre d'absence du cache qui a été émis lors d'un accès
       à des données périmées, jusqu'à ce que le client qui a causé
       l'absence du cache ne rafraichisse l'entrée du cache.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>slam_stale_hit</literal>
      </entry>
      <entry>
       Nombre d'accès au cache avant qu'une entrée du cache
       périmé ne rafraichisse les données.
      </entry>
      <entry>Depuis 1.0.0.</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>mysqlnd_qc_get_core_stats</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/* Activation de la collection des statistiques - par défaut : désactivé */
ini_set("mysqlnd_qc.collect_statistics", 1);

/* Activation de la collection de toutes les durées relatives aux statistiques -
par défaut : activé mais écrasé par la directive mysqlnd_qc.collect_statistics = 0 */
ini_set("mysqlnd_qc.collect_time_statistics", 1);

/* Population du cache, e.g. en utilisant mysqli */
$mysqli = new mysqli('host', 'user', 'password', 'schema');

/* Cache miss et cache put */
$mysqli->query("/*qc=on*/SELECT id FROM test");
/* Accès au cache */
$mysqli->query("/*qc=on*/SELECT id FROM test");

/* Affichage des statistiques du cœur */
var_dump(mysqlnd_qc_get_core_stats());
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
array(26) {
  ["cache_hit"]=>
  string(1) "1"
  ["cache_miss"]=>
  string(1) "1"
  ["cache_put"]=>
  string(1) "1"
  ["query_should_cache"]=>
  string(1) "2"
  ["query_should_not_cache"]=>
  string(1) "0"
  ["query_not_cached"]=>
  string(1) "0"
  ["query_could_cache"]=>
  string(1) "2"
  ["query_found_in_cache"]=>
  string(1) "1"
  ["query_uncached_other"]=>
  string(1) "0"
  ["query_uncached_no_table"]=>
  string(1) "0"
  ["query_uncached_no_result"]=>
  string(1) "0"
  ["query_uncached_use_result"]=>
  string(1) "0"
  ["query_aggr_run_time_cache_hit"]=>
  string(1) "4"
  ["query_aggr_run_time_cache_put"]=>
  string(3) "395"
  ["query_aggr_run_time_total"]=>
  string(3) "399"
  ["query_aggr_store_time_cache_hit"]=>
  string(1) "2"
  ["query_aggr_store_time_cache_put"]=>
  string(1) "8"
  ["query_aggr_store_time_total"]=>
  string(2) "10"
  ["receive_bytes_recorded"]=>
  string(2) "65"
  ["receive_bytes_replayed"]=>
  string(2) "65"
  ["send_bytes_recorded"]=>
  string(2) "29"
  ["send_bytes_replayed"]=>
  string(2) "29"
  ["slam_stale_refresh"]=>
  string(1) "0"
  ["slam_stale_hit"]=>
  string(1) "0"
  ["request_counter"]=>
  int(1)
  ["process_hash"]=>
  int(3547549858)
}

]]>
   </screen>
   
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-qc.configuration">Configuration à l'exécution</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.collect-statistics">mysqlnd_qc.collect_statistics</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.time-statistics">mysqlnd_qc.time_statistics</link>
    </member>
    <member>
     <function>mysqlnd_qc_get_cache_info</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
