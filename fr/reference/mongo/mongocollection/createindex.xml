<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.createindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::createIndex</refname>
  <refpurpose>Crée un index sur le ou les champs spécifiés s'il n'existe pas déjà</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::createIndex</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Crée un index sur le ou les champs spécifiés s'il n'existe pas déjà.
   Les champs peuvent être indexés avec une direction (i.e. croissant ou
   décroissant) ou sur un type spécial (i.e. texte, géospatial, hashé).
  </para>
  <note>
   <para>
    Cette méthode utilise la commande de base de données
    <link xlink:href="&url.mongodb.docs.command;createIndexes">createIndexes</link>
    lors de la communication avec MongoDB 2.6+. Pour les anciennes versions
    de base de données, la méthode va effectuer une opération d'insertion
    sur la collection spéciale <literal>system.indexes</literal>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Un tableau spécifiant les champs de l'index, sous forme de clés.
       Pour chaque champ, la valeur est soit la direction de l'index, soit
       <link xlink:href="&url.mongodb.dochub.indexes.types;">le type d'index</link>.
       Si la direction est spécifiée, utilisez <literal>1</literal> pour croissant,
       ou <literal>-1</literal> pour décroissant.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Un tableau d'options pour la création de l'index. Toutes les options
       fournies seront passées au serveur ; voici une liste non-exhaustive
       des options actuellement disponibles :
       <itemizedlist>
        &mongo.index.parameters.unique;
        &mongo.index.parameters.sparse;
        &mongo.index.parameters.expireafterseconds;
        &mongo.index.parameters.name;
        &mongo.index.parameters.background;
        &mongo.writes.parameters.sockettimeoutms;
       </itemizedlist>
      </para>
      <para>
       L'option suivante peut être utilisé avec MongoDB 2.6+ :
       <itemizedlist>
        &mongo.command.parameters.maxtimems;
       </itemizedlist>
      </para>
      <para>
       L'option suivante peut être utilisé avec les versions de MongoDB avant 2.8 :
       <itemizedlist>
        &mongo.index.parameters.dropdups;
       </itemizedlist>
      </para>
      <para>
       Les options suivantes peuvent être utilisées avec les
       versions de MongoDB avant 2.6 :
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeoutms;
       </itemizedlist>
      </para>
      <para>
       Les options suivantes sont obsolètes, et ne doivent plus être utilisées :
       <itemizedlist>
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.writeconcerntimeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant le statut de la création de l'index.
   Le tableau contient soit le succès de l'opération (<literal>"ok"</literal>),
   le nombre d'indexes avant et après l'opération (<literal>"numIndexesBefore"</literal>
   et <literal>"numIndexesAfter"</literal>), et si la collection de l'index a été
   créée (<literal>"createdCollectionAutomatically"</literal>). Si l'index existe
   déjà, et n'a pas été créé, un champ <literal>"note"</literal> peut être
   présent au lieu de <literal>"numIndexesAfter"</literal>.
  </para>
  <para>
   Avec MongoDB 2.4 et antérieurs, le statut du document n'est retourné que si
   la <link linkend="mongo.writeconcerns">préoccupation d'écriture</link>
   vaut au moins <literal>1</literal>. Sinon, &true; sera retourné. Les
   champs dans le statut du document sont différents, sauf pour le champ
   <literal>"ok"</literal> qui signale si la création de l'index a réussi.
   Les champs additionnels sont décrits dans la documentation de la méthode
   <function>MongoCollection::insert</function>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoException</classname> si le nom de l'index
   est supérieur à 128 octets, ou si la spécification de l'index n'est pas un
   tableau.
  </para>
  <para>
   Lance une exception <classname>MongoDuplicateKeyException</classname> si le
   serveur n'a pas réussi à créer l'index unique en raison d'un conflit de
   documents.
  </para>
  <para>
   Lance une exception <classname>MongoResultException</classname> si le serveur
   n'a pas réussi à créer l'index en raison d'une erreur.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::createIndex</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// Crée un index sur 'x' croissant
$c->createIndex(array('x' => 1));

// Crée un index unique sur 'y'
$c->createIndex(array('y' => 1), array('unique' => true));

// Crée un index calculé sur 'za' croissant et sur 'zb' décroissant
$c->createIndex(array('za' => 1, 'zb' => -1));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Indexation géospatiale</title>
   <para>
    Mongo supporte les indexes géospatiaux, qui vous permet de chercher des
    documents proches d'une localisation précise, ou dans un espace.
    L'exemple suivant crée un index géospatial sur le champ <literal>"loc"</literal> :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->createIndex(array('loc' => '2dsphere'));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple de suppression de doublons</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array('username' => 'joeschmoe'));
$collection->insert(array('username' => 'joeschmoe'));

/* La création d'index échoue, sachant que vous ne pouvez pas créer d'index unique
 * sur un champ lorsqu'un doublon existe.
 */
$collection->createIndex(array('username' => 1), array('unique' => 1));

/* MongoDB va supprimer le conflit de documents et autoriser
 * la création de l'index unique.
 */
$collection->createIndex(array('username' => 1), array('unique' => 1, 'dropDups' => 1));

/* Nous avons maintenant un index unique et une sous-séquence d'insertions avec le
 * même nom va échouer.
 */
$collection->insert(array('username' => 'joeschmoe'));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCollection::deleteIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndexes</methodname></member>
   <member>
    La documentation MongoDB sur les
    <link xlink:href="&url.mongodb.dochub.indexes;">indexes</link> et les
    <link xlink:href="&url.mongodb.dochub.indexes.types;">types d'index</link>.
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
