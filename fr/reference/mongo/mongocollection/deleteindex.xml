<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.deleteindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::deleteIndex</refname>
  <refpurpose>Supprime un index de la collection</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::deleteIndex</methodname>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>keys</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cette méthode est identique à:
  </para>
  <programlisting role="php">
<![CDATA[
<?php

public function deleteIndexes($keys) {
  $indexName = $this->toIndexString($keys);

  return $this->db->command(array(
    "deleteIndexes" => $this->getName(),
    "index" => $indexName,
  ));
}

?>
]]>
  </programlisting>
  <para>
   Chaque index se voit recevoir un nom unique lors de sa création.
   Il est souvent généré par le driver, en se basant sur la clé de l'index,
   et sur l'ordre ou le type de l'index, mais des noms personalisés peuvent
   aussi être spécifiés avec la méthode <function>MongoCollection::createIndex</function>
   (option <literal>"name"</literal>).
  </para>
  <para>
   Malheureusement, la méthode <function>MongoCollection::deleteIndex</function>
   ne peut supprimer les indexes possédant un nom personalisé en raison d'une
   compatibilité ascendante. Lorsqu'un argument est fourni, il est supposé être le nom
   d'un seul champ dans un index croissant (i.e. le nom <literal>"x_1"</literal>
   sera utilisé pour l'argument <literal>"x"</literal>). Si un tableau ou un objet
   est fourni, un nom d'index est généré comme si l'argument avait été passé à
   la méthode <function>MongoCollection::createIndex</function>.
  </para>
  <para>
   Pour pouvoir supprimer un index possédant un nom personalisé avec le driver
   PHP, la commande de base de données <literal>deleteIndexes</literal> doit être utilisée.
   Actuellement, un index dont le nom est "myIndex" peut être supprimé avec le
   driver PHP en exécutant :
  </para>
  <programlisting role="php">
<![CDATA[
<?php

$db->command(array(
  "deleteIndexes" => $collection->getName(),
  "index" => "myIndex",
));

?>
]]>
  </programlisting>
  <para>
   Pour déterminer le nom d'un index avec le driver PHP, vous pouvez interroger
   la collection <literal>system.indexes</literal> de la base de données,
   et regarder le champ <literal>"name"</literal> de chaque résultat. Le champ
   <literal>"ns"</literal> indiquera la collection dont l'index fait parti.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Un tableau spécifiant les champs de l'index, comme clés. Pour chaque champ,
       la valeur est soit la direction de l'index, soit le
       <link xlink:href="&url.mongodb.dochub.indexes.types;">type d'index</link>.
       Si la direction est spécifiée, la valeur <literal>1</literal> correspondra
       à un sens croissant, et la valeur <literal>-1</literal>, au sens décroissant.
      </para>
      <para>
       Si une chaîne de caractères est fournie, on supposera qu'il s'agit du nom
       d'un seul champ d'un index croissant.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la réponse de la base de données.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::deleteIndex</function></title>
   <para>
    This example passes the function string and array parameters.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient();
$c = $m->example->indices;

// crée et supprime un index
$c->createIndex(array("i"=>1));
$c->deleteIndex("i");

// crée et supprime un index multi-clé
$c->ensureIndex(array("j" => 1, "k" => 1));
$c->deleteIndex(array("j" => 1, "k" => 1));

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCollection::createIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndexes</methodname></member>
   <member><methodname>MongoCollection::toIndexString</methodname></member>
   <member>
    La documentation MongoDB sur les
    <link xlink:href="&url.mongodb.dochub.indexes;">indexes</link> et les
    <link xlink:href="&url.mongodb.dochub.indexes.types;">types d'indexes</link>.
   </member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
