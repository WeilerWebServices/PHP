<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocollection.ensureindex" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::ensureIndex</refname>
  <refpurpose>
   Crée un index sur le ou les champs spécifiés s'il n'existe pas déjà
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoCollection::ensureIndex</methodname>
   <methodparam><type class="union"><type>string</type><type>array</type></type><parameter>key|keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <warning>
   <para>
    Cette méthode est obsolète depuis la version 1.5.0. Veuillez utiliser
    plutôt la méthode <methodname>MongoCollection::createIndex</methodname>.
   </para>
  </warning>
  <para>
   Crée un index sur le ou les champs spécifiés s'il n'existe pas déjà.
   Les champs peuvent être indexés avec une direction (i.e. croissant ou décroissant)
   ou avec un type spécial (e.g. text, geospatial, hashed).
  </para>
  <note>
   <para>
    Cette méthode utilisera la commande de base de données
    <link xlink:href="&url.mongodb.docs.command;createIndexes">createIndexes</link>
    lors de la communication avec MongoDB 2.6+. Pour les versions antérieures
    de bases de données, la méthode va effectuer une opération d'insertion sur la
    collection spéciale <literal>system.indexes</literal>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>keys</parameter>
     </term>
     <listitem>
      <para>
       Un tableau spécifiant les champs d'index comme clés. Pour chaque champ,
       la valeur est soit la direction de l'index, soit le
       <link xlink:href="&url.mongodb.dochub.indexes.types;">type d'index</link>.
       Si la direction est spécifiée, vous devez utiliser <literal>1</literal>
       pour le sens croissant, ou <literal>-1</literal> pour le sens décroissant.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Un tableau d'options pour la création de l'index. Les options actuellement
       disponibles sont :
       <itemizedlist>
        &mongo.index.parameters.unique;
        &mongo.index.parameters.sparse;
        &mongo.index.parameters.expireafterseconds;
        &mongo.index.parameters.name;
        &mongo.index.parameters.background;
        &mongo.writes.parameters.sockettimeoutms;
       </itemizedlist>
      </para>
      <para>
       Les options suivants peuvent être utilisées avec MongoDB 2.6+ :
       <itemizedlist>
        &mongo.command.parameters.maxtimems;
       </itemizedlist>
      </para>
      <para>
       Les options suivantes peuvent être utilisées avec les versions
       MongoDB avant 2.8 :
       <itemizedlist>
        &mongo.index.parameters.dropdups;
       </itemizedlist>
      </para>
      <para>
       Les options suivantes peuvent être utilisées avec les versions
       MongoDB avant 2.6 :
       <itemizedlist>
        &mongo.writes.parameters.writeconcern;
        &mongo.writes.parameters.writeconcerntimeoutms;
       </itemizedlist>
      </para>
      <para>
       Les options suivantes sont obsolètes et ne devraient plus être utilisées :
       <itemizedlist>
        &mongo.writes.parameters.safe;
        &mongo.writes.parameters.timeout;
        &mongo.writes.parameters.writeconcerntimeout;
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant le statut de la création de l'index.
   Le tableau contient une indication du succès de l'opération
   (<literal>"ok"</literal>), le nombre d'indexes avant et après l'opération
   (<literal>"numIndexesBefore"</literal> et <literal>"numIndexesAfter"</literal>),
   et si la collection auquelle appartient l'index a été créée
   (<literal>"createdCollectionAutomatically"</literal>). Si l'index existait
   déjà, et n'avait donc pas besoin d'être créé, un champ
   <literal>"note"</literal> peut être présent au lieu du champ
   <literal>"numIndexesAfter"</literal>.
  </para>
  <para>
   Avec MongoDB 2.4 et antérieures, le statut du document n'est retourné que si le
   <link linkend="mongo.writeconcerns">write concern</link> vaut au moins
   <literal>1</literal>. Sinon, &true; est retourné. Les champs dans le statut
   du document sont différents, sauf pour le champ <literal>"ok"</literal>,
   qui signale le succès de la création de l'index. Les champs additionnels sont
   décrits dans la documentation de la méthode
   <function>MongoCollection::insert</function>.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.5.0</entry>
       <entry>
        <para>
         Renommage de l'option <literal>"wtimeout"</literal> en
         <literal>"wTimeoutMS"</literal>. Emets une alerte de niveau
         <constant>E_DEPRECATED</constant> lorsque <literal>"wtimeout"</literal> est
         utilisée.
        </para>
        <para>
         Renommage de l'option <literal>"timeout"</literal> en
         <literal>"socketTimeoutMS"</literal>. Emets une alerte de niveau
         <constant>E_DEPRECATED</constant> lorsque <literal>"timeout"</literal> est
         utilisée.
        </para>
        <para>
         Emets une alerte de niveau <constant>E_DEPRECATED</constant> lorsque
         <literal>"safe"</literal> est utilisée.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.3.4</entry>
       <entry>Ajout de l'option <literal>"wtimeout"</literal>.</entry>
      </row>
      <row>
       <entry>PECL mongo 1.3.0</entry>
       <entry>
        <para>Ajout de l'option <literal>"w"</literal>.</para>
        <para>
         Le paramètre <parameter>options</parameter> n'accepte plus de booléen
         pour signifier un index unique. A la place, vous devez utiliser la
         syntaxe <literal>array('unique' => true)</literal>.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.11</entry>
       <entry>
        Lance une alerte de niveau <constant>E_DEPRECATED</constant> lorsque le
        paramètre <parameter>options</parameter> est de type <type>scalar</type>.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>
        Ajout de l'option <literal>"timeout"</literal>.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.11</entry>
       <entry>
        <para>
         L'option <literal>"safe"</literal> déclenchera le failover du primaire,
         si nécessaire.
        </para>
        <para>
         <classname>MongoException</classname> sera envoyée si le nom de l'index
         (généré ou défini) est plus long que 128 octets.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.5</entry>
       <entry>
        Ajout de l'option <literal>"name"</literal> pour écraser la création
        du nom de l'index.
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.0.2</entry>
       <entry>
        Le paramètre <parameter>options</parameter> passe de booléen à un tableau.
        En version Pre-1.0.2, le second paramètre était une valeur booléenne
        optionnelle spécifiant un index unique.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emets une exception <classname>MongoException</classname> si le nom
   de l'index a une longueur supérieure à 128 octets, ou si la
   spécification de l'index n'est pas un tableau.
  </para>
  <para>
   Emets une exception <classname>MongoDuplicateKeyException</classname>
   si le serveur n'a pas réussi à créer l'index en raison d'une conflit de
   documents.
  </para>
  <para>
   Emets une exception <classname>MongoResultException</classname>
   si le serveur n'a pas réussi à créer l'index en raison d'une erreur interne.
  </para>
  &mongo.errors.exceptions.writeconcern;
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCollection::ensureIndex</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$c = new MongoCollection($db, 'foo');

// crée un index sur 'x', croissant
$c->ensureIndex(array('x' => 1));

// crée un index unique sur 'y'
$c->ensureIndex(array('y' => 1), array('unique' => true));

// crée un index composé sur 'za', croissant, et sur 'zb', décroissant
$c->ensureIndex(array('za' => 1, 'zb' => -1));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>indexation géospatiale</title>
   <para>
    Mongo supporte l'indexation géospatiale, qui vous permet de rechercher
    des documents à côté d'une localisation fournie, ou dans un espace donné.
    L'exemple suivant crée un index géospatial sur le champ
    <literal>"loc"</literal> :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$collection->ensureIndex(array('loc' => '2dsphere'));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Exemple de suppression de données dupliquées</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("username" => "joeschmoe"));
$collection->insert(array("username" => "joeschmoe"));

/*
 * La création d'index a échoué, vous ne pouvez pas créer d'index unique
 * sur une clé ne possédant pas de valeurs non-uniques
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1));

/*
 * La création d'index a réussi : un des documents est supprimé de la collection
 */
$collection->ensureIndex(array("username" => 1), array("unique" => 1, "dropDups" => 1));

/*
 * Maintenant que nous avons un index unique, les prochaines insertions
 * avec le même nom d'utilisateur (comme ci-dessous) échoueront
 */
$collection->insert(array("username" => "joeschmoe"));

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCollection::createIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndex</methodname></member>
   <member><methodname>MongoCollection::deleteIndexes</methodname></member>
   <member>
    La documentation MongoDB sur les
    <link xlink:href="&url.mongodb.dochub.indexes;">indexes</link> et les
    <link xlink:href="&url.mongodb.dochub.indexes.types;">types d'indexes</link>.
   </member>
  </simplelist>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
