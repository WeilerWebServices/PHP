<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334826 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="mongo.updates" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Mises à jour</title>

 <para>
  Les mises à jour sont les opérations les plus compliquées disponibles avec
  MongoDB. Elles combinent une requête avec une action, modifiant
  les documents qui correspondent aux critères. Elles sont également
  extrèmement puissantes, vous permettant de changer les documents
  rapidement mais aussi de les remplacer tous ensemble. Elles se font
  sur place (quand c'est possible), entrainant une légère surcharge. 
 </para>

 <section>
  <title>Modification et remplacement de documents</title>

  <para>
   Il existe 2 types de mises à jour: modification ou remplacement. Les modifications
   contiennent des opérateurs $ et changent des champs d'un document: elles peuvent
   incrémenter des compteurs, ajouter des éléments dans des tableaux ou encore changer
   le type d'un champ.
  </para>

  <para>
   Par exemple, une mise à jour en modification ajoute un nouveau champ au document.
   <programlisting role="php">
<![CDATA[
<?php
/** imaginons un document de cette structure :
 * {"username" : "...", "password" : "...", "email" : "..."}
 */
$coll->update(array("username" => "joe"), array('$set' => array("twitter" => "@joe4153")));

/** maintenant, le document ressemblera à :
 * {"username" : "joe", "password" : "...", "email" : "...", "twitter" : "@joe4153"}
 */
?>
]]>
   </programlisting>
  </para>

  <para>
   Les mises à jour de remplacement remplacent le document entier par un autre.
   Elles ne sont pas aussi efficaces que les modifications, mais elles peuvent avoir
   un intérêt dans le cas où les opérateurs à $ ne peuvent être utilisés.
  </para>

  <para>
   Par exemple, une mise à jour de remplacement peut complètement changer la structure
   d'un document.
   <programlisting role="php">
<![CDATA[
<?php
/** imaginons un document de cette structure:
 * {"username" : "...", "password" : "...", "email" : "..."}
 */
$coll->update(array("username" => "joe"), array("userId" => 12345, "info" => array(
    "name" => "joe", "twitter" => "@joe4153", "email" => "..."), "likes" => array()));

/** maintenant, le document ressemblera à :
 * {
 *     "userId" : 12345,
 *     "info" : {
 *         "name" : "joe",
 *         "twitter" : "@joe4153",
 *         "email" : "..."
 *     },
 *     "likes" : []
 * }
 */
?>
]]>
   </programlisting>
  </para>

 </section>

 <section>
  <title>Mises à jour des objets imbriqués</title>
  <para>
   Supposez que vous voulez modifier le nom de l'auteur d'un commentaire dans
   un document :
   <programlisting role="javascript">
<![CDATA[
{ 
    "_id" : ObjectId("4b06c282edb87a281e09dad9"), 
    "content" : "ceci est un post d'un blog.",
    "comments" : 
    [
        {
            "author" : "Mike",
            "comment" : "Je pense que blah blah blah...",
        },
        {
            "author" : "John",
            "comment" : "Je ne suis pas d'accord."
        }
    ]
}
]]>
   </programlisting>
   Afin de modifier un champ interne, nous utilisons $set (ainsi, les
   autres champs ne sont pas supprimés) avec l'index du commentaire à
   changer :
   <programlisting role="php">
<![CDATA[
<?php

$blog->update($criteria, array('$set' => array("comments.1" => array("author" => "Jim"))));

?>
]]>
   </programlisting>
  </para>
 </section>

 <section>
  <title>L'opérateur de position</title>
  <para>
   L'opérateur de position <literal>$</literal> est utile pour la mise
   à jour d'objets qui se trouvent dans des tableaux. Dans l'exemple suivant,
   nous supposons que nous ne connaissons pas l'index du commentaire que nous
   souhaitons modifier, alors que vous voulons changer "John" en "Jim".
   Nous pouvons dans ce cas utiliser l'opérateur de position <literal>$</literal>.
  </para>
  <programlisting role="php">
<![CDATA[
<?php

$blog->update(
    array("comments.author" => "John"), 
    array('$set' => array('comments.$.author' => "Jim")));

?>
]]>
  </programlisting>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
