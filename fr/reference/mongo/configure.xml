<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346079 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<section xml:id="mongo.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;
 
 <warning>
  &mongo.deprecated.note;
 </warning>
 
 <para>
  Le driver MongoDB devrait fonctionner sur la plupart des systèmes : Windows, macOS, 
  Unix, et Linux ; des petites machines aux gros serveurs ; sur des systèmes
  32 et 64 bit ; avec PHP 5.3 à 5.6 (les versions antérieures à la 1.6 
  supportent aussi PHP 5.2).
 </para>
 <para>
  &pecl.moved;
 </para>
 
 <simplelist>
  <member>
   <xref linkend="mongo.installation.manual" />
  </member>
  <member>
   <xref linkend="mongo.installation.nix" />
  </member>
  <member>
   <xref linkend="mongo.installation.windows" />
  </member>
  <member>
   <xref linkend="mongo.installation.osx" />
  </member>
  <member>
   <xref linkend="mongo.installation.gentoo" />
  </member>
  <member>
   <xref linkend="mongo.installation.fedora" />
  </member>
  <member>
   <xref linkend="mongo.installation.thirdparty" />
  </member>
 </simplelist>
 
 <section xml:id="mongo.installation.manual">
  <title>Installation manuelle</title>
  
  <para>
   Pour les développeurs des pilotes ou les personnes intéréssées par les derniers correctifs
   de bugs, vous pouvez compiler le pilote depuis
   <link xlink:href="&url.mongodb.github;">Github</link>.
   Allez sur Github et cliquez sur "download". Lancez ensuite :   
   <programlisting role="shell">
<![CDATA[
$ tar zxvf mongo-php-driver-legacy-<commit_id>.tar.gz
$ cd mongo-php-driver-legacy-<commit_id>
$ phpize
$ ./configure
$ make all
$ sudo make install
]]>
   </programlisting>
  </para>
  
  <para>
   Effectuez ces changements à votre fichier &php.ini; :
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Assurez-vous que la variable <emphasis>extension_dir</emphasis>
     pointe vers le dossier contenant le fichier <emphasis>mongo.so</emphasis>.
     La compilation devrait afficher l'endroit où PHP installe le driver ;
     l'affichage devrait ressembler à quelque chose comme :
     <programlisting role="txt">
<![CDATA[
Installing '/usr/lib/php/extensions/no-debug-non-zts-20060613/mongo.so'
]]>
     </programlisting>
     
     Vérifiez bien qu'il s'agisse du même dossier d'extensions que celui de votre PHP en lançant:
     
     <programlisting role="shell">
<![CDATA[
$ php -i | grep extension_dir
  extension_dir => /usr/lib/php/extensions/no-debug-non-zts-20060613 =>
                   /usr/lib/php/extensions/no-debug-non-zts-20060613
]]>
     </programlisting>
     
     Si ce n'est pas le cas, changez <emphasis>extension_dir</emphasis>
     de &php.ini; ou placez manuellement <emphasis>mongo.so</emphasis>.
    </para>
   </listitem>
   <listitem>
    <para>
     Pour chargez l'extension au démarrage de PHP, ajoutez cette ligne :
     
     <programlisting role="ini">
<![CDATA[
extension=mongo.so
]]>
     </programlisting>
     
    </para>
   </listitem>
  </itemizedlist>
 </section>
 
 <section xml:id="mongo.installation.nix">
  <title>Installation sur les systèmes *NIX</title>
  
  <para>
   Exécutez :
   <programlisting role="shell">
<![CDATA[
$ sudo pecl install mongo
]]>
   </programlisting>
  </para>
  
  <para>
   Ajoutez la ligne suivante à votre fichier &php.ini; :
   <programlisting role="ini">
<![CDATA[
extension=mongo.so
]]>
   </programlisting>
  </para>
  
  <para>
   Si PECL fait un dépassement de mémoire lors de l'installation, assurez-vous
   que la directive memory_limit du fichier &php.ini; est fixée à au moins 128MB.
  </para>
 </section>
 
 <section xml:id="mongo.installation.windows">
  <title>Installation sous Windows</title>
  
  <para>
   Les binaires précompilés pour chaque version sont disponibles sur
   <link xlink:href="&url.pecl.package;mongo">PECL</link> pour une
   grande variété de combinaison de versions, de sécurité de threads, et de
   bibliothèques VC. Décompressez l'archive et placez php_mongo.dll dans votre
   dossier d'extension PHP ("ext" par défaut).
  </para>
  
  <para>
   Ajoutez la ligne suivante à votre fichier &php.ini; :
   <programlisting role="ini">
<![CDATA[
extension=php_mongo.dll
]]>
   </programlisting>
  </para>
  
  <note>
   <title>Dépendences DLL additionnelles pour les utilisateurs Windows</title>
   <para>
    &ext.windows.path.dll;
    <filename>libsasl.dll</filename>
   </para>
  </note>
 </section>
 
 <section xml:id="mongo.installation.osx">
  <title>Installation sur les systèmes macOS</title>
  
  <para>
   Dans la plupart des cas, l'installation depuis PECL reste le plus simple :
   <programlisting role="shell">
<![CDATA[
$ sudo pecl install mongo
]]>
    </programlisting>
   </para>
   
   <para>
    Si votre système a plusieurs version de PHP d'installé (par exemple macOS default,
    Homebrew, <link xlink:href="&url.xampp;">XAMPP</link>), notez que chaque
    version de PHP a sa propre commande <link linkend="install.pecl">pecl</link>
    et fichier &php.ini;
  </para>
  
   <note>
    <title>Dépendance avec Xcode pour compiler sur macOS</title>
    <para>
     Compiler le driver sous macOS requiert les outils de développements Xcode, 
     qui peuvent être installé avec <code>xcode-select --install</code>. Si cette
     commande n'est pas disponible, vous devriez d'abord installer le paquet 
     <link xlink:href="&url.apple.clt;">Command Line Tools</link>.
    </para>
   </note>
   
 </section>
 
 <section xml:id="mongo.installation.gentoo">
  <title>Gentoo</title>
  <para>
   Gentoo a un paquet pour le driver PHP PECL nommé dev-php/pecl-mongo,
   qui peut installer via la commande suivante :
  </para>
  <programlisting>
<![CDATA[

$ sudo emerge -va dev-php/pecl-mongo

]]>
   </programlisting>
   
   <para>
    Si vous utilisez PECL, vous recevrez une erreur signalant que libtool
    n'est pas à la bonne version. Lors de la compilation depuis les sources,
    vous devriez avoir besoin d'exécuter aclocal et autoconf.
   </para>
   <programlisting role="shell">
<![CDATA[
$ phpize
$ aclocal 
$ autoconf 
$ ./configure
$ make
$ sudo make install
]]>
   </programlisting>
 </section>
 
 <section xml:id="mongo.installation.fedora">
  <title>Red Hat</title>
  <para>
   Ceci inclut Fedora et CentOS.
  </para>
  <para>
   La configuration par défaut d'Apache sur ces systèmes
   ne permet pas aux requêtes d'effectuer des connexions réseaux,
   ceci signifie que le driver recevra une erreur "Permission denied"
   lorsqu'il tentera une connexion à la base de données. Si vous
   rencontrez une telle erreur, tentez d'exécuter ceci :
   <programlisting role="shell">
<![CDATA[
$ /usr/sbin/setsebool -P httpd_can_network_connect 1 
]]>
    </programlisting>
    Puis, redémarrez Apache (Ce comportement peut également survenir
    sous SELinux).
   </para>
 </section>

<section xml:id="mongo.installation.thirdparty">
 <title>Instructions d'installation tierces</title>
 
 <para>
  Beaucoup de personnes ont créés d'excellents tutoriels sur l'installation
  du driver PHP.
 </para>
 
 <itemizedlist>
  <listitem>
   <para>
    <link xlink:href="&url.mongodb.install.osx.homebrew;">
     (Re)installer PHP sur macOS
    </link>
   </para>
   <para>
    Cet article de Justin Hileman détaille le processus d’installation de PHP 
    et ses extensions additionnelles avec Homebrew sous macOS. C'est un
    complément pour les instructions de cette page sur l’installation du 
    driver avec Homebrew.
   </para>
  </listitem>
  <listitem>
   <para>
    <link xlink:href="&url.mongodb.install.ubuntu.9.10.video;">
     PHP 5.3.1 avec Xdebug, MongoDB et Lithium sous Ubuntu 9.10 / Apache 2.2
    </link>
   </para>
   <para>
    Une excellent vidéo qui vous explique l'installation étape par étape
    d'Apache, PHP, Xdebug, MongoDB, et Lithium par Jon Adams.
   </para>
  </listitem>
 </itemizedlist>
</section>

</section>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
