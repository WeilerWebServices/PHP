<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongolog" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>La classe MongoLog</title>
 <titleabbrev>MongoLog</titleabbrev>

 <partintro>

<!-- {{{ MongoLog intro -->
  <section xml:id="mongolog.intro">
   &reftitle.intro;
   <para>
    L'enregistrement de traces peut être utilisé pour récupérer des informations
    détaillées sur les différentes activités du driver. Par défaut, l'enregistrement
    des traces est désactivé, mais cette classe vous permet d'activer des niveaux
    spécifiques d'enregistrements pour différentes parties du driver.
    Quelques exemples :
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// affiche tous les messages de logs possibles
MongoLog::setLevel(MongoLog::ALL); // tous les niveaux de logs
MongoLog::setModule(MongoLog::ALL); // toutes les parties du driver

// affiche les évènements significatifs concernant les erreurs du jeu de réplication
MongoLog::setLevel(MongoLog::INFO);
MongoLog::setModule(MongoLog::RS);

// affiche les informations et le niveau de diagnostique des événements pour les
// jeux de réplication et les connexions
MongoLog::setLevel(MongoLog::INFO|MongoLog::FINE);
MongoLog::setModule(MongoLog::RS|MongoLog::CON);

?>
]]>
   </programlisting>
   <note>
    <para>
     Par défaut, MongoLog émet tous les messages d'enregistrement de traces
     comme notices PHP. Suivant le <acronym>SAPI</acronym> utilisé, les messages
     peuvent être envoyés à <literal>stderr</literal> (pour <acronym>CLI</acronym>)
     ou au log d'erreurs du serveur Web. Si, après avoir configuré MongoLog,
     les messages d'enregistrement de traces n'apparaissent pas comme prévus,
     assurez-vous que <constant>E_NOTICE</constant> est inclus dans l'option
     de configuration <link linkend="ini.error-reporting">error_reporting</link>
     et que <link linkend="ini.display-errors">display_errors</link> vaut "on".
    </para>
   </note>
  </section>
<!-- }}} -->

  <section xml:id="mongolog.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoLog</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoLog</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.none">MongoLog::NONE</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.all">MongoLog::ALL</varname>
     <initializer>31</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="levels">level constants</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.warning">MongoLog::WARNING</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.info">MongoLog::INFO</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.fine">MongoLog::FINE</varname>
     <initializer>4</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="levels">module constants</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.rs">MongoLog::RS</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.pool">MongoLog::POOL</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.con">MongoLog::CON</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.io">MongoLog::IO</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.server">MongoLog::SERVER</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongolog.constants.parse">MongoLog::PARSE</varname>
     <initializer>16</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">Champs</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>private</modifier>
     <modifier>static</modifier>
     <type>int</type>
     <varname>callback</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>private</modifier>
     <modifier>static</modifier>
     <type>int</type>
     <varname>level</varname>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>private</modifier>
     <modifier>static</modifier>
     <type>int</type>
     <varname>module</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongolog')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section>
   &reftitle.constants;
   <section xml:id="mongolog.constants.types">
    <title>Constantes MongoLog</title>
    <para>
     Ces constantes peuvent être utilisées par à la fois la méthode
     <function>MongoLog::setLevel</function> et la méthode
     <function>MongoLog::setModule</function>.
    </para>

    <variablelist>
     <varlistentry xml:id="mongolog.constants.none">
      <term><constant>MongoLog::NONE</constant></term>
      <listitem>
       <simpara>
         Aucun enregistrement de traces n'est réalisé.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.all">
      <term><constant>MongoLog::ALL</constant></term>
      <listitem>
       <simpara>
        Enregistre toutes les traces.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>

   <section xml:id="mongolog.constants.level">
    <title>Constantes MongoLog sur les niveaux</title>
    <para>
     Ces constantes peuvent être utilisées par la méthode
     <function>MongoLog::setLevel</function>.
    </para>
    <variablelist>
     <varlistentry xml:id="mongolog.constants.warning">
      <term><constant>MongoLog::WARNING</constant></term>
      <listitem>
       <simpara>
        Log les événements qui sont exceptionnels, mais pas assez pour
        lancer une exception (i.e. erreurs de connexion qui peuvent être
        corrigées).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.info">
      <term><constant>MongoLog::INFO</constant></term>
      <listitem>
       <simpara>
        Log les événements qui peuvent intéresser les administrateurs,
        mais qui ne sont pas noticiable (i.e. option d'analyse, étape
        d'authentification).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.fine">
      <term><constant>MongoLog::FINE</constant></term>
      <listitem>
       <simpara>
        Log la plupart des événements que le driver produit (i.e. sélection
        de serveur, communication avec un socket). Suivant le module dont
        on enregistre les traces, ceci peut être très verbeux, et est principalement
        prévu pour le débogage.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>

   <section xml:id="mongolog.constants.module">
    <title>Constantes du module MongoLog</title>
    <para>
     Ces constantes peuvent être utilisées par la méthode
     <function>MongoLog::setModule</function>.
    </para>
    <variablelist>
     <varlistentry xml:id="mongolog.constants.con">
      <term><constant>MongoLog::CON</constant></term>
      <listitem>
       <simpara>
        Log l'activité de la connexion. Création d'une nouvelle connexion,
        authentification, les différents pings, l'atteinte des délais d'expiration,
        etc..
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.io">
      <term><constant>MongoLog::IO</constant></term>
      <listitem>
       <simpara>
        Enregistre les traces à propos du trafic de la base de données.
        A moins que votre programme soit très particulier, cette
        constante créera un nombre gigantesque de messages de logs.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.parse">
      <term><constant>MongoLog::PARSE</constant></term>
      <listitem>
       <simpara>
        Log l'analyse de la chaîne de connexion et des options,
        lors de la construction d'un <classname>MongoClient</classname>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.pool">
      <term><constant>MongoLog::POOL</constant></term>
      <listitem>
       <simpara>
        Précédemment utilisé pour enregistrer les traces de l'activité du
        pool de connexion. Cette option est maintenant obsolète, et est un
        alias de <constant>MongoLog::RS</constant>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.rs">
      <term><constant>MongoLog::RS</constant></term>
      <listitem>
       <simpara>
        Enregistre les traces de l'activité du jeu de réplication
        (Erreur, sélection de la préférence de lecture, etc.).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongolog.constants.server">
      <term><constant>MongoLog::SERVER</constant></term>
      <listitem>
       <simpara>
        Précédemment utilisé pour enregistrer les traces des modifications
        de statut du serveur. Cette option est obsolète, en faveur de
        <constant>MongoLog::RS</constant>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>

  <section role="changelog">
   &reftitle.changelog;
   <para>
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>&Version;</entry>
        <entry>&Description;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>PECL mongo 1.3.0</entry>
        <entry>
         Ajout de <constant>MongoLog::CON</constant>,
         et, désormais, <constant>MongoLog::POOL</constant> et
         <constant>MongoLog::SERVER</constant> sont obsolètes.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </para>
  </section>

 </partintro>

 &reference.mongo.entities.mongolog;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
