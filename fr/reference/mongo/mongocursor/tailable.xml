<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.tailable" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::tailable</refname>
  <refpurpose>Définit si le curseur doit être conservé ouvert après la récupération du dernier résultat</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::tailable</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>tail</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Mongo a une fonction permettant de voir le contenu du curseur en temps réel,
   similaire à la commande Unix "tail -f".
  </para>
  <para>
   En utilisant cette fonctionnalité, le curseur n'est pas fermé lorsque le
   dernier résultat est récupéré. Au lieu de cela, le curseur marque la
   position du dernier objet. Vous pouvez ainsi utiliser plus tard ce curseur,
   depuis sa position courante, si d'autres données sont reçues.
  </para>
  <para>
   Comme tous les curseurs latents, le curseur devient non valide à certain point,
   par exemple, lorsque la référence de l'objet final est effacée.
   Ainsi, vous devez être prêt à effectuer une nouvelle requête si le curseur est mort.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>tail</parameter>
     </term>
     <listitem>
      <para>
       Si le curseur doit être consulté en temps réel.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1> 

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Returns this cursor.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoCursorException</classname> si le
   curseur a commencé à être parcouru.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCursor::tailable</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find()->tailable();

$results = array();

while (1) {
    if (!$cursor->hasNext()) {
        // Nous avons lu tous les résultats, on peut sortir
        if ($cursor->dead()) {
            break;
        }
        // On lit tous les résultats, et on attend les suivants
        sleep(10);
    }
    else {
        $results[] = $cursor->getNext();
    }
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   Documentation MongoDB sur les
   <link xlink:href="&url.mongodb.dochub.tailable;">curseurs</link>.
  </para>
  <para>
   <simplelist>
    <member><function>MongoCursor::awaitData</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
