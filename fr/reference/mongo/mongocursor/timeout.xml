<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335760 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.timeout" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::timeout</refname>
  <refpurpose>Défini un délai maximum d'attente côté client pour cette requête</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::timeout</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Un délai maximum d'attente peut être défini à n'importe quel moment,
   et affectera les requêtes suivantes du curseur, incluant la récupération
   de plus de résultats depuis la base de données.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      Le nombre de millisecondes que le curseur doit attente une réponse.
      Pour attendre indéfiniement, utilisez la valeur <literal>-1</literal>.
      Par défaut, le curseur attendra <varname>30000</varname>
      millisecondes (30 secondes).
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Ce curseur.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si la requête prend plus de temps que le nombre de millisecondes spécifié,
   une exception de type <classname>MongoCursorTimeoutException</classname>
   sera émise.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCursor::timeout</function></title>
   <para>
    Dans l'exemple suivant, le driver va attendre indéfiniement la réponse
    initiale de la base de données, puis, va attendre 100ms pour
    les réponses suivantes.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();
$cursor->timeout(-1);

/* $cursor->hasNext() exécute la requête. Un délai d'attente infini a été défini, aussi
 * le driver va attendre autant de temps que nécessaire la réponse.
 */
while ($cursor->hasNext()) {
    $cursor->timeout(100);

    /* Un délai d'attente maximal a maintenant été défini, aussi, si le curseur
     * doit récupérer plus de résultats depuis la base de données, il n'attendra
     * la réponse que pendant 100ms.
     */
    try {
        print_r($cursor->getNext());
    } catch (MongoCursorTimeoutException $e) {
        echo "La requête prend trop longtemps !";
    }
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Ce comportement ne permet pas d'annuler une opération trop longue au niveau
    du serveur MongoDB ; il ne va qu'informer le driver d'arrêter d'attendre
    une réponse, et lancer une exception
    <classname>MongoCursorTimeoutException</classname> après la durée définie.
    Si vous devez spécifier un délai maximal d'attente côté serveur pour une
    requête, veuillez utiliser la méthode <methodname>MongoCursor::maxTimeMS</methodname>.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCursorInterface::timeout</methodname></member>
   <member>L'option <literal>socketTimeoutMS</literal> pour
    <function>MongoClient::__construct</function></member>
  </simplelist>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
