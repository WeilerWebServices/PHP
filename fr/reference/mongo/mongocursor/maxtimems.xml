<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342988 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.maxtimems" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::maxTimeMS</refname>
  <refpurpose>Défini le délai d'attente maximal côté serveur pour la requête</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::maxTimeMS</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Spécifie une limite de temps cumulative, en millisecondes,
   autorisé au serveur pour effectuer les opérations sur le curseur.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      Spécifie une limite de temps cumulative, en millisecondes,
      autorisé au serveur pour effectuer les opérations sur le curseur.
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Ce curseur.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoCursorException</classname> si le curseur
   a commencé son itération.
  </para>
  <para>
   Fait que les méthodes qui récupèrent les résultats lance une exception
   <classname>MongoExecutionTimeoutException</classname> si la requête
   prend plus de temps que le nombre de millisecondes spécifié
   dans l'exécution des opérations.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <methodname>MongoCursor::maxTimeMS</methodname></title>
   <para>
    Dans l'exemple suivant, le serveur a interrompre la requête si le curseur
    requiert plus de deux secondes dans l'exécution des opérations pour
    retourner les résultats.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();
$cursor->maxTimeMS(2000);

try {
    $results = iterator_to_array($cursor);
} catch (MongoExecutionTimeoutException $e) {
    echo "query took too long!";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Contrairement à la méthode <methodname>MongoCursor::timeout</methodname>,
    qui spécifie un délai d'attente maximal côté client, la méthode
    <methodname>MongoCursor::maxTimeMS</methodname> peut être utilisée pour
    stopper le serveur MongoDB lors de l'exécution de requêtes qui prennent
    trop de temps. Ce délai d'attente maximal est cumulatif pour la durée
    de vie du curseur (i.e. chaque lot va contribuer à cette durée). Le délai
    d'attente maximal ne prend en considération que le temps d'exécution ;
    le temps d'inactivité n'est pas pris en compte.
   </para>
  </warning>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
