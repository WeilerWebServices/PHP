<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321508 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.sort" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::sort</refname>
  <refpurpose>Trie les résultats par ordre de champs</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::sort</methodname>
   <methodparam><type>array</type><parameter>fields</parameter></methodparam>
  </methodsynopsis>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>fields</parameter>
     </term>
     <listitem>
      <para>
       Un tableau de champs utilisés pour le tri. Chaque élément
       de ce tableau contient une clé représentant le nom du champ,
       et comme valeur, soit <literal>1</literal> pour un tri croissant,
       soit <literal>-1</literal> pour un tri décroissant.
      </para>
      <para>
       Chaque résultat est d'abord trié sur le premier champs du tableaun
       puis (si il en existe), sur le second champ du tableau, etc. Ceci signifie
       que l'ordre des champs du tableau <parameter>fields</parameter>
       est important. Voir aussi la section sur les exemples.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1> 

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Retourne le même curseur utilisé dans l'appel de cette méthode.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emet une exception <classname>MongoCursorException</classname> si le curseur a commencé à itérer.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCursor::sort</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// tri sur le champ x croissant
$cursor->sort(array('x' => 1));

// L'ordre dans le tableau associatif est important. Actuellement,
// ces deux exemples produiront des résultats différents :

// Tri sur la date, croissant, et sur l'age, décroissant
$cursor->sort(array('date' => 1, 'age' => -1));

// Tri sur l'age, décroissant, et sur la date, croissant
$cursor->sort(array('age' => -1, 'date' => 1));
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
