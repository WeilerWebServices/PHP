<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335865 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocommandcursor.createfromdocument" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCommandCursor::createFromDocument</refname>
  <refpurpose>Crée un nouveau curseur de commande depuis un document de commande existant</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>MongoCommandCursor</type><methodname>MongoCommandCursor::createFromDocument</methodname>
   <methodparam><type>MongoClient</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>hash</parameter></methodparam>
   <methodparam><type>array</type><parameter>document</parameter></methodparam>
  </methodsynopsis>
  <para>
   Utilisez cette méthode si vous avez un résultat de commande brute qui contient
   des informations de curseur. Notez que les curseurs créés avec cette méthode
   ne peuvent pas être parcouru plusieurs fois, sachant qu'ils perdent la commande
   originale nécessaire à la ré-exécution.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>connection</parameter>
     </term>
     <listitem>
      <para>
       La connexion à la base de données.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>hash</parameter>
     </term>
     <listitem>
      <para>
       Le hash de la connexion, tel qu'obtenu via le troisième argument
       par référence de la méthodec <methodname>MongoDB:command</methodname>.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>document</parameter>
     </term>
     <listitem>
      <para>
       Document contenant les informations du curseur. Ce document
       doit contenir les champs <literal>id</literal>, <literal>ns</literal> et
       <literal>firstBatch</literal>. Un tel document est obtenu par appel
       à la méthode <methodname>MongoDB:command</methodname>
       avec les arguments appropriés à retourner au curseur, et pas seulement
       un résultat. Voir l'exemple ci-dessous.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le nouveau curseur.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCommandCursor::createFromDocument</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient;
$d = $m->demo;

// Définit le pipeline d'agrégation
$pipeline = [
    [ '$group' => [
        '_id' => '$country_code',
        'timezones' => [ '$addToSet' => '$timezone' ]
    ] ],
    [ '$sort' => [ '_id' => 1 ] ],
];


// Exécution de la commande. L'option "cursor" ci-dessous indique au serveur
// de retourner un document d'information de curseur plutôt que des résultats
$r = $d->command(
    [
        'aggregate' => 'cities',
        'pipeline' => $pipeline,
        'cursor' => [ 'batchSize' => 1 ],
    ],
    null,
    $hash
);

// Affiche les résultats ainsi que le hash
var_dump( $r, $hash );

// Construit le curseur de commande
$cursor = MongoCommandCursor::createFromDocument( $m, $hash, $r );
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["cursor"]=>
  array(3) {
    ["id"]=>
    object(MongoInt64)#5 (1) {
      ["value"]=>
      string(12) "392143983421"
    }
    ["ns"]=>
    string(11) "demo.cities"
    ["firstBatch"]=>
    array(1) {
      [0]=>
      array(2) {
        ["_id"]=>
        string(2) "AD"
        ["timezones"]=>
        array(1) {
          [0]=>
          string(14) "Europe/Andorra"
        }
      }
    }
  }
  ["ok"]=>
  float(1)
}
string(25) "localhost:27017;-;.;17617"
]]>
   </screen>
   <para>
    Comme vous pouvez le voir, les informations de curseur
    retournées contiennent les champs <literal>id</literal>,
    <literal>ns</literal> et <literal>firstBatch</literal>.
   </para>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCommandCursor::__construct</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
