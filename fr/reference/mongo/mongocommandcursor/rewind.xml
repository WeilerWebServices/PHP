<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335444 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocommandcursor.rewind" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCommandCursor::rewind</refname>
  <refpurpose>Exécute la commande, et replace le curseur au début du jeu de résultats</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCommandCursor::rewind</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Si le curseur a commencé son itération, la commande
   sera ré-exécutée.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Le document brute servi par le serveur.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lance une exception <classname>MongoConnectionException</classname>
   si la base de données ne peut être atteinte et une exception
   <classname>MongoCursorTimeoutException</classname> si le délai d'attente
   maximal a été atteint.
  </para>
  <para>
   Lance une exception <classname>MongoCursorException</classname> si le curseur
   a été créé avec la méthode <function>MongoCommandCursor::createFromDocument</function>
   et que l'itération a déjà commencé. De tels curseurs ne peuvent être parcourus à plusieurs
   reprises, sachant qu'ils perdent la commande originale nécessaire à la ré-exécution.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoCommandCursor::rewind</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$rawResult = $commandCursor->rewind();

// Le curseur de commande est maintenant ré-initialisé au début du jeu de résultats

var_dump($rawResult);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
array(2) {
  ["cursor"]=>
  array(3) {
    ["id"]=>
    object(MongoInt64)#5 (1) {
      ["value"]=>
      string(12) "310050110216"
    }
    ["ns"]=>
    string(9) "demo.test"
    ["firstBatch"]=>
    array(1) {
      [0]=>
      array(2) {
        ["_id"]=>
        object(MongoId)#6 (1) {
          ["$id"]=>
          string(24) "52f5691544670a8077b0dc51"
        }
        ["value"]=>
        string(2) "42"
      }
    }
  }
  ["ok"]=>
  float(1)
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>Iterator::rewind</methodname></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
