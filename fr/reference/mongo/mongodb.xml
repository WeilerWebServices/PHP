<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351133 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<phpdoc:classref xml:id="class.mongodb" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>&class.theclass; <classname>MongoDB</classname></title>
 <titleabbrev>MongoDB</titleabbrev>
 
 <partintro>
  
  <!-- {{{ Mongodb intro -->
  <section xml:id="mongodb.intro">
   &reftitle.intro;
   <para>
    Les objets de cette classe servent à interagir avec la base de données.
    Pour obtenir une base de données :
    <example>
     <title>Sélection d'une base de données</title>
     <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient(); // connexion
$db = $m->selectDB("exemple");

?>
]]>
     </programlisting>
    </example>
    Les noms de base de données peuvent contenir n'importe quel 
    caractère ASCII. Mais ils ne peuvent pas contenir les caractères
    &quot; &quot;, &quot;.&quot; ou être la chaîne vide.
    Le mot "system" est aussi réservé.
   </para>
   <para>
    Quelques noms de base de données valides mais inattendus : 
    &quot;null&quot;, &quot;[x,y]&quot;, &quot;3&quot;, 
    à&quot;\&quot;&quot;, &quot;/&quot;.
   </para>
   <para>
    Contrairement aux noms de collection, les noms de bases de données
    peuvent contenir &quot;$&quot;.
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="mongodb.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDB</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoDB</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingoff">MongoDB::PROFILING_OFF</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingslow">MongoDB::PROFILING_SLOW</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingon">MongoDB::PROFILING_ON</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">Champs</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="mongodb.props.w">w</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>int</type>
     <varname linkend="mongodb.props.wtimeout">wtimeout</varname>
     <initializer>10000</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodb')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section>
   &reftitle.constants;
   <section xml:id="mongodb.constants.types">
    <title>Niveaux d'historisation de MongoDB</title>
    <variablelist>
     
     <varlistentry xml:id="mongodb.constants.profilingoff">
      <term><constant>MongoDB::PROFILING_OFF</constant></term>
      <listitem>
       <simpara>
        Le profilage est inactif.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongodb.constants.profilingslow">
      <term><constant>MongoDB::PROFILING_SLOW</constant></term>
      <listitem>
       <simpara>
        Le profilage est actif pour les opérations lentes (&gt;100 ms).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongodb.constants.profilingon">
      <term><constant>MongoDB::PROFILING_ON</constant></term>
      <listitem>
       <simpara>
        Le profilage est actif sur toutes les opérations.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>
  
  <section>
   <title>Champs</title>
   <variablelist>
    <varlistentry xml:id="mongodb.props.w">
     <term><varname>w</varname></term>
     <term>1</term>
     <listitem>
      <para>
       Le nombre de serveurs vers lesquels répliquer avant de retourner avec succès.
       Hérité par les instances dérivées de la <classname>MongoCollection</classname>
       La fonctionnalité <literal>w</literal> n'est disponible que pour les versions
       1.5.1+ du serveur MongoDB et 1.0.8+ du pilote.
      </para>
      <para>
       <literal>w</literal> est utilisé chaque fois que vous avez besoin
       d'ajuster le niveau de reconnaissance
       (<function>MongoCollection::insert</function>, 
       <function>MongoCollection::update</function>, 
       <function>MongoCollection::remove</function>, 
       <function>MongoCollection::save</function>, et
       <function>MongoCollection::ensureIndex</function> supportent tous cette option).
       Avec la valeur par défaut (1), une opération reconnue retournera une fois que
       le serveur a effectué l'opération. Si le serveur tombe avant que l'opération ne soit
       répliquée vers un secondaire, il est possible de perdre l'opération. Ainsi vous pouvez
       préciser une valeur supérieure à 1 pour le paramètre <literal>w</literal> et garantir qu'au
       moins un secondaire recoive l'opération avant qu'elle ne soit considérée comme étant réalisée
       avec succès.
      </para>
      <para>
       Par exemple si <literal>w</literal> vaut 2, le serveur principal et un des secondaires doivent
       avoir enregistré l'opération ou le pilote enverra une
       <classname>MongoCursorException</classname>. Il est tentant de mettre le nombre total
       d'escalves + le maitre comme numéro pour <literal>w</literal>, mais alors si un des
       secondaires tombe l'opération échouera et une exception sera levée, ainsi
       <literal>w=2</literal> est le cas le plus sécurisant (maitre et un secondaire).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="mongodb.props.wtimeout">
     <term><varname>wtimeout</varname></term>
     <term>10000</term>
     <listitem>
      <para>
       Le nombre de millisecondes à attendre pour que les réplications de
       <literal>MongoDB::$w</literal> démarrent. Hérité par les instances dérivées
       dans la <classname>MongoCollection</classname> en cours. La fonctionnalité
       <literal>w</literal> n'est disponible que depuis la version 1.5.1+ du serveur
       MongoDB et 1.0.8+ du pilote.
      </para>
      <para>
       Sauf si <literal>wtimeout</literal> est précisé, le serveur attendra indéfiniment que
       la réplication vers les serveurs <literal>w</literal> se termine. Le pilote attendra par
       défaut 10 secondes, vous pouvez changer cette valeur.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  
  <section>
   &reftitle.seealso;
   <para>
    Documentation de MongoDB <link xlink:href="&url.mongodb.glossary;#term-database">concernant les
    bases de données</link>.
   </para>
  </section>
 </partintro>
 
 &reference.mongo.entities.mongodb;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
