<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb.createcollection" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::createCollection</refname>
  <refpurpose>Crée une collection</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCollection</type><methodname>MongoDB::createCollection</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Cette méthode est utilisée pour créer des collections limitées
   ainsi que des collections nécessitant des options spéciales.
   Cette méthode revient à exécuter :
   <programlisting role="php">
<![CDATA[
<?php

$collection = $db->command(array(
    "create" => $name,
    "capped" => $options["capped"],
    "size" => $options["size"],
    "max" => $options["max"],
    "autoIndexId" => $options["autoIndexId"],
));

?>
]]>
   </programlisting>
   Voir la méthode <function>MongoDB::command</function>
   pour plus d'informations sur les commandes de base de données.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>name</parameter>
     </term>
     <listitem>
      <para>
       Le nom de la collection.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Un tableau contenant les options pour les collections. Chaque option
       est son propre élément dans le tableau des options, dont le nom de l'option
       listée ci-dessous est la clé de l'élément. Les options supportées dépendent
       de la version du serveur MongoDB et du moteur de stockage, et le driver passe
       toutes les options que vous fournissez directement au serveur. Voici une liste
       de quelques options, mais vous pouvez trouver une liste complète dans
       la documentation coeur de MongoDB pour <link
       xlink:href="&url.mongodb.docs;method/db.createCollection/">createCollection</link> :
      </para>
      <para>
       <variablelist>
        <varlistentry>
         <term>
          <parameter>capped</parameter>
         </term>
         <listitem>
          <para>
           Si la collection doit avoir une taille fixe.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>size</parameter>
         </term>
         <listitem>
          <para>
           Si la collection a une taille fixe, la taille en octets.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>max</parameter>
         </term>
         <listitem>
          <para>
           Si la collection a une taille fixe, le nombre maximum d'éléments
           à stoquer dans la collection.
          </para>
         </listitem>
        </varlistentry>   
        <varlistentry>
         <term>
          <parameter>autoIndexId</parameter>
         </term>
         <listitem>
          <para>
           Si l'option capped vaut &true;, vous pouvez spécifier &false;
           ici pour désactiver la création d'index automatique sur le champ
           <literal>_id</literal>. Avant MongoDB 2.2, la valeur par défaut pour
           <literal>autoIndexId</literal> était &false;.
          </para>
         </listitem>
        </varlistentry>   
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un objet <classname>MongoCollection</classname>,
   qui représente la nouvelle collection.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoDB::createCollection</function></title>
   <para>
    Une collection plafonnée est un type spécial de collection qui a soit
    des éléments fixes, soit un nombre d'éléments fixes. Une fois que la collection
    est pleine, les éléments les plus anciens seront effacés lors de l'ajout de
    nouveaux éléments. Les collections plafonnées sont vraiment utiles pour
    les applications qui historisent et que vous souhaitez réserver une certaine
    quantitié d'espaces à l'historisation sans vous soucier de leurs évolutions.
   </para>
   <para>
    Cet exemple crée une petite collection qui conserve un maximum de 10 documents.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$log = $db->createCollection(
    "logger",
    array(
        'capped' => true,
        'size' => 10*1024,
        'max' => 10
    )
);

for ($i = 0; $i < 100; $i++) {
    $log->insert(array("level" => WARN, "msg" => "Message simple d'historisation #$i", "ts" => new MongoDate()));
}

$msgs = $log->find();

foreach ($msgs as $msg) {
    echo $msg['msg']."\n";
}

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
Message simple d'historisation #90
Message simple d'historisation #91
Message simple d'historisation #92
Message simple d'historisation #93
Message simple d'historisation #94
Message simple d'historisation #95
Message simple d'historisation #96
Message simple d'historisation #97
Message simple d'historisation #98
Message simple d'historisation #99
   </screen>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.4.0</entry>
       <entry>
        <para>
         Dans les versions antérieures à 1.4.0, les options étaient toutes des arguments
         de la méthode. La signature de la fonction dans ces anciennes versions était :
        </para>
        <para>
         <methodsynopsis>
          <modifier>public</modifier> <type>MongoCollection</type><methodname>MongoDB::createCollection</methodname>
          <methodparam><type>string</type><parameter>name</parameter></methodparam>
          <methodparam choice="opt"><type>bool</type><parameter>capped</parameter><initializer>&false;</initializer></methodparam>
          <methodparam choice="opt"><type>int</type><parameter>size</parameter><initializer>0</initializer></methodparam>
          <methodparam choice="opt"><type>int</type><parameter>max</parameter><initializer>0</initializer></methodparam>
         </methodsynopsis>
        </para>
        <para>
         La signification de ces options est la même que celle décrite ci-dessus,
         dans l'argument <parameter>options</parameter>.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
