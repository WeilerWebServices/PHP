<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341774 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongodb.repair" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB::repair</refname>
  <refpurpose>Répare et compacte une base de données</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoDB::repair</methodname>
   <methodparam choice="opt"><type>bool</type><parameter>preserve_cloned_files</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>backup_original_files</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette méthode crée une copie de toutes les données de la base
   de données. Elle supprime toutes les données corrompues, compacte
   et optimise les espaces libres trouvés. Ces opérations sont très lentes
   sur de grosses bases de données.
  </para>
  <para>
   Cette méthode est habituellement appelée depuis le shell ou depuis
   la ligne de commande, et non via le driver.
  </para>
  <para>  
   C'est un équivalent à la fonction :
   <programlisting role="php">
<![CDATA[
<?php

public function repair() {
    return $this->command(array('repairDatabase' => 1));
}

?>
]]>
   </programlisting>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;    
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>preserve_cloned_files</parameter>
     </term>
     <listitem>
      <para>
       Indique les fichiers clonés doivent être conservé,
       en cas d'échec de la réparation.
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>backup_original_files</parameter>
     </term>
     <listitem>
      <para>
       Indique si les fichiers originaux doivent être sauvegardés.
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   Retourne la réponse de la base de données.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   La documentation principale MongoDB sur
   <link xlink:href="&url.mongodb.docs.command;repairDatabase">la réparation</link>.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple pour <function>MongoDB::repair</function></title>
   <para>Cet exemple montre comment réparer et comprimer une base de données.</para>
   <programlisting role="php">
<![CDATA[
<?php

$db = $mongo->foo;

$response = $db->repair();
print_r($response);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [ok] => 1
)
]]>
   </screen>
  </example>  
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
