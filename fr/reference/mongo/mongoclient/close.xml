<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongoclient.close" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoClient::close</refname>
  <refpurpose>Ferme la connexion</refpurpose>
 </refnamediv>

 <refsynopsisdiv role="soft-deprecation-notice">
  <sidebar>
   &mongo.noalternative.method.note;
  </sidebar>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoClient::close</methodname>
   <methodparam choice="opt"><type class="union"><type>bool</type><type>string</type></type><parameter>connection</parameter></methodparam>
  </methodsynopsis>
  <para>
   La méthode <function>MongoClient::close</function> ferme une connexion
   de base de données, y compris si les connexions persistentes
   sont utilisées. Dans une logique classique, vous ne devriez
   <emphasis>jamais</emphasis> utiliser cette méthode.
  </para>
  <para>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>connection</parameter>
     </term>
     <listitem>
      <para>
       Si ce paramètre n'est pas fourni ou vaut &false;, alors la connexion
       sélectionnée pour les écritures sera fermée. Dans une configuration
       avec un seul noeud, la connexion dans sa totalité sera fermée, mais si
       vous êtes connecté à un jeu de réplication, close() ne fermera
       <emphasis>only</emphasis> la connexion au serveur primaire.
      </para>
      <para>
       Si ce paramètre vaut &true;, alors toutes les connexions connues du
       gestionnaire de connexion seront fermées. Cela peut inclure les connexions
       qui ne sont pas référencées via la chaîne de connexion, utilisée pour créer
       l'objet que vous souhaitez fermer.
      </para>
      <para>
       Si ce paramètre est une chaîne, alors seule la connexion identifiée
       par cette chaîne sera fermée. Cette chaîne identifie une connexion
       et peut être obtenue en appelant la méthode
       <function>Mongo::getConnections</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &true; si la connexion a pu être fermée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>MongoClient::close</function></title>
   <para>
    Cet exemple montre comment fermer toutes les connexions vers les secondaires.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
// Connexion à un jeu de réplication
$a = new MongoClient("mongodb://whisky:13000/?replicaset=seta");

$connections = $a->getConnections();

foreach ( $connections as $con )
{
    // Parcourt des connexions, et lorsque le type est "SECONDARY",
    // nous fermons la connexion
    if ( $con['connection']['connection_type_desc'] == "SECONDARY" )
    {
        echo "Fermeture de '{$con['hash']}': ";
        $closed = $a->close( $con['hash'] );
        echo $closed ? "ok" : "échec", "\n";
    }
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Fermeture de 'whisky:13001;X;4948': ok
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.3.0</entry>
       <entry>
        <para>
         Le paramètre <parameter>connection</parameter> a été ajouté. Avant cette
         version, seule la connexion en écriture était fermée par cette méthode.
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>
        <para>
         Avant la version 1.2.0, le driver n'utilisait pas les connexions persistentes
         par défaut, et toutes les connexions étaient fermées dès que une connexion
         MongoDB sortait du scope. Depuis la version 1.2.0, ce n'est plus le cas
         et c'est une mauvaise idée d'appeler la méthode close car vous pourriez
         finir par surcharger le serveur avec des connexions à haute charge.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoClient::getConnections</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
