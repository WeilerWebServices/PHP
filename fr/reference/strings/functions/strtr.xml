<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Remplace des caractères dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>array</type><parameter>replace_pairs</parameter></methodparam>
  </methodsynopsis>
  <para>
   Si trois arguments sont utilisés, <function>strtr</function> retourne la chaîne
   <parameter>str</parameter> après avoir remplacé chaque caractère (de un octet)
   du paramètre <parameter>from</parameter> par son équivalent dans le paramètre
   <parameter>to</parameter>, chaque occurence de <literal>$from[$n]</literal> est
   remplacée par <literal>$to[$n]</literal>, où <literal>$n</literal> est une valeur
   valide pour chaque argument.
  </para>
  <para>
   Si <parameter>from</parameter> et <parameter>to</parameter> sont de
   tailles différentes, les caractères en trop dans l'un ou l'autre
   seront ignorés. La taille de <parameter>str</parameter> sera la même que celle
   des valeurs retournées.
  </para>
  <para>
   Si seuls deux arguments sont utilisés, le deuxième doit être un <type>array</type>
   de la forme <literal>array('from' => 'to', ...)</literal>. La donnée retournée est
   une <type>string</type> dans laquelle toutes les occurrences des clés du tableau ont
   été remplacées par les valeurs correspondantes. Les clés les plus longues seront d'abord
   utilisées. Une fois une sous-chaine remplacée, sa nouvelle valeur ne sera plus recherchée.
  </para>
  <para>
   Dans ce cas, les clés et les valeurs peuvent avoir n'importe quelle taille, en supposant
   qu'il n'y a pas de clé vide; aussi, la taille de la valeur retournée peut différer de celle
   de <parameter>str</parameter>. Cependant, cette fonction sera la plus efficace lorsque toutes
   les clés ont la même taille.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       La chaîne à traiter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
       Les caractères de départ.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
       Les caractères de remplacement.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace_pairs</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>replace_pairs</parameter> peut être utilisé
       à la place de <parameter>to</parameter> et <parameter>from</parameter>
       et dans ce cas, ce sera un tableau sous la forme
       <literal>array('from' => 'to', ...)</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la &string; modifiée.
  </para>
  <para>
   Si <parameter>replace_pairs</parameter> contient une clé vide
   (<literal>""</literal>), &false; sera retourné. Si le paramètre
   <parameter>str</parameter> n'est pas un scalaire, alors il ne sera
   pas transtypé en une chaîne de caractères, une alerte sera émise,
   et la valeur &null; sera retournée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>strtr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ici, strtr() remplace octet par octet, nous supposons
// donc ici des encodages sur un seul octet:
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   L'exemple suivant montre l'utilisation de <function>strtr</function> avec
   deux arguments. Notez la préférence des remplacements (<literal>h</literal> n'est
   pas utilisé car il y a des correspondances plus longues) et comment le texte
   remplacé n'est pas réutilisé par la suite.
  </para>
  <example>
   <title>Exemple avec <function>strtr</function> et 2 arguments</title>
    <programlisting role="php">
<![CDATA[
<?php
$trans = array("h" => "-", "hello" => "hi", "hi" => "hello");
echo strtr("hi all, I said hello", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
hello all, I said hi
]]>
    </screen>
  </example>
  <para>
   Les deux comportements sont différents. Avec trois arguments, 
   <function>strtr</function> remplacera les octets; avec deux, elle peut
   remplacer des sous-chaines plus longues.
  </para>
  <example>
   <title>Comparaison de comportement de <function>strtr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo strtr("baab", "ab", "01"),"\n";

$trans = array("ab" => "01");
echo strtr("baab", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
1001
ba01
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
