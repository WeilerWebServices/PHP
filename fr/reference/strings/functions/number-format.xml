<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350656 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.number-format" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>number_format</refname>
  <refpurpose>Formate un nombre pour l'affichage</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>number</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>decimals</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>number</parameter></methodparam>
   <methodparam><type>int</type><parameter>decimals</parameter><initializer>0</initializer></methodparam>
   <methodparam><type>string</type><parameter>dec_point</parameter><initializer>"."</initializer></methodparam>
   <methodparam><type>string</type><parameter>thousands_sep</parameter><initializer>","</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cette fonction accepte un, deux, ou quatre paramètres (et pas trois) :
  </para>
  <para>
   Si seul le paramètre <parameter>number</parameter> est donné,
   il sera formaté sans partie décimale, mais avec une
   virgule entre chaque millier.
  </para>
  <para>
   Si les deux paramètres <parameter>number</parameter> et
   <parameter>decimals</parameter> sont fournis, <parameter>number</parameter> sera
   formaté avec <parameter>decimals</parameter> décimales,
   un point (".") comme séparateur décimal et une virgule entre chaque
   millier.
  </para>
  <para>
   Avec quatre paramètres, <parameter>number</parameter> sera
   formaté avec <parameter>decimals</parameter> décimales,
   <parameter>dec_point</parameter> comme séparateur décimal, et
   <parameter>thousands_sep</parameter> comme séparateur de milliers.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>number</parameter></term>
     <listitem>
      <para>
       Le nombre à formater.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decimals</parameter></term>
     <listitem>
      <para>
       Définit le nombre de décimales.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dec_point</parameter></term>
     <listitem>
      <para>
       Définit le séparateur pour le point décimal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>thousands_sep</parameter></term>
     <listitem>
      <para>
       Définit le séparateur des milliers.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Une version formatée du nombre <parameter>number</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <function>number_format</function> a été modifié pour ne plus permettre de
        retourner <literal>-0</literal>, précedement <literal>-0</literal> pouvait
        être retourné pour des cas où <parameter>number</parameter> valait <literal>-0.01</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>number_format</function></title>
    <para>
     En notation française, on utilise généralement deux chiffres
     après la virgule, une virgule comme séparateur décimal, et un
     espace comme séparateur de milliers. L'exemple suivant montre
     comment formater un nombre de différentes façons :
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$number = 1234.56;

// Notation anglaise (par défaut)
$english_format_number = number_format($number);
// 1,235

// Notation française
$nombre_format_francais = number_format($number, 2, ',', ' ');
// 1 234,56

$number = 1234.5678;

// Notation anglaise sans séparateur de milliers
$english_format_number = number_format($number, 2, '.', '');
// 1234.57

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>money_format</function></member>
    <member><function>sprintf</function></member>
    <member><function>printf</function></member>
    <member><function>sscanf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->