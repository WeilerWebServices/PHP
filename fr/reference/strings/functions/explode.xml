<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350653 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.explode">
 <refnamediv>
  <refname>explode</refname>
  <refpurpose>Scinde une chaîne de caractères en segments</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>explode</methodname>
   <methodparam><type>string</type><parameter>delimiter</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>PHP_INT_MAX</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>explode</function> retourne un tableau de chaînes de caractères, 
   chacune d'elle étant une sous-chaîne
   du paramètre <parameter>string</parameter> extraite en utilisant le séparateur
   <parameter>delimiter</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       Le séparateur.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne initiale.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Si <parameter>limit</parameter> est défini et positif, 
       le tableau retourné contient, au maximum, 
       <parameter>limit</parameter> éléments, et le dernier
       élément contiendra le reste de la chaîne.
      </para>
      <para>
       Si le paramètre <parameter>limit</parameter> est négatif,
       tous les éléments, excepté les -<parameter>limit</parameter>
       derniers éléments sont retournés.
      </para>
      <para>
       Si <parameter>limit</parameter> vaut zéro, il est traité
       comme valant 1.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    Bien que <function>implode</function> puisse, pour des raisons historiques,
    accepter ces paramètres dans n'importe quel ordre,
    <function>explode</function> ne le peut pas.
    Vous devez vous assurer que le paramètre <parameter>delimiter</parameter>
    soit placé avant le paramètre <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un &array; de chaînes de caractères créées en scindant
   la chaîne du paramètre <parameter>string</parameter> en plusieurs
   morceaux suivant le paramètre <parameter>delimiter</parameter>.
  </para>
  <para>
   Si <parameter>delimiter</parameter> est une chaîne vide (""),
   <function>explode</function> retournera &false;. Si
   <parameter>delimiter</parameter> contient une valeur qui n'est pas contenue
   dans <parameter>string</parameter> ainsi qu'une valeur négative pour le paramètre
   <parameter>limit</parameter>, alors <function>explode</function>
   retournera un &array; vide, sinon, un &array; contenant la chaîne
   <parameter>string</parameter> entière.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Exemple 1
$pizza  = "piece1 piece2 piece3 piece4 piece5 piece6";
$pieces = explode(" ", $pizza);
echo $pieces[0]; // piece1
echo $pieces[1]; // piece2

// Exemple 2
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
echo $user; // foo
echo $pass; // *

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple de valeurs retournées par la fonction <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Une chaîne qui ne contient pas de délimiteur va retourner un tableau
   contenant qu'un seul élément représentant la chaîne originale */
$input1 = "hello";
$input2 = "hello,there";
$input3 = ',';
var_dump( explode( ',', $input1 ) );
var_dump( explode( ',', $input2 ) );
var_dump( explode( ',', $input3 ) );

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1)
(
    [0] => string(5) "hello"
)
array(2)
(
    [0] => string(5) "hello"
    [1] => string(5) "there"
)
array(2)
(
    [0] => string(0) ""
    [1] => string(0) ""
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Exemple avec <function>explode</function> et le paramètre <parameter>limit</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'one|two|three|four';

// limit positif
print_r(explode('|', $str, 2));

// limit négatif (depuis PHP 5.1)
print_r(explode('|', $str, -1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => one
    [1] => two|three|four
)
Array
(
    [0] => one
    [1] => two
    [2] => three
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>str_split</function></member>
    <member><function>mb_split</function></member>
    <member><function>str_word_count</function></member>
    <member><function>strtok</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->