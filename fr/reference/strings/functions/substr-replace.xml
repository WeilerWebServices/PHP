<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342063 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr-replace">
 <refnamediv>
  <refname>substr_replace</refname>
  <refpurpose>Remplace un segment dans une chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>substr_replace</methodname>
   <methodparam><type>mixed</type><parameter>string</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replacement</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_replace</function> remplace un segment de la
   chaîne <parameter>string</parameter> par la chaîne
   <parameter>replacement</parameter>. Le segment est délimité
   par <parameter>start</parameter> et éventuellement par
   <parameter>length</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne d'entrée.
      </para>
      <para>
       Un tableau de chaînes de caractères peut être fourni, et dans ce cas,
       les remplacements surviendront sur chacune des chaînes. Dans cette situation,
       les paramètres <parameter>replacement</parameter>, <parameter>start</parameter>
       <parameter>length</parameter> doivent être fournis soit comme valeurs scalaires
       à appliquer sur chaque chaîne, ou comme tableaux où l'élément
       du tableau correspondant sera utilisé pour chaque chaîne d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       La chaîne de remplacement.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Si <parameter>start</parameter> n'est pas négatif, le remplacement
       se fera à partir du caractère numéro <parameter>start</parameter>
       dans <parameter>string</parameter>.
      </para>
      <para>
       Si <parameter>start</parameter> est négatif, le remplacement
       se fera à partir du <parameter>start</parameter>-ième caractère
       en partant de la fin de la chaîne <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si <parameter>length</parameter> est fourni et positif, il
       représentera la longueur du segment de code remplacé dans la
       chaîne <parameter>string</parameter>. S'il est négatif, il représentera
       le nombre de caractères à partir de la fin de la chaîne
       <parameter>string</parameter> où arrêter le remplacement. S'il est omis,
       il prendra la valeur par défaut de la taille
       de la chaîne, et remplacera tout jusqu'à la fin de la chaîne
       <parameter>string</parameter>. Bien sûr, si
       <parameter>length</parameter> vaut 0, alors, cette fonction
       aura comme effet d'insérer <parameter>replacement</parameter> dans
       <parameter>string</parameter> à la position
       <parameter>start</parameter> donnée.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La chaîne résultante est retournée. Si le paramètre
   <parameter>string</parameter> est un tableau, alors un
   tableau sera retourné.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>substr_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Original : $var<hr />\n";

// Remplace toute la chaîne $var par 'bob'.
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";

// Insert 'bob' au début de la chaîne
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";

// Remplace la séquence 'MNRPQR' par 'bob'.
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";

// Efface la séquence 'MNRPQR' de $var.
echo substr_replace($var, '', 10, -1) . "<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>
     Utilisation de <function>substr_replace</function> pour remplacer plusieurs
     chaînes en une seule fois
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$input = array('A: XXX', 'B: XXX', 'C: XXX');

// Un cas simple : remplacer XXX dans chaque chaîne par YYY.
echo implode('; ', substr_replace($input, 'YYY', 3, 3))."\n";

// Un cas plus complexe où chaque remplacement est différent.
$replace = array('AAA', 'BBB', 'CCC');
echo implode('; ', substr_replace($input, $replace, 3, 3))."\n";

// Remplace un nombre différent de caractères à chaque fois.
$length = array(1, 2, 3);
echo implode('; ', substr_replace($input, $replace, 3, $length))."\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>substr</function></member>
    <member><link linkend="language.types.string.substr">Accès et modification d'une chaîne, par caractère</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
