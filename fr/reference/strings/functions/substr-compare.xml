<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350645 Maintainer: girgias Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr-compare">
 <refnamediv>
  <refname>substr_compare</refname>
  <refpurpose>Compare deux chaînes depuis un offset jusqu'à une longueur en caractères</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>substr_compare</methodname>
   <methodparam><type>string</type><parameter>main_str</parameter></methodparam>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>case_insensitivity</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>substr_compare</function> compare <parameter>main_str</parameter>
   à partir de la position <parameter>offset</parameter> avec <parameter>str</parameter>
   pendant <parameter>length</parameter> caractères.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>main_str</parameter></term>
     <listitem>
      <para>
       La chaîne principale à comparer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       La chaîne secondaire à comparer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       La position de départ pour la comparaison. Si c'est une valeur négative,
       on commence à compter à partir de la fin de la chaîne.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longueur de la comparaison. La valeur par défaut est le maximum
       entre la longueur de <parameter>str</parameter>
       et la longueur de <parameter>main_str</parameter> moins le paramètre
       <parameter>offset</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>case_insensitivity</parameter></term>
     <listitem>
      <para>
       Si <parameter>case_insensitivity</parameter> vaut &true;, la comparaison
       est insensible à la casse.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne &lt; 0 si <parameter>main_str</parameter> à partir de
   <parameter>offset</parameter> est inférieur à <parameter>str</parameter>, &gt;
   0 s'il est plus grand que <parameter>str</parameter>, et 0 si ils sont égaux.
   Si <parameter>length</parameter> est égal (antérieur à PJP 7.2.18, 7.3.5) ou
   plus grand que la taille de <parameter>main_str</parameter> ou que
   <parameter>length</parameter> est définit et inférieur à 0,
   (ou, antérieur à PHP 5.5.11, moins que 1)
   <function>substr_compare</function> affiche une alerte et retourne &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.18, 7.3.5</entry>
       <entry>
        <parameter>offset</parameter> peut désormais être égal à la taille de <parameter>main_str</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>substr_compare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr_compare("abcde", "bc", 1, 2); // 0
echo substr_compare("abcde", "de", -2, 2); // 0
echo substr_compare("abcde", "bcg", 1, 2); // 0
echo substr_compare("abcde", "BC", 1, 2, true); // 0
echo substr_compare("abcde", "bc", 1, 3); // 1
echo substr_compare("abcde", "cd", 1, 2); // -1
echo substr_compare("abcde", "abc", 5, 1); // warning
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strncmp</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
