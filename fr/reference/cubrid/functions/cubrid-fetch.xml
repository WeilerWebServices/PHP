<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330593 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.cubrid-fetch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch</refname>
  <refpurpose>Récupère la prochaine ligne du jeu de résultats</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>cubrid_fetch</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>  
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>CUBRID_BOTH</initializer></methodparam>  
  </methodsynopsis>
  <para>
   La fonction <function>cubrid_fetch</function> est utilisée
   pour récupérer une seule ligne depuis le résultat de la
   requête. Le curseur se déplace automatiquement sur la prochaine
   ligne une fois la récupération effectuée.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para>Le paramètre <parameter>result</parameter>
      provient de l'appel à la fonction <function>cubrid_execute</function></para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem><para>Type du tableau à retourner : CUBRID_NUM, CUBRID_ASSOC, CUBRID_BOTH, CUBRID_OBJECT.
      Si vous voulez utiliser un objet LOB, vous pouvez utiliser CUBRID_LOB.
      </para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tableau ou objet de résultat, en cas de succès.
  </para>
  <para>
   &false; lorsqu'il n'y a plus de ligne de disponible, NULL
   si une erreur survient.
  </para>
  <para>
   Le résultat peut être sous la forme d'un tableau ou d'un objet ;
   le type de résultat peut être défini grâce au paramètre <parameter>type</parameter>.
   La variable <parameter>type</parameter> peut être définie à une
   des valeurs suivantes :
  </para>
  <simplelist>
   <member>CUBRID_NUM : Tableau numérique (en commençant à l'indice 0)</member>
   <member>CUBRID_ASSOC : Tableau associatif</member>
   <member>CUBRID_BOTH : Tableau numérique et associatif (valeur par défaut)</member>
   <member>CUBRID_OBJECT : Objet dont les noms des attributs correspondent
    aux noms des colonnes du résultat de la requête</member>
  </simplelist>  
  <para>
   Lorsque l'argument <parameter>type</parameter> est omis, le résultat
   sera retourné en utilisant l'option CUBRID_BOTH par défaut. Lorsque vous
   voulez recevoir le résultat de la requête sous la forme d'un objet, le nom
   de la colonne du résultat doit être conforme aux règles de nommage des
   identifiants en PHP. Par exemple, les noms de colonnes comme "count(*)"
   ne peuvent être acceptés dans le type objet.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>cubrid_fetch</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");
$req = cubrid_execute($conn, "SELECT * FROM stadium WHERE nation_code='GRE' AND seats > 10000");

printf("%-40s %-10s %-6s %-20s\n", "name", "area", "seats", "address");
while ($row = cubrid_fetch($req)) {
    printf("%-40s %-10s %-6s %-20s\n",
        $row["name"], $row["area"], $row["seats"], $row["address"]);
}

// Si vous voulez utiliser un objet LOB, vous pouvez utiliser
// cubrid_fetch($req, CUBRID_LOB)

cubrid_close_request($req);

cubrid_disconnect($conn);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
name                                     area       seats  address             
Panathinaiko Stadium                     86300.00   50000  Athens, Greece      
Olympic Stadium                          54700.00   13000  Athens, Greece      
Olympic Indoor Hall                      34100.00   18800  Athens, Greece      
Olympic Hall                             52400.00   21000  Athens, Greece      
Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      
Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece
Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece
Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece
Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_execute</function></member>
    <member><function>cubrid_fetch_array</function></member>
    <member><function>cubrid_fetch_row</function></member>
    <member><function>cubrid_fetch_assoc</function></member>
    <member><function>cubrid_fetch_object</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
