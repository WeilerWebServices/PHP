<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ --> 
<!-- EN-Revision: 334879 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-ms-set-user-pick-server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_ms_set_user_pick_server</refname>
  <refpurpose>Définit une fonction de rappel utilisateur pour la séparation lecture/écriture</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type>
   <methodname>mysqlnd_ms_set_user_pick_server</methodname>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
  </methodsynopsis>
  <para>
   Définit une fonction de rappel utilisateur pour la séparation lecture/écriture.
   Le plugin appellera cette fonction uniquement si <literal>pick[]=user</literal>
   est la règle par défaut pour la sélection de serveur dans la section révélante
   du fichier de configuration du plugins.
  </para>
  <para>
   Le mécanisme interne de décision sur la séparation lecture/écriture du
   plugin peut être écrasé de 2 façons. La plus simple est d'ajouter en début
   de requête SQL l'astuce <constant>MYSQLND_MS_MASTER_SWITCH</constant>,
   <constant>MYSQLND_MS_SLAVE_SWITCH</constant> ou
   <constant>MYSQLND_MS_LAST_USED_SWITCH</constant>. L'utilisation d'astuces SQL
   permet de contrôler, par exemple, si la requête doit être envoyée au serveur
   MySQL maître de réplication ou à un des serveurs esclaves. Avec l'aide des astuces
   SQL, il n'est pas possible de sélectionner un serveur esclave particulier
   pour l'exécution de la requête.
  </para>
  <para>
   Le contrôle total sur la sélection de serveur peut être atteint en utilisant
   une fonction de rappel. Son utilisation est recommandée par les utilisateurs
   expérimentés uniquement par le fait que la fonction de rappel couvre tous les
   cas pouvant être gérés par le plugin.
  </para>
  <para>
   Le plugin invoquera la fonction de rappel pour sélectionner un serveur depuis
   la liste des serveurs maîtres et esclaves configurés. La fonction de rappel
   inspecte la requête à exécuter, et sélectionne un serveur utilisé pour l'exécution
   de la requête en retournant l'URI de l'hôte, tel que trouvé dans la liste
   des serveurs maîtres et esclaves.
  </para>
  <para>
   Si les connexions paresseuses sont activées, si la fonction de rappel choisit
   un serveur esclave pour lequel aucune connexion n'a été établie, et que la connexion
   échoue, le plugin retournera une erreur lors de la prochaine action sur la
   connexion ayant échouée, par exemple, lors de l'exécution d'une requête..
   Il en est de la responsabilité de l'application de gérer cette erreur.
   Par exemple, l'application peut ré-exécuter la requête pour forcer la
   sélection d'un nouveau serveur et ainsi provoquer l'invocation de la fonction
   de rappel. Si c'est le cas, la fonction de rappel doit s'assurer de
   sélectionner un esclave différent, ou vérifier la disponibilité de
   l'esclave choisi, avant de retourner le résultat au plugin, et ce, afin
   d'éviter une boucle infinie.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>function</parameter></term>
    <listitem>
     <para>
      La fonction à appeler. Les méthodes de la classe peuvent aussi
      être invoquées statiquement en utilisant cette fonction en
      passant <literal>array($classname, $methodname)</literal> dans ce
      paramètre. De plus, les méthodes de la classe d'une instance d'objet
      peuvent être appelées en passant
      <literal>array($objectinstance, $methodname)</literal> dans ce paramètre.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Hôte sur lequel la requête sera exécutée. L'URI de l'hôte sera issue
   de la liste des connexions maîtres et esclaves passée à la fonction
   de rappel. Si la fonction de rappel retourne une valeur ni trouvée dans
   le maître, ni dans les esclaves de la liste, le plugin se retournera
   sur la seconde méthode de sélection configurée via la configuration
   <literal>pick[]</literal> du fichier de configuration du plugin.
   Si aucune seconde méthode de sélection n'est fournie, le plugin se
   retournera alors vers la méthode de sélection interne.
  </para>
 </refsect1>

 <refsect1>
  &reftitle.notes;
  <note>
   <para>
    <function>mysqlnd_ms_set_user_pick_server</function> est disponible
    avec PECL mysqlnd_ms &lt; 1.1.0. La fonction a été remplacée par 
    un filtre utilisateur. Reportez-vous aux
    <link linkend="mysqlnd-ms.changes-one-one">modifications de versions</link>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mysqlnd_ms_set_user_pick_server</function></title>
    <programlisting role="ini">
<![CDATA[
[myapp]
master[] = localhost
slave[] = 192.168.2.27:3306
slave[] = 192.168.78.136:3306
pick[] = user
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php

function pick_server($connected, $query, $master, $slaves, $last_used)
{
 static $slave_idx = 0;
 static $num_slaves = NULL;
 if (is_null($num_slaves))
  $num_slaves = count($slaves);

 /* défaut : retour à la logique interne du plugin */
 $ret = NULL;

 printf("L'utilisateur est connecté sur '%s'...\n", $connected);
 printf("... décision du serveur pour l'exécution de la requête '%s'\n", $query);

 $where = mysqlnd_ms_query_is_select($query);
 switch ($where)
 {
  case MYSQLND_MS_QUERY_USE_MASTER:
   printf("... utilisation du maître\n");
   $ret = $master[0];
   break;
  case MYSQLND_MS_QUERY_USE_SLAVE:
   /* SELECT ou astuce SQL pour l'utilisation d'un esclave */
   if (stristr($query, "FROM table_on_slave_a_only"))
   {
    /* une table qui n'est configuré que sur le premier esclave configuré */
    printf("... accès à une table disponible que sur l'esclave A détecté\n");
    $ret = $slaves[0];
   }
   else
   {
    /* tentative */
    printf("... quelques requêtes en lectures seules pour un esclave\n");
    $ret = $slaves[$slave_idx++ % $num_slaves];
   }
   break;
  case MYSQLND_MS_QUERY_LAST_USED:
   printf("... utilisation du dernier serveur utilisé\n");
   $ret = $last_used;
   break;
 }

 printf("... ret = '%s'\n", $ret);
 return $ret;
}

mysqlnd_ms_set_user_pick_server("pick_server");

$mysqli = new mysqli("myapp", "root", "root", "test");

if (!($res = $mysqli->query("SELECT 1 FROM DUAL")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();

if (!($res = $mysqli->query("SELECT 2 FROM DUAL")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();


if (!($res = $mysqli->query("SELECT * FROM table_on_slave_a_only")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();

$mysqli->close();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
L'utilisateur est connecté sur 'myapp'...
... décision du serveur pour l'exécution de la requête 'SELECT 1 FROM DUAL'
... quelques requêtes en lectures seules pour un esclave
... ret = 'tcp://192.168.2.27:3306'
L'utilisateur est connecté sur 'myapp'...
... décision du serveur pour l'exécution de la requête 'SELECT 2 FROM DUAL'
... quelques requêtes en lectures seules pour un esclave
... ret = 'tcp://192.168.78.136:3306'
L'utilisateur est connecté sur 'myapp'...
... décision du serveur pour l'exécution de la requête 'SELECT * FROM table_on_slave_a_only'
... accès à une table disponible que sur l'esclave A détecté
... ret = 'tcp://192.168.2.27:3306'
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>mysqlnd_ms_query_is_select</function>
    </member>
    <member>
     <link linkend="mysqlnd-ms.filter">Notion sur les filtres</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-ms-plugin-config-v2.filter-user">Les filtres utilisateurs</link>
    </member>  
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
