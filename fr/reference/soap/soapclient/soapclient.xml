<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350656 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="soapclient.soapclient" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::SoapClient</refname>
  <refpurpose>Constructeur SoapClient</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>SoapClient::SoapClient</methodname>
   <methodparam><type>mixed</type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ce constructeur crée des objets <classname>SoapClient</classname>
   dans le mode <literal>WSDL</literal> ou <literal>non-WSDL</literal>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       URI du fichier <literal>WSDL</literal> ou &null; s'il travaille en mode
       <literal>non-WSDL</literal>.
      </para>
      <note>
       <para>
        Durant le stage de développement, vous devriez vouloir désactiver le cache WSDL
        via l'option de configuration <literal>soap.wsdl_cache_ttl</literal> de votre &php.ini;,
        sinon, les modifications faites sur le fichier WSDL n'auront aucun effet
        tant que le cache <literal>soap.wsdl_cache_ttl</literal> n'aura pas expiré.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Un tableau d'options. Si l'on travaille en mode WSDL, ce paramètre est optionnel.
       En mode non-WSDL, Les options <literal>location</literal> et
       <literal>uri</literal> doivent être définies, où <literal>location</literal>
       est l'URL du serveur SOAP vers lequel la requète est envoyée, et
       <literal>uri</literal> est l'espace de noms cible du service SOAP.
      </para>
      <para>
       Les options <literal>style</literal> et <literal>use</literal> ne fonctionnent
       que dans le mode non-WSDL. En mode WSDL, ils viennent du fichier WSDL.
      </para>
      <para>
       L'option <literal>soap_version</literal> doit valoir la constante
       <constant>SOAP_1_1</constant> ou la constante <constant>SOAP_1_2</constant>
       pour sélectionner, respectivement, SOAP 1.1 ou SOAP 1.2. Si omis,
       SOAP 1.1 sera utilisé.
      </para>
      <para>
       Pour les identifications HTTP, vous devez utiliser les options <literal>login</literal> et
       <literal>password</literal>. Pour effectuer une connexion HTTP via un proxy,
       utilisez les options <literal>proxy_host</literal>,
       <literal>proxy_port</literal>, <literal>proxy_login</literal>
       et <literal>proxy_password</literal>.
       Pour les identifications à l'aide d'un certificat d'un client HTTPS,
       utilisez les options <literal>local_cert</literal> et
       <literal>passphrase</literal>. Une authentification peut être spécifiée dans l'option 
       <literal>authentication</literal>. La méthode d'authentification peut être 
       <constant>SOAP_AUTHENTICATION_BASIC</constant> (par défaut) ou 
       <constant>SOAP_AUTHENTICATION_DIGEST</constant>.
      </para>
      <para>
       L'option <literal>compression</literal> permet d'utiliser la compression
       sur les requêtes et les réponses HTTP SOAP.
      </para>
      <para>
       L'option <literal>encoding</literal> définit le jeu d'encodage des caractères
       internes. Cette option ne modifie pas l'encodage des requêtes SOAP (il est
       toujours utf-8), mais convertit les chaînes en utilisant ce dernier.
      </para>
      <para>
       L'option <literal>trace</literal> active le suivi des requêtes pour permettre 
       le retraçage des défauts. &false; par défaut.
      </para>      
      <para>
       L'option <literal>classmap</literal> peut être utilisée pour lier
       quelques types WSDL avec des classes PHP. Cette option doit être
       un tableau avec les types WSDL en tant que clés et les noms des classes
       PHP en tant que valeurs.
      </para>
      <para>
       Définir l'option <literal>trace</literal> active l'utilisation des méthodes
       <link linkend="soapclient.getlastrequest">
        SoapClient->__getLastRequest</link>, 
       <link linkend="soapclient.getlastrequestheaders">
        SoapClient->__getLastRequestHeaders</link>,
       <link linkend="soapclient.getlastresponse">
        SoapClient->__getLastResponse</link> et
       <link linkend="soapclient.getlastresponseheaders">
        SoapClient->__getLastResponseHeaders</link>.
      </para>
      <para>
       L'option <literal>exceptions</literal> est un booléen définissant si les erreurs
       SOAP doivent lancer des exceptions du type
       <link linkend="soapfault.soapfault">SoapFault</link>.
      </para>
      <para>
       L'option <literal>connection_timeout</literal> définit le délai de connexion
       en secondes pour la connexion au service SOAP. Cette option ne définit pas un
       délai de connexion pour les services avec des réponses lentes. Pour limiter
       la durée d'attente de fin des appels, l'option
       <link linkend="ini.default-socket-timeout">default_socket_timeout</link> est
       disponible.
      </para>
      <para>
       L'option <literal>typemap</literal> est un tableau dont les clés
       sont <literal>type_name</literal>, <literal>type_ns</literal>
       (URI de l'espace de noms), <literal>from_xml</literal>
       (fonction de rappel acceptant un paramètre de type chaîne) et 
       <literal>to_xml</literal> (fonction de rappel acceptant un paramètre de type objet).
      </para>
      <para>
       L'option <literal>cache_wsdl</literal> est une constante parmi
       <constant>WSDL_CACHE_NONE</constant>,
       <constant>WSDL_CACHE_DISK</constant>,
       <constant>WSDL_CACHE_MEMORY</constant> ou
       <constant>WSDL_CACHE_BOTH</constant>.
      </para>
      <para>
       L'option <literal>user_agent</literal> spécifie la chaîne à utiliser
       dans l'en-tête <literal>User-Agent</literal>.
      </para>
      <para>
       L'option <literal>stream_context</literal> est une ressource de
       <link linkend="context">contexte</link>.
      </para>
      <para>
       L'option <literal>features</literal> est un masque représentant
       les constantes <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>,
       <constant>SOAP_USE_XSI_ARRAY_TYPE</constant> et,
       <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>.
      </para>
      <para>
       L'option <literal>keep_alive</literal> est un booléen
       définissant si l'on doit envoyer l'en-tête
       <literal>Connection: Keep-Alive</literal> ou l'en-tête
       <literal>Connection: close</literal>.
      </para>
      <para>
       L'option <literal>ssl_method</literal> est une des constantes suivantes :
       <constant>SOAP_SSL_METHOD_TLS</constant>,
       <constant>SOAP_SSL_METHOD_SSLv2</constant>,
       <constant>SOAP_SSL_METHOD_SSLv3</constant> ou
       <constant>SOAP_SSL_METHOD_SSLv23</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <methodname>SoapClient::SoapClient</methodname> génèrera une erreur de type
   <constant>E_ERROR</constant> si les options <literal>location</literal> et
   <literal>uri</literal> ne sont pas fournies en mode non-WSDL.
  </para>
  <para>
   Une exception de type <classname>SoapFault</classname> sera lancée si l'URI
   <parameter>wsdl</parameter> ne peut être chargée.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>SoapClient::SoapClient</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$client = new SoapClient("some.wsdl");

$client = new SoapClient("some.wsdl", array('soap_version'   => SOAP_1_2));

$client = new SoapClient("some.wsdl", array('login'          => "some_name",
                                            'password'       => "some_password"));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080,
                                            'proxy_login'    => "some_name",
                                            'proxy_password' => "some_password"));

$client = new SoapClient("some.wsdl", array('local_cert'     => "cert_key.pem"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/",
                                     'style'    => SOAP_DOCUMENT,
                                     'use'      => SOAP_LITERAL));

$client = new SoapClient("some.wsdl", 
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP));

$client = new SoapClient("some.wsdl", array('encoding'=>'ISO-8859-1'));

class MyBook {
    public $title;
    public $author;
}

$client = new SoapClient("books.wsdl", array('classmap' => array('book' => "MyBook")));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
