<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="tokyotyrantquery.search" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>TokyoTyrantQuery::search</refname>
  <refpurpose>Cherche des enregistrements</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>TokyoTyrantQuery::search</methodname>
   <void />
  </methodsynopsis>
  <para>
   Effectue une recherche sur la base de données. Retourne un tableau de tableaux, contenant
   les enregistrements correspondant. Dans le tableau retourné, le premier niveau correspond
   aux clés primaires des données, et le second, les données des lignes.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne les lignes correspondantes et lance une exception
   TokyoTyrantException si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>TokyoTyrantQuery::search</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Connexion à la base de données */
$tt = new TokyoTyrantTable("localhost", 1979);

/* Ajoute quelques lignes */
$tt->put(null, array("column1" => "some data", "column2" => "something here"));
$tt->put(null, array("column1" => "more data", "column2" => "best data this far"));
$tt->put(null, array("column1" => "again data", "column3" => "not here"));
$tt->put(null, array("column45" => "random data", "column2" => "something along the lines"));
$tt->put(null, array("column21" => "test data", "column2" => "generating.."));
$tt->put(null, array("column1" => "foobar data", "column2" => "value here"));

/* Récupère un nouvel objet de requête */
$query = $tt->getQuery();

/* Ajoute une condition de recherche */
$query->addCond("column2", TokyoTyrant::RDBQC_STROR, "something");

/* Affiche les résultats de la recherche */
var_dump($query->search());
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [1]=>
  array(2) {
    ["column1"]=>
    string(9) "some data"
    ["column2"]=>
    string(14) "something here"
  }
  [4]=>
  array(2) {
    ["column45"]=>
    string(11) "random data"
    ["column2"]=>
    string(25) "something along the lines"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>TokyoTyrantQuery::out</methodname></member>
    <member><methodname>TokyoTyrantQuery::metaSearch</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
