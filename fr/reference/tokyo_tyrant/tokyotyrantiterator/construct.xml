<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322131 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="tokyotyrantiterator.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>TokyoTyrantIterator::__construct</refname>
  <refpurpose>Construit un itérateur</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>TokyoTyrantIterator::__construct</methodname>
   <methodparam><type>mixed</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   Construit un nouvel objet TokyoTyrantIterator. Une connexion peut avoir
   plusieurs itérateurs, mais il n'est pas garantie que tous les éléments soient
   parcourus dans ce cas. Le paramètre <parameter>object</parameter> peut être soit
   une instance de TokyoTyrant, soit une instance TokyoTyrantTable.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Lance une exception si l'initialisation de l'itérateur échoue.
  </para>
 </refsect1>

  <refsect1 role="examples">
   &reftitle.examples;
   <para>
    <example>
     <title>Exemple avec <methodname>TokyoTyrantIterator::__construct</methodname></title>
     <programlisting role="php">
<![CDATA[
<?php
/* Connexion à une base de données de table */
$tt = new TokyoTyrantTable("localhost", 1979);

/* Passage de la valeur null pour générer un nouvel identifiant unique */
$index = $tt->put(null, array("column1" => "some data", "column2" => "more data"));

/* Construit un itérateur */
$it = new TokyoTyrantIterator($tt);

foreach ($it as $value) {
    var_dump($value);
}
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
array(2) {
  ["column1"]=>
  string(9) "some data"
  ["column2"]=>
  string(9) "more data"
}
]]>
     </screen>
    </example>
   </para>
  </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
     <member><methodname>TokyoTyrantIterator::key</methodname></member>
     <member><methodname>TokyoTyrantIterator::current</methodname></member>
     <member><methodname>TokyoTyrantIterator::next</methodname></member>
     <member><methodname>TokyoTyrantIterator::rewind</methodname></member>
     <member><methodname>TokyoTyrantIterator::key</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
