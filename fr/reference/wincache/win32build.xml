<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: pierrick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="wincache.win32build" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Compilation sous Windows</title>
  <section xml:id="wincache.win32build.prereq">
   <title>Prérequis</title>
   <para>
    Pour compiler l'extension WinCache, il faudra:
   </para>
   <orderedlist spacing="compact">
    <listitem>
     <simpara>le code source de PHP</simpara>
    </listitem>
    <listitem>
     <simpara>un environnement de compilation PHP</simpara>
    </listitem>
    <listitem>
     <simpara>le code source de WinCache</simpara>
    </listitem>
   </orderedlist>
   <para>
    Pour compléter les deux premières étapes, suivez le guide étape par étape 
    <link xlink:href="&url.php.win.build;">Compiler PHP sous Windows</link>.
   </para>
   <para>
    Pour obtenir le code source de WinCache, suivez les instructions décrites 
    dans <link linkend="install.pecl.downloads">Télécharger des extensions PECL</link>.
   </para>
  </section>
  <section xml:id="wincache.win32build.building">
   <title>Compiler et construire</title>
   <para>
    Les étapes suivantes décrivent comment compiler et construire WinCache sous Windows:

   </para>
   <procedure>
    <step>
     <simpara>Ouvrez une invite de commande utilisée pour compiler PHP</simpara>
    </step>
    <step>
     <simpara>Allez dans le dossier racine où les sources de PHP sont présentes</simpara>
    </step>
    <step>
     <para>
      Lancez la commande :
      <programlisting role="cmd">
<![CDATA[
cscript.exe win32\build\buildconf.js
]]>
      </programlisting>
     </para>
    </step>
    <step>
     <para>
      Lancez la commande :
      <programlisting role="cmd">
<![CDATA[
configure.bat --help
]]>
      </programlisting>
      La sortie contiendra une nouvelle option  <literal>--enable-wincache</literal>.
     </para>
    </step>
    <step>
     <para>
      Lancez la commande :
      <programlisting role="cmd">
<![CDATA[
configure.js [all options used to build PHP] --enable-wincache
]]>
      </programlisting>
      <literal>--enable-wincache</literal> est la seule option supplémentaire requise
      pour s'assurer que l'extension WinCache se compile correctement.
      Cette option permet de construire WinCache et le lier statiquement avec la
      DLL de PHP. Pour construire l'extension comme une DLL externe, utilisez 
      l'option <literal>--enable-wincache=shared</literal>.
     </para>
    </step>
    <step>
     <para>
      Lancez la commande :
      <programlisting role="cmd">
<![CDATA[
nmake
]]>
      </programlisting>
     </para>
    </step>
   </procedure>
  </section>
  <section xml:id="wincache.win32build.verify">
   <title>Verifying the build</title>
   <para>
    Les étapes suivantes décrivent comment vérifier que WinCache a été construit correctement :
   </para>
   <procedure>
    <step>
     <simpara>
      Allez dans le dossier où les fichiers PHP sont construits.
     </simpara>
    </step>
    <step>
     <para>
      Lancez la commande :
      <programlisting role="cmd">
<![CDATA[
php.exe -n -d extension=php_wincache.dll -re wincache
]]>
      </programlisting>
      Si WinCache a été construit correctement, la sortie de cette commande listera
      les directives INI et les fonctions supportées par WinCache.
     </para>
    </step>
   </procedure>
  </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
