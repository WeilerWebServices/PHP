<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.px-create-fp" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>px_create_fp</refname>
  <refpurpose>Crée une nouvelle base de données Paradox</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>px_create_fp</methodname>
   <methodparam><type>resource</type><parameter>pxdoc</parameter></methodparam>
   <methodparam><type>resource</type><parameter>file</parameter></methodparam>
   <methodparam><type>array</type><parameter>fielddesc</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crée un nouveau fichier de base de données Paradox. Le fichier actuel doit avoir
   été ouvert avec la fonction <function>fopen</function>. Assurez-vous
   que ce fichier est accessible en écriture.
  </para>
  <note>
   <para>
    L'appel à cette fonction émet une alerte à propos d'un nom de table vide qui
    peut être ignorée en toute sécurité. Définissez juste le nom de la table en suivant
    avec la fonction <function>px_set_parameter</function>.
   </para>
  </note>
  <note>
   <para>
    Cette fonction est hautement expérimentale, à cause du manque de documentation
    du format de fichier Paradox. Les fichiers de base de données créés avec cette
    fonction peuvent être ouvert avec la fonction <function>px_open_fp</function>
    et devraient s'ouvrir sans problème avec les logiciels Paradox.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pxdoc</parameter></term>
     <listitem>
      <para>
       Identifiant de ressource de base de données Paradox tel que
       retourné par la fonction <function>px_new</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>Ressource de fichier telle que retournée par la fonction <function>fopen</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fielddesc</parameter></term>
     <listitem>
      <para>
       <option>fielddesc</option> est un tableau comprenant un élément pour chaque
       champ contenant ses spécifications. Une spécification de champ
       est un tableau avec deux ou trois éléments. Le premier élément est toujours une
       chaîne de caractères représentant le nom du champ. Il ne peut être plus
       grand que dix caractères. Le deuxième élément contient le type du champ
       qui peut être une des constantes listées dans la table
       "<link linkend="paradox.table-fieldtypes">Constantes pour les types de champ</link>".
       Dans le cas d'un champ sous la forme de caractères ou de bcd, vous devez fournir un troisième
       élément spécifiant la longueur du champ. Si votre spécification de champ contient des
       champs Blob, vous devez vous assurer de rendre le champ assez grand pour toutes les valeurs
       des champs ou bien spécifier un fichier Blob avec la fonction <function>px_blob_file</function>
       pour y stocker les Blobs. Si vous ne faîtes pas cela, les données du champ seront tronquées.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Création d'une base de données Paradox avec deux champs</title>
    <programlisting role="php">
<![CDATA[
<?php
if(!$pxdoc = px_new()) {
  /* Gestion d'erreurs */
}
$fp = fopen("test.db", "w+");
$fields = array(array("col1", "S"), array("col2", "I"));
if(!px_create_fp($pxdoc, $fp, $fields)) {
  /* Gestion d'erreurs */
}
px_set_parameter($pxdoc, "tablename", "testtable");
for($i=-50; $i<50; $i++) {
  $rec = array($i, -$i);
  px_put_record($pxdoc, $rec);
}
px_close($pxdoc);
px_delete($pxdoc);
fclose($fp);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>px_new</function></member>
    <member><function>px_put_record</function></member>
    <member><function>fopen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->