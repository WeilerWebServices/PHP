<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322115 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="imagick.floodfillpaintimage">
 <refnamediv>
  <refname>Imagick::floodFillPaintImage</refname>
  <refpurpose>Modifie la valeur de la couleur de chaque pixel correspondant à la cible</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Imagick::floodFillPaintImage</methodname>
   <methodparam><type>mixed</type><parameter>fill</parameter></methodparam>
   <methodparam><type>float</type><parameter>fuzz</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>target</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>bool</type><parameter>invert</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>channel</parameter><initializer>Imagick::CHANNEL_DEFAULT</initializer></methodparam>
  </methodsynopsis>

  <para>
   Modifie la valeur de la couleur de chaque pixel correspondant
   à la cible et qui se trouve dans le voisinage immédiat. Cette méthode est un
   remplacement de la méthode obsolète
   <function>Imagick::paintFloodFillImage</function>.
   &imagick.method.available.0x638;
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>fill</parameter></term>
     <listitem>
      <para>
       Objet ImagickPixel ou une chaîne contenant la couleur de remplissage.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fuzz</parameter></term>
     <listitem>
      <para>
       &imagick.parameter.fuzz;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>target</parameter></term>
     <listitem>
      <para>
       Objet ImagickPixel ou une chaîne contenant la couleur cible à peindre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       Position de départ en X du pot de peinture.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       Position de départ en Y du pot de peinture.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>invert</parameter></term>
     <listitem>
      <para>
       Si vaut &true;, peint chaque pixel qui ne correspond pas à la couleur cible.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>channel</parameter></term>
     <listitem>
      <para>
       &imagick.parameter.channel;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <methodname>Imagick::floodfillPaintImage</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Crée un nouvel objet imagick */
$im = new Imagick();

/* Crée les images bleus, vertes et rouges */
$im->newImage(100, 50, "red");
$im->newImage(100, 50, "green");
$im->newImage(100, 50, "blue");

/* Ajoute l'image dans une autre */
$im->resetIterator();
$combined = $im->appendImages(true);

/* Sauvegarde de l'image intermédiaire pour comparaison */
$combined->writeImage("floodfillpaint_intermediate.png");

/* Le pixel cible à peindre */
$x = 1;
$y = 1;

/* Récupère la couleur à utiliser pour peindre */
$target = $combined->getImagePixelColor($x, $y);

/* Peint le pixel à la position 1,1 en noir, ainsi que tous les pixels voisins
   qui correspondent à la couleur cible */
$combined->floodfillPaintImage("black", 1, $target, $x, $y, false);

/* Sauvegarde le résultat */
$combined->writeImage("floodfillpaint_result.png");
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Affichage de l'exemple : Imagick::floodfillPaintImage()</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/floodfillpaint_intermediate.png"/>
     </imageobject>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/floodfillpaint_result.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
