<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350645 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.stream-filter-prepend" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_filter_prepend</refname>
  <refpurpose>Attache un filtre à un flux en début de liste</refpurpose> 
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>stream_filter_prepend</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>filtername</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>read_write</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>stream_filter_prepend</function> ajoute le filtre 
   <parameter>filtername</parameter> à la liste de filtres attachés au
   flux <parameter>stream</parameter>. 
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Le flux cible.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filtername</parameter></term>
     <listitem>
      <para>
       Le nom du filtre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>read_write</parameter></term>
     <listitem>
      <para>
       Par défaut, <function>stream_filter_prepend</function> va
       attacher le filtre à la <literal>chaîne de filtre de lectures</literal>
       si le fichier a été ouvert en lecture (i.e. mode
       <literal>r</literal>, et/ou <literal>+</literal>). Le filtre
       va aussi être attaché à la <literal>chaîne de filtres d'écriture</literal>
       si le fichier a été ouvert en écriture (i.e. mode 
       <literal>w</literal>, <literal>a</literal>, et/ou <literal>+</literal>).
       <constant>STREAM_FILTER_READ</constant>,
       <constant>STREAM_FILTER_WRITE</constant>, et/ou
       <constant>STREAM_FILTER_ALL</constant> peuvent aussi être passés dans le
       paramètre <parameter>read_write</parameter> pour imposer le comportement
       désiré. Voyez <function>stream_filter_append</function> pour un exemple
       d'utilisation de ce paramètre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       Le filtre sera ajouté avec les paramètres spécifiés dans <parameter>params</parameter>,
       au <emphasis>début</emphasis> de la liste, et sera ainsi appelé en premier
       dans les opérations du flux. Pour ajouter un filtre à la fin de la liste,
       utilisez <function>stream_filter_append</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une ressource en cas de succès, ou &false; si une erreur survient.
   La ressource peut être utilisée pour se référer à cette instance de filtre
   pendant un appel à la fonction <function>stream_filter_remove</function>.
  </para>

  <para>
   &false; est retourné si <parameter>stream</parameter> n'est pas une ressource,
   ou si <parameter>filtername</parameter> ne peut être atteint.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>Quand vous utilisez des filtres personnalisés</title>
   <simpara>
    <function>stream_register_filter</function> doit être appelée avant
    <function>stream_filter_prepend</function> pour enregistrer le filtre
    sous le nom de <parameter>filtername</parameter>.
   </simpara>
  </note>
  <note>
   <simpara>
    Les données du flux (locales et distantes) sont retournées en morceaux,
    les données non acheminées étant conservées dans le tampon interne.
    Lorsqu'un nouveau filtre est ajouté au début du flux, les données dans
    le tampon interne ne sont <emphasis>pas</emphasis> passées dans le nouveau
    filtre à ce moment là. Ceci est différent du comportement de
    <function>stream_filter_append</function>.
   </simpara>
  </note>
  <note>
   <simpara>
    Quand un filtre est ajouté pour la lecture et l'écriture, deux instances
    du filtres sont créées. <function>stream_filter_prepend</function> doit être
    appelée deux fois avec <constant>STREAM_FILTER_READ</constant> et 
    <constant>STREAM_FILTER_WRITE</constant> pour obtenir les ressources de filtres.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_filter_register</function></member>
   <member><function>stream_filter_append</function></member>
  </simplelist>
  
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
