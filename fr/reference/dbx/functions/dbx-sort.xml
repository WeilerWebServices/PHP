<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.dbx-sort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dbx_sort</refname>
  <refpurpose>
   Trie un résultat avec une fonction utilisateur
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>dbx_sort</methodname>
   <methodparam><type>object</type><parameter>result</parameter></methodparam>
   <methodparam><type>string</type><parameter>user_compare_function</parameter></methodparam>
  </methodsynopsis>
  <para>
   Trie un résultat depuis un appel à la fonction <function>dbx_query</function>
   avec une fonction de trie personnalisée.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Un jeu de résultats retourné par la fonction
       <function>dbx_query</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>user_compare_function</parameter></term>
     <listitem>
      <para>
       La fonction de comparaison définie par l'utilisateur. Elle doit accepter
       deux arguments et retourner un entier, inférieur à, égal à, ou
       supérieur à &zero; si le premier argument est considéré comme,
       respectivement, inférieur à, égal à ou supérieur au second.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>dbx_sort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
function user_re_order($a, $b) 
{
    $rv = dbx_compare($a, $b, "parentid", DBX_CMP_DESC);
    if (!$rv) {
        $rv = dbx_compare($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}

$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Impossible de se connecter");

$result = dbx_query($link, "SELECT id, parentid, description FROM tbl ORDER BY id");
    // Les données sont maintenant triées par id

dbx_sort($result, "user_re_order");
    // Les données sont maintenant triées par parentid décroissant, puis par id

dbx_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Il est toujours plus intéressant d'utiliser la clause <literal>SQL</literal>
    <literal>ORDER BY</literal> que la fonction <function>dbx_sort</function>, si possible.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dbx_compare</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->