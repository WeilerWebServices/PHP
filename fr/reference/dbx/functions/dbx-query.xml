<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347555 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.dbx-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dbx_query</refname>
  <refpurpose>Envoie une requête et lit tous les résultats DBX</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>dbx_query</methodname>
   <methodparam><type>object</type><parameter>link_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envoie une requête et lit tous les résultats.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       L'objet DBX retournée par la fonction <function>dbx_connect</function>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql_statement</parameter></term>
     <listitem>
      <para>
       La requête SQL.
      </para>
      <para>
       Les données à l'intérieur de la requête doivent être <link
       linkend="function.dbx-escape-string">proprement échappées</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Le paramètre <parameter>flags</parameter> sert à contrôler la quantité
       d'informations retournée. Il peut être n'importe quelle
       combinaisons par l'opérateur OR des constantes ci-après. Les constantes
       remplacent la configuration du &php.ini;.
       <variablelist>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INDEX</constant>
         </term>
         <listitem>
          <simpara>
           Ce paramètre est <emphasis>toujours</emphasis> activé, 
           c'est à dire que l'objet retourné dispose du membre 
           <property>data</property> qui est un tableau à deux dimensions,
           indexé numériquement. Par exemple, dans l'expression
           <literal>data[2][3]</literal> <literal>2</literal> représente
           le numéro de ligne et <literal>3</literal> représente 
           le numéro de colonne. Les premières lignes et colonnes 
           sont indexées à 0.
          </simpara>
          <simpara>
           Si <constant>DBX_RESULT_ASSOC</constant> est aussi spécifié, l'objet
           retourné contient en plus les informations liées à 
           <constant>DBX_RESULT_INFO</constant>, même s'il n'a pas été spécifié.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INFO</constant>
         </term>
         <listitem>
          <simpara>
           Cette option fournit des informations sur les colonnes, comme
           les noms des champs et leur type.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_ASSOC</constant>
         </term>
         <listitem>
          <simpara>
           Cette option fait que la valeur des champs peut être accessible
           avec le nom de la colonne, utilisé comme clé dans le tableau du
           membre <property>data</property>.
          </simpara>
          <simpara>
           Les résultats ainsi associés sont des références sur les valeurs
           identifiées par les index numériques, ce qui fait que modifier
           <literal>data[0][0]</literal> fait que 
           <literal>data[0]['nom_de_la_premiere_colonne']</literal> sera aussi
           modifié.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_UNBUFFERED</constant>
         </term>
         <listitem>
          <simpara>
           Cet option ne crée pas de propriété <property>data</property> et 
           la propriété <property>rows</property> sera initialement
           positionnée à 0. Utilisez ce flag pour des jeux d'enregistrements importants
           et utilisez <function>dbx_fetch_row</function> pour retrouver le résultat
           ligne par ligne.
          </simpara>
          <simpara>
           <function>dbx_fetch_row</function> retournera les lignes qui se conforment
           au flag de la requête. Par ailleurs, cela mettra à jour les lignes à chaque 
           appel de la fonction.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UNCHANGED</constant>
         </term>
         <listitem>
          <simpara>
           La casse du nom des colonnes retournées ne sera pas modifiée.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UPPERCASE</constant>
         </term>
         <listitem>
          <simpara>
           Les noms de colonnes seront mis en majuscules.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_LOWERCASE</constant>
         </term>
         <listitem>
          <simpara>
           Les noms de colonnes seront mis en minuscules.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
       Notez que <constant>DBX_RESULT_INDEX</constant> est toujours active,
       indépendamment de la valeur de <parameter>flags</parameter>. Cela signifie
       que seules les combinaisons suivantes sont utiles : 
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant> |
          <constant>DBX_RESULT_ASSOC</constant> - c'est la valeur par défaut,
          si <parameter>flags</parameter> est omis.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>dbx_query</function> retourne un objet dbx_result_object ou 
   <literal>1</literal> en cas de succès (un objet de résultat
   ne sera retourné que pour les requêtes SQL qui retournent un
   résultat), ou <literal>0</literal> en cas d'erreur. L'objet résultant n'est retourné que si la requête
   donnée par <parameter>sql_statement</parameter> produit un jeu d'enregistrements.
   (i.e. une requête SELECT, même si le résultat est vide).
  </para>
  <para>
   L'objet retourné a 5 membres (éventuellement 4, suivant
   les valeurs de <parameter>flags</parameter>) :
   <variablelist>
    <varlistentry>
     <term>
      <property>handle</property>
     </term>
     <listitem>
      <para>
       Ceci est une ressource représentant la connexion à la 
       base de données, et il peut être utilisé (si nécessaire) avec
       les fonctions spécialisées de la base.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, "SELECT id FROM table");
mysql_field_len($result->handle, 0);
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>cols</property> et <property>rows</property>
     </term>
     <listitem>
      <para>
       Ces deux membres contiennent respectivement 
       le nombre de colonnes et de lignes.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id FROM table');
echo $result->rows; // nombre de lignes
echo $result->cols; // nombre de champs
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>info</property> (optionnel)
     </term>
     <listitem>
      <simpara>
       Ce membre est retourné uniquement si <constant>DBX_RESULT_INFO</constant> ou
       <constant>DBX_RESULT_ASSOC</constant> sont spécifiés dans le paramètre
       <parameter>flags</parameter>. C'est un tableau à deux dimensions,
       avec deux lignes (<literal>name</literal> et
       <literal>type</literal>) pour lire les informations de colonnes.
      </simpara>
      <example>
       <title>Listes les types et noms de colonnes</title>
       <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id FROM table',
                     DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $result->cols; $i++ ) {
    echo $result->info['name'][$i] . "\n";
    echo $result->info['type'][$i] . "\n";
}
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>data</property>
     </term>
     <listitem>
      <simpara>
       Ce membre contient les résultats obtenus, possiblement associés
       avec le nom de colonne, en fonction de la valeur du paramètre 
       <parameter>flags</parameter>. Si <constant>DBX_RESULT_ASSOC</constant> 
       est activé, il est possible d'utiliser aussi
       <literal>$result->data[2]["nom_de_la_colonne"]</literal>.
      </simpara>
      <example>
       <title>Afficher le contenu d'une base</title>
       <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

echo "<table>\n";
foreach ($result->data as $row) {
    echo "<tr>\n";
    foreach ($row as $field) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";
?>
]]>
       </programlisting>
      </example>
      <example>
       <title>Comment utiliser les requêtes UNBUFFERED</title>
       <programlisting role="php">
<![CDATA[
<?php

$result = dbx_query ($link, 'SELECT id, parentid, description FROM table', DBX_RESULT_UNBUFFERED);

echo "<table>\n";
while ($row = dbx_fetch_row($result)) {
    echo "<tr>\n";
    foreach ($row as $field) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";

?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Comment gérer la valeur retournée</title>
    <programlisting role="php">
<![CDATA[
<?php
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Impossible de se connecter");

$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

if (is_object($result) ) {
    // ... faîtes des actions ici, voir les exemples détaillés ci-dessus ...
    // tout d'abord, afficher les noms et types de champs
    // puis, afficher un tableau contenant les valeurs retournées
} else {
    exit("Échec de la requête");
}

dbx_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Reportez-vous aussi à la documentation de la base de données que vous
    utilisez.
   </para>
   <para>
    Les noms des colonnes pour les requêtes sur des bases de données Oracle sont
    retournés en minuscules.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dbx_escape_string</function></member>
    <member><function>dbx_fetch_row</function></member>
    <member><function>dbx_connect</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->