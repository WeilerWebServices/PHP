<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="ref.sdo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&Functions; SDO</title>

 <partintro>
  <section xml:id="sdo.das.table">
   <title>Services d'Accès de Données</title>
   <para>
    La table ci-dessous liste les Services d'Accès de Données SDO actuellement
    fournis :
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Nom DAS</entry>
        <entry>Description</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <link linkend="ref.sdo-das-xml">SDO_DAS_XML</link>
        </entry>
        <entry>
         Un Service d'Accès de Données XML supportant la lecture/écriture SDOs
         comme documents XML.
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ref.sdodasrel">SDO_DAS_Relational</link>
        </entry>
        <entry>
         Un Service d'Accès de Données basé sur PDO supportant la
         lecture/écriture SDO aux bases de données relationnelles.
         Implémente une politique optimiste de mises à jour concourante.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </para>
  </section>

  <!-- class definition section -->
  <section xml:id="sdo.classes">
   &reftitle.classes;
   <para>
    SDO consiste en trois blocs d'interface. Le premier bloc couvre les
    interfaces pour utiliser avec les applications typiques SDO. Celles-ci
    sont identifiées par le préfixe de paquet 'SDO_'. Le deuxième bloc est
    celui qui utilise les interfaces qui sont utilisées pour la réflexion, et
    travaille avec le modèle d'objet de données. Ces interfaces sont
    identifiées par le préfixe de paquet 'SDO_Model_'. Finalement, le
    troisième bloc est celui qui utilise les interfaces qui sont utilisées par
    les implémentations de Service d'Accès de Données et sont identifiées par
    le préfixe de paquet 'SDO_DAS_'. La majorité des utilisateurs SDO
    n'auront pas besoin d'utiliser ou de comprendre les interfaces
    'SDO_Model_' et 'SDO_DAS_'.
   </para>

   <section xml:id="sdo.class.sdo-apis">
    <title>Interface Application pour programmer SDO</title>

    <section xml:id="class.sdo-dataobject">
     <title>
      <classname>SDO_DataObject</classname>
     </title>
     <para>
      L'interface principale dans laquelle les objets de données sont
      manipulés. En plus des méthode ci-dessous, SDO_DataObjet étend les
      interfaces ArrayAccess, SDO_PropertyAccess (définit les méthodes
      <link linkend="object.get">__get()</link> /
      <link linkend="object.set">__set()</link> pour surcharger
      l'accès aux propriétés), Iterator et Countable.
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.getsequence">getSequence</link>
         : récupère la séquence pour l'objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.createdataobject">createDataObject</link>
         : crée un objet de données enfant
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.clear">clear</link>
         : détruit les propriétés d'un objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.getcontainer">getContainer</link>
         : récupère le conteneur (aussi connu en tant que 'parent') de l'objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.gettypename">getTypeName</link>
         : récupère le nom du type de cet objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.gettypenamespaceuri">getTypeNamespaceURI</link>
         : récupère l'URI de l'espace de noms du type de cet objet de données
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-sequence">
     <title>
      <classname>SDO_Sequence</classname>
     </title>
     <para>
      L'interface avec laquelle on peut accéder aux objets de données en séquence
      pour préserver l'ordre parmi les propriétés de l'objet de
      données et pour permettre le texte non structuré.
      SDO_Sequence préserve les indices contigus et donc l'insertion ou la
      suppression d'éléments peut entraîner un décalage des autres éléments
      vers le haut ou vers le bas. En plus des méthodes ci-dessous,
      SDO_Sequence étend les interfaces ArrayAccess, Interator et Countable.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-sequence.getproperty">getProperty</link>
         : récupère la propriété pour un index de séquence donné
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-sequence.move">move</link>
         : déplace un élément d'un index vers un autre
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-sequence.insert">insert</link>
         : insère une nouvelle valeur dans la séquence
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-list">
     <title>
      <classname>SDO_List</classname>
     </title>
     <para>
      L'interface dans lequel les propriétés de plusieurs valeurs sont
      manipulées. En plus des méthodes définies ci-dessous, SDO_List étend
      ArrayAcces, Iterator et Countable. SDO_List préserve les indices
      contigus et donc l'insertion ou la suppression des éléments peut décaler
      les autres éléments vers le haut ou vers le bas.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-list.insert">insert</link> 
         : insertion d'une nouvelle valeur dans la liste
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-datafactory">
     <title>
      <classname>SDO_DataFactory</classname>
     </title>
     <para>
      L'interface dans lequel les objets de données peuvent être créés.
      Un Service d'Accès de Données est responsable de remplir le modèle
      (c'est-à-dire, la configuration des classe de données avec le type et
      les informations de structure pour les objets de données qu'elle peut
      créer.) pour les classes et peut alors optionnellement retourner une
      instance ou une implémentation de l'interface de SDO_DataFactory.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-datafactory.create">create</link> 
         : crée un nouvel objet de données
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
   </section>

   <section xml:id="class.sdo-exception">
    <title>
     <classname>SDO_Exception</classname>
    </title>
    <para>
     Une exception SDO_Exception est lancée lorsque la demande de l'appelant ne peut
     être honorée. Les sous classes de SDO_Exception sont :
     <itemizedlist>
      <listitem>
       <para>SDO_PropertyNotSetException -
        la propriété spécifiée existe mais n'a pas été définie ou n'a pas de valeur
        par défaut
       </para>
      </listitem>
      <listitem>
       <para>SDO_PropertyNotFoundException -
        la propriété spécifiée ne fait pas partie du type de l'objet de données
       </para>
      </listitem>
      <listitem>
       <para>SDO_TypeNotFoundException -
        l'URI d'espace de noms spécifiée ou le nom du type est inconnu
       </para>
      </listitem>
      <listitem>
       <para>SDO_InvalidConversionException -
        la conversion entre les types d'assignation n'est pas possible
       </para>
      </listitem>
      <listitem>
       <para>SDO_IndexOutOfBoundsException -
        l'index numérique d'un objet de données, d'une séquence ou d'une liste
        n'est pas dans un intervalle valide
       </para>
      </listitem>
      <listitem>
       <para>SDO_UnsupportedOperationException -
        la demande n'a pû être honorée car elle n'est pas autorisée,
        par exemple, une tentative de définition d'une propriété en lecture seule
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <section> &reftitle.methods;
     <para>
      Une méthode est ajoutée à celles héritées depuis la classe interne
      <link linkend="language.exceptions.extending">Exception</link> :
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <link linkend="sdo-exception.getcause">getCause</link>
        : récupère la cause de cette exception SDO_Exception
       </para>
      </listitem>
     </itemizedlist>
    </section>
    </section>



   <section xml:id="sdo.class.sdo-model-apis">
    <title>Interfaces de réflexion d'application pour programmer SDO</title>

    <section xml:id="class.sdo-model-reflectiondataobject">
     <title>
      <classname>SDO_Model_ReflectionDataObject</classname>
     </title>
     <para>
      L'interface principale est utilisée pour la réflexion d'une instance
      d'objet de données pour obtenir son type de modèle et les informations
      de propriété. Elle est désignée pour suivre le motif de réflexion
      introduit dans PHP 5.
     </para>
     <section>
      &reftitle.constructor;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.construct">__construct</link>
         : construit un nouvel SDO_Model_ReflectionDataObject.
        </para>
       </listitem>
      </itemizedlist>
     </section>
     <section>
       &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.export">export</link>
         : récupère une chaîne décrivant l'objet de données.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.gettype">getType</link>
         : récupère le SDO_Model_Type pour l'objet de données.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend=
          'sdo-model-reflectiondataobject.getinstanceproperties'>getInstanceProperties</link>
         : récupère les propriétés de l'instance de l'objet de données.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend=
          'sdo-model-reflectiondataobject.getcontainmentproperty'>getContainmentProperty</link>
         : récupère la propriété qui définit la relation contenue de l'objet de données.
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-model-type">
     <title>
      <classname>SDO_Model_Type</classname>
     </title>
     <para>
      L'interface dans lequel les informations de type de l'objet de données
      peuvent être récupérées. Cette interface peut être utilisée pour trouver
      le nom de type et l'espace de nom URI du type, si le type autorise
      l'ouverture du contenu, et ainsi de suite.
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getname">getName</link>
          : récupère le nom du type.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getnamespaceuri">getNamespaceURI</link>
         : récupère l'espace de nom URI du type.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isinstance">isInstance</link>
         : vérifie pour un objet de données s'il est une instance du type.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getproperties">getProperties</link>
         : récupère les propriétés du type.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getproperty">getProperty</link>
         : récupère une propriété de type.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isdatatype">isDataType</link>
         : vérifie pour voir si le type est une primitive de type scalaire.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.issequencedtype">isSequencedType</link>
         : vérifie pour voir s'il s'agit d'un type de séquence.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isopentype">isOpenType</link>
         : vérifie pour voir s'il s'agit d'un type ouvert.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isabstracttype">isAbstractType</link>
         : vérifie pour voir s'il s'agit d'un type d'abstraction.
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getbasetype">getBaseType</link>
         : récupère le type de base de ce type (si un existe).
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-model-property">
     <title>
      <classname>SDO_Model_Property</classname>
     </title>
     <para>
      L'interface dans lequel les informations de propriété d'objet peuvent
      être récupérées. Cette interface peut être utilisée pour trouver le type
      d'une propriété, si une propriété a une valeur par défaut, si une
      propriété est contenue ou référencée par son parent, sa cardinalité, et
      ainsi de suite.
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getname">getName</link>
          : récupère le nom de la propriété.
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.gettype">getType</link>
          : récupère le type de la propriété.
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.ismany">isMany</link>
          : vérifie pour voir si la propriété est de valeurs multiples.
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.iscontainment">isContainment</link>
          : vérifie pour voir si la propriété décrit une relation contenue.
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getcontainingtype">getContainingType</link>
          : récupère le type qui contient cette propriété.
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getdefault">getDefault</link>
          : récupère la valeur par défaut pour une propriété.
         </para>
        </listitem>
      </itemizedlist>
     </section>
    </section>

   </section>

   <section xml:id="sdo.class.sdo-das-spis">
    <title>
     Interfaces de développeur Service d'Accès de Données SDO
    </title>

    <section xml:id="class.sdo-das-dataobject">
     <title>
      <classname>SDO_DAS_DataObject</classname>
     </title>
     <para>
      L'interface dans lequel un Service d'Accès de Données peut accéder à 
      <link
      linkend="class.sdo-das-changesummary">SDO_DAS_ChangeSummary</link> de
      l'objet de données. Le résumé de changement est utilisé par le Service
      d'Accès de Données pour vérifier les conflits lors des applications des
      changements à une source de données.
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-dataobject.getchangesummary">getChangeSummary</link> 
         : récupère le résumé de changement pour un objet de données
        </para>
       </listitem>

      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-changesummary">
     <title>
      <classname>SDO_DAS_ChangeSummary</classname>
     </title>
     <para>
      L'interface dans lequel l'historique de changement d'un objet de données
      est accédé. Le résumé de changement contient des informations pour
      n'importe quelles modifications sur un objet de données qui s'est
      produites lorsque la journalisation a débuté. Dans le cas de suppression
      ou de modification, les dernières valeurs sont aussi gardées dans le
      résumé de changement.
     </para>
     <para>
      Si la journalisation n'est plus active, alors le résumé de changement
      contient seulement les changements faits jusqu'au point où la
      journalisation fut désactivée. La réactivation de la journalisation
      supprime le résumé de changement. Cela peut être utile lorsqu'un
      certain nombre de changements ont été écris par un DAS et un objet de
      données qui est réutilisé.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.beginlogging">beginLogging</link> 
         : démarre la journalisation des changements faits à l'objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.endlogging">endLogging</link> 
         : termine la journalisation des changements faits à l'objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.islogging">isLogging</link> 
         : vérifie pour voir si la journalisation des changements est activée
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getchangeddataobjects">getChangedDataObjects</link> 
         : récupère une liste de d'objets de données qui ont été changés
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getchangetype">getChangeType</link> 
         : récupère le type de changement qui a été fait à l'objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getoldvalues">getOldValues</link> 
         : récupère une liste des anciennes valeurs pour un objet de données
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getoldcontainer">getOldContainer</link> 
         : récupère un ancien conteneur d'objet de données pour un objet de données supprimé
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-setting">
     <title>
      <classname>SDO_DAS_Setting</classname>
     </title>
     <para>
      L'interface dans lequel l'ancienne valeur pour une propriété est
      accédée. Une liste des configurations est retournée par le résumé de
      changement dont la méthode est
      <link linkend="sdo-das-changesummary.getoldvalues">getOldValues</link>.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getpropertyindex">getPropertyIndex</link> 
         : récupère l'index pour la propriété changée
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getpropertyname">getPropertyName</link> 
         : récupère le nom pour la propriété changée
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getvalue">getValue</link> 
         : récupère l'ancienne valeur pour la propriété changée
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getlistindex">getListIndex</link> 
         : récupère la liste des index pour l'ancienne valeur si elle faisait
           partie d'une propriété à valeurs multiples
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.isset">isSet</link>
         : vérifie si la propriété était fixée avant d'être modifiée
         </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-datafactory">
     <title>
      <classname>SDO_DAS_DataFactory</classname>
     </title>
     <para>
      L'interface pour construire le modèle pour un SDO_DataObjet. Le
      SDO_DAS_DataFactory est une classe abstraite fournissant une méthode
      statique qui retourne une classe d'implémentation de données concrète.
      L'implémentation est utilisée par les Services d'Accès de Données pour
      créer un modèle SDO à partir de leur modèle.
      Par exemple, un Service d'Accès de Données Relationnel peut créer et
      remplir un modèle SDO_DAS_DataFactory basé sur un schéma pour une base
      de données relationnelle.
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.getdatafactory">getDataFactory</link> 
         : méthodes statiques pour obtenir une instance de classe concrète de
           données
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.addtype">addType</link> 
         : ajoute un nouveau type au modèle SDO
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.addpropertytotype">addPropertyToType</link> 
         : ajoute une nouvelle propriété à une définition de type dans le
           modèle SDO
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
   </section>
  </section>

 </partintro>

 &reference.sdo.entities.sdo-das-changesummary;
 &reference.sdo.entities.sdo-das-datafactory;
 &reference.sdo.entities.sdo-das-dataobject;
 &reference.sdo.entities.sdo-das-setting;
 &reference.sdo.entities.sdo-datafactory;
 &reference.sdo.entities.sdo-dataobject;
 &reference.sdo.entities.sdo-exception;
 &reference.sdo.entities.sdo-list;
 &reference.sdo.entities.sdo-model-property;
 &reference.sdo.entities.sdo-model-reflectiondataobject;
 &reference.sdo.entities.sdo-model-type;
 &reference.sdo.entities.sdo-sequence;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->