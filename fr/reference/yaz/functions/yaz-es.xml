<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes Maintainer: yannick -->

<refentry xml:id="function.yaz-es" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>yaz_es</refname>
  <refpurpose>Prépare pour une Requête de Service Étendu</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>yaz_es</methodname>
   <methodparam>
    <type>resource</type><parameter>id</parameter>
   </methodparam>
   <methodparam>
    <type>string</type><parameter>type</parameter>
   </methodparam>
   <methodparam>
    <type>array</type><parameter>args</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Cette fonction prépare pour une Requête de Service Étendu.
   Les Services Étendus sont de la famille des nombreux Z39.50, 
   comme <literal>"Record Update"</literal>, <literal>"Item Order"</literal>,
   <literal>"Database administration"</literal>, etc.
  </para>
  <note>
   <para>
    Il existe des serveurs Z39.50 qui ne supportent pas les Services Étendus.
   </para>
  </note>
  <para>
   La fonction <function>yaz_es</function> crée des paquets d'une Requête de
   Service Étendu et les place dans une file d'attente d'opérations.
   Utilisez <function>yaz_wait</function> pour envoyer la/les requête(s) au
   serveur.
   À la fin de <function>yaz_wait</function>, le résultat de l'opération de
   Service Étendu devrait être obtenu avec un appel à
   <function>yaz_es_result</function>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       La ressource de connexion retournée par
       <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Une &string; représentant le type de Service Étendu :
       <literal>itemorder</literal> (Item Order),
       <literal>create</literal> (Create Database),
       <literal>drop</literal> (Drop Database),
       <literal>commit</literal> (Commit Operation),
       <literal>update</literal> (Update Record),
       <literal>xmlupdate</literal> (XML Update).
       Chaque type est spécifié dans la section suivante.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Un tableau avec les options de service étendu et les options
       spécifiques du paquet. Les options sont identiques à celles offertes
       par l'API C de ZOOM C. Reportez-vous à ZOOM
       <link xlink:href="&url.yaz.zoom.ext;">Services Étendus</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Mise à Jour d'Enregistrements</title>
   <programlisting role="php">
<![CDATA[
<?php
$con = yaz_connect("myhost/database");
$args = array (
    "record" => "<gils><title>un titre</title></gils>",
    "syntax" => "xml",
    "action" => "specialUpdate"
);
yaz_es($con, "update", $args);
yaz_wait();
$result = yaz_es_result($id);
?>
]]>
   </programlisting>
   </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>yaz_es_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
