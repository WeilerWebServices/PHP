<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328734 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.mysql-fetch-field" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_fetch_field</refname>
  <refpurpose>
   Retourne les données enregistrées dans une colonne MySQL
   sous forme d'objet
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_fetch_field</function></member>
    <member><methodname>PDOStatement::getColumnMeta</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mysql_fetch_field</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>field_offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retourne un objet contenant les informations sur les champs.
   Cette fonction peut être utilisée pour obtenir des informations sur les 
   champs de la requête fournie <parameter>result</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem>
      <para>
       La position numérique du champ. Si la position du champ n'est pas spécifiée,
       le champ suivant qui n'a pas encore été récupéré par cette fonction est alors
       récupéré. <parameter>field_offset</parameter> commence à <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un &object; contenant les informations sur les champs.
   Les propriétés de l'objet sont les suivantes :
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      <literal>"name"</literal> : nom de la colonne
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"table"</literal> : nom de la table pour la colonne, qui pourra
      être l'alias si un alias a été défini.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"max_length"</literal> : taille maximale de la colonne
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"not_null"</literal> : 1 si la colonne ne peut pas être &null;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"primary_key"</literal> : 1 si la colonne est une clé primaire
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"unique_key"</literal> : 1 si la colonne est une clé unique
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"multiple_key"</literal> : 1 si la colonne est une clé non unique
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"numeric"</literal> : 1 si la colonne est numérique
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"blob"</literal> : 1 si la colonne est BLOB
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"type"</literal> : le type de la colonne
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"unsigned"</literal> : 1 si la colonne est non signée
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <literal>"zerofill"</literal> : 1 si la colonne est complétée par des zéro
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mysql_fetch_field</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$conn) {
   die('Impossible de se connecter : ' . mysql_error());
}
mysql_select_db('database');
$result = mysql_query('select * from table');
if (!$result) {
   die('Échec de la requête : ' . mysql_error());
}
/* Lecture des méta données de la colonne */
$i = 0;
while ($i < mysql_num_fields($result)) {
   echo "Détails sur la colonne $i:<br />\n";
   $meta = mysql_fetch_field($result, $i);
   if (!$meta) {
      echo "Aucun détail disponible<br />\n";
   }
   echo "<pre>
    blob:         $meta->blob
    max_length:   $meta->max_length
    multiple_key: $meta->multiple_key
    name:         $meta->name
    not_null:     $meta->not_null
    numeric:      $meta->numeric
    primary_key:  $meta->primary_key
    table:        $meta->table
    type:         $meta->type
    unique_key:   $meta->unique_key
    unsigned:     $meta->unsigned
    zerofill:     $meta->zerofill
   </pre>";
   $i++;
}
mysql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &database.field-case;
  <note>
   <para>
    Si les champs ou les noms de table utilisent un alias dans
    la requête SQL, le nom utilisé dans l'alias sera retourné.
    Le nom original peut être récupéré en utilisant la méthode
    <methodname>mysqli_result::fetch_field</methodname>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_field_seek</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
