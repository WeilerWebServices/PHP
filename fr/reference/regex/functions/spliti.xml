<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338425 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.spliti">
 <refnamediv>
  <refname>spliti</refname>
  <refpurpose>Scinde une chaîne en un tableau, grâce à une expression rationnelle</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member>
     <function>preg_split</function>
     (avec le modificateur <literal>i</literal> (<constant>PCRE_CASELESS</constant>))
    </member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>spliti</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Scinde la chaîne <parameter>string</parameter> dans un tableau,
   par expression rationnelle.
  </para>
  <para>
   Cette fonction est identique à <function>split</function>,
   hormis le fait qu'elle ignore la casse pour les caractères alphabétiques.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Expression rationnelle insensible à la casse.
      </para>
      <para>
       Si vous voulez effectuer la césure avec un caractère qui est considéré
       comme spécial par les expressions rationnelles, vous devez d'abord
       l'échapper. Si vous pensez que la fonction <function>spliti</function>
       (ou tout autre fonction regex) fait quelque chose de bizarre,
       lisez le fichier <filename>regex.7</filename>, inclus dans le sous-dossier
       <filename>regex/</filename> de la distribution PHP. Ce fichier est au format
       man, vous devrez donc utiliser la commande
       <command>man /usr/local/src/regex/regex.7</command> pour le lire.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La chaîne d'entrée.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Si <parameter>limit</parameter> est défini, le tableau retourné
       contiendra un maximum de <parameter>limit</parameter> éléments,
       dont le dernier élément contient le reste de la chaîne
       <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau de chaînes, dont chaque élément est une
   sous-chaîne de <parameter>string</parameter>, formée par la césure
   réalisée grâce l'expression rationnelle <parameter>pattern</parameter>.
  </para>
  <para>
   S'il y a <replaceable>n</replaceable> occurrences de
   <parameter>pattern</parameter>, le tableau retourné contiendra
   <literal><replaceable>n</replaceable>+1</literal> éléments. Par exemple,
   s'il n'y a pas d'occurrence de <parameter>pattern</parameter>, un tableau
   avec un seul élément sera retourné. Évidemment, ceci est également vrai
   si la chaîne <parameter>string</parameter> est vide. Si une erreur survient,
   <function>spliti</function> retourne &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Scinder une chaîne en utilisant la lettre 'a' comme
   séparateur :
   <example>
    <title>Exemple avec <function>spliti</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = "aBBBaCCCADDDaEEEaGGGA";
$chunks = spliti ("a", $string, 5);
print_r($chunks);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
  [0] =>
  [1] => BBB
  [2] => CCC
  [3] => DDD
  [4] => EEEaGGGA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>split</function></member>
    <member><function>explode</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
