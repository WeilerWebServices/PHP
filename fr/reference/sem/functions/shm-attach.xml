<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350655 Maintainer: jpauli Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.shm-attach">
 <refnamediv>
  <refname>shm_attach</refname>
  <refpurpose>Crée ou ouvre un segment de mémoire partagée</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>shm_attach</methodname>
   <methodparam><type>int</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>memsize</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>perm</parameter><initializer>0666</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>shm_attach</function> retourne un identifiant qui
   permettra d'accéder à la mémoire partagée de type System V.
   Au premier appel, la mémoire sera
   créée, avec la taille <parameter>memsize</parameter>
   et avec les permissions <parameter>perm</parameter>
  </para>
  <para>
   Aux appels suivants avec la même clé
   <parameter>key</parameter>, <function>shm_attach</function>
   retournera un nouvel identifiant, mais cet identifiant
   accédera toujours à la même portion de
   mémoire partagée. Dans ce cas, <parameter>memsize</parameter>
   et <parameter>perm</parameter> seront ignorés.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Un identifiant numérique de la mémoire partagée
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>memsize</parameter></term>
     <listitem>
      <para>
       La taille mémoire. S'il n'est pas fourni, vaut par défaut
       la valeur de <literal>sysvshm.init_mem</literal> du fichier
       &php.ini;, sinon 10000 octets.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>perm</parameter></term>
     <listitem>
      <para>
       Les permissions (optionnelles). Par défaut, vaut 0666.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un identifiant de mémoire partagée.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Puisque cette fonction retourne un entier avant PHP 5.3.0,
    pour assurer la portabilité, le retour de la fonction peut
    être casté en entier:
   </para>
   <para>
    <example>
     <programlisting role="php">
<![CDATA[
<?php
// Crée un fichier temporaire et retourne son chemin
$tmp = tempnam('/tmp', 'PHP');

// Récupère le jeton du fichier
$key = ftok($tmp, 'a');

// Attache la ressource SHM resource, notez le cast après
$id = shm_attach($key);

if($id === false) {
   die('Unable to create the shared memory segment');
}

// Cast vers l'entier, car depuis PHP 5.3.0 l'id de ressource
// est retourné et il peut être utilisé pour le cast en entier
$id = (integer) $id;
?>
]]>
     </programlisting>
    </example>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>shm_detach</function></member>
    <member><function>ftok</function></member>
   </simplelist>
  </para>
 </refsect1>  
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->