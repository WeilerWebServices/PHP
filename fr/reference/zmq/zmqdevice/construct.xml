<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333612 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="zmqdevice.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZMQDevice::__construct</refname>
  <refpurpose>Construit un nouveau périphérique</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <methodname>ZMQDevice::__construct</methodname>
   <methodparam><type>ZMQSocket</type><parameter>frontend</parameter></methodparam>
   <methodparam><type>ZMQSocket</type><parameter>backend</parameter></methodparam>
   <methodparam choice="opt"><type>ZMQSocket</type><parameter>listener</parameter></methodparam>
  </methodsynopsis>
  <para>
   "Les périphériques ØMQ peuvent effectuer une médiation entre les
   adresses, les services, les files d'attente ou toute autre abstraction
   pour définir le message et l'interface des sockets." -- zguide
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>frontend</parameter></term>
    <listitem>
     <para>
      Paramètre Frontend pour le périphérique. Habituellement le lieu
      d'arrivée des messages.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>backend</parameter></term>
    <listitem>
     <para>
      Paramètre Backend pour le périphérique. Habituellement le lieu
      de départ des messages.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>listener</parameter></term>
    <listitem>
     <para>
      Socket d'écoute, qui recoit une copie de tous les messages
      entrants et sortants. Le type de ce socket doit être
      SUB, PULL ou DEALER.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   L'appel à cette méthode va préparer le périphérique. Habituellement,
   les périphériques sont des processus qui s'exécutent pendant beaucoup
   de temps, aussi l'exécution de cette méthode depuis un script interactiv
   n'est pas recommandé. Cette méthode lance une exception ZMQDeviceException
   si le périphérique ne peut être lancé.
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
