<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346866 Maintainer: jbnahan Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.win32-query-service-status" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>win32_query_service_status</refname>
  <refpurpose>Questionne le statut d'un service</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>win32_query_service_status</methodname>
   <methodparam><type>string</type><parameter>servicename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>machine</parameter></methodparam>
  </methodsynopsis>
  <para>
   Questionne le statut courant pour un service, retournant un tableau
   d'informations.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>servicename</parameter></term>
     <listitem>
      <para>
       Le nom court du service.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>machine</parameter></term>
     <listitem>
      <para>
       Le nom optionnel de la machine.
       Si oublié, cela utilisera la machine locale.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne un tableau contenant les informations suivantes en
   cas de succès, &win32service.false.error;
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ServiceType</parameter></term>
     <listitem>
      <para>
       Le dwServiceType. Voir les 
       <link linkend="win32service.constants.servicetype">masques de type de
       service Win32Service</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>CurrentState</parameter></term>
     <listitem>
      <para>
       Le dwCurrentState. Voir les
       <link linkend="win32service.constants.servicestatus">constantes de statut
       des services Win32Service</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ControlsAccepted</parameter></term>
     <listitem>
      <para>
       Quels contrôles de service sont acceptés par le service. Voir
       les <link linkend="win32service.constants.controlsaccepted">masques
       acceptés pour les messages de contrôle de service Win32Service</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>Win32ExitCode</parameter></term>
     <listitem>
      <para>
       Si le service quitte, le code de retour du processus. Cette valeur est égale 
       à <constant>WIN32_ERROR_SERVICE_SPECIFIC_ERROR</constant> si le mode de 
       sortie n'est pas gracieux. Voir 
       <link linkend="win32service.constants.errors">codes d'erreur Win32Service</link> 
       et <function>win32_set_service_exit_mode</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ServiceSpecificExitCode</parameter></term>
     <listitem>
      <para>
       Si le service quitte avec une condition d'erreur, le code spécifique du
       service qui sera enregistré dans le journal d'évènements est visible ici.
       Cette valeur est égale à la valeur définie par  
       <function>win32_set_service_exit_code</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>CheckPoint</parameter></term>
     <listitem>
      <para>
       Si le service s'arrête, garde le nombre courant de point de contrôle.
       Ceci est utilisé par SCM comme un genre de battement de coeur pour
       détecter un processus de service arrêté. La valeur du point de contrôle
       est mieux interprétée en conjonction avec la valeur WaitHint.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>WaitHint</parameter></term>
     <listitem>
      <para>
       Si le service s'arrête, il fixera un WaitHint à une valeur de point de
       contrôle qui indiquera l'exécution 100%. Cela peut être utilisé pour
       implanter un indicateur de progrès.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ProcessId</parameter></term>
     <listitem>
      <para>
       L'identifiant de processus de fenêtre. Si 0, le processus ne fonctionne
       pas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ServiceFlags</parameter></term>
     <listitem>
      <para>
       Le dwServiceFlags. Voir les
       <link linkend="win32service.constants.serviceflag">constantes
        utilisées pour les drapeaux des services Win32Service</link>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Les <link linkend="win32service.constants">constantes Win32Service prédéfinies</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->