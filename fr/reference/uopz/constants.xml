<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351133 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="uopz.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  Les opcodes suivants sont définis comme des constantes par uopz avant 5.0.0 :
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-exit">
    <term>
     <constant>ZEND_EXIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoque exit() et die() ; réceptionne aucun argument.
      Retourne &true; pour sortir, &false; pour continuer
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-new">
    <term>
     <constant>ZEND_NEW</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué par la construction d'un objet, reçoit l'objet de la classe créée comme
      seul argument
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-throw">
    <term>
     <constant>ZEND_THROW</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué par la structure throw, reçoit l'exception de la classe émise comme seul argument
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-fetch-class">
    <term>
     <constant>ZEND_FETCH_CLASS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué lors d'une composition, recoit la classe, le nom de la classe récupérée comme seul argument
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-add-trait">
    <term>
     <constant>ZEND_ADD_TRAIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué lors d'une composition, recoit la classe dans laquelle le trait sera ajouté, comme premier
      argument, et le nom du trait comme second argument
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-add-interface">
    <term>
     <constant>ZEND_ADD_INTERFACE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué lors d'une composition, recoit la classe dans laquelle l'interface sera ajoutée comme premier
      argument, et le nom de l'interface comme second argument
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-instanceof">
    <term>
     <constant>ZEND_INSTANCEOF</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Invoqué par l'opérateur instanceof, recoit l'objet a vérifier comme premier argument,
      et le nom de la classe dont l'objet appartient comme second argument
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  Les constantes suivantes contrôlent le comportement du VM après qu'un gestionnaire utilisateur ne
  soit appelé ; soyez extrêmement prudent !
  Ces constantes sont supprimées à partir de uopz 5.0.0.
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-user-opcode-continue">
    <term>
     <constant>ZEND_USER_OPCODE_CONTINUE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Avance d'un opcode, et continue
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-enter">
    <term>
     <constant>ZEND_USER_OPCODE_ENTER</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Entre dans un nouvel op_array sans récursion
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-leave">
    <term>
     <constant>ZEND_USER_OPCODE_LEAVE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Retourne l'op_array appelé dans le même exécuteur
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-dispatch">
    <term>
     <constant>ZEND_USER_OPCODE_DISPATCH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Dispatche le gestionnaire opcode original
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-dispatch-to">
    <term>
     <constant>ZEND_USER_OPCODE_DISPATCH_TO</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Dispoatche à un gestionnaire spécifique
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-user-opcode-return">
    <term>
     <constant>ZEND_USER_OPCODE_RETURN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Sort de l'exécuteur (retourne à la fonction)
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  Les modificateurs suivants sont enregistrés comme constantes par uopz
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.zend-acc-public">
    <term>
     <constant>ZEND_ACC_PUBLIC</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Marque une fonction comme publique, le comportement par défaut
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-protected">
    <term>
     <constant>ZEND_ACC_PROTECTED</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Marque une fonction comme protégée
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-private">
    <term>
     <constant>ZEND_ACC_PRIVATE</constant>
     (<type>int</type>)
    </term>   
    <listitem>
     <simpara> 
      Marque une fonction comme privée          
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-static">
    <term>
     <constant>ZEND_ACC_STATIC</constant>
     (<type>int</type>)
    </term>   
    <listitem>
     <simpara> 
      Marque une fonction comme statique        
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-final">
    <term>
     <constant>ZEND_ACC_FINAL</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>  
      Marque une fonction comme finale
     </simpara>
    </listitem> 
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-abstract">
    <term>
     <constant>ZEND_ACC_ABSTRACT</constant>
     (<type>int</type>)
    </term>   
    <listitem>  
     <simpara>
      Marque une fonction comme abstraite
     </simpara> 
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-class">
    <term>
     <constant>ZEND_ACC_CLASS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Enregistrement pour la consistence, l'entrée par défaut d'une classe.
      Supprimée à partir de uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-interface">
    <term>
     <constant>ZEND_ACC_INTERFACE</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>  
      Marque la classe comme étant une interface.
      Supprimée à partir de uopz 5.0.0.
     </simpara>
    </listitem> 
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-trait">
    <term>
     <constant>ZEND_ACC_TRAIT</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>  
      Marque la classe comme étant trait.
      Supprimée à partir de uopz 5.0.0.
     </simpara>
    </listitem> 
   </varlistentry>
   <varlistentry xml:id="constant.zend-acc-fetch">
    <term>
     <constant>ZEND_ACC_FETCH</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Utilisé pour récupérer seulement les drapeaux.
      Supprimée à partir de uopz 5.0.0.
     </simpara>
    </listitem>
   </varlistentry>

  </variablelist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
