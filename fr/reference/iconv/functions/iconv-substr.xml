<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341328 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.iconv-substr" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>iconv_substr</refname>
  <refpurpose>Coupe une partie de chaîne</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>iconv_substr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>iconv_strlen($str, $charset)</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>charset</parameter><initializer>ini_get("iconv.internal_encoding")</initializer></methodparam>
  </methodsynopsis>
  <para>
   Coupe une partie de la chaîne <parameter>str</parameter> à partir
   de la position <parameter>offset</parameter> et d'une longueur de
   <parameter>length</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       La &string; originale.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Si <parameter>offset</parameter> n'est pas négatif,
       <function>iconv_substr</function> retourne le segment de
       <parameter>str</parameter> en commençant au caractère numéro 
       <parameter>offset</parameter>, en comptant à partir de zéro.
      </para>
      <para>
       Si <parameter>offset</parameter> est négatif,
       <function>iconv_substr</function> retourne le segment en commençant à la
       position <parameter>offset</parameter> caractères et en allant vers la
       fin de la &string; <parameter>str</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Si le paramètre <parameter>length</parameter> est donné et positif, la
       valeur retournée contiendra au plus <parameter>length</parameter> caractères
       de la portion de chaîne qui commence à <parameter>offset</parameter>
       (en fonction de la taille de la chaîne <parameter>string</parameter>).
      </para>
      <para>
       Si <parameter>length</parameter> est passé et négatif,
       <function>iconv_substr</function> coupe la portion externe de
       <parameter>str</parameter> depuis le caractère numéro <parameter>offset</parameter>
       jusqu'au caractère numéro <parameter>length</parameter>, compté depuis la fin de
       la &string;. Dans le cas où <parameter>offset</parameter> est également négatif,
       la position de départ est calculée en amont, suivant la règle expliquée plus haut.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>charset</parameter></term>
     <listitem>
      <para>
       Si <parameter>charset</parameter> est omis,
       <parameter>string</parameter> est supposé avoir été encodée en
       <link linkend="iconv.configuration">iconv.internal_encoding</link>.
      </para>
      <para>
       Notez que <parameter>offset</parameter> et <parameter>length</parameter>
       sont toujours considérés comme représentant une position calculée sur la représentation ASCII
       des caractères déterminés par <parameter>charset</parameter>, contrairement à
       <function>substr</function> qui se base toujours sur la position par octet.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la portion de <parameter>str</parameter> spécifié par les paramètres
   <parameter>offset</parameter> et <parameter>length</parameter>.
  </para>
  <para>
   Si <parameter>str</parameter> est plus petit que <parameter>offset</parameter>,
   &false; sera retourné.
   Si <parameter>str</parameter> est égal à <parameter>offset</parameter>
   charactères long, une &string; vide sera retourné.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.11</entry>
       <entry>
        Si <parameter>str</parameter> est égal à
        <parameter>offset</parameter> charactères long, une chaine vide sera
        retourné. Antérieur à cette version, &false; était retourné dans ce cas.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>substr</function></member>
    <member><function>mb_substr</function></member>
    <member><function>mb_strcut</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->