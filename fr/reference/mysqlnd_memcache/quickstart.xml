<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328862 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<chapter xml:id="mysqlnd-memcache.quickstart" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Démarrage rapide et exemples</title>
 <para>
  Le plugin mysqlnd memcache est très simple d'utilisation.
  Ce démarrage rapide va vous présenter quelques utilisations typiques, et vous
  fournir également quelques avertissements.
 </para>
 <para>
  Il est vivement recommandé de lire les sections de référence en plus de ce document.
  Le démarrage rapide ne va pas aborder les concepts théoriques ainsi que les
  limitations. Au lieu de cela, il vous renverra vers les sections de référence.
  Il est plus prudent de commencer par le démarrage rapide. Cependant, avant l'utilisation
  de ce plugin dans des environnements cruciaux, nous vous recommandons vivement
  de lire d'autres informations internes que vous trouverez dans les sections
  de référence.
 </para>
 <section xml:id="mysqlnd-memcache.quickstart.configuration">
  <title>Mise en place</title>
  <para>
   Le plugin est implémenté sous la forme d'une extension PHP. Voir aussi
   les <link linkend="mysqlnd-memcache.installation">instructions d'installation</link>
   pour installer cette extension.
  </para>
  <para>
   Compilez ou configurez l'extension PHP MySQL (API) (<link linkend="ref.mysqli">mysqli</link>,
   <link linkend="ref.pdo-mysql">PDO_MYSQL</link>, ou <link linkend="ref.mysql">mysql</link>).
   Cette extension doit utiliser la bibliothèque <link linkend="book.mysqlnd">mysqlnd</link>
   car mysqlnd_memcache est un plugin pour la bibliothèque mysqlnd.
   Pour plus d'informations, référez-vous aux
   <link linkend="memcached.installation">instructions d'installation mysqlnd_memcache</link>.
  </para>
  <para>
   Ensuite, chargez cette extension dans PHP, et activez le plugin dans le fichier de
   configuration PHP, en utilisant la directive de configuration
   <link linkend="ini.mysqlnd-memcache.enable">mysqlnd_memcache.enable</link>.
  </para>
  <para>
   <example>
    <title>Activation du plugin (php.ini)</title>
    <programlisting role="ini">
<![CDATA[
; Sous Windows, le nom du fichier est php_mysqnd_memcache.dll
; Charge l'extension
extension=mysqlnd_memcache.so
; L'active
mysqlnd_memcache.enable=1
]]>
    </programlisting>
    </example>
  </para>
  <para>
   Suivez les instructions fournies dans le <link xlink:href="&url.mysql.docs.memcached;">
   manuel de référence MySQL sur l'installation des plugins Memcache</link> pour le
   serveur MySQL. Activez le plugin et configure l'accès Memcache aux tables SQL.
  </para>
  <para>
   Les exemples dans le guide de démarrage rapide assume que les tables suivantes existent,
   et que Memcache est configuré pour y accéder.
  </para>
  <para>
   <example>
    <title>Table SQL utilisée dans le démarrage rapide</title>
    <programlisting role="sql">
<![CDATA[
CREATE TABLE test(
  id CHAR(16),
  f1 VARCHAR(255),
  f2 VARCHAR(255),
  f3 VARCHAR(255),
  flags INT NOT NULL,
  cas_column INT,
  expire_time_column INT,
  PRIMARY KEY(id)
  ) ENGINE=InnoDB;

INSERT INTO test (id, f1, f2, f3) VALUES (1, 'Hello', 'World', '!');
INSERT INTO test (id, f1, f2, f3) VALUES (2, 'Lady', 'and', 'the tramp');

INSERT INTO innodb_memcache.containers(
  name, db_schema, db_table, key_columns, value_columns, 
  flags, cas_column, expire_time_column, unique_idx_name_on_key)
VALUES (
  'plugin_test', 'test', 'test', 'id', 'f1,f2,f3',
  'flags', 'cas_column', 'expire_time_column', 'PRIMARY KEY');
]]>
    </programlisting>
   </example>
  </para>
 </section>
 <section xml:id="mysqlnd-memcache.quickstart.usage">
  <title>Utilisation</title>
  <para>
   Après association d'une connexion MySQL avec une connexion Memcache en
   utilisant la fonction <function>mysqnd_memcache_set</function>, le plugin
   tente de remplacer de façon transparente les requêtes SQL de type <literal>SELECT</literal>
   par un accès memcache. Dans ce but, le plugin surveille toutes les requêtes
   SQL exécutées et tente de faire correspondre chaque chaîne de requête
   avec l'expression rationnelle <constant>MYSQLND_MEMCACHE_DEFAULT_REGEXP</constant>.
   Dans le cas d'une correspondance, le plugin mysqlnd memcache vérifie si la
   requête <literal>SELECT</literal> tente d'accéder qu'à des colonnes d'une table
   mappée et la clause <literal>WHERE</literal> se limite à une seule clé de recherche.
  </para>
  <para>
   Dans le cas de la table SQL d'exemple, le plugin utilisera l'interface Memcache
   du serveur MySQL pour récupérer les résultats pour une requête SQL comme :
   <literal>SELECT f1, f2, f3 WHERE id = n</literal>.
  </para>
  <para>
   <example>
    <title>Exemple simple</title>

    <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("host", "user", "passwd", "database");
$memc = new Memcached();
$memc->addServer("host", 11211);
mysqlnd_memcache_set($mysqli, $memc);

/* Requête de la table test en utilisant l'ID comme clé dans la clause
   WHERE et accès des champs f1, f2 et f3. Toutefois, mysqlnd_memcache
   va l'intercepter et l'envoyer via memcache.
*/
$result = $mysqli->query("SELECT f1, f2, f3 FROM test WHERE id = 1");
while ($row = $result->fetch_row()) {
    print_r($row);
}
/* Requête de la table test mais en utilisant f1 dans la clause WHERE.
   Toutefois, mysqlnd_memcache ne peut pas l'intercepter. Elle sera exécutée
   en utilisant le protocole MySQL
*/
$mysqli->query("SELECT id FROM test WHERE f1 = 'Lady'");
while ($row = $result->fetch_row()) {
    print_r($row);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(
    [f1] => Hello
    [f2] => World
    [f3] => !
)
array(
    [id] => 2
)
]]>
    </screen>
   </example>
  </para>

 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
