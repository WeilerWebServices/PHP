<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351135 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.mcrypt-get-key-size" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_get_key_size</refname>
  <refpurpose>Retourne la taille de la clé de chiffrement</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0.removed-7-2-0;
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>mcrypt_get_key_size</methodname>
   <methodparam><type>int</type><parameter>cipher</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>mcrypt_get_key_size</methodname>
   <methodparam><type>string</type><parameter>cipher</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   La première syntaxe utilise libmcrypt 2.2.x, et la seconde
   libmcrypt 2.4.x ou plus récent.
  </para>
  <para>
   <function>mcrypt_get_key_size</function> sert à lire la taille de
   clé du chiffrement <parameter>cipher</parameter>.
  </para>
  <para>
   Il est plus intéressant d'utiliser la fonction
   <function>mcrypt_enc_get_key_size</function> sachant qu'elle utilise la ressource
   retournée par la fonction <function>mcrypt_module_open</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>cipher</parameter></term>
     <listitem>
      &mcrypt.parameter.cipher;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      &mcrypt.parameter.mode;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la taille maximale supportée pour une clé de l'algorithme, en octets
   &return.falseforfailure;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mcrypt_get_key_size</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo mcrypt_get_key_size('tripledes', 'ecb');
?>
]]>
    </programlisting>
    <para>
     L'exemple ci-dessus montre l'utilisation de la fonction
     lorsqu'elle a été compilée avec la bibliothèque
     2.4.x ou 2.5.x.
    </para>
    &example.outputs;
    <screen>
<![CDATA[
24
]]>
    </screen>
   </example>   
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_get_block_size</function></member>
    <member><function>mcrypt_enc_get_key_size</function></member>
    <member><function>mcrypt_encrypt</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
