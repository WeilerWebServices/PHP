<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: gui Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="phar.creating" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Créer des archives Phar</title>

 <section xml:id="phar.creating.intro" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Créer des archives Phar : Introduction</title>
 <para>
  Sera entièrement écrit plus tard. Avant de lire ceci, soyez sûr de lire
  <link linkend="phar.using">Comment utiliser des archives Phar</link>.
 </para>
 <para>
  Se documenter sur <function>Phar::buildFromIterator</function> et les spécificités des choix de
  <link linkend="phar.fileformat">format de fichier</link> disponibles pour les archives peut être
  un bon début. Une bonne compréhension de ce qu'est et de ce que fait un conteneur (stub) est
  cruciale pour la création d'archive phar, ce qui fait de <function>Phar::setStub</function> et
  <function>Phar::createDefaultStub</function> également un bon point de départ.
  Si vous distribuez des applications web, il est important de connaître 
  <function>Phar::webPhar</function> et la méthode associée 
  <function>Phar::mungServer</function>. Toute application qui accède à ses propres fichiers
  devrait aussi considérer l'utilisation de <function>Phar::interceptFileFuncs</function>.
 </para>
</section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
