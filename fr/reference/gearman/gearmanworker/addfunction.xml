<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333267 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="gearmanworker.addfunction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanWorker::addFunction</refname>
  <refpurpose>Enregistre et ajoute une fonction de rappel</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>GearmanWorker::addFunction</methodname>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>callable</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">context</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
  </methodsynopsis>
  <para>
   Enregistre une fonction de rappel avec le serveur de travaux
   et spécifie un rappel correspondant à cette fonction. Optionnellement,
   fixe des données de contexte de l'application à utiliser lorsque
   la fonction de rappel est appelée, ainsi qu'un délai maximal d'exécution.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       Le nom de la fonction à enregistrer avec le serveur de travaux
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       Une fonction de rappel à appeler lorsqu'un travail est soumis
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Une référence à des données de contexte de l'application
       qui peuvent être modifiées par la fonction de l'agent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Un intervalle de temps, en secondes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Agent simple qui utilise des données de contexte de l'application</title>
    <programlisting role="php">
<![CDATA[
<?php

# Crée un agent Gearman
$worker= new GearmanWorker(); 

# Ajoute le serveur par défaut (localhost)
$worker->addServer(); 

# Définit une variable qui contient les données de l'application
$count= 0; 

# Ajoute la fonction "reverse"
$worker->addFunction("reverse", "reverse_cb", $count);

# Démarre l'agent
while ($worker->work());

function reverse_cb($job, &$count) 
{ 
  $count++; 
  return "$count: " . strrev($job->workload()); 
} 

?>
]]>
    </programlisting>
    <para>
     Exécution d'un client qui soumet 2 travaux pour la fonction reverse affichera
     quelque chose comme :
    </para>
    <screen>
<![CDATA[
1: olleh
2: dlrow
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::do</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
