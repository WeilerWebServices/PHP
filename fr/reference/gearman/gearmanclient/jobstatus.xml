<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="gearmanclient.jobstatus" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::jobStatus</refname>
  <refname>gearman_job_status</refname>
  <refpurpose>Récupère le statut d'un travail en arrière-plan</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (méthode) :</para>
   <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>GearmanClient::jobStatus</methodname>
   <methodparam><type>string</type><parameter>job_handle</parameter></methodparam>
   </methodsynopsis>
   <para>
    Récupère le statut d'un travail en arrière-plan pour le gestionnaire de
    travaux fourni. Les informations de statut spécifient si le travail est connu,
    si le travail est actuellement en cours d'exécution, ainsi que le pourcentage
    de réalisation.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>job_handle</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.jobhandle;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un tableau contenant les informations de statut pour le travail
   correspondant au gestionnaire de travaux fourni. Le premier élément est un
   booléen indiquant si le travail est connu, le second est un booléen indiquant
   si le travail est en cours d'exécution, le troisième et le quatrième
   correspondent au numérateur et dénominateur du pourcentage de réalisation.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Surveille le statut d'un travail en arrière-plan mettant du temps à s'exécuter</title>
    <programlisting role="php">
<![CDATA[
<?php

/* Crée un client */
$gmclient= new GearmanClient();

/* Ajoute un serveur par défaut */
$gmclient->addServer();

/* Exécute le client */
$job_handle = $gmclient->doBackground("reverse", "this is a test");

if ($gmclient->returnCode() != GEARMAN_SUCCESS)
{
  echo "Mauvais code retour\n";
  exit;
}

$done = false;
do
{
   sleep(3);
   $stat = $gmclient->jobStatus($job_handle);
   if (!$stat[0]) // le travail est connu, signifiant qu'il n'est pas terminé
      $done = true;
   echo "Exécution : " . ($stat[1] ? "true" : "false") . ", numérateur : " . $stat[2] . ", dénominateur : " . $stat[3] . "\n";
}
while(!$done);

echo "fait !\n";

?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
Exécution : true, numérateur : 3, dénominateur : 14
Exécution : true, numérateur : 6, dénominateur : 14
Exécution : true, numérateur : 9, dénominateur : 14
Exécution : true, numérateur : 12, dénominateur : 14
Exécution : false, numérateur : 0, dénominateur : 0
fait !
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::doStatus</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
