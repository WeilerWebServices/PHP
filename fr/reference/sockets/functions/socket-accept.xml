<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.socket-accept">
 <refnamediv>
  <refname>socket_accept</refname>
  <refpurpose>Accepte une connexion sur un socket</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>socket_accept</methodname>
   <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
  </methodsynopsis>
  <para>
   Une fois que le socket <parameter>socket</parameter> a été créé avec la
   fonction <function>socket_create</function>, lié à un nom avec la fonction
   <function>socket_bind</function>, et mis en attente de connexion avec la
   fonction <function>socket_listen</function>,
   <function>socket_accept</function> va accepter les connexions sur ce
   socket. Une fois qu'une connexion est faite, une nouvelle ressource de
   socket est retournée. Elle peut être utilisée pour les communications.
   S'il y a plusieurs connexions en attente, la première sera utilisée. S'il
   n'y a pas de connexion en attente, <function>socket_accept</function> se
   bloquera jusqu'à ce qu'une connexion se présente. Si
   <parameter>socket</parameter> a été rendue non-bloquante, grâce à
   <function>socket_set_blocking</function> ou
   <function>socket_set_nonblock</function>, &false; sera retourné.
  </para>
  <para>
   La ressource de socket retournée par
   <function>socket_accept</function> ne doit pas être utilisée
   pour accepter de nouvelles connexions. Le socket original
   <parameter>socket</parameter>, qui est en attente, reste ouvert
   et peut être réutilisé.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Une ressource de socket valide, créée par
       la fonction <function>socket_create</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une nouvelle ressource de socket en cas de succès ou &false; en cas
   d'erreur. Le code d'erreur généré peut être obtenu en appelant la fonction
   <function>socket_last_error</function>. Ce code d'erreur peut être passé à
   la fonction <function>socket_strerror</function> pour obtenir un message
   d'erreur, humainement lisible.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_connect</function></member>
    <member><function>socket_listen</function></member>
    <member><function>socket_create</function></member>
    <member><function>socket_bind</function></member>
    <member><function>socket_strerror</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
