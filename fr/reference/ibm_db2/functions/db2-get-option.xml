<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351135 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.db2-get-option" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_get_option</refname>
  <refpurpose>Récupère la valeur d'une option pour une requête ou une connexion</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>db2_get_option</methodname>
   <methodparam><type>resource</type><parameter>resource</parameter></methodparam>      
   <methodparam><type>string</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>
   Récupère la valeur d'une option spécifiée pour une ressource de requête ou une ressource
   de connexion.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>resource</parameter></term>
     <listitem>
     <para>
      Une ressource de requête valide retournée par
      <function>db2_prepare</function> ou une ressource de connexion valide retournée par
      <function>db2_connect</function> ou <function>db2_pconnect</function>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>option</parameter></term>
    <listitem>
     <para>
      Des options de requête ou de connexion valides. Les nouvelles options suivantes sont
      disponibles depuis la version 1.6.0 de ibm_db2. Elles fournissent d'utiles informations
      de traçage qui peuvent être fixées pendant l'exécution avec 
      <function>db2_get_option</function>.
      <note>
       <para>
        Les anciennes versions de ibm_db ne supportent pas ces nouvelles options.
       </para>
       <para>
        Lorsqu'une valeur dans chaque option est fixée, certains serveurs peuvent ne pas
        prendre en charge la valeur totale fournie et peuvent tronquer cette valeur.
       </para>
       <para>
        Pour s'assurer que les données spécifiées dans chaque option sont converties correctement
        lors de la transmission vers une base de données, utilisez seulement les caractères de A à Z, 0 à 9
        et les caractères de soulignement (_) ou point (.).
       </para>
      </note>
      <variablelist>
       <varlistentry>
        <term><parameter>userid</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_USERID</literal> : un pointeur vers une &string; utilisée pour identifier
           l'identifiant de l'usager (ID) envoyé vers le serveur de base de données lors de la connexion à DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supportent jusqu'à 16 caractères.
             Le user-id ne doit pas être confondu avec l'identification user-id ; il s'agit
             seulement d'un but d'identification et ne doit pas être autorisé pour des autorisations.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>acctstr</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_ACCTSTR</literal> : un pointeur vers une &string; utilisée pour identifier
           le compte du client envoyé vers le serveur de base de données lors de la connexion à DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supportent jusqu'à 200 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>applname</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_APPLNAME</literal> : un pointeur vers une &string; utilisée pour identifier
           le nom de l'application du client envoyée vers le serveur de base de données lors de la connexion à DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supportent jusqu'à 32 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>wrkstnname</parameter></term>
         <listitem>
          <para>
           <literal>SQL_ATTR_INFO_WRKSTNNAME</literal> : un pointeur vers une &string; utilisée pour identifier
           le nom de la machine du client envoyée vers le serveur de base de données lors de la connexion à DB2.
           <note>
            <para>
             DB2 pour les serveurs z/OS et OS/390 supportent jusqu'à 18 caractères.
            </para>
           </note>
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   La table suivante spécifie quelles options qui sont compatibles avec le type
   de ressource disponible :
   <table>
    <title>Matrice ressource paramètre</title>
    <tgroup cols="5">
     <colspec colnum="1" colname="col1" align="center" />
     <colspec colnum="2" colname="col2" align="center" />
     <colspec colnum="3" colname="col3" align="center" />
     <colspec colnum="4" colname="col4" align="center" />
     <colspec colnum="5" colname="col5" align="center" />
     <thead>
      <row>
       <entry morerows="1">Clé</entry>
       <entry morerows="1">Valeur</entry>
       <entry namest="col3" nameend="col5">Type de ressource</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry colname="col3">Connexion</entry>
       <entry colname="col4">Requête</entry>
       <entry colname="col5">Jeu de résultats</entry>
      </row>
      <row>
       <entry>userid</entry>
       <entry><literal>SQL_ATTR_INFO_USERID</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>acctstr</entry>
       <entry><literal>SQL_ATTR_INFO_ACCTSTR</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>applname</entry>
       <entry><literal>SQL_ATTR_INFO_APPLNAME</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
      <row>
       <entry>wrkstnname</entry>
       <entry><literal>SQL_ATTR_INFO_WRKSTNNAME</literal></entry>
       <entry colname="col3">X</entry>
       <entry colname="col4">X</entry>
       <entry colname="col5">-</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne la configuration courante de la connexion fournie en cas de succès&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Fixe et récupère les paramètres d'une ressource de connexion</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Paramètres de Connexion */
$database = 'SAMPLE';
$user     = 'db2inst1';
$password = 'ibmdb2';

/* Récupération de la Ressource de Connexion */
$conn = db2_connect($database, $user, $password);

echo "Attributs de connexion passés avec la chaîne de caractères de connexion :\n";

/* Crée un tableau associatif d'options avec les paires clé/valeur valides */
/* Assigne les attributs à partir de la chaîne de caractères de connexion */
/* Accède les options spécifiées */
$options1 = array('userid' => 'db2inst1');
$conn1 = db2_connect($database, $user, $password, $options1);
$val = db2_get_option($conn1, 'userid');
echo $val . "\n";

$options2 = array('acctstr' => 'account');
$conn2 = db2_connect($database, $user, $password, $options2);
$val = db2_get_option($conn2, 'acctstr');
echo $val . "\n";

$options3 = array('applname' => 'myapp');
$conn3 = db2_connect($database, $user, $password, $options3);
$val = db2_get_option($conn3, 'applname');
echo $val . "\n";

$options4 = array('wrkstnname' => 'workstation');
$conn4 = db2_connect($database, $user, $password, $options4);
$val = db2_get_option($conn4, 'wrkstnname');
echo $val . "\n";

echo "Attributs après la connexion :\n";

/* Crée un tableau associatif d'options avec les paires clé/valeur valides */
/* Assigne les attributs après que la connexion soit faite */
/* Accède les options spécifiées */
$options5 = array('userid' => 'db2inst1');
$conn5 = db2_connect($database, $user, $password);
$rc = db2_set_option($conn5, $options5, 1);
$val = db2_get_option($conn5, 'userid');
echo $val . "\n";

$options6 = array('acctstr' => 'account');
$conn6 = db2_connect($database, $user, $password);
$rc = db2_set_option($conn6, $options6, 1);
$val = db2_get_option($conn6, 'acctstr');
echo $val . "\n";

$options7 = array('applname' => 'myapp');
$conn7 = db2_connect($database, $user, $password);
$rc = db2_set_option($conn7, $options7, 1);
$val = db2_get_option($conn7, 'applname');
echo $val . "\n";

$options8 = array('wrkstnname' => 'workstation');
$conn8 = db2_connect($database, $user, $password);
$rc = db2_set_option($conn8, $options8, 1);
$val = db2_get_option($conn8, 'wrkstnname');
echo $val . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Attributs de connexion passés avec la chaîne de caractères de connexion :
db2inst1
account
myapp
workstation
Attributs après la connexion :
db2inst1
account
myapp
workstation]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>db2_connect</function></member>
    <member><function>db2_cursor_type</function></member>
    <member><function>db2_exec</function></member>
    <member><function>db2_set_option</function></member>
    <member><function>db2_pconnect</function></member>
    <member><function>db2_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
