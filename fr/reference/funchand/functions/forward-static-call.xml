<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351129 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.forward-static-call" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>forward_static_call</refname>
  <refpurpose>Appelle une méthode statique</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>forward_static_call</methodname>
   <methodparam><type>callable</type><parameter>function</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   Appelle une fonction ou une méthode utilisateur, nommée <parameter>function</parameter>,
   avec les arguments qui suivent. Cette fonction doit être appelée depuis une méthode,
   et ne peut pas être utilisée hors d'une classe.
   Elle utilise le <link linkend="language.oop5.late-static-bindings">liage statique</link>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       La fonction ou la méthode appelée. Ce paramètre peut être un tableau,
       avec le nom de la classe et de la méthode, ou une chaîne, avec le nom
       de la fonction.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       Zéro ou plusieurs paramètres à passer à la fonction.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne le résultat de la fonction, ou bien &false; en cas d'erreur.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>forward_static_call</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class A
{
    const NAME = 'A';
    public static function test() {
        $args = func_get_args();
        echo static::NAME, " ".join(',', $args)." \n";
    }
}

class B extends A
{
    const NAME = 'B';

    public static function test() {
        echo self::NAME, "\n";
        forward_static_call(array('A', 'test'), 'encore', 'args');
        forward_static_call( 'test', 'autres', 'args');
    }
}

B::test('foo');

function test() {
        $args = func_get_args();
        echo "C ".join(',', $args)." \n";
    }

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
B
B encore,args 
C autres,args 
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>forward_static_call_array</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>call_user_func</function></member>
    <member><function>is_callable</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
