<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351129 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.mb-convert-variables" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_convert_variables</refname>
  <refpurpose>Convertit l'encodage de variables</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mb_convert_variables</methodname>
   <methodparam><type>string</type><parameter>to_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>from_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">var</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
  </methodsynopsis>
  <para>
   Convertit l'encodage des variables <parameter>var</parameter> et
   <parameter>vars</parameter> depuis l'encodage
   <parameter>from_encoding</parameter> vers l'encodage
   <parameter>to_encoding</parameter>
  </para>
  <para>
     <function>mb_convert_variables</function> place les chaînes dans un tableau
     ou un objet pour détecter l'encodage, mais la détection a tendance à échouer
     pour les chaînes de caractères de petites tailles. De ce fait, il est
     impossible de mixer les encodages dans un tableau ou un objet "simple".
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>to_encoding</parameter></term>
     <listitem>
      <para>
       L'encodage dans lequel la chaîne doit être convertie.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from_encoding</parameter></term>
     <listitem>
      <para>
       <parameter>from-encoding</parameter> est une liste d'encodages possibles
       pour les variables <parameter>vars</parameter>, fourni sous forme d'un
       tableau ou d'une liste d'encodages, séparés par des virgules.
       Si <parameter>from_encoding</parameter> est omis,
       les encodages fournis dans <function>mb_detect_order</function> sont
       utilisés.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       <parameter>var</parameter> est une référence sur une variable
       à convertir. Les chaînes, tableaux et objets sont aussi supportés.
       <function>mb_convert_variables</function> prend tous ces paramètres 
       avec le même encodage.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       Variables additionnelles.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   L'encodage avant conversion en cas de succès, ou &false;
   si une erreur survient.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>mb_convert_variables</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Convertit les variables $post1, $post2 en encodage interne */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
