<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343508 Maintainer: yannick Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="pdostatement.debugdumpparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::debugDumpParams</refname>
  <refpurpose>
   Détaille une commande préparée SQL
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>PDOStatement::debugDumpParams</methodname>
   <void />
  </methodsynopsis>
  <para>
   Détaille les informations contenues dans une commande préparée,
   directement sur la sortie standard. Les informations sont notamment
   la requête <literal>SQL</literal> utilisée, le nombre de paramètres
   utilisés (<literal>Params</literal>), la liste des paramètres, avec
   le nom de clé ou leur position, leur nom, leur position dans la requête
   (si cette dernière information n'est pas supportée par le pilote PDO,
   c'est toujours -1), un type (<literal>param_type</literal>) sous forme d'entier,
   et une valeur booléenne <literal>is_param</literal>.
  </para>
  <para>
   Ceci est une fonction de déboguage, qui affiche directement des informations
   sur la sortie standard. 
   &tip.ob-capture;
  </para>
  <para>
   Les paramètres affichés sont ceux qui ont été ajoutés dans la requête
   jusqu'au moment de l'appel. Les paramètres surnuméraires sont ignorés.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemple avec <function>PDOStatement::debugDumpParams</function> et des paramètres nommés</title>
   <programlisting role="php">
<![CDATA[
<?php
/* exécution d'une commande préparée avec liaison avec variables PHP */
$calories = 150;
$colour = 'red';
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$sth->bindParam(':calories', $calories, PDO::PARAM_INT);
$sth->bindValue(':colour', $colour, PDO::PARAM_STR, 12);
$sth->execute();

$sth->debugDumpParams();

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
SQL: [96] SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour
Params:  2
Key: Name: [9] :calories
paramno=-1
name=[9] ":calories"
is_param=1
param_type=1
Key: Name: [7] :colour
paramno=-1
name=[7] ":colour"
is_param=1
param_type=2
]]>
   </screen>
  </example>

  <example>
   <title>Exemple avec <function>PDOStatement::debugDumpParams</function> et des paramètres anonymes</title>
   <programlisting role="php">
<![CDATA[
<?php

/* exécution d'une commande préparée avec liaison avec variables PHP */
$calories = 150;
$colour = 'red';
$name = 'apple';

$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->bindParam(1, $calories, PDO::PARAM_INT);
$sth->bindValue(2, $colour, PDO::PARAM_STR);
$sth->execute();

$sth->debugDumpParams();

?>

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
SQL: [82] SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?
Params:  2
Key: Position #0:
paramno=0
name=[0] ""
is_param=1
param_type=1
Key: Position #1:
paramno=1
name=[0] ""
is_param=1
param_type=2
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <methodname>PDOStatement::debugDumpParams</methodname> retourne 
        maintenant le SQL envoyé à la base de données, y compris la requête 
        complète, RAW (y compris les espaces réservés remplacés avec leurs 
        valeurs délimitées). Notez que cela ne sera disponible que si les 
        instructions préparées émulées sont activées.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::bindParam</function></member>
    <member><function>PDOStatement::bindValue</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
