<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351135 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<refentry xml:id="pdo.pgsqllobopen" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::pgsqlLOBOpen</refname>
  <refpurpose>Ouvre un flux existant de large objet</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>resource</type><type>false</type></type><methodname>PDO::pgsqlLOBOpen</methodname>
   <methodparam><type>string</type><parameter>oid</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>mode</parameter><initializer>"rb"</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>PDO::pgsqlLOBOpen</function> ouvre un flux pour accéder aux
   données référencées par <parameter>oid</parameter>. Si
   <parameter>mode</parameter> est <literal>r</literal>, le flux est ouvert en
   lecture, si <parameter>mode</parameter> est <literal>w</literal>, alors le
   flux sera ouvert en écriture. Vous pouvez utilisez toutes les fonctions
   usuelles de système de fichiers, comme <function>fread</function>,
   <function>fwrite</function> et <function>fgets</function> pour manipuler le
   contenu du flux.
  </para>
   <note>
   <simpara>
    Cette fonction, ainsi que toutes les manipulations sur l'objet large, doit
    être appelée et exécutée à l'intérieur d'une transaction.
   </simpara>
  </note>
</refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>oid</parameter></term>
     <listitem>
      <para>
       Un identifiant d'objet large
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Si le mode est <literal>r</literal>, ouverture du flux en lecture.
       Si le mode est <literal>w</literal>, ouverture du flux en écriture.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retourne une ressource de flux en cas de succès&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>PDO::pgsqlLOBOpen</function></title>
    <para>
     Suivant l'exemple de <function>PDO::pgsqlLOBCreate</function>, cet partie
     de code récupère l'objet large de la base de données et l'affiche au
     navigateur.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$db = new PDO('pgsql:dbname=test host=localhost', $user, $pass);
$db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
$db->beginTransaction();
$stmt = $db->prepare("select oid from BLOBS where ident = ?");
$stmt->execute(array($some_id));
$stmt->bindColumn('oid', $oid, PDO::PARAM_STR);
$stmt->fetch(PDO::FETCH_BOUND);
$stream = $db->pgsqlLOBOpen($oid, 'r');
header("Content-type: application/octet-stream");
fpassthru($stream);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::pgsqlLOBCreate</function></member>
    <member><function>PDO::pgsqlLOBUnlink</function></member>
    <member><function>pg_lo_open</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
