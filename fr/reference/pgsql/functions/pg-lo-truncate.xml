<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342988 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
<refentry xml:id='function.pg-lo-truncate' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_truncate</refname>
  <refpurpose>Tronque un objet large</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pg_lo_truncate</methodname>
   <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_truncate</function> tronque une ressource d'objet large.
  </para>
  <para>
   Pour utiliser l'interface des objets larges, il est nécessaire de
   l'enfermer dans un verrou de transaction.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>large_object</parameter></term>
     <listitem>
      <para>
       Ressource d'objet large PostgreSQL (LOB), retourné par
       <function>pg_lo_open</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>
       Le nombre d'octets à tronquer.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_lo_truncate</function></title>
    <programlisting role="php">
<![CDATA[
<?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   // Tronque à 0
   pg_lo_truncate($handle, 0);
   pg_query($database, "commit");
   echo $data;
?>
]]>
    </programlisting>
   </example> 
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Ajout de la fonction de troncage. Elle supporte les objets
        larges 64 bits PostgreSQL 9.3. Le client et le serveur
        doivent avoir le support de PostgreSQL 9.3 et PHP
        doit avoir été compilé en 64 bits.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_tell</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
