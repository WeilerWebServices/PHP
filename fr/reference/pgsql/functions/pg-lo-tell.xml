<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332713 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.pg-lo-tell" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_tell</refname>
  <refpurpose>
   Retourne la position courante dans un objet de grande taille PostgreSQL
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pg_lo_tell</methodname>
   <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_tell</function> retourne la position courante (à partir du
   début) du pointeur de lecture sur l'objet de grande taille <parameter>large_object</parameter>.
  </para>
  <para>
   Pour utiliser une interface avec un objet de grande taille, il est
   nécessaire de l'inclure dans un bloc de transaction.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>large_object</parameter></term>
     <listitem>
      <para>
       Ressource objet de grande taille (LOB) PostgreSQL retournée par
       <function>pg_lo_open</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La position courante du pointeur (en nombre d'octets) à partir du début de
   l'objet de grande taille. S'il y a une erreur, la valeur retournée sera
   négative.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_lo_tell</function></title>
    <programlisting role="php">
<![CDATA[
<?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   // Saute les 50000 premiers octets
   pg_lo_seek($handle, 50000, PGSQL_SEEK_SET);
   // On vérifie combien d'octets nous avons sauté
   $offset = pg_lo_tell($handle);
   echo "Position du pointeur est : $offset";
   pg_query($database, "commit");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Position du pointeur est : 50000
]]>
    </screen>
   </example> 
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Ajoute le support des objetslarges 64 bit en PostgreSQL 9.3.
        À la fois le client et le serveur doivent supporter PostgreSQL 9.3
        et PHP doit avoir été compilé en 64 bit pour utiliser les objets
        larges 64 bit.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_seek</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
