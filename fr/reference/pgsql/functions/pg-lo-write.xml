<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: jsgoupil Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.pg-lo-write" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_write</refname>
  <refpurpose>Écrit un objet de grande taille PostgreSQL</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pg_lo_write</methodname>
   <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>len</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_write</function> écrit des données à l'intérieur d'un objet
   de grande taille à la position courante.
  </para>
  <para>
   Pour manipuler un objet de grande taille (<literal>lo</literal>), il est nécessaire
   de placer les opérations dans un bloc de transaction.
  </para>
  <note>
   <para>
    Auparavant, cette fonction s'appelait <function>pg_lowrite</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>large_object</parameter></term>
     <listitem>
      <para>
       Ressource objet de grande taille (LOB) PostgreSQL retournée par
       <function>pg_lo_open</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Les données à être écrites dans l'objet de grande taille. Si
       <parameter>len</parameter> est spécifié et est inférieur à la grandeur
       de <parameter>data</parameter>, seul les <parameter>len</parameter>
       octets y seront écrits.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>len</parameter></term>
     <listitem>
      <para>
       Un nombre maximal d'octets à écrire. Il doit être supérieur à zéro et
       inférieur à la grandeur de <parameter>data</parameter>. Cet argument
       est optionnel, s'il est omis, il prendra par défaut la grandeur de
       <parameter>data</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Le nombre d'octets écrit dans l'objet de grande taille ou &false; en cas
   d'erreur.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple avec <function>pg_lo_write</function></title>
    <programlisting role="php">
<![CDATA[
<?php
   $doc_oid = 189762345;
   $data = "Ceci écrasera le début de l'objet de grande taille.";
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "w");
   $data = pg_lo_write($handle, $data);
   pg_query($database, "commit");
?>
]]>
    </programlisting>
   </example> 
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_create</function></member>
    <member><function>pg_lo_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
