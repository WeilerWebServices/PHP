<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351133 Maintainer: yannick Status: ready -->
<!-- Reviewed: no -->

<appendix xml:id="yac.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="constant.yac-version">
    <term>
     <constant>YAC_VERSION</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-max-key-len">
    <term>
     <constant>YAC_MAX_KEY_LEN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Longueur maximale que la clé peut faire ; 48 octets.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-max-value-raw-len">
    <term>
     <constant>YAC_MAX_VALUE_RAW_LEN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-max-raw-compressed-len">
    <term>
     <constant>YAC_MAX_RAW_COMPRESSED_LEN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-serializer-php">
    <term>
     <constant>YAC_SERIALIZER_PHP</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Utilise le sérialisateur de PHP comme sérialisateur
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-serializer-json">
    <term>
     <constant>YAC_SERIALIZER_JSON</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Utilise Json comme sérialisateur (nécessite l'option --enable-json)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-serializer-igbinary">
    <term>
     <constant>YAC_SERIALIZER_IGBINARY</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Utilise igbinary comme sérialisateur (nécessite l'option --enable-igbinary)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-serializer-msgpack">
    <term>
     <constant>YAC_SERIALIZER_MSGPACK</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      Utilise msgpack comme sérialisateur (nécessite l'option --enable-msgpack)
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.yac-serializer">
    <term>
     <constant>YAC_SERIALIZER</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      Le sérialisateur que YAC doit utiliser
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
