Testing sscanf with standard ANSI syntax (values returned by
reference)-<br><h3><em><br>Simple Test<br></em></h3>sscanf('10','%d',&$decimal) <br><br>BEFORE : <br> decimal = -1.<br>AFTER  : <br> decimal = 10 <br><h3><em><br>Simple Test 2<br></em></h3>sscanf("ghost 0xface","%s %x",&$string, &$int)<br><br>BEFORE : <br> string = , int = -1<br><br>AFTER  : <br> string = ghost, int = 64206<br> sscan reports : 2 conversions <br><h3><em><br>Multiple specifiers<br></em></h3>sscanf("jabberwocky 1024 0xFF 1.024 644 10",
			"%s %d  %x %f %o %i",
			&$string,&$decimal,&$hex,&$float,&$octal,&$int);<br><br>BEFORE : <br>Decimal = 10, String = ghost, Hex = 0<br>Octal = 0 , Float = 0, Int = 64206<br><br>AFTER :<br>decimal = 1024, string = jabberwocky, hex = 255<br>octal = 420 , float = 1.024, int = 10<br> sscan reports : 6 conversions <br>----------------------------------------<br><h3><em><br>Running Test Cases from ../../input/scan_cases<br></em></h3><h4>** Case :  valid decimal (positive) 
 ******************************</h4>sscanf("48,"%d").<br>-----------------<br>Result : 48<br>-----------------<br><br><h4>** Case :  valid signed decimal (negative) 
 ******************************</h4>sscanf("-98,"%d").<br>------------------<br>Result : -98<br>------------------<br><br><h4>** Case :  integer scan : decimal digit followed by alpha	
 ******************************</h4>sscanf("56a,"%d").<br>------------------<br>Result : 56<br>------------------<br><br><h4>** Case : decimal integer with width specification
 ******************************</h4>sscanf("558071,"%4d").<br>----------------------<br>Result : 5580<br>----------------------<br><br><h4>** Case : valid signed integer (negative)
 ******************************</h4>sscanf("-5489,"%i").<br>--------------------<br>Result : -5489<br>--------------------<br><br><h4>** Case :  plain ole string matched with %s
 ******************************</h4>sscanf(" the rain in spain ,"%s").<br>----------------------------------<br>Result : the<br>----------------------------------<br><br><h4>** Case :  string with width specifier
 ******************************</h4>sscanf("jabberwocky,"%10s").<br>----------------------------<br>Result : jabberwock<br>----------------------------<br><br><h4>** Case :  valid float (%f)
 ******************************</h4>sscanf("289.071,"%f").<br>----------------------<br>Result : 289.071<br>----------------------<br><br><h4>** Case :  valid negative (%f)
 ******************************</h4>sscanf("-0.403,"%f").<br>---------------------<br>Result : -0.403<br>---------------------<br><br><h4>** Case : Float with width specifier ending at decimal point
 ******************************</h4>sscanf("76.4,"%3f").<br>--------------------<br>Result : 76<br>--------------------<br><br><h4>** Case : Float with width specifier 
 ******************************</h4>sscanf("789.4,"%3f"").<br>----------------------<br>Result : 789<br>----------------------<br><br><h4>** Case : octal with leading 0  
 ******************************</h4>sscanf("0321,"%o").<br>-------------------<br>Result : 209<br>-------------------<br><br><h4>** Case :  valid octal digits
 ******************************</h4>sscanf("327,"%o").<br>------------------<br>Result : 215<br>------------------<br><br><h4>** Case :  octal scan with octal digit followed by non-octal  
 ******************************</h4>sscanf("380,"%o").<br>------------------<br>Result : 3<br>------------------<br><br><h4>** Case :  valid hex ******************************</h4>sscanf("fe,"%x").<br>-----------------<br>Result : 254<br>-----------------<br><br><h4>** Case :  "c" style hex with leading 0x ******************************</h4>sscanf("0xfe,"%x").<br>-------------------<br>Result : 254<br>-------------------<br><br><h4>** Case :  hex with all single digits < f
 ******************************</h4>sscanf("455,"%x").<br>------------------<br>Result : 1109<br>------------------<br><br><h4>** Case :  hex (negative signed int)
 ******************************</h4>sscanf("-98,"%x").<br>------------------<br>Result : -152<br>------------------<br><br><h4>** Case :  single char
 ******************************</h4>sscanf("y,"%c").<br>----------------<br>Result : y<br>----------------<br><br><h4>** Case : Character with width specification (4)
 ******************************</h4>sscanf("tulips,"%4c").<br>----------------------<br>Result : tuli<br>----------------------<br><br><h4>** Case :  signed floating point with negative exponent
 ******************************</h4>sscanf("10e-9,"%e").<br>--------------------<br>Result : 1E-08<br>--------------------<br><br><h4>** Case :  signed floating point with explicit positive exponent
 ******************************</h4>sscanf("10e+9,"%e").<br>--------------------<br>Result : 10000000000<br>--------------------<br><br><h4>** Case :  signed floating point with positive exponent (no + sign)
 ******************************</h4>sscanf("10e9,"%e").<br>-------------------<br>Result : 10000000000<br>-------------------<br><br><h4>** Case : multiple specifiers
 ******************************</h4>sscanf(" 19 84 0666 2000 0xface your x 31e+9 0.912 2.4 ," %d %i %o %u %x %s %c %e %f %g ").<br>-------------------------------------------------------------------------------------------<br>Result : 19<br>84<br>438<br>2000<br>64206<br>your<br>x<br>31000000000<br>0.912<br>2.4<br>-------------------------------------------------------------------------------------------<br><br>