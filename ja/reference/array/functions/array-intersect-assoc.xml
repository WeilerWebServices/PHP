<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351129 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="function.array-intersect-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_intersect_assoc</refname>
  <refpurpose>追加された添字の確認も含めて配列の共通項を確認する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect_assoc</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>array_intersect_assoc</function> は、全ての引数に現れる
   <parameter>array</parameter> の全ての値を含む配列を返します。
   <function>array_intersect</function> と異なり、
   キーも比較に使用されることに注意してください。
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       値を調べるもととなる配列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       値を比較する対象となる配列。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>array</parameter> の値のうち、すべての引数に存在するものを含む連想配列を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_intersect_assoc</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "b" => "yellow", "blue", "red");
$result_array = array_intersect_assoc($array1, $array2);
print_r($result_array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [a] => green
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   上の例で、<literal>"a" =&gt; "green"</literal> の組のみが両方の配列に現れており、
   よって配列として返されていることがわかります。
   値 <literal>"red"</literal> は返されません。これは、
   <varname>$array1</varname> においてはそのキーが
   <literal>0</literal> であり、一方、<varname>$array2</varname>
   においてはキーが <literal>1</literal> であるためです。
   また、キー <literal>"b"</literal> は返されません。
   これは、その値がそれぞれの配列で異なるためです。
  </simpara>
  <simpara>
   <emphasis>key =&gt; value</emphasis> の組からの二つの値は、
   <literal>(string) $elem1 === (string) $elem2 </literal>
   が成り立つ場合にのみ等しいと見なされます。
   言い替えると、厳密なチェックが行われるため、
   文字列表現が同じである必要があります。
   <!-- TODO: example of it... -->
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>array_intersect</function></member>
   <member><function>array_uintersect_assoc</function></member>
   <member><function>array_intersect_uassoc</function></member>
   <member><function>array_uintersect_uassoc</function></member>
   <member><function>array_diff</function></member>
   <member><function>array_diff_assoc</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
