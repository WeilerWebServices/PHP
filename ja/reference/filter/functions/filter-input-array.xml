<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350656 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.filter-input-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filter_input_array</refname>
  <refpurpose>外部から変数を受け取り、オプションでそれらをフィルタリングする</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>filter_input_array</methodname>
   <methodparam><type>int</type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>definition</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>add_empty</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   この関数を使用すると、大量のデータを取得する際に
   <function>filter_input</function> を繰り返しコールする必要がなくなるので便利です。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       <constant>INPUT_GET</constant>、<constant>INPUT_POST</constant>、
       <constant>INPUT_COOKIE</constant>、<constant>INPUT_SERVER</constant> あるいは
       <constant>INPUT_ENV</constant> のいずれか。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>definition</parameter></term>
     <listitem>
      <para>
       引数を定義する配列。配列のキーとして使用できるのは
       変数名を <type>string</type> で表したものです。
       対応する値に使用できるのは、<link
       linkend="filter.filters">フィルタの型</link>か配列 (フィルタ・フラグ・オプションを指定したもの) です。
       配列の値として配列を使用する場合に使用できるキーは、
       <literal>filter</literal> (<link linkend="filter.filters">フィルタの型</link>)、
       <literal>flags</literal> (フィルタに適用するフラグ)
       および <literal>options</literal> (フィルタに適用するオプション)
       です。理解を深めるために、以下の例を参照ください。
      </para>
      <para>
       このパラメータには、<link
       linkend="filter.constants">フィルタ定数</link> を表す整数値を指定することもできます。
       こうすると、入力配列のすべての値がそのフィルタで処理されます。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>add_empty</parameter></term>
     <listitem>
      <para>
       存在しないキーは &null; として返り値に追加します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合は要求された変数の値を含む配列。

   <constant>FILTER_NULL_ON_FAILURE</constant> フラグが指定されない場合、
   かつ <parameter>type</parameter> で指定された入力値の配列が得られなかった場合は、
   この関数は &null; を返します。
   <parameter>type</parameter> で指定された入力値の配列が得られなかった場合、
   かつ <constant>FILTER_NULL_ON_FAILURE</constant> フラグが指定されていた場合は、
   この関数は &false; を返します。その他の理由で失敗した場合でも &false; を返します。
  </para>
  <para>
   フィルタが失敗した場合、配列の値は &false; になります。
   変数が設定されていない場合は、&null; になります。
   フラグ <constant>FILTER_NULL_ON_FAILURE</constant>
   が指定されている場合は、変数が設定されていないときに &false;、
   フィルタリングに失敗した場合に &null; となります。
   <parameter>add_empty</parameter> パラメータが &false; の場合、
   配列の要素は追加されません。
  </para>

 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>filter_input_array</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL | E_STRICT);
/* データは、実際には POST リクエストでやってきます
$_POST = array(
    'product_id' => 'libgd<script>',
    'component'  => array('10'),
    'version'    => '2.0.33',
    'testarray'  => array('2', '23', '10', '12'),
    'testscalar' => '2',
);
*/

$args = array(
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_REQUIRE_ARRAY, 
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'version'      => FILTER_SANITIZE_ENCODED,
    'doesnotexist' => FILTER_VALIDATE_INT,
    'testscalar'   => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_SCALAR,
                           ),
    'testarray'    => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_ARRAY,
                           )

);

$myinputs = filter_input_array(INPUT_POST, $args);

var_dump($myinputs);
echo "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(6) {
  ["product_id"]=>
  string(17) "libgd%3Cscript%3E"
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["version"]=>
  string(6) "2.0.33"
  ["doesnotexist"]=>
  NULL
  ["testscalar"]=>
  int(2)
  ["testarray"]=>
  array(4) {
    [0]=>
    int(2)
    [1]=>
    int(23)
    [2]=>
    int(10)
    [3]=>
    int(12)
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <constant>INPUT_SERVER</constant> 配列には、
    キー <literal>REQUEST_TIME</literal> が存在しません。
    あとで <varname>$_SERVER</varname> に追加されるからです。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>filter_input</function></member>
    <member><function>filter_var_array</function></member>
    <member><xref linkend="filter.filters" /></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
