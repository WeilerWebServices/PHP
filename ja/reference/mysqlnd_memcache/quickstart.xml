<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328862 Maintainer: takagi Status: ready -->
<chapter xml:id="mysqlnd-memcache.quickstart" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>クイックスタートとサンプル集</title>
 <para>
  mysqlnd memcache プラグインは簡単に使えます。
  このクイックスタートでは、よくある使いかたの例を示すとともに、
  使い始めるための実践的なアドバイスをします。
  started.
 </para>
 <para>
  このクイックスタートだけでなく、リファレンスのドキュメントも読むようにしましょう。
  クイックスタートでは、理論的な概念や制約などについては説明しません。
  直接扱うのではなく、リファレンスのページへのリンクを示します。
  このクイックスタートから読み始めてもまったく問題はありませんが、
  実際にミッションクリティカルな環境で使い始める前には
  リファレンスで背景情報をしっかり読んでおくことをおすすめします。
 </para>
 <section xml:id="mysqlnd-memcache.quickstart.configuration">
  <title>セットアップ</title>
  <para>
   このプラグインは、PHP の拡張モジュールとして実装されています。この拡張モジュールを
   <link linkend="mysqlnd-memcache.installation">インストールする方法</link>
   も参照ください。
  </para>
  <para>
   PHP の MySQL 用拡張モジュール (<link linkend="ref.mysqli">mysqli</link>、
   <link linkend="ref.pdo-mysql">PDO_MYSQL</link> あるいは <link linkend="ref.mysql">mysql</link>)
   をコンパイルします。このとき、<link linkend="book.mysqlnd">mysqlnd</link>
   ライブラリを使うように指定しないといけません。というのも、mysqlnd_memcache は mysqlnd
   用のプラグインだからです。さらなる情報は、
   <link linkend="memcached.installation">mysqlnd_memcache のインストール方法</link>
   を参照ください。
  </para>
  <para>
   それから、この拡張モジュールを PHP に読み込んでプラグインを有効化させましょう。
   PHP の設定ファイルで、
   <link linkend="ini.mysqlnd-memcache.enable">mysqlnd_memcache.enable</link>
   という項目を使います。
  </para>
  <para>
   <example>
    <title>プラグインを有効にする (php.ini)</title>
    <programlisting role="ini">
<![CDATA[
; Windows の場合はファイル名が php_mysqnd_memcache.dll になります
; 拡張モジュールの読み込み
extension=mysqlnd_memcache.so
; 有効化
mysqlnd_memcache.enable=1
]]>
    </programlisting>
    </example>
  </para>
  <para>
   <link xlink:href="&url.mysql.docs.memcached;">MySQL
   Reference Manual の、Memcache プラグインのインストールページ</link>
   の指示に従って MySQL サーバーを準備します。
   プラグインを有効化して、Memcache で SQL テーブルにアクセスできるよう設定しましょう。
  </para>
  <para>
   このクイックスタートのサンプルでは、次のようなテーブルがあって
   Memcache でそこにアクセスできるようになっていることを前提とします。
  </para>
  <para>
   <example>
    <title>クイックスタートで使うテーブルの SQL</title>
    <programlisting role="sql">
<![CDATA[
CREATE TABLE test(
  id CHAR(16),
  f1 VARCHAR(255),
  f2 VARCHAR(255),
  f3 VARCHAR(255),
  flags INT NOT NULL,
  cas_column INT,
  expire_time_column INT,
  PRIMARY KEY(id)
  ) ENGINE=InnoDB;

INSERT INTO test (id, f1, f2, f3) VALUES (1, 'Hello', 'World', '!');
INSERT INTO test (id, f1, f2, f3) VALUES (2, 'Lady', 'and', 'the tramp');

INSERT INTO innodb_memcache.containers(
  name, db_schema, db_table, key_columns, value_columns, 
  flags, cas_column, expire_time_column, unique_idx_name_on_key)
VALUES (
  'plugin_test', 'test', 'test', 'id', 'f1,f2,f3',
  'flags', 'cas_column', 'expire_time_column', 'PRIMARY KEY');
]]>
    </programlisting>
   </example>
  </para>
 </section>
 <section xml:id="mysqlnd-memcache.quickstart.usage">
  <title>使いかた</title>
  <para>
   MySQL の接続と Memcache の接続の関連づけを
   <function>mysqnd_memcache_set</function> で設定したら、
   プラグインは透過的に、
   SQL の <literal>SELECT</literal> 文を memcache へのアクセスに変換します。
   そのため、このプラグインは実行されるすべての SQL 文を監視しており、
   <constant>MYSQLND_MEMCACHE_DEFAULT_REGEXP</constant> にマッチする文がないかどうかを探します。
   マッチする文が見つかれば、mysqlnd memcache プラグインはその内容をチェックします。
   <literal>SELECT</literal> がアクセスするカラムが
   マップされているテーブルのものだけであること、
   そして <literal>WHERE</literal> 句が単一キーのルックアップに限定されていることを確かめます。
  </para>
  <para>
   この例の SQL テーブルの場合、プラグインは、
   MySQL サーバーの Memcache インターフェイスを使って
   <literal>SELECT f1, f2, f3 WHERE id = n</literal>
   のような SQL クエリーの結果を取得します。
  </para>
  <para>
   <example>
    <title>
     基本的な例</title>

    <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("host", "user", "passwd", "database");
$memc = new Memcached();
$memc->addServer("host", 11211);
mysqlnd_memcache_set($mysqli, $memc);

/*
   これは test テーブルへの問い合わせです。WHERE 句のキーとして
   id を使い、フィールド f1、f2 そして f3 にアクセスします。
   そこで、mysqlnd_memcache はこれを横取りして memcache 経由で処理します。
*/
$result = $mysqli->query("SELECT f1, f2, f3 FROM test WHERE id = 1");
while ($row = $result->fetch_row()) {
    print_r($row);
}

/*
   これは test テーブルへの問い合わせですが、WHERE 句に f1 を使っています。
   そのため、mysqlnd_memcache はこれを横取りしません。
   MySQL プロトコルを使って処理します。
*/
$mysqli->query("SELECT id FROM test WHERE f1 = 'Lady'");
while ($row = $result->fetch_row()) {
    print_r($row);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(
    [f1] => Hello
    [f2] => World
    [f3] => !
)
array(
    [id] => 2
)
]]>
    </screen>
   </example>
  </para>

 </section>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
