<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351133 Maintainer: takagi Status: ready -->
<refentry xml:id="function.db2-num-rows" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>db2_num_rows</refname>
  <refpurpose>
   SQL 文によって変更された行の数を返す
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>db2_num_rows</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
  </methodsynopsis>


  <para>
   SQL 文によって削除、挿入あるいは更新された行の数を返します。
  </para>
  <para>
   SELECT 文が返す行の数を取得するには、調べたい SELECT
   文と同じ述部を持つ SELECT COUNT(*) を発行し、その値を取得します。
  </para>
  <para>
   SELECT 文が返す行の数を調べて 0 の場合には別の処理を行うようなロジックを
   アプリケーションで使用している場合、その代わりに
   <function>db2_fetch_assoc</function>、<function>db2_fetch_both</function>、
   <function>db2_fetch_array</function> あるいは <function>db2_fetch_row</function>
   を使用して最初の行を取得し、
   結果が &false; の場合には別の処理を行うという方法を検討してください。
  </para>

  <note>
   <para>
    スクロール可能なカーソルを使用して SELECT 文を発行した場合は、
    <function>db2_num_rows</function> は SELECT 文の結果の行数を返します。
    しかし、スクロール可能なカーソルを使用すると、
    アプリケーションのパフォーマンスが急激に低下します。
    そのため、SELECT 文の結果の行数を知りたいというだけの理由で
    スクロール可能なカーソルを使用するのは避けましょう。
    前進のみのカーソルを使用し、SELECT COUNT(*) をコールするか
    フェッチ関数の返す <type>bool</type> 値を調べるほうが、
    同じ機能をずっと高速に実現できます。
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       結果セットを含む有効な <literal>stmt</literal> リソース。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   指定したステートメントハンドルによって発行された、
   直近の SQL 文によって変更された行の数を返します。
  </para>
 </refsect1>

 <!-- Use when examples exist
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>db2_num_rows</function> example</title>
    <para>
     Any text that describes the purpose of the example, or
     what goes on in the example should go here (inside the
     <example> tag, not out
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if ($anexample === true) {
    echo 'Use the PEAR Coding Standards';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Use the PEAR Coding Standards
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 -->


 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
