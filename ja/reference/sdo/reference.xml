<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->

<reference xml:id="ref.sdo" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>SDO &Functions;</title>

 <partintro>
  <section xml:id="sdo.das.table">
   <title>データアクセスサービス</title>
   <para>
    以下の表で、現在提供されている SDO データアクセスサービスの
    一覧を示します。
    <informaltable>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>DAS 名</entry>
        <entry>説明</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <link linkend="ref.sdo-das-xml">SDO_DAS_XML</link>
        </entry>
        <entry>
         XML データアクセスサービスは、SDO を XML ドキュメントとして
         読み書きします。
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ref.sdodasrel">SDO_DAS_Relational</link>
        </entry>
        <entry>
         PDO を基にしたデータアクセスサービスで、SDO をリレーショナル
         データベースとして読み書きします。同時更新に対しては
         楽観的な実装となっています。
        </entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>
   </para>
  </section>

  <!-- FIXME: Everything below should be removed and follow our OO skeletons -->

  <!-- class definition section -->
  <section xml:id="sdo.classes">
   &reftitle.classes;
   <para>
    SDO は、3 つの系統のインターフェイスから構成されています。ひとつめは
    典型的な SDO アプリケーションで使用されるインターフェイスをカバーする
    もので、これらには 'SDO_' という名前がつけられています。2 番目は
    データオブジェクトのモデルを扱うためのもので、これらには
    'SDO_Model_' という名前がつけられています。最後はデータアクセスサービスで
    使用されるもので、これらには 'SDO_DAS_' という名前がつけられています。
    SDO を使用するほとんどの人は、'SDO_Model_' や 'SDO_DAS_'
    を使用したり理解したりする必要はないでしょう。
   </para>

   <section xml:id="sdo.class.sdo-apis">
    <title>SDO API</title>

    <section xml:id="class.sdo-dataobject">
     <title>
      <classname>SDO_DataObject</classname>
     </title>
     <para>
      データオブジェクトを操作する際のメインとなるインターフェイスです。
      以下で説明するメソッドに加え、SDO_DataObject は
      ArrayAccess、SDO_PropertyAccess (プロパティへのアクセスのために
      <link linkend="object.get">__get()</link> /
      <link linkend="object.set">__set()</link> メソッドをオーバーロードします)、
      Iterator および Countable インターフェイスを継承します。
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.getsequence">getSequence</link>
         - データオブジェクトのシーケンスを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.createdataobject">createDataObject</link>
         - 子データオブジェクトを作成する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.clear">clear</link>
         - データオブジェクトのプロパティの設定を解除する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-dataobject.getcontainer">getContainer</link>
         - このオブジェクトのコンテナ (あるいは「親」) を取得する
        </para>
       </listitem>      
       <listitem>
        <para>
         <link linkend="sdo-dataobject.gettypename">getTypeName</link>
         - このデータオブジェクトの型の名前を取得する
        </para>
       </listitem>     
       <listitem>
        <para>
         <link linkend="sdo-dataobject.gettypenamespaceuri">getTypeNamespaceURI</link>
         - このデータオブジェクトの型の名前空間 URI を取得する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-sequence">
     <title>
      <classname>SDO_Sequence</classname>
     </title>
     <para>
      シーケンスデータオブジェクトが、データオブジェクトのプロパティの
      並び順を保持したままアクセスをおこなったり
      非構造化テキストを許可したりする際に使用するインターフェイスです。
      SDO_Sequence は、インデックスが常に連続した数となるようにします。
      そのため、要素を挿入したり削除したりすると、その他の要素のインデックスが
      増減します。以下で説明するメソッドに加え、SDO_Sequence は
      ArrayAccess、Iterator および Countable インターフェイスを
      継承しています。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-sequence.getproperty">getProperty</link> 
         - シーケンスのインデックスからプロパティを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-sequence.move">move</link>
         - 指定した要素を、現在のプロパティインデックスから別の位置に移動する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-sequence.insert">insert</link>
         - シーケンスに新しい値を挿入する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-list">
     <title>
      <classname>SDO_List</classname>
     </title>
     <para>
      複数の値を保持するプロパティを操作するためのインターフェイスです。
      以下に挙げるメソッドに加え、SDO_List は ArrayAccess、
      Iterator および Countable を継承しています。
      SDO_List は、常にインデックスが連続した数となるようにします。
      そのため、要素を挿入したり削除したりすると
      他の要素のインデックスが変化します。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-list.insert">insert</link> 
         - 新しい値をリストに挿入する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-datafactory">
     <title>
      <classname>SDO_DataFactory</classname>
     </title>
     <para>
      データオブジェクトを作成するためのインターフェイスです。
      ファクトリのモデルに値を設定する (すなわち、作成可能なデータ
      オブジェクトの型および構造情報をもとにデータファクトリを設定する)
      のはデータアクセスサービスの役目です。また、オプションとして
      SDO_DataFactory インターフェイスのインスタンスを返すか、
      それを実装します。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-datafactory.create">create</link> 
         - 新しいデータオブジェクトを作成する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
        
    <section xml:id="class.sdo-exception">
     <title>
      <classname>SDO_Exception</classname>
     </title>
     <para>
      SDO_Exception は、呼び出し元の要求を完了させられなかった際にスローされます。
      SDO_Exception のサブクラスには以下のようなものがあります。
      <itemizedlist>
       <listitem>
        <para>SDO_PropertyNotSetException -
        指定されたプロパティは存在するが、まだ値が設定されていません。
        あるいはデフォルト値が設定されていません。
        </para>
       </listitem>
       <listitem>
        <para>SDO_PropertyNotFoundException -
        指定されたプロパティはデータオブジェクトの型の一部ではありません。
        </para>
       </listitem>
       <listitem>
        <para>SDO_TypeNotFoundException -
        指定された名前空間 URI あるいは型名が見つかりません。
        </para>
       </listitem>
       <listitem>
        <para>SDO_InvalidConversionException -
        代入時に、型の変換を行うことができません。
        </para>
       </listitem>
       <listitem>
        <para>SDO_IndexOutOfBoundsException -
        データオブジェクトやシーケンス、リストにおける数値インデックスが
        有効な範囲にありません。
        </para>
       </listitem>
       <listitem>
        <para>SDO_UnsupportedOperationException -
        その操作が許可されていないため、要求を完了できませんでした。
        例えば読み込み専用のプロパティに値を設定しようとした場合などです。
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <section> &reftitle.methods;
     <para>
      組み込みの
      <link linkend="language.exceptions.extending">Exception</link>
      クラスから継承したものに加え、次のメソッドが追加されています。
     </para>
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-exception.getcause">getCause</link> 
         - この SDO_Exception の原因を取得する
        </para>
       </listitem>

      </itemizedlist>
     </section>
    </section>
    
   </section>



   <section xml:id="sdo.class.sdo-model-apis">
    <title>SDO リフレクション API</title>

    <section xml:id="class.sdo-model-reflectiondataobject">
     <title>
      <classname>SDO_Model_ReflectionDataObject</classname>
     </title>
     <para>
      データオブジェクトのインスタンス自身について、モデルの型や
      プロパティの情報を取得するためのインターフェイスです。
      PHP 5 で使用可能となったリフレクションパターンに従うように
      設計されています。
     </para>
     <section>
       &reftitle.constructor;     
       <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.construct">__construct</link>
         - 新しい SDO_Model_ReflectionDataObject を作成する
        </para>
       </listitem>     
      </itemizedlist>
     </section>
     <section>
       &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.export">export</link>
         - データオブジェクトを表す文字列を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-reflectiondataobject.gettype">getType</link>
         - データオブジェクトの SDO_Model_Type を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend=
          'sdo-model-reflectiondataobject.getinstanceproperties'>getInstanceProperties</link>
         - データオブジェクトのインスタンスのプロパティを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend=
          'sdo-model-reflectiondataobject.getcontainmentproperty'>getContainmentProperty</link>
         - データオブジェクトとの包含関係を定義しているプロパティを取得する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-model-type">
     <title>
      <classname>SDO_Model_Type</classname>
     </title>
     <para>
      データオブジェクトの型に関する情報を取得するための
      インターフェイスです。このインターフェイスは、型の名前および
      名前空間 URI・オープン型のデータを許可するかどうかなどを
      調べるために使用します。
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getname">getName</link>
          - 型の名前を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getnamespaceuri">getNamespaceURI</link>
         - 型の名前空間 URI を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isinstance">isInstance</link>
         - データオブジェクトが特定の型のインスタンスであるかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getproperties">getProperties</link>
         - 型のプロパティを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getproperty">getProperty</link>
         - 型のプロパティを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isdatatype">isDataType</link>
         - この型が基本的なスカラー型であるかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.issequencedtype">isSequencedType</link>
         - この型がシーケンス型であるかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isopentype">isOpenType</link>
         - この型がオープン型であるかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.isabstracttype">isAbstractType</link>
         - この型が抽象型であるかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-model-type.getbasetype">getBaseType</link>
         - この型の基底型を (もし存在すれば) 取得する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-model-property">
     <title>
      <classname>SDO_Model_Property</classname>
     </title>
     <para>
      データオブジェクトのプロパティに関する情報を取得するための
      インターフェイスです。このインターフェイスは、プロパティの型・
      デフォルト値の存在・包含関係の有無・カーディナリティなどを
      調べるために使用します。
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getname">getName</link>
          - プロパティの名前を取得する
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.gettype">getType</link>
          - プロパティの型を取得する
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.ismany">isMany</link>
          - プロパティが複数の値を保持するかどうかを調べる
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.iscontainment">isContainment</link>
          - プロパティが包含関係を保持するかどうかを調べる
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getcontainingtype">getContainingType</link>
          - このプロパティを含んでいる型を取得する
         </para>
        </listitem>
        <listitem>
         <para>
          <link linkend="sdo-model-property.getdefault">getDefault</link>
          - プロパティのデフォルト値を取得する
         </para>
        </listitem>
      </itemizedlist>
     </section>
    </section>



   </section>

   <section xml:id="sdo.class.sdo-das-spis">
    <title>
     SDO データアクセスサービス
     開発者用インターフェイス
    </title>

    <section xml:id="class.sdo-das-dataobject">
     <title>
      <classname>SDO_DAS_DataObject</classname>
     </title>
     <para>
      データアクセスサービスが、データオブジェクトの
      <link linkend="class.sdo-das-changesummary">SDO_DAS_ChangeSummary</link>
      にアクセスするためのインターフェイスです。これは、変更した内容を
      データベースに書き戻す際に、データアクセスサービスがデータの
      衝突を調べるために使用されます。
     </para>
     <section> &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-dataobject.getchangesummary">getChangeSummary</link> 
         - データオブジェクトの変更内容を取得する
        </para>
       </listitem>

      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-changesummary">
     <title>
      <classname>SDO_DAS_ChangeSummary</classname>
     </title>
     <para>
      データオブジェクトの変更履歴にアクセスするためのインターフェイスです。
      ログ取得が有効になってからデータオブジェクトに発生したあらゆる変更が、
      変更内容に含まれます。削除あるいは修正の場合は、変更前の情報も保持されます。
     </para>
     <para>
      ログ取得が有効になっていない場合、ログ取得が無効にされた時点までの
      変更内容が保存されます。ログ取得を再開すると、過去の変更内容は消去されます。
      これは、変更内容を DAS で書き出した後にデータオブジェクトを
      再利用する場合に有用です。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.beginlogging">beginLogging</link> 
         - データオブジェクトの変更履歴のログ取得を開始する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.endlogging">endLogging</link> 
         - データオブジェクトの変更履歴のログ取得を終了する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.islogging">isLogging</link> 
         - ログ取得が有効になっているかどうかを調べる
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getchangeddataobjects">getChangedDataObjects</link> 
         - 変更されたデータオブジェクトの一覧を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getchangetype">getChangeType</link> 
         - データオブジェクトの変更の型を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getoldvalues">getOldValues</link> 
         - データオブジェクトの変更前の値を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-changesummary.getoldcontainer">getOldContainer</link> 
         - 削除されたデータオブジェクトの削除前のコンテナを取得する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-setting">
     <title>
      <classname>SDO_DAS_Setting</classname>
     </title>
     <para>
      プロパティの古い値にアクセスするためのインターフェイスです。
      設定の一覧は、
      <link linkend="sdo-das-changesummary.getoldvalues">getOldValues</link>
      で返されます。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getpropertyindex">getPropertyIndex</link> 
         - 変更されたプロパティのプロパティインデックスを取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getpropertyname">getPropertyName</link> 
         - 変更されたプロパティのプロパティ名を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getvalue">getValue</link> 
         - 変更されたプロパティの古い値を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.getlistindex">getListIndex</link> 
         - 複数の値を持つプロパティだった場合に、古い値のインデックスの
         一覧を取得する
        </para>
       </listitem>
       <listitem>
        <para>
         <link linkend="sdo-das-setting.isset">isSet</link>
         - 変更前に、プロパティが設定されていたかどうかを調べる
         </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>

    <section xml:id="class.sdo-das-datafactory">
     <title>
      <classname>SDO_DAS_DataFactory</classname>
     </title>
     <para>
      SDO_DataObject のモデルを作成するインターフェイスです。
      SDO_DAS_DataFactory は抽象クラスで、それを実装した具象データファクトリを
      返すスタティックメソッドを提供します。この実装クラスを使用して、
      データアクセスサービスが SDO モデルを作成します。
      例えばリレーショナルデータアクセスサービスは、リレーショナル
      データベースのスキーマをもとにして SDO_DAS_DataFactory モデルを
      作成し、そこに値を設定します。
     </para>
     <section>
      &reftitle.methods;
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.getdatafactory">getDataFactory</link> 
         - 具象データファクトリのインスタンスを取得するためのスタティックメソッド
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.addtype">addType</link> 
         - SDO モデルに新しい型を追加する
        </para>
       </listitem>
      </itemizedlist>
      <itemizedlist>
       <listitem>
        <para>
         <link linkend="sdo-das-datafactory.addpropertytotype">addPropertyToType</link> 
         - SDO モデルの型定義に新しいプロパティを追加する
        </para>
       </listitem>
      </itemizedlist>
     </section>
    </section>
   </section>
  </section>

 </partintro>

 &reference.sdo.entities.sdo-das-changesummary;
 &reference.sdo.entities.sdo-das-datafactory;
 &reference.sdo.entities.sdo-das-dataobject;
 &reference.sdo.entities.sdo-das-setting;
 &reference.sdo.entities.sdo-datafactory;
 &reference.sdo.entities.sdo-dataobject;
 &reference.sdo.entities.sdo-exception;
 &reference.sdo.entities.sdo-list;
 &reference.sdo.entities.sdo-model-property;
 &reference.sdo.entities.sdo-model-reflectiondataobject;
 &reference.sdo.entities.sdo-model-type;
 &reference.sdo.entities.sdo-sequence;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
