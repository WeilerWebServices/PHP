<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: hirokawa Status: ready -->
<refentry xml:id="function.stream-socket-server" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_socket_server</refname>
  <refpurpose>インターネットドメインまたは Unix ドメインのサーバーソケットを作成する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>stream_socket_server</methodname>
   <methodparam><type>string</type><parameter>local_socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">errno</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">errstr</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>STREAM_SERVER_BIND | STREAM_SERVER_LISTEN</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>local_socket</parameter> で指定された接続ポイントに、
   ストリームまたはデータグラムソケットによる接続を作成します。
  </para>
  <para>
   この関数は、ソケットのみを作成します。接続待ちの状態に入るには、
   <function>stream_socket_accept</function> 関数を使います。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>local_socket</parameter></term>
     <listitem>
      <para>
       作成されるソケットのタイプは、<literal>[トランスポート]://[ターゲット]</literal>
       という形式の URL フォーマットによって指定された
       トランスポートによって決定されます:
      </para>
      <para>
       TCP や UDP といったインターネットドメインのソケット (<constant>AF_INET</constant>)
       には、<parameter>remote_socket</parameter> パラメータの
       <literal>ターゲット</literal> の部分は、ホスト名または IP アドレスと、
       それに続くコロンで区切られたポート番号から構成されていなければなりません。
       Unix ドメインのソケットの場合は、<parameter>ターゲット</parameter>
       の部分は、ファイルシステムにおけるソケットのファイルを指定しなくては
       いけません。
      </para>
      <para>
       システムの種類によって、Unix ドメインのソケットが利用できない場合があります。
       利用できるトランスポートの種類は、<function>stream_get_transports</function>
       によって知ることができます。
       組み込みのトランスポートのリストは、<xref linkend="transports"/>
       を参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errno</parameter></term>
     <listitem>
      <para>
       オプションの
       <parameter>errno</parameter> と <parameter>errstr</parameter>
       パラメータが存在するときは、そこにシステムレベルの
       <literal>socket()</literal>、<literal>bind()</literal> および
       <literal>listen()</literal> のコールにおいて発生した
       実際のシステムレベルのエラーを返します。
       もし、<parameter>errno</parameter> に返された値が <literal>0</literal>
       で、かつ &false; が返された場合、<literal>bind()</literal>
       コールを行う前にエラーが発生したことを示しており、これは多くの場合
       ソケットの初期化に失敗したことを示しています。
       <parameter>errno</parameter> と <parameter>errstr</parameter>
       パラメータは常に参照渡しとなることに留意してください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errstr</parameter></term>
     <listitem>
      <para>
       <parameter>errno</parameter> の説明を参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       ソケット作成フラグの任意の組み合わせを指定できるビットフィールドです。
      </para>
      <note>
       <para>
        UDP ソケットに対しては、<constant>STREAM_SERVER_BIND</constant> を
        <parameter>flags</parameter> パラメータとして使用する必要があります。
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   作成したストリーム、あるいはエラー時に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>TCP サーバーソケットの使用</title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("tcp://0.0.0.0:8000", $errno, $errstr);
if (!$socket) {
  echo "$errstr ($errno)<br />\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fwrite($conn, 'The local time is ' . date('n/j/Y g:i a') . "\n");
    fclose($conn);
  }
  fclose($socket);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   下記の例は、PHP のスクリプトが、どうやって
   <function>stream_socket_client</function> で示したような、
   問い合わせに応答するタイムサーバーとして機能するかを示したものです。
   <note>
    <simpara>
     1024 番よりも小さいポート番号のサーバーソケットを作成する場合、
     多くのシステムでは root 権限が必要となります。
    </simpara>
   </note>
   <example>
    <title>UDP サーバーソケットを利用する</title>
    <programlisting role="php">
<![CDATA[
<?php
$socket = stream_socket_server("udp://127.0.0.1:1113", $errno, $errstr, STREAM_SERVER_BIND);
if (!$socket) {
    die("$errstr ($errno)");
}

do {
    $pkt = stream_socket_recvfrom($socket, 1, 0, $peer);
    echo "$peer\n";
    stream_socket_sendto($socket, date("D M j H:i:s Y\r\n"), 0, $peer);
} while ($pkt !== false);

?>

]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &ipv6.brackets;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_socket_client</function></member>
   <member><function>stream_set_blocking</function></member>
   <member><function>stream_set_timeout</function></member>
   <member><function>fgets</function></member>
   <member><function>fgetss</function></member>
   <member><function>fwrite</function></member>
   <member><function>fclose</function></member>
   <member><function>feof</function></member>
   <member><link linkend="ref.curl">Curl 拡張モジュール</link></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
