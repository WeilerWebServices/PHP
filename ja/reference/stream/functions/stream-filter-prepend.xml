<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350645 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.stream-filter-prepend" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>stream_filter_prepend</refname>
  <refpurpose>フィルタをストリームに付加する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>stream_filter_prepend</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>filtername</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>read_write</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>filtername</parameter> で指定されたフィルタを、
   <parameter>stream</parameter> に付加されているフィルタのリストに加えます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       対象となるストリーム。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filtername</parameter></term>
     <listitem>
      <para>
       フィルタ名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>read_write</parameter></term>
     <listitem>
      <para>
       デフォルトでは、 <function>stream_filter_prepend</function> は
       ストリームが読み込み用に開かれている場合は (つまり、オープンモードが
       <literal>r</literal> あるいは <literal>+</literal> を伴う場合は)、
       フィルタを <literal>リードフィルタチェイン</literal> に追加し、
       ストリームが書き出し用に開かれている場合は(つまり、オープンモードが
       <literal>w</literal> か <literal>a</literal>か、あるいは<literal>+</literal> を伴う場合は)、
       <literal>ライトフィルターチェィン</literal>にも追加します。
       <constant>STREAM_FILTER_READ</constant>・
       <constant>STREAM_FILTER_WRITE</constant>・
       <constant>STREAM_FILTER_ALL</constant> を <parameter>read_write</parameter>パラメータに渡すことで、この挙動を変えることができます。
       このパラメータを使った例については、
       <function>stream_filter_append</function> を参照ください。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
       このフィルタは、指定された <parameter>params</parameter> と共に、
       リストの<emphasis>先頭</emphasis>に追加され、ストリームに対する操作の中で最初に呼び出されます。
       フィルタをリストの末尾に加えたいときは、<function>stream_filter_append</function>
       を使ってください。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合にリソース、失敗した場合に &false; を返します。
   このリソースは、<function>stream_filter_remove</function>
   をコールする際にこのフィルタインスタンスを参照するために使用可能です。
  </para>

  <para>
   &false; が返されるのは、<parameter>stream</parameter> がリソースではない場合や
   <parameter>filtername</parameter> が見つからない場合です。
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>カスタム(ユーザー)フィルタを使うには</title>
   <simpara>
    カスタムフィルタを <parameter>filtername</parameter> に指定するためには、
    まず <function>stream_filter_register</function> 関数でそれを登録しておく
    必要があります。
   </simpara>
  </note>
  <note>
   <simpara>
    ストリームデータは（ローカルおよびリモートの）リソースからチャンク単位で
    読み込まれ、内部バッファに保持されます。新しいフィルタがストリームに
    追加されても、内部バッファにあるデータのうち既に他のフィルタの処理が
    終わっているものは新しいフィルタでは<emphasis>処理されません</emphasis>。
    これは <function>stream_filter_apppend</function> の挙動とは違います。
   </simpara>
  </note>
  <note>
   <simpara>
    フィルタが読み込み用および書き込み用に追加されると、フィルタのインスタンスが
    2 つ作成されます。両方のフィルタリソースを取得するには、
    <constant>STREAM_FILTER_READ</constant> と
    <constant>STREAM_FILTER_WRITE</constant> で
    <function>stream_filter_prepend</function> を 2 回コールしなければなりません。
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>stream_filter_register</function></member>
   <member><function>stream_filter_append</function></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
