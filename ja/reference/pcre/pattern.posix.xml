<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331945 Maintainer: takagi Status: ready -->
<article xml:id="reference.pcre.pattern.posix" xmlns="http://docbook.org/ns/docbook">
 <title>POSIX 正規表現との違い</title>

 <para>
  PHP 5.3.0 以降、<link linkend="book.regex">POSIX 正規表現</link>
  拡張モジュールは非推奨となりました。POSIX の正規表現と
  PCRE の正規表現にはさまざまな違いがあります。
  このページでは、PCRE への移行の際に知っておくべきもっとも重要な違いをまとめます。
 </para>

 <para>
  <orderedlist>
   <listitem>
    <simpara>
     PCRE 関数では、パターンを <link
     linkend="regexp.reference.delimiters">デリミタ</link> で囲まなければなりません。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     POSIX とは異なり、PCRE 拡張モジュールには大文字小文字を区別しないマッチング専用の関数がありません。
     同等の機能は、<emphasis>i</emphasis> (<literal>PCRE_CASELESS</literal>) <link
     linkend="reference.pcre.pattern.modifiers">パターン修飾子</link>
     でサポートしています。それ以外にもパターン修飾子がいくつかあり、
     マッチングの振る舞いを変えることができます。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     POSIX 関数は、いちばん左側にある最も長くマッチするパターンを探します。
     しかし PCRE は、マッチするパターンが最初に見つかった時点で処理を終えます。
     マッチするパターンがまったくない文字列の場合は何も相違はありませんが、
     マッチするパターンがある場合は結果や処理速度に大きな影響が出る可能性があります。
    </simpara>
    <simpara>
     この違いを説明するために、Jeffrey Friedl の
     "Mastering Regular Expressions (「詳説 正規表現」)" にある以下の例を考えてみましょう。
     PCRE でパターン
     <literal>one(self)?(selfsufficient)?</literal> を文字列
     <literal>oneselfsufficient</literal> に適用すると
     <literal>oneself</literal> にマッチしますが、
     POSIX の場合は文字列全体 <literal>oneselfsufficient</literal> にマッチします。
     どちらの結果も元の文字列にマッチしますが、POSIX の場合はもっとも長いものを結果とするのです。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     POSIX における "文字クラス" の定義は PCRE とは異なります。
     シンプルな角括弧を使って明示的な文字にマッチさせるというのが PCRE の
     <link linkend="regexp.reference.character-classes">文字クラス</link>
     ですが、POSIX の照合順序や文字クラスや等価文字には対応していません。
    </simpara>
    <simpara>
     最初と最後が <literal>:</literal>、<literal>.</literal> あるいは <literal>=</literal>
     で囲まれている文字クラスを PCRE で使うと、これらのサポートしていない機能を使うとして、コンパイルエラーが発生します。
    </simpara>
   </listitem>
  </orderedlist>
 </para>

 <para>
  <table>
   <title>関数の置き換え</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>POSIX</entry>
      <entry>PCRE</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><function>ereg_replace</function></entry>
      <entry><function>preg_replace</function></entry>
     </row>
     <row>
      <entry><function>ereg</function></entry>
      <entry><function>preg_match</function></entry>
     </row>
     <row>
      <entry><function>eregi_replace</function></entry>
      <entry><function>preg_replace</function></entry>
     </row>
     <row>
      <entry><function>eregi</function></entry>
      <entry><function>preg_match</function></entry>
     </row>
     <row>
      <entry><function>split</function></entry>
      <entry><function>preg_split</function></entry>
     </row>
     <row>
      <entry><function>spliti</function></entry>
      <entry><function>preg_split</function></entry>
     </row>
     <row>
      <entry><function>sql_regcase</function></entry>
      <entry><emphasis>No equivalent</emphasis></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>
</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
