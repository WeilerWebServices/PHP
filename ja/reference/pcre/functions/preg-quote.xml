<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350655 Maintainer: hirokawa Status: ready -->
<!-- Credits: haruki,mumumu -->
<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>正規表現文字をクオートする</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> は、<parameter>str</parameter> 
   を引数とし、正規表現構文の特殊文字の前にバックスラッシュを挿入します。
   この関数は、実行時に生成される文字列をパターンとしてマッチングを行う必要があり、
   その文字列には正規表現の特殊文字が含まれているかも知れない場合に有用です。
  </para>
  <para>
   正規表現の特殊文字は、次のものです。
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | : - #</literal>
  </para>
  <para>
   <literal>/</literal> は正規表現の特殊文字ではないことに注意しましょう。
  </para>
  <note>
   <para>
    <function>preg_quote</function> は、
    <function>preg_replace</function> などにおける $replacement
    文字列に使うことを想定したものではありません。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       入力文字列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       オプションの <parameter>delimiter</parameter> を指定すると、
       ここで指定した文字もエスケープされます。これは、PCRE 関数が使用する
       デリミタをエスケープする場合に便利です。<literal>/</literal> がデリミタとしては
       最も一般的に使用されています。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   クォートされた (エスケープした) 文字列を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.3.0</entry>
       <entry>
        <literal>#</literal> 文字がクォートされるようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>preg_quote</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$keywords = '$40 for a g3/400';
$keywords = preg_quote($keywords, '/');
echo $keywords; // \$40 for a g3\/400 を返します
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>テキスト内の単語の斜体変換</title>
    <programlisting role="php">
<![CDATA[
<?php
// この例では、preg_quote($word) を使って、アスタリスクが
// 正規表現での特殊な意味を帯びないようにしています

$textbody = "This book is *very* difficult to find.";
$word = "*very*";
$textbody = preg_replace ("/" . preg_quote($word, '/') . "/",
                          "<i>" . $word . "</i>",
                          $textbody);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">PCRE パターン</link></member>
    <member><function>escapeshellcmd</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
