<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350654 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.token-get-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>token_get_all</refname>
  <refpurpose>指定したソースを PHP トークンに分割する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>token_get_all</methodname>
   <methodparam><type>string</type><parameter>source</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>token_get_all</function> は指定した文字列
   <parameter>source</parameter> をパースし、Zend engine の
   字句解析スキャナにより PHP 言語のトークンに分割します。
  </para>
  <para>
   パーサトークンの一覧を得るには、<xref linkend="tokens"/> を参照するか、
   あるいは <function>token_name</function> でトークン値を文字列表現に
   変換します。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>source</parameter></term>
     <listitem>
      <para>
       パースする PHP ソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       以下のフラグが使えます。
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>TOKEN_PARSE</constant> -
          特定のコンテキストで予約語を使った場合に、それを認識する。
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   トークン ID の配列を返します。配列の各要素には、一文字単位の文字列
   (例: <literal>;</literal>、<literal>.</literal>、
   <literal>&gt;</literal>、<literal>!</literal> など...)、
   またはトークンのインデックスを 0 番目の要素、トークンの文字列表現を 1 番目の要素、
   行番号を 2 番目の要素とする配列が含まれます。
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>token_get_all</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$tokens = token_get_all('<?php echo; ?>');

foreach ($tokens as $token) {
    if (is_array($token)) {
        echo "Line {$token[2]}: ", token_name($token[0]), " ('{$token[1]}')", PHP_EOL;
    }
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Line 1: T_OPEN_TAG ('<?php ')
Line 1: T_ECHO ('echo')
Line 1: T_WHITESPACE (' ')
Line 1: T_CLOSE_TAG ('?>')
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>token_get_all</function> の間違った使いかた</title>
    <programlisting role="php">
<![CDATA[
<?php
$tokens = token_get_all('/* comment */');

foreach ($tokens as $token) {
    if (is_array($token)) {
        echo "Line {$token[2]}: ", token_name($token[0]), " ('{$token[1]}')", PHP_EOL;
    }
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Line 1: T_INLINE_HTML ('/* comment */')
]]>
    </screen>
   </example>
   先ほどの例では、文字列が <constant>T_COMMENT</constant>
   ではなく <constant>T_INLINE_HTML</constant> とパースされていたことに注意しましょう。
   これは、指定した "code" の中に開始タグが含まれていないからです。
   通常のファイルで、コメントを PHP タグの外部に書いた場合にも同じようになります。
  </para>
  <para>
   <example>
    <title>
     予約語を使ったクラスでの <function>token_get_all</function> の例
    </title>
    <programlisting role="php">
<![CDATA[
<?php

$source = <<<'code'
<?php

class A
{
    const PUBLIC = 1;
}
code;

$tokens = token_get_all($source, TOKEN_PARSE);

foreach ($tokens as $token) {
    if (is_array($token)) {
        echo token_name($token[0]) , PHP_EOL;
    }
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
T_OPEN_TAG
T_WHITESPACE
T_CLASS
T_WHITESPACE
T_STRING
T_CONST
T_WHITESPACE
T_STRING
T_LNUMBER
]]>
    </screen>
   </example>
   <constant>TOKEN_PARSE</constant> フラグを指定しなければ、最後から二番目のトークン
   (<constant>T_STRING</constant>) が
   <constant>T_PUBLIC</constant> と解釈されてしまいます。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>token_name</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
