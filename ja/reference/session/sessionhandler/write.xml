<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 349708 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->

<refentry xml:id="sessionhandler.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandler::write</refname>
  <refpurpose>セッションのデータを書き込む</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>SessionHandler::write</methodname>
   <methodparam><type>string</type><parameter>session_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>session_data</parameter></methodparam>
  </methodsynopsis>
  <para>
   セッションのデータをセッションストレージに書き込みます。
   リクエストの終了時や <function>session_write_close</function> を実行したとき、そして
   <function>session_register_shutdown</function> が失敗したときにコールされます。
   PHP は、このメソッドの返り値を受け取るとすぐに <function>SessionHandler::close</function> をコールします。
  </para>
  <para>
   このメソッドは、このハンドラが <function>session_set_save_handler</function>
   で設定される前に ini 設定
   <link linkend="ini.session.save-handler">session.save_handler</link>
   で定義されていた PHP の保存ハンドラをラップします。
  </para>
  <para>
   このクラスを継承して拡張する場合は、親の <parameter>write</parameter>
   メソッドをコールすればこのメソッドのラッパーを実行でき、それに付随する内部コールバックも実行されます。
   こうすれば、メソッドをオーバーライドしたり処理を横取りしてフィルタを追加したり
   (親の <parameter>write</parameter> メソッドに送る前に <parameter>$data</parameter> を暗号化したりなど)
   できます。
  </para>
  <para>
   このメソッドに関する詳細は、
   <function>SessionHandlerInterface::write</function>
   のドキュメントを参照ください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>session_id</parameter></term>
    <listitem>
     <para>
      セッション id。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>session_data</parameter></term>
    <listitem>
     <para>
      エンコードされたセッションのデータ。
      これは、PHP が内部的にスーパーグローバル <varname>$_SESSION</varname>
      をエンコードしてシリアライズし、それを渡したものです。
      セッションが使うシリアライズ方式は、通常のシリアライズとは別のものであることに注意しましょう。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
    </member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
