<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350068 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,mumumu -->
<refentry xml:id="mysqli-result.fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_array</refname>
  <refname>mysqli_fetch_array</refname>
  <refpurpose>結果の行を連想配列・数値添字配列あるいはその両方の形式で取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>mixed</type><methodname>mysqli_result::fetch_array</methodname>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mixed</type><methodname>mysqli_fetch_array</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>
   取得した行に対応する配列を返します。 <parameter>result</parameter>
   パラメータがあらわす結果セットに対して行がなければ、&null; を返します。
  </para>
  <para>
   <function>mysqli_fetch_array</function> は
   <function>mysqli_fetch_row</function> 関数の拡張版です。データを数値添字の
   配列に格納することに加えて、<function>mysqli_fetch_array</function>
   関数は、フィールド名をキーとする連想配列にもデータを格納します。
  </para>
  &database.field-case;
  &database.fetch-null;
  <para>
   もし 2 つ以上のカラムが同じフィールド名であった場合は、最後に現れた
   カラムが優先され、以前のデータを上書きします。同名の複数のカラムに
   アクセスする場合、数値添字版の行データを使用しなければなりません。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>resulttype</parameter></term>
     <listitem>
      <para>
       このオプションは、
       結果の行データから返す配列の型を指定します。ここで指定可能な値は
       定数 <constant>MYSQLI_ASSOC</constant>、
       <constant>MYSQLI_NUM</constant> あるいは <constant>MYSQLI_BOTH</constant>.
       のいずれかです。
      </para>
      <para>
       <constant>MYSQLI_ASSOC</constant> 定数を指定すると、この関数は
       <function>mysqli_fetch_assoc</function> と同じ結果を返します。一方
       <constant>MYSQLI_NUM</constant> を指定すると、<function>mysqli_fetch_row</function>
       関数と同じ結果となります。最後の <constant>MYSQLI_BOTH</constant> を指定すると、
       ひとつの配列にこれら両方の属性を含めます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   取得した行に対応する文字列の配列を返します。結果セットにもう行がない場合には
   &null; を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if ($mysqli->connect_errno) {
    printf("Connect failed: %s\n", $mysqli->connect_error);
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = $mysqli->query($query);

/* 数値添字配列 */
$row = $result->fetch_array(MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);

/* 連想配列 */
$row = $result->fetch_array(MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* 連想配列および数値添字配列 */
$row = $result->fetch_array(MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);

/* 結果セットを開放します */
$result->free();

/* 接続を閉じます */
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = mysqli_query($link, $query);

/* 数値添字配列 */
$row = mysqli_fetch_array($result, MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);

/* 連想配列 */
$row = mysqli_fetch_array($result, MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* 連想配列および数値添字配列 */
$row = mysqli_fetch_array($result, MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);

/* 結果セットを開放します */
mysqli_free_result($result);

/* 接続を閉じます */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Kabul (AFG)
Qandahar (AFG)
Herat (AFG)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_assoc</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
