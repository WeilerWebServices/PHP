<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 293632 Maintainer: takagi Status: ready -->
<chapter xml:id="mysqli.persistconns" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 <title>mysqli 拡張モジュールでの持続的接続</title>

 <para>
  PHP 5.3 以降、<literal>mysqli</literal>
  拡張モジュールで持続的接続がサポートされるようになりました。
  PDO MYSQL や ext/mysql では以前からサポートされていました。
  持続的接続とは、クライアントプロセスとデータベースとの間の接続を
  何度も作っては破棄するかわりにクライアントプロセス側で再利用しようというものです。
  これにより、必要なときに毎回新規接続を作成するというオーバーヘッドが軽減でき、
  未使用の接続はキャッシュされて再利用できるようになります。
 </para>
 
 <para>
  他の mysql 用拡張モジュールとは異なり、mysqli には持続的接続のオープン専用の関数はありません。
  持続的な接続をオープンするには、接続時にホスト名の前に
  <literal>p:</literal> をつけなければなりません。
 </para>

 <para>
  持続的接続の問題は、予期せぬ状態でクライアント側に残ってしまう可能性があるということです。
  たとえば、テーブルロックを行った状態でクライアントが突然終了してしまったとしましょう。
  新しいクライアントプロセスがこの持続的接続を使用する際には、
  <quote>そのまま</quote> の状態でこれを使うことになります。
  新しいクライアントプロセスがこの持続的接続をきちんと使うためには事前になんらかの後始末が必要となります。
  これはプログラマにとっては面倒な作業です。
 </para>

 <para>
  しかし、<literal>mysqli</literal>
  拡張モジュールの持続的接続には後始末を行うコードが組み込まれています。
  <literal>mysqli</literal> は、以下のような後始末を行います。
 </para>

 <itemizedlist>

  <listitem>
   <para>
    アクティブなトランザクションのロールバック
   </para>
  </listitem>

  <listitem>
   <para>
    一時テーブルを閉じて drop
   </para>
  </listitem>

  <listitem>
   <para>
    テーブルロックの解除
   </para>
  </listitem>

  <listitem>
   <para>
    セッション変数の初期化
   </para>
  </listitem>

  <listitem>
   <para>
    プリペアドステートメントを閉じる (PHP では常に発生)
   </para>
  </listitem>

  <listitem>
   <para>
    ハンドラを閉じる
   </para>
  </listitem>

  <listitem>
   <para>
    <function>GET_LOCK</function> で取得したロックの開放
   </para>
  </listitem>

 </itemizedlist>

 <para>
  これにより、コネクションプールから取得する接続がクリーンな状態であることが確実になり、
  そのままクライアントプロセスで使用できるようになります。
 </para>

 <para>
  <literal>mysqli</literal> 拡張モジュールのクリーンアップ処理は、
  C の API 関数 <literal>mysql_change_user()</literal>
  を自動的にコールすることで行っています。
 </para>

 <para>
  しかし、自動クリーンアップ処理にはいい面もあれば悪い面もあります。
  利点としては、プログラマがクリーンアップのコードを書くことを気にせずにすむということがあります。
  自動的にコールされるからです。しかし、多少動作が遅くなるという
  <emphasis>可能性</emphasis> もあります。
  接続がコネクションプールに戻される際に毎回クリーンアップが必要となるからです。
 </para>

 <para>
  自動クリーンアップのコードを無効にしたい場合は、

  <constant>MYSQLI_NO_CHANGE_USER_ON_PCONNECT</constant>

  を define して PHP をコンパイルします。
 </para>

 <note>
  <para>
   <literal>mysqli</literal> 拡張モジュールは、
   MySQL Native Drive あるいは MySQL Client Library
   のどちらを使っている場合でも持続的接続をサポートします。
  </para>
 </note>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
