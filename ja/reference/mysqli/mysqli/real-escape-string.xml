<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350059 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="mysqli.real-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::real_escape_string</refname>
  <refname>mysqli::escape_string</refname>
  <refname>mysqli_real_escape_string</refname>
  <refpurpose>接続の現在の文字セットを考慮して、SQL 文で使用する文字列の特殊文字をエスケープする</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>string</type><methodname>mysqli::escape_string</methodname>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis role="oop">
   <type>string</type><methodname>mysqli::real_escape_string</methodname>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>string</type><methodname>mysqli_real_escape_string</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数を使用して、SQL 文中で使用できる正当な形式の SQL 文字列を作成します。
   文字列 <literal>escapestr</literal> が、エスケープされた
   SQL に変換されます。その際、接続で使用している現在の文字セットが考慮されます。
  </para>
  <caution>
   <title>セキュリティ: デフォルトの文字セット</title>
   <para>
    サーバーレベルで設定するなり API 関数
    <function>mysqli_set_charset</function> を使うなりして、
    文字セットを明示しておく必要があります。この文字セットが
    <function>mysqli_real_escape_string</function>
    に影響を及ぼします。詳細は
    <link linkend="mysqlinfo.concepts.charset">文字セットの概念</link>
    を参照ください。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>escapestr</parameter></term>
     <listitem>
      <para>
       エスケープする文字列。
      </para>
      <para>
       エンコードされる文字は <literal>NUL (ASCII 0), \n, \r, \, ', ", および
       Control-Z</literal> です。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   エスケープ済みの文字列を返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   有効な MySQLi 接続を渡さずにこの関数を実行すると &null; が返され、
   <constant>E_WARNING</constant> レベルのエラーが発生します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::real_escape_string</methodname> の例</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TEMPORARY TABLE myCity LIKE City");

$city = "'s Hertogenbosch";

/* このクエリは失敗します。なぜなら $city をエスケープしていないからです */
if (!$mysqli->query("INSERT into myCity (Name) VALUES ('$city')")) {
    printf("Error: %s\n", $mysqli->sqlstate);
}

$city = $mysqli->real_escape_string($city);

/* $city をエスケープしたので、このクエリは正しく動作します */
if ($mysqli->query("INSERT into myCity (Name) VALUES ('$city')")) {
    printf("%d Row inserted.\n", $mysqli->affected_rows);
}

$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($link, "CREATE TEMPORARY TABLE myCity LIKE City");

$city = "'s Hertogenbosch";

/* このクエリは失敗します。なぜなら $city をエスケープしていないからです */
if (!mysqli_query($link, "INSERT into myCity (Name) VALUES ('$city')")) {
    printf("Error: %s\n", mysqli_sqlstate($link));
}

$city = mysqli_real_escape_string($link, $city);

/* $city をエスケープしたので、このクエリは正しく動作します */
if (mysqli_query($link, "INSERT into myCity (Name) VALUES ('$city')")) {
    printf("%d Row inserted.\n", mysqli_affected_rows($link));
}

mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Error: 42000
1 Row inserted.
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    これまでに <function>mysql_real_escape_string</function> をよく使っていた人は、
    <function>mysqli_real_escape_string</function> の引数が
    <function>mysql_real_escape_string</function> とは違うことに注意しましょう。
    <function>mysqli_real_escape_string</function> の最初の引数は
    <parameter>link</parameter> であり、
    <function>mysql_real_escape_string</function>
    のようにエスケープしたい文字列を最初に書くのではなくなりました。
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_set_charset</function></member>
    <member><function>mysqli_character_set_name</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
