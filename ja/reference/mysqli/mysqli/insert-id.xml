<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342219 Maintainer: takagi Status: ready -->
<refentry xml:id="mysqli.insert-id" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::$insert_id</refname>
  <refname>mysqli_insert_id</refname>
  <refpurpose>直近のクエリで使用した自動生成の ID を返す</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <fieldsynopsis><type>mixed</type><varname linkend="mysqli.insert-id">mysqli->insert_id</varname></fieldsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mixed</type><methodname>mysqli_insert_id</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mysqli_insert_id</function> 関数は、AUTO_INCREMENT 属性を
   持つカラムがあるテーブル上でのクエリ (通常は INSERT) により生成された ID を返します。
   この接続を介して INSERT 文または UPDATE 文が送信されなかった場合、あるいは
   変更されたテーブルに AUTO_INCREMENT 属性を持つカラムがなかった場合は
   この関数はゼロを返します。
  </para>
  <note>
   <para>
    LAST_INSERT_ID() 関数を使用して INSERT あるいは UPDATE ステートメントを
    実行すると、<function>mysqli_insert_id</function> 関数の返す値も
    変更されます。
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   直前のクエリで更新された <literal>AUTO_INCREMENT</literal>
   フィールドの値を返します。接続での直前のクエリがない場合や
   クエリが <literal>AUTO_INCREMENT</literal> の値を更新しなかった場合は
   ゼロを返します。
  </para>
  <note>
   <para>
    もし数値が int の最大値をこえた場合、<function>mysqli_insert_id</function>
    は文字列で結果を返します。
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><varname>$mysqli->insert_id</varname> の例</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
$mysqli->query($query);

printf ("New Record has id %d.\n", $mysqli->insert_id);

/* テーブルを削除します */
$mysqli->query("DROP TABLE myCity");

/* 接続を閉じます */
$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* 接続状況をチェックします */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($link, "CREATE TABLE myCity LIKE City");

$query = "INSERT INTO myCity VALUES (NULL, 'Stuttgart', 'DEU', 'Stuttgart', 617000)";
mysqli_query($link, $query);

printf ("New Record has id %d.\n", mysqli_insert_id($link));

/* テーブルを削除します */
mysqli_query($link, "DROP TABLE myCity");

/* 接続を閉じます */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
New Record has id 1.
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
