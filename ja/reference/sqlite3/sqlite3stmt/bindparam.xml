<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351133 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->

<refentry xml:id="sqlite3stmt.bindparam" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3Stmt::bindParam</refname>
  <refpurpose>パラメータを変数にバインドする</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>SQLite3Stmt::bindParam</methodname>
   <methodparam><type>mixed</type><parameter>sql_param</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">param</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
  </methodsynopsis>
  <para>
   パラメータを変数にバインドします。
  </para>
  <caution>
   <para>
    PHP 7.2.14 と 7.3.0 より前のバージョンでは、
    バインドされた値が適切に後の <methodname>SQLite3Stmt::execute</methodname> 
    の呼び出しで更新されるべき場合、
    <methodname>SQLite3Stmt::execute</methodname> をはじめて呼んだ後に
    <methodname>SQLite3Stmt::reset</methodname> を呼び出さなければなりませんでした。
    <methodname>SQLite3Stmt::reset</methodname> が呼び出されなかった場合、
    <methodname>SQLite3Stmt::bindParam</methodname> に渡された変数に代入された値が変化したり、
    <methodname>SQLite3Stmt::bindParam</methodname> を再度呼び出したりしても、
    バインドされた値は決して変わりませんでした。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sql_param</parameter></term>
     <listitem>
      <para>
       バインドされるべき文中の値を識別する
       <type>string</type> (名前付きパラメータの場合) または
       (位置パラメータの場合) <type>int</type>。
       名前付きパラメータがコロン (<literal>:</literal>) や
       アットマーク (<literal>@</literal>) 
       ではじまっていない場合、コロンが自動的に名前の前に付加されます。
       位置パラメータは <literal>1</literal> から始まります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>param</parameter></term>
     <listitem>
      <para>
       変数にバインドするパラメータ。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       バインドするパラメータのデータ型。
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLITE3_INTEGER</constant>: 符号付き整数。
          値の大きさに応じて 1, 2, 3, 4, 6, あるいは 8 バイトで格納されます。
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_FLOAT</constant>: 浮動小数点数値。
          8 バイトの IEEE 浮動小数点数値として格納されます。
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_TEXT</constant>: テキスト文字列。
          データベースのエンコーディング (UTF-8, UTF-16BE あるいは UTF-16-LE)
          を用いて格納されます。
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_BLOB</constant>: blob データ。
          入力がそのままの形式で格納されます。
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLITE3_NULL</constant>: NULL 値。
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       PHP 7.0.7 以降では、
       <parameter>type</parameter> が省略されると、
       自動的に <parameter>param</parameter> の型から検出します:
       <type>bool</type>
       と <type>int</type> 型は <constant>SQLITE3_INTEGER</constant> として扱われ、
       <type>float</type> は <constant>SQLITE3_FLOAT</constant>、
       <type>null</type> は <constant>SQLITE3_NULL</constant>、
       そして、これら以外は全て <constant>SQLITE3_TEXT</constant> として扱われます。
       これより前のバージョンでは、<parameter>type</parameter> が省略されると、
       デフォルトの型 <constant>SQLITE3_TEXT</constant> になっていました。
      </para>
      <note>
       <para>
        <parameter>param</parameter> が &null; の場合、
        与えられた <parameter>type</parameter> に関わらず、
        常に <constant>SQLITE3_NULL</constant> として扱われます。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   パラメータを変数にバインドした場合に &true;、
   失敗した場合に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.4.0</entry>
      <entry>
       <parameter>sql_param</parameter> は、
       <literal>@param</literal> 記法もサポートするようになりました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>SQLite3Stmt::bindParam</function> の使い方</title>
    <para>
     この例は、バインドするパラメータがひとつだけのプリペアドステートメントを使い、
     どのようにして異なる値を持つ複数の行を挿入するかを示しています。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3(':memory:');
$db->exec("CREATE TABLE foo (bar TEXT)");

$stmt = $db->prepare("INSERT INTO foo VALUES (:bar)");
$stmt->bindParam(':bar', $bar, SQLITE3_TEXT);

$bar = 'baz';
$stmt->execute();

$bar = 42;
$stmt->execute();

$res = $db->query("SELECT * FROM foo");
while (($row = $res->fetchArray(SQLITE3_ASSOC))) {
    var_dump($row);
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(1) {
  ["bar"]=>
  string(3) "baz"
}
array(1) {
  ["bar"]=>
  string(2) "42"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SQLite3Stmt::bindValue</methodname></member>
   <member><methodname>SQLite3::prepare</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
