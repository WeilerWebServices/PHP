<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331331 Maintainer: satoruyoshida Status: ready -->
<!-- CREDITS: takagi -->
<appendix xml:id="mysqlnd-qc.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants;
 <para>
  <emphasis role="bold">SQL ヒント関係</emphasis>
 </para>
 <para>
  <example>
   <title>SQL ヒント定数の利用</title>
   <para>
    クエリキャッシュは、SQL ヒントで制御します。
    SQL ヒントを使って、キャッシングを有効または無効にします。
    SQL ヒントを使うと、クエリの <literal>TTL</literal> を設定できます。
   </para>
   <para>
    クエリキャッシュが認識する SQL ヒントは、コンパイル時に手動で変更できます。
    そのため、デフォルトの SQL ヒントが他のシステムによってすでに取り入れられて、
    解釈・実行された環境でも <literal>mysqlnd_qc</literal> を使えます。
    この理由から、クエリ文字列にデフォルトの SQL ヒントを手動で追加するよりも
    SQL ヒント文字列定数を使うことを推奨します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* 可搬性を最大にするために定数を使用 */
$query = "/*" . MYSQLND_QC_ENABLE_SWITCH . "*/SELECT id FROM test";

/* 有効ですが、可搬性がより少なくなります: デフォルトの TTL */
$query = "/*qc=on*/SELECT id FROM test";

/* 有効ですが、可搬性がより少なくなります: ステートメント TTL 単位 */
$query = "/*qc=on*//*qc_ttl=5*/SELECT id FROM test";

printf("MYSQLND_QC_ENABLE_SWITCH: %s\n", MYSQLND_QC_ENABLE_SWITCH);
printf("MYSQLND_QC_DISABLE_SWITCH: %s\n", MYSQLND_QC_DISABLE_SWITCH);
printf("MYSQLND_QC_TTL_SWITCH: %s\n", MYSQLND_QC_TTL_SWITCH);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
MYSQLND_QC_ENABLE_SWITCH: qc=on
MYSQLND_QC_DISABLE_SWITCH: qc=off
MYSQLND_QC_TTL_SWITCH: qc_ttl=

]]>
   </screen>

  </example>
 </para>

 <para>
  <variablelist>
   <varlistentry xml:id="constant.mysqlnd-qc-enable-switch">
    <term>
     <constant>MYSQLND_QC_ENABLE_SWITCH</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      クエリをキャッシュに格納できるようにするために使用する SQL ヒント。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqlnd-qc-disable-switch">
    <term>
     <constant>MYSQLND_QC_DISABLE_SWITCH</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      <literal>mysqlnd_qc.cache_by_default = 1</literal> の場合に
      クエリをキャッシュに格納できないようにするために使用する SQL ヒント。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqlnd-qc-ttl-switch">
    <term>
     <constant>MYSQLND_QC_TTL_SWITCH</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      結果セットの TTL を設定するために使用する SQL ヒント。
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.mysqlnd-qc-server-id">
    <term>
     <constant>MYSQLND_QC_SERVER_ID_SWITCH</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      この SQL ヒントは、通常は使うべきではありません。
     </simpara>
     <simpara>
      これは、<link linkend="book.mysqlnd-ms">PECL/mysqlnd_ms</link>
      でひとつのステートメントのキャッシュエントリをグループ化するけれども
      個々のキャッシュエントリの元となる物理的な接続が異なる場合に必要となるものです。
      このヒントを使うと、クエリキャッシュのキーを生成するときに
      ユーザーやホスト名そして文字セットといった接続時の設定を考慮しません。
      接続時の設定のかわりに、指定した値やクエリ文字列をハッシュ関数への入力として渡してキーを生成します。
     </simpara>
     <simpara>
      PECL/mysqlnd_ms may は、指示された場合にキャッシュの結果を
      MySQL レプリケーションのスレーブから取得します。
      スレーブへの接続は多数保持できるので、キャッシュのキーはユーザーやホスト名などの設定から作成するべきではありません。
      これらはスレーブ接続によっていろいろ変化するからです。
      そのかわりに PECL/mysqlnd_ms が提供する識別子は、
      スレーブへの接続をグループ化したものを参照します。
      これで、どの物理的なスレーブ接続がキャッシュエントリを生成したかにかかわらず、
      キャッシュエントリを共有できるようになります。
     </simpara>
     <simpara>
      この機能を PECL/mysqlnd_ms 以外で使うことはおすすめしません。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  <emphasis role="bold"><function>mysqlnd_qc_set_cache_condition</function> 関係</emphasis>
 </para>
 <para>
  <example>
   <title><function>mysqlnd_qc_set_cache_condition</function> の使用例</title>
   <para>
    <function>mysqlnd_qc_set_cache_condition</function>
    関数を使うと、ステートメントの自動キャッシュを行うための条件を設定できます。
    SQL ヒントがついていないために手動でのキャッシュが必要となるステートメントであっても、条件を満たせば自動でキャッシュされます。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* "db_example" スキーマ(データベース) にある "new%" という名前のテーブルへのアクセスをすべて 1 秒間キャッシュします */
if (!mysqlnd_qc_set_cache_condition(MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN, "db_example.new%", 1)) {
  die("Failed to set cache condition!");
}

$mysqli = new mysqli("host", "user", "password", "db_example", "port");
/* SQL ヒントはありませんが、これはキャッシュされます */
$mysqli->query("SELECT id, title FROM news");

$pdo_mysql = new PDO("mysql:host=host;dbname=db_example;port=port", "user", "password");
/* SQL ヒントもないし、パターンにもマッチしないのでキャッシュされません */
$pdo_mysql->query("SELECT id, title FROM latest_news");
/* パターンにマッチするので、TTL 1 秒でキャッシュされます */
$pdo_mysql->query("SELECT id, title FROM news");
?>
]]>
   </programlisting>
  </example>
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.mysqlnd-qc-condition-meta-schema-pattern">
    <term>
     <constant>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      <function>mysqlnd_qc_set_cache_condition</function> のパラメータとして使い、
      スキーマベースの自動キャッシュの条件を設定します。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  <emphasis role="bold">その他</emphasis>
 </para>
 <para>
  プラグインのバージョンを取得するには
  <constant>MYSQLND_QC_VERSION</constant> あるいは
  <constant>MYSQLND_QC_VERSION_ID</constant> を使います。
  <constant>MYSQLND_QC_VERSION</constant> はバージョン番号を文字列で表したもので、
  <constant>MYSQLND_QC_VERSION_ID</constant> は 10000 のような整数値になります。
  このバージョン番号は、次のように算出します。
 </para>
 <para>
   <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>バージョン (の一部)</entry>
      <entry>例</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>Major*10000</entry>
      <entry>1*10000 = 10000</entry>
     </row>
     <row>
      <entry>Minor*100</entry>
      <entry>0*100 = 0</entry>
     </row>
     <row>
      <entry>Patch</entry>
      <entry>0 = 0</entry>
     </row>
     <row>
      <entry>MYSQLND_QC_VERSION_ID</entry>
      <entry>10000</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.mysqlnd-qc-version">
    <term>
     <constant>MYSQLND_QC_VERSION</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <simpara>
      プラグインのバージョンを表す文字列。<quote>1.0.0-prototype</quote> など。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
 <para>
  <variablelist>
   <varlistentry xml:id="constant.mysqlnd-qc-version-id">
    <term>
     <constant>MYSQLND_QC_VERSION_ID</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <simpara>
      プラグインのバージョン番号。10000 など。
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
