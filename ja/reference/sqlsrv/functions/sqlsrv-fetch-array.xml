<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346895 Maintainer: takagi Status: ready -->
<!-- Reviewed: yes -->

<refentry xml:id="function.sqlsrv-fetch-array" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>sqlsrv_fetch_array</refname>
  <refpurpose>行を配列として返す</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>sqlsrv_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>stmt</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>fetchType</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   クエリ結果から列データを順に返します。列データの型は連想配列、配列、またはその両方(デフォルト)を選択できます。
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stmt</parameter></term>
     <listitem>
      <para>
       sqlsrv_query あるいは sqlsrv_prepare が返すステートメントリソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>fetchType</parameter></term>
     <listitem>
      <para>
       返り値の型を指定します。連想配列<constant>SQLSRV_FETCH_ASSOC</constant>, 
       配列<constant>SQLSRV_FETCH_NUMERIC</constant>, and 
       連想配列と配列の両方<constant>SQLSRV_FETCH_BOTH</constant> (デフォルト)
       のうち1つを指定します。
      </para>
      <para>
      SQLSRV_FETCH_ASSOC(連想配列)は同じ名前の列が複数存在する結果セットを扱う際に使ってはいけません(連想配列のキーが重複するため)。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       スクロール可能なカーソルを用いた結果セットから、取得する列を指定します。
       定義済み定数は、 <constant>SQLSRV_SCROLL_NEXT</constant>(次の列), 
       <constant>SQLSRV_SCROLL_PRIOR</constant>(前の列), <constant>SQLSRV_SCROLL_FIRST</constant>(最初の列), 
       <constant>SQLSRV_SCROLL_LAST</constant>(最後の列), <constant>SQLSRV_SCROLL_ABSOLUTE</constant>(列番号の絶対指定) and, 
       <constant>SQLSRV_SCROLL_RELATIVE</constant>(列番号の相対指定) (デフォルト値). 
       この引数を指定する場合は、<parameter>fetchType</parameter> を指定しなくてはなりません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       引数rowに
       <constant>SQLSRV_SCROLL_ABSOLUTE</constant> または
       <constant>SQLSRV_SCROLL_RELATIVE</constant> を指定する際に、この引数で取得する列を指定します。
       列番号は0から始まります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功時に配列を返します。 返す列がない場合は&null; を返します。エラーが起きた場合は 
   &false;を返します。
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>連想配列を扱う場合の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\instanceName";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo );
if( $conn === false ) {
    die( print_r( sqlsrv_errors(), true));
}

$sql = "SELECT FirstName, LastName FROM SomeTable";
$stmt = sqlsrv_query( $conn, $sql );
if( $stmt === false) {
    die( print_r( sqlsrv_errors(), true) );
}

while( $row = sqlsrv_fetch_array( $stmt, SQLSRV_FETCH_ASSOC) ) {
      echo $row['LastName'].", ".$row['FirstName']."<br />";
}

sqlsrv_free_stmt( $stmt);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>配列を扱う場合の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$serverName = "serverName\instanceName";
$connectionInfo = array( "Database"=>"dbName", "UID"=>"username", "PWD"=>"password");
$conn = sqlsrv_connect( $serverName, $connectionInfo );
if( $conn === false ) {
    die( print_r( sqlsrv_errors(), true));
}

$sql = "SELECT FirstName, LastName FROM SomeTable";
$stmt = sqlsrv_query( $conn, $sql );
if( $stmt === false) {
    die( print_r( sqlsrv_errors(), true) );
}

while( $row = sqlsrv_fetch_array( $stmt, SQLSRV_FETCH_NUMERIC) ) {
      echo $row[0].", ".$row[1]."<br />";
}

sqlsrv_free_stmt( $stmt);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   上の例で
   <parameter>fetchType</parameter> の指定を省略したり、定数
   <constant>SQLSRV_FETCH_TYPE</constant> を明示的に指定した場合は、
   連想配列と数値添字の両方のキーを含む配列を返します。
  </para>
  <para>
   同じ名前のカラムが複数存在する場合は、最後に現れたカラムがそれまでのすべてを上書きします。
   名前の衝突を回避するには、別名を指定しましょう。
  </para>
  <para>
   無名のカラムが返された場合、連想配列のキーは空文字列("")になります。
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlsrv_connect</function></member>
    <member><function>sqlsrv_query</function></member>
    <member><function>sqlsrv_errors</function></member>
    <member><function>sqlsrv_fetch</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
