<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 329616 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka,mumumu -->

<refentry xml:id="soapclient.soapcall" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::__soapCall</refname>
  <refpurpose>SOAP 関数をコールする</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>SoapClient::__soapCall</methodname>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>arguments</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>input_headers</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">output_headers</parameter></methodparam>
  </methodsynopsis>
  <para>
   本メソッドは、SOAP コールを行う低レベル API 関数です。
   通常、WSDL モードでは、SOAP 関数を <classname>SoapClient</classname>
   のメソッドとして簡単にコールすることができます。
   本メソッドは、<literal>soapaction</literal> が不明な場合や、
   <literal>uri</literal> がデフォルトと異なっていたり、
   SOAP ヘッダを送受信したい場合に、非 WSDL モードを使用する際に有用です。
  </para>
  <para>
   エラーの場合に SOAP 関数を呼び出すと、PHP の例外が発生するか、例外が無効な場合には
   <classname>SoapFault</classname> オブジェクトが返されます。
   この関数コールが失敗したかどうかを調べるには、 SoapFault
   例外をキャッチするか、<function>is_soap_fault</function> の結果を調べてください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       コールしたい SOAP 関数の名前。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arguments</parameter></term>
     <listitem>
      <para>
       関数に渡す引数の配列。これは、数値添字配列あるいは連想配列のどちらの形式でもかまいません。
       たいていの SOAP サーバーは、パラメータ名を指定しないといけないことに注意しましょう。
       そんな場合は、連想配列でないといけません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       クライアントに渡すオプションの連想配列。
      </para>
      <para>
       <literal>location</literal> はリモートウェブサービスの URL です。
      </para>
      <para>
       <literal>uri</literal> は SOAP サービスのターゲット名前空間です。
      </para>
      <para>
        <literal>soapaction</literal> はコールしたいアクションです。
      </para>
    </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>input_headers</parameter></term>
     <listitem>
      <para>
       SOAP リクエストで送信するヘッダの配列。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>output_headers</parameter></term>
     <listitem>
      <para>
       指定すると、この配列に SOAP レスポンスのヘッダが書き込まれます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   SOAP 関数は、一つまたは複数の値を返す可能性があります。
   SOAP 関数によって返される値が 1 つだけの場合、<literal>__soapCall</literal>
   の返す値は単純な値 (例えば、整数型、文字列など) になります。
   複数の値が返される場合、<literal>__soapCall</literal>
   は出力パラメータの名前を連想配列として返します。
  </para>
  <para>
   エラーの場合は、SoapClient オブジェクトの作成時に <literal>exceptions</literal>
   オプションが &false; となっていれば SoapFault オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>SoapClient::__soapCall</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

$client = new SoapClient("some.wsdl");
$client->SomeFunction($a, $b, $c);

$client->__soapCall("SomeFunction", array($a, $b, $c));
$client->__soapCall("SomeFunction", array($a, $b, $c), NULL,
                    new SoapHeader(), $output_headers);


$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));
$client->SomeFunction($a, $b, $c);
$client->__soapCall("SomeFunction", array($a, $b, $c));
$client->__soapCall("SomeFunction", array($a, $b, $c),
                    array('soapaction' => 'some_action',
                          'uri'        => 'some_uri'));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SoapClient::SoapClient</methodname></member>
    <member><methodname>SoapParam::SoapParam</methodname></member>
    <member><methodname>SoapVar::SoapVar</methodname></member>
    <member><methodname>SoapHeader::SoapHeader</methodname></member>
    <member><methodname>SoapFault::SoapFault</methodname></member>
    <member><function>is_soap_fault</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
