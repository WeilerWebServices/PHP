<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 345637 $ -->
<!-- EN-Revision: 345637 Maintainer: mumumu Status: ready -->

<refentry xml:id="mysql-xdevapi-collectionmodify.arrayappend" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CollectionModify::arrayAppend</refname>
  <refpurpose>配列のフィールドに要素を追加する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mysql_xdevapi\CollectionModify</type><methodname>mysql_xdevapi\CollectionModify::arrayAppend</methodname>
   <methodparam><type>string</type><parameter>collection_field</parameter></methodparam>
   <methodparam><type>string</type><parameter>expression_or_literal</parameter></methodparam>
  </methodsynopsis>
  <para>
   ドキュメントのフィールドに要素を追加します。
   フィールドの複数の要素は配列として表現されます。
   arrayInsert() と異なり、arrayAppend() は常に新しい要素を配列の最後に追加します。
   一方で、arrayInsert() は挿入する位置を指定できます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>collection_field</parameter></term>
    <listitem>
     <para>
      新しい要素を挿入するフィールドの識別子
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>expression_or_literal</parameter></term>
    <listitem>
     <para>
      ドキュメントフィールドの配列の最後に挿入する新しい要素
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   コマンドを実行したり、追加の操作を追加できる CollectionModify オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\CollectionModify::arrayAppend</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php
$session = mysql_xdevapi\getSession("mysqlx://user:password@localhost");
$session->sql("DROP DATABASE IF EXISTS addressbook")->execute();
$session->sql("CREATE DATABASE addressbook")->execute();

$schema     = $session->getSchema("addressbook");
$collection = $schema->createCollection("people");

$result = $collection
  ->add(
  '{"name":   "Bernie",
    "traits": ["Friend", "Brother", "Human"]}') 
  ->execute();

$collection
  ->modify("name in ('Bernie', 'Jane')")
  ->arrayAppend('traits', 'Happy')
  ->execute();

$result = $collection
  ->find()
  ->execute();

print_r($result->fetchAll());
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [_id] => 00005b6b5361000000000000010c
            [name] => Bernie
            [traits] => Array
                (
                    [0] => Friend
                    [1] => Brother
                    [2] => Human
                    [3] => Happy
                )
        )
)
]]>
   </screen>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
