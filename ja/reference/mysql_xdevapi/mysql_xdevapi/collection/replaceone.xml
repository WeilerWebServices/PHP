<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 345637 $ -->
<!-- EN-Revision: 345637 Maintainer: mumumu Status: ready -->

<refentry xml:id="mysql-xdevapi-collection.replaceone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collection::replaceOne</refname>
  <refpurpose>コレクションのドキュメントをひとつ置き換える</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mysql_xdevapi\Result</type><methodname>mysql_xdevapi\Collection::replaceOne</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>doc</parameter></methodparam>
  </methodsynopsis>
  <para>
   ID で特定されたドキュメントが存在すれば、それを更新(置き換え)します。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      置き換え、または更新するドキュメントのID。
      通常、これは レコードを追加した時に MySQL サーバが生成した _id です。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>doc</parameter></term>
    <listitem>
     <para>
      <option>id</option> パラメータにマッチするドキュメントを更新したり
      置換したりするためのコレクションのドキュメント
     </para>
     <para>
      このドキュメントは、ドキュメントオブジェクトか、
      新しいドキュメントを表現する 有効な JSON 文字列のどちらかです。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   影響を受けた行を調べたり、
   操作によって生成された警告の数を得ることができる Result オブジェクトを返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>mysql_xdevapi\Collection::replaceOne</function> の例</title>
   <programlisting role="php">
<![CDATA[
<?php
$session = mysql_xdevapi\getSession("mysqlx://user:password@localhost");

$session->sql("DROP DATABASE IF EXISTS addressbook")->execute();
$session->sql("CREATE DATABASE addressbook")->execute();

$schema     = $session->getSchema("addressbook");
$collection = $schema->createCollection("people");

$result = $collection->add('{"name": "Alfred", "age": 18, "job": "Butler"}')->execute();

// 通常、_id は他の手段によって知ることができますが、
// この例のために、生成された id を取得し、それを使います。 
$ids       = $result->getGeneratedIds();
$alfred_id = $ids[0];

// ...

$alfred = $collection->getOne($alfred_id);
$alfred['age'] = 81;
$alfred['job'] = 'Guru';

$collection->replaceOne($alfred_id, $alfred);

?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
