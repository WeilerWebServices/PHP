<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./ja/functions/yaz.xml, last change in rev 1.11 -->
<!-- EN-Revision: 297028 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi -->
<refentry xml:id="function.yaz-sort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>yaz_sort</refname>
  <refpurpose>ソート条件を設定する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>yaz_sort</methodname>
   <methodparam><type>resource</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>criteria</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は、ソート条件を設定して Z39.50 Sort を有効にします。
  </para>
  <para>
   この関数は、<function>yaz_search</function> の<emphasis>前に</emphasis>
   コールします。この関数を単独で使用しても何も意味はありません。
   <function>yaz_search</function> と組み合わせて使用した場合、
   検索応答が受信されてから全ての Z39.50 Present で取得される前に Z39.50
   Sort が送信されます。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       <function>yaz_connect</function> が返す接続リソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>criteria</parameter></term>
     <listitem>
      <para>
       <replaceable>field1 flags1 field2 flags2</replaceable> のような
       形式の文字列。field1 は最初にソートする属性を、そして field2
       は 2 番目の属性を… のように指定します。
      </para>
      <para>
       フィールドは、カンマで区切られた 型 = 値 の組からなる数値属性の
       組み合わせ（例 <literal>1=4,2=1</literal>）、または
       文字列の方法を指定することも可能です（例 <literal>title</literal>）。
       フラグは次の文字の並びからなり、空白により区切ることはありません。
      </para>
      <para>
       <variablelist>
        <title>ソートフラグ</title>
        <varlistentry>
         <term><literal>a</literal></term>
         <listitem>
          <para>
           昇順ソート
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><literal>d</literal></term>
         <listitem>
          <para>
           降順ソート
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><literal>i</literal></term>
         <listitem>
          <para>
           大文字小文字を区別しないソート
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><literal>s</literal></term>
         <listitem>
          <para>
           大文字小文字を区別するソート
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>ソート条件</title>
   <para>
    Bib1 属性のタイトル（title）で大文字小文字を区別しない昇順のソートを
    行うには、以下のソート方法を使用してください。
    <screen>
<![CDATA[
1=4 ia
]]>
    </screen>
   </para>
   <para>
    2 番目のソート条件として著者（author）を指定し、大文字小文字を区別する
    昇順のソートを行うには以下のようにします。
    <screen>
<![CDATA[
1=4 ia 1=1003 sa
]]>
    </screen>
   </para>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
