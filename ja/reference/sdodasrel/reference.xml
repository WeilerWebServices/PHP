<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->

<reference xml:id="ref.sdodasrel" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>SDO-DAS-Relational &Functions;</title>

 <partintro>
  <!-- FIXME: The rest should be reworked to follow our OOskeletons -->
  <!-- class definition section -->
  <section xml:id="sdodasrel.classes">
    &reftitle.classes;
   <para>
    リレーショナル DAS では 2 つのクラスが提供されています。それは
    リレーショナル DAS 自身、および例外時にスローされる Exception
    のサブクラスです。リレーショナル DAS で使用できるパブリックコールは
    4 つです。まずコンストラクタ、それから
    空のデータグラフからルートオブジェクトを取得するための
    <function>createRootDataObject</function>、
    リレーショナルデータベースからのデータを含むデータグラフを取得するための
    <function>executeQuery</function>、
    データグラフへの変更をリレーショナルデータベースに書き戻すための
    <function>applyChanges</function>
    です。
   </para>
      

   <section xml:id="sdodasrel.sdo-das-relational">
    <title>
     <classname>SDO_DAS_Relational</classname>
    </title>
    <para>
     SDO_DAS_Relational_Exception 以外で唯一、
     アプリケーションと直接やりとりすることが想定されているオブジェクトです。
    </para>
    <section xml:id="sdodasrel.sdo-das-relational.methods">
     &reftitle.methods;
     <itemizedlist>
      <listitem>
       <para>
        <link linkend="sdo-das-relational.construct">
         __construct
        </link> 
        - 渡されたメタデータに基づくモデルからリレーショナル DAS
        を構築します。
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-relational.createrootdataobject">
         createRootDataObject
        </link> 
        - 特別なルートオブジェクトを含む空ではないデータグラフを取得します。
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-relational.executequery">
         executeQuery
        </link>
        - リテラル文字列で渡された SQL クエリを実行し、
        正規化されたデータグラフ形式で結果を返します。
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-relational.executepreparedquery">
         executePreparedQuery
        </link>
        - プリペアドステートメントとして渡された SQL クエリに
        プレースホルダを置換する値のリストを指定して実行し、
        正規化されたデータグラフ形式でデータを返します。
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-relational.applychanges">
         applyChanges
        </link>
        - データグラフの変更の概要を調べ、それをデータベースに書き戻します。
        楽観的な同時並行性 (concurrency) に従います。
       </para>
      </listitem>
     </itemizedlist>
    </section>
   </section>

   <section xml:id="sdodasrel.sdo-das-relational-exception">
    <title>
     <classname>SDO_DAS_Relational_Exception</classname>
    </title>
    <para>
     PHP の <classname>Exception</classname> のサブクラスです。
     <classname>Exception</classname> に対して何も機能を追加しません。
     メタデータ内でエラーが発生したり SQL の実行時に予期せぬ失敗が
     発生した際に、有用な説明を含めてスローされます。
    </para>
   </section>
  </section>


 </partintro>

 <!-- This seems to create the table of contents -->
 &reference.sdodasrel.entities.sdo-das-relational;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

