<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321874 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->

<chapter xml:id="sdodasrel.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;

 <!-- {{{ Requirements -->
 <section xml:id="sdodasrel.requirements">
  &reftitle.required;
  <para>
   リレーショナル DAS を使用するには、SDO 拡張モジュールがインストール
   されている必要があります。SDO 拡張モジュールを使用するには、
   PHP 5.1 以降のバージョンが必要で、リレーショナル DAS を使用するには
   より新しいバージョンが必要となります。これには PDO の重要な修正が
   含まれています。PHP の要件についての最新情報は、PECL パッケージの
   CHANGELOG を参照ください。これを書いている時点では、リレーショナル
   DAS に必要なのは PHP 5.1 の最新のベータ版、すなわち PHP 5.1.0 です。
  </para>
  <para>
   リレーショナル DAS は、PDO を使用してリレーショナルデータベースに
   アクセスします。そのため、さまざまなリレーショナルデータベースで
   実行できなければなりません。これを書いている時点では、以下の環境で
   テスト済みです。
   <itemizedlist>
    <listitem>
     <para>
      MySQL 4.1.14 の Windows 版。
      リレーショナル DAS は、PHP 5.1.0 のビルド済みバイナリに
      含まれる php_pdo_mysql ドライバで正常に動作します。
     </para>
    </listitem>
    <listitem>
     <para>
      MySQL 4.1.13 の Linux 版。
      MySQL 用 PDO ドライバの最新版が必要です。これは PHP 5.1.0 に
      組み込まれています。もし既に PECL から通常のドライバを
      インストールしている場合は、
      <command>pear uninstall pdo_mysql</command>
      でそれをアンインストールします。その後、
      <command>--with-pdo-mysql</command> オプションを指定して
      PHP の configure を行います。
     </para>
    </listitem>
    <listitem>
     <para>
      DB2 8.2 Personal Edition の Windows 版。
      リレーショナル DAS は、PHP 5.1.0 のビルド済みバイナリに
      含まれる php_pdo_odbc ドライバで正常に動作します。
     </para>
    </listitem>
    <listitem>
     <para>
      DB2 8.2 Personal Developer's Edition の Linux 版。
      PHP の configure およびビルドの際に必要なインクルードファイルが
      含まれているため、Developer's Edition を使用しなければなりません。
      <command>--with-pdo-odbc=ibm-db2</command> オプションを指定して
      PHP の configure を行います。
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   リレーショナル DAS は、変更をデータベースに適用する際に
   トランザクションを使用します。つまり、変更を適用する前には
   <function>PDO::beginTransaction</function> をコールし、変更が完了すると
   <function>PDO::commit</function>
   あるいは
   <function>PDO::rollback</function>
   をコールします。どのデータベースを選択するにしても、そのデータベース
   および PDO ドライバはこれらのコールをサポートしていなければなりません。
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Installation -->
 <section xml:id="sdodasrel.installation">
  &reftitle.install;
  <para>
   すべての SDO コンポーネントのインストール手順は、
   SDO のドキュメントにある
   <link linkend="sdo.installation">インストール手順</link>
   に書かれています。
  </para>
  <para>
   リレーショナル DAS が PHP で書かれているので、
   <link linkend="ini.include-path">include_path</link>
   の場所に配置する必要があるということに注意しましょう。
  </para>

  <para>
   もちろん、アプリケーションではこのようにしてリレーショナル DAS
   をインクルードする必要があります。
   <programlisting role="php">
<![CDATA[
<?php
require_once 'SDO/DAS/Relational.php';
?>
]]>
   </programlisting>
  </para>
 </section>
 <!-- }}} -->

 <!-- {{{ Configuration -->
 <section xml:id="sdodasrel.configuration">
  &reftitle.runtime;
  &no.config;
  <section xml:id="sdodasrel.tracing">
   <title>トレース</title>
   <para>
    変更をデータベースに書き戻す際に、実際にはどのような SQL
    文が生成されるのかが気になることもあるでしょう。
    <filename>SDO/DAS/Relational.php</filename> の先頭で、SQL
    文の作成および実行の処理を追跡するための定数が定義されていることがわかります。
    生成された SQL 文を見るには、<varname>DEBUG_EXECUTE_PLAN</varname>
    を &true; にしてみましょう。
   </para>
  </section>
 </section>
 <!-- }}} -->

 <!-- {{{ Resources -->
 <section xml:id="sdodasrel.resources">
  &reftitle.resources;
  &no.resource;
 </section>
 <!-- }}} -->

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

