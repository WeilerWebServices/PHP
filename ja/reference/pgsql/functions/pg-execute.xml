<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351135 Maintainer: takagi Status: ready -->
<refentry xml:id="function.pg-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_execute</refname>
  <refpurpose>
   指定したパラメータを用いてプリペアドステートメントを実行するリクエストを
   送信し、その結果を待つ
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>pg_execute</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    指定したパラメータを用いてプリペアドステートメントを実行するリクエストを
    送信し、その結果を待ちます。
  </para>
  <para>
    <function>pg_execute</function> は <function>pg_query_params</function>
    と似ています。しかし、実行するコマンドはクエリを指定することで
    決まるのではなく、事前に準備されたステートメントに値を指定する
    ことによって決まります。この機能のおかげで、繰り返し使用される
    コマンドに構文解析や実行計画作成が最初の一度だけで済みます。
    実行するステートメントは、カレントのセッションで事前に準備しておく
    必要があります。<function>pg_execute</function> は、PostgreSQL 7.4
    以降のバージョンの接続にのみ対応しています。それ以前のバージョンでは
    失敗します。
  </para>
  <para>
    パラメータは <function>pg_query_params</function> と同じですが、
    クエリ文字列のかわりにプリペアドステートメントの名前を指定する
    という点だけが違います。
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL データベース接続リソース。<parameter>connection</parameter>
       が指定されていない場合はデフォルトの接続が使用されます。
       デフォルトの接続は、直近の <function>pg_connect</function>
       あるいは <function>pg_pconnect</function> によって作成されたものです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       実行するプリペアドステートメントの名前。"" が指定された場合は
       無名ステートメントが実行されます。名前は、事前に
       <function>pg_prepare</function>・<function>pg_send_prepare</function>
       あるいは <literal>PREPARE</literal> SQL コマンドで準備されたものである
       必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
        プリペアドステートメント中の $1、$2 などのプレースホルダを
        置き換えるパラメータの配列。配列の要素数はプレースホルダの
        数と一致する必要があります。
      </para>
      <warning>
       <para>
        この関数をコールする際に、要素の内容は文字列に変換されます。
       </para>
      </warning>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    成功した場合にクエリ結果リソース、&return.falseforfailure;。</para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_execute</function> の使用法</title>
    <programlisting role="php">
<![CDATA[
<?php
// "mary"という名前のデータベースに接続
$dbconn = pg_connect("dbname=mary");

// 実行するクエリを準備
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');

// プリペアドクエリの実行。文字列 "Joe's Widgets" のエスケープ処理は
// 一切必要ないことに注意
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));

// 同じプリペアドクエリを違うパラメータで実行
$result = pg_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
