<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: takagi Status: ready -->
<refentry xml:id="function.pg-send-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_execute</refname>
  <refpurpose>
   指定したパラメータでプリペアドステートメントを実行するリクエストを
   送信し、その結果を待たない
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pg_send_execute</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    指定したパラメータでプリペアドステートメントを実行するリクエストを
    送信し、その結果を待ちません。
  </para>
  <para>
    これは <function>pg_send_query_params</function> と似ています。
    しかし、実行するコマンドは指定したクエリ文字列で決まるのではなく
    事前に準備されたステートメントの名前で決まります。関数のパラメータは
    <function>pg_execute</function> と同じように処理されます。
    <function>pg_execute</function> と同様に、7.4 より前のバージョンの
    PostgreSQL では動作しません。
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL データベース接続リソース。<parameter>connection</parameter>
       が指定されていない場合はデフォルトの接続が使用されます。
       デフォルトの接続は、直近の <function>pg_connect</function>
       あるいは <function>pg_pconnect</function> によって作成されたものです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       実行するプリペアドステートメントの名前。"" が指定された場合は
       無名ステートメントが実行されます。名前は、事前に
       <function>pg_prepare</function>・<function>pg_send_prepare</function>
       あるいは <literal>PREPARE</literal> SQL コマンドで準備されたものである
       必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
        プリペアドステートメント中の $1、$2 などのプレースホルダを
        置き換えるパラメータの配列。配列の要素数はプレースホルダの
        数と一致する必要があります。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>成功した場合に &true; 、失敗した場合に &false; を返します。
  クエリの結果を確認するには <function>pg_get_result</function>
  を使用します。</para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_send_execute</function> の使用法</title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");

  // 実行するクエリを準備する
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }

  // プリペアドクエリを実行する。 文字列 "Joe's Widgets" は
  // エスケープの必要がないことに注意
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // 同じプリペアドクエリを異なるパラメータで実行する
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }
  
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_execute</function></member>    
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
