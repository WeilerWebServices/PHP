<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 349708 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: takagi,mumumu -->
<refentry xml:id="function.pg-fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_fetch_array</refname>
  <refpurpose>行を配列として取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>pg_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>result_type</parameter><initializer>PGSQL_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_fetch_array</function> は、取得した行（レコード）を
   配列で返します。
  </para>
  <para>
   <function>pg_fetch_array</function> は拡張版の
   <function>pg_fetch_row</function> です。結果配列のフィールド番号に
   対応する要素にデータを格納し、それに加えてフィールド名をキーとした
   連想配列にも格納します。デフォルトで、両方ともが有効になっています。
  </para>
  &database.fetch-null;
  <para>
   <function>pg_fetch_array</function> は、
   <function>pg_fetch_row</function> に比べてきわめて遅いというわけでは
   「ありません」。そして、きわめて簡単に使用できます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       <function>pg_query</function>, <function>pg_query_params</function>
       あるいは <function>pg_execute</function> から返される PostgreSQL の
       クエリ結果リソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>row</parameter></term>
     <listitem>
      <para>
       取得する行番号。最初の行は 0 です。省略したり &null; を指定したりした場合は、
       次の行を取得します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result_type</parameter></term>
     <listitem>
      <para>
       <parameter>result_type</parameter> は、返り値の形式を制御する
       オプションのパラメータです。<parameter>result_type</parameter>
       は定数であり、次の値のどれかとすることが可能です。
       <constant>PGSQL_ASSOC</constant>、<constant>PGSQL_NUM</constant>
       および <constant>PGSQL_BOTH</constant>。
       <constant>PGSQL_NUM</constant> を使用すると、<function>pg_fetch_array</function>
       は数値添字の配列を返します。また、<constant>PGSQL_ASSOC</constant>
       を使用すると連想配列形式で返します。<constant>PGSQL_BOTH</constant>
       がデフォルト設定で、これは数値添字の配列と連想配列の両方を返します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   0 から始まる数値添字の配列か連想配列（フィールド名をキーとする）、
   あるいはその両方を返します。配列の各要素の値は文字列です。
   データベースの <literal>NULL</literal> 値は、&null; として返します。
  </para>
  <para>
   <parameter>row</parameter> が結果の行数より大きい場合や行が存在しない場合、
   そしてそれ以外のエラーが発生した場合は &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_fetch_array</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php 

$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "An error occurred.\n";
  exit;
}

$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "An error occurred.\n";
  exit;
}

$arr = pg_fetch_array($result, 0, PGSQL_NUM);
echo $arr[0] . " <- Row 1 Author\n";
echo $arr[1] . " <- Row 1 E-mail\n";

// row パラメータはオプションです。result_type を指定
// したい場合は NULL を渡しておきます。pg_fetch_array を続けてコール
// すると、次の行を取得します。
$arr = pg_fetch_array($result, NULL, PGSQL_ASSOC);
echo $arr["author"] . " <- Row 2 Author\n";
echo $arr["email"] . " <- Row 2 E-mail\n";

$arr = pg_fetch_array($result);
echo $arr["author"] . " <- Row 3 Author\n";
echo $arr[1] . " <- Row 3 E-mail\n";

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_fetch_row</function></member>
    <member><function>pg_fetch_object</function></member>
    <member><function>pg_fetch_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
