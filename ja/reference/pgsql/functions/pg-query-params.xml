<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351135 Maintainer: takagi Status: ready -->
<refentry xml:id="function.pg-query-params" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_query_params</refname>
  <refpurpose>
   SQL コマンドとパラメータを分割してサーバーへ送信し、その結果を待つ
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>resource</type><type>false</type></type><methodname>pg_query_params</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    コマンドをサーバーに送信し、その結果を待ちます。パラメータを SQL コマンド
    とは別に渡すことが可能です。
  </para>
  <para>
    <function>pg_query_params</function> は <function>pg_query</function>
    と似ていますが、追加の機能を有しています。それはパラメータ値が
    コマンド文字列と分離しているということです。
    <function>pg_query_params</function> は PostgreSQL 7.4 以降の接続でのみ
    サポートされます。それ以前のバージョンでは失敗します。
  </para>
  <para>
    パラメータを使用する際は、<parameter>query</parameter> 文字列内で
    $1、$2 のように参照されます。
    <parameter>query</parameter> の中で同じパラメータを何度も使えます。
    その場合は、それぞれに同じ値が渡されます。
    <parameter>params</parameter> で
    実際の値を指定します。&null; を指定すると、SQL の <literal>NULL</literal>
    とみなされます。
  </para>
  <para>
    <function>pg_query</function> に対する <function>pg_query_params</function>
    の最大の利点は、パラメータの値を <parameter>query</parameter> 文字列から
    分離できることです。そのため、退屈でエラーの元となりやすいクォート・
    エスケープなどをしなくてもよくなります。<function>pg_query</function>
    と異なり、<function>pg_query_params</function> ではひとつの SQL
    コマンドしか実行できません（クエリ文字列にセミコロンを含めることは
    可能です。しかしそれ以降にコマンドを続けることはできません）。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL データベース接続リソース。<parameter>connection</parameter>
       が指定されていない場合はデフォルトの接続が使用されます。
       デフォルトの接続は、直近の <function>pg_connect</function>
       あるいは <function>pg_pconnect</function> によって作成されたものです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       パラメータ化した SQL 文。ひとつの文のみである必要があります
       （複数の文をセミコロンで区切る形式は使用できません）。パラメータを
       使用する際は $1、$2 などの形式で参照されます。
      </para>
      <para>
       ユーザーから受け取った値は常にパラメータとして渡すべきです。
       直接クエリ文字列に組み込んではいけません。そうしてしまうと、
       <link linkend="security.database.sql-injection">SQL インジェクション</link>
       攻撃を受けてしまう可能性があります。また、クォート文字を含むデータの処理でバグの原因になります。
       何らかの理由でパラメータが使えない場合は、値を
       <link  linkend="function.pg-escape-string">適切にエスケープ</link>するようにしましょう。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
        プリペアドステートメント中の $1、$2 などのプレースホルダを
        置き換えるパラメータの配列。配列の要素数はプレースホルダの
        数と一致する必要があります。
      </para>
      <para>
       <literal>bytea</literal> フィールド用の値は、パラメータとして指定できません。
       <function>pg_escape_bytea</function> を使うか、ラージオブジェクト関数を使うようにしましょう。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    成功した場合にクエリ結果リソース、&return.falseforfailure;。</para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_query_params</function> の使用法</title>
    <programlisting role="php">
<![CDATA[
<?php
// "mary"という名前のデータベースに接続
$dbconn = pg_connect("dbname=mary");

// Joe's Widgets という名前の店を探す。"Joe's Widgets" を
// エスケープする必要がないことに注意
$result = pg_query_params($dbconn, 'SELECT * FROM shops WHERE name = $1', array("Joe's Widgets"));

// pg_query を使用した場合と比較
$str = pg_escape_string("Joe's Widgets");
$result = pg_query($dbconn, "SELECT * FROM shops WHERE name = '{$str}'");

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
