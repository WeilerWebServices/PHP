<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: takagi Status: ready -->
<refentry xml:id="function.com-get-active-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com_get_active_object</refname>
  <refpurpose>すでに実行中の COM オブジェクトのインスタンスへのハンドルを返す</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>variant</type><methodname>com_get_active_object</methodname>
   <methodparam><type>string</type><parameter>progid</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>code_page</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>com_get_active_object</function> は、新しい
   <xref linkend="class.com"/> オブジェクトのインスタンスを作成することに
   似ています。しかし、オブジェクトがすでに実行中の場合には
   そのオブジェクトが返されるという点が違います。
   OLE アプリケーションは、既知のアプリケーションを一度だけ起動させる
   ことを許可するために、"<literal>Running Object Table</literal>" というものを使用します。
   この関数は、実行中のインスタンスのハンドルを取得するために
   COM ライブラリ関数 GetActiveObject() を公開します。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>progid</parameter></term>
     <listitem>
      <para>
       <parameter>progid</parameter> は、アクセスしたいオブジェクトの
       ProgID あるいは CLSID (たとえば <literal>Word.Application</literal>)
       である必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>code_page</parameter></term>
     <listitem>
      <para>
       <xref linkend="class.com"/> クラスの場合と同様の働きをします。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   要求されたオブジェクトが実行中の場合は、他の COM オブジェクトと
   同様にスクリプトへ返されます。
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   この関数が失敗する
   理由はさまざまなものが考えられますが、最も一般的なのは
   オブジェクトがまだ起動していないことです。そのような場合、
   例外のエラーコードは <constant>MK_E_UNAVAILABLE</constant>
   となります。例外オブジェクトの <literal>getCode</literal>
   メソッドを使用することで、例外コードの内容を調べることが可能です。
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Web 環境で <function>com_get_active_object</function> を使用する
    ことは、あまり良い考えではありません。ほとんどの COM/OLE
    アプリケーションは複数のクライアントから同時に利用されることを
    考慮していないのです。(あの) Microsoft Office でさえもです!
    この件に関する一般的な問題についての詳細な情報は、<link
    xlink:href="&url.msoffice.serverside;">Considerations for Server-Side
    Automation of Office</link> を参照ください。
   </para>
  </warning>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
