<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 340255 Maintainer: takagi Status: ready -->

<refentry xml:id="reflectionclass.getmethods" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::getMethods</refname>
  <refpurpose>メソッドの配列を取得する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>ReflectionClass::getMethods</methodname>
   <methodparam choice="opt"><type>int</type><parameter>filter</parameter></methodparam>
  </methodsynopsis>
  <para>
   クラスのメソッドの配列を取得します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       結果をフィルタして、特定の属性を持つメソッドだけを含めるようにします。
       デフォルトは、何もフィルタしません。
      </para>
      <para>
       <constant>ReflectionMethod::IS_STATIC</constant>、
       <constant>ReflectionMethod::IS_PUBLIC</constant>、
       <constant>ReflectionMethod::IS_PROTECTED</constant>、
       <constant>ReflectionMethod::IS_PRIVATE</constant>、
       <constant>ReflectionMethod::IS_ABSTRACT</constant>、
       <constant>ReflectionMethod::IS_FINAL</constant>
       の任意の組み合わせ。
       指定した属性の <emphasis>いずれか</emphasis> を持つすべてのメソッドを返します。
      </para>
      <note>
       <simpara>
        その他のビット演算 (<literal>~</literal> など) は期待通りの挙動にはなりません。
        つまり、たとえば static ではないメソッドをすべて取得するなどといったことはできません。
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   各メソッドを表す <classname>ReflectionMethod</classname> オブジェクトの配列を返します。
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>ReflectionClass::getMethods</methodname> の基本的な使用例</title>
    <programlisting role="php">
<![CDATA[
<?php
class Apple {
    public function firstMethod() { }
    final protected function secondMethod() { }
    private static function thirdMethod() { }
}

$class = new ReflectionClass('Apple');
$methods = $class->getMethods();
var_dump($methods);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(3) {
  [0]=>
  &object(ReflectionMethod)#2 (2) {
    ["name"]=>
    string(11) "firstMethod"
    ["class"]=>
    string(5) "Apple"
  }
  [1]=>
  &object(ReflectionMethod)#3 (2) {
    ["name"]=>
    string(12) "secondMethod"
    ["class"]=>
    string(5) "Apple"
  }
  [2]=>
  &object(ReflectionMethod)#4 (2) {
    ["name"]=>
    string(11) "thirdMethod"
    ["class"]=>
    string(5) "Apple"
  }
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><methodname>ReflectionClass::getMethods</methodname> のフィルタリング</title>
    <programlisting role="php">
<![CDATA[
<?php
class Apple {
    public function firstMethod() { }
    final protected function secondMethod() { }
    private static function thirdMethod() { }
}

$class = new ReflectionClass('Apple');
$methods = $class->getMethods(ReflectionMethod::IS_STATIC | ReflectionMethod::IS_FINAL);
var_dump($methods);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  &object(ReflectionMethod)#2 (2) {
    ["name"]=>
    string(12) "secondMethod"
    ["class"]=>
    string(5) "Apple"
  }
  [1]=>
  &object(ReflectionMethod)#3 (2) {
    ["name"]=>
    string(11) "thirdMethod"
    ["class"]=>
    string(5) "Apple"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::getMethod</methodname></member>
    <member><function>get_class_methods</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
