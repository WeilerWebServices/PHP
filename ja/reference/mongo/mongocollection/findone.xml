<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350988 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->

<refentry xml:id="mongocollection.findone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::findOne</refname>
  <refpurpose>コレクションに問い合わせ、単一の要素を返す</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::findOne</methodname>
   <methodparam choice="opt"><type>array</type><parameter>query</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>fields</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>MongoCollection::find</function> とは対照的に、このメソッドは結果セットの
   <emphasis>最初の</emphasis>結果だけを返します。
   <classname>MongoCursor</classname> を返すのではないので、その後の反復処理はできません。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>query</parameter>
     </term>
     <listitem>
      <para>
       検索したいフィールド。
       MongoDB のクエリ言語は極めて幅広いものです。
       PHP ドライバはほとんどの場合クエリをそのままサーバーに流すので、
       MongoDB コアドキュメントの
       <link xlink:href="&url.mongodb.dochub.find;">find</link> を読むといいでしょう。
      </para>
      <warning>
       <para>
        クエリの特別な演算子 (<literal>$</literal> ではじまるもの)
        は、すべてシングルクォートで囲まなければならないことに注意しましょう。
        <literal>"$exists"</literal> などとすると、PHP がそれを変数
        <literal>$exists</literal> の値で置き換えてしまいます。
       </para>
      </warning>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>fields</parameter>
     </term>
     <listitem>
      <para>
       返される結果のフィールド。配列の形式は
       <literal>array('fieldname' => true, 'fieldname2' => true)</literal>
       のようになります。<literal>_id</literal> フィールドは常に返されます。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       <literal>array("name" => &lt;value&gt;, ...)</literal> 形式の連想配列。
       現在サポートしているオプションは、以下のとおりです。
      </para>
      <itemizedlist>
       &mongo.command.parameters.maxtimems;
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   検索にマッチしたレコード、あるいは &null; を返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   データベースに接続できない場合に <classname>MongoConnectionException</classname>
   をスローします。
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>PECL mongo 1.5.0</entry>
      <entry>
       オプションの引数 <parameter>options</parameter> が追加されました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>MongoCollection::findOne</methodname> での id による検索</title>
   <para>この例は、コレクション内のドキュメントを id から検索する方法を示します。</para>
   <programlisting role="php">
<![CDATA[
<?php

$articles = $mongo->my_db->articles;

$article = $articles->findOne(array('_id' => new MongoId('47cc67093475061e3d9536d2')));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title><methodname>MongoCollection::findOne</methodname> での複数条件の使用</title>
   <para>この例は、コレクション内のドキュメントを複数の条件で検索し、返されるフィールドを絞り込む方法を示します。</para>
   <programlisting role="php">
<![CDATA[
<?php

$users = $mongo->my_db->users;
$user = $users->findOne(array('username' => 'jwage'), array('password'));
print_r($user);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [_id] => MongoId Object
        (
        )

    [password] => test
)
]]>
   </screen>
   <para>
    たとえドキュメントに username フィールドがあっても、
    返される結果には password フィールドしか含まれないことに注目しましょう。
   </para>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::insert</function></member>
   <member>MongoDB コアドキュメントの <link xlink:href="&url.mongodb.dochub.find;">find</link></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
