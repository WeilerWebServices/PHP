<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 351075 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->

<refentry xml:id="mongo.close" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Mongo::close</refname>
  <refpurpose>接続を閉じる</refpurpose>
 </refnamediv>

 <refsynopsisdiv role="soft-deprecation-notice">
  <sidebar>
   &mongo.noalternative.method.note;
  </sidebar>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Mongo::close</methodname>
   <methodparam choice="opt"><type class="union"><type>bool</type><type>string</type></type><parameter>connection</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Mongo::close</function> メソッドは、
   データベースとの接続を強制的に閉じます。持続的接続を使っていても同じです。
   通常は、<emphasis>決して</emphasis> このメソッドを使う必要はありません。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>connection</parameter>
     </term>
     <listitem>
      <para>
       指定しなかったり &false; を渡したりした場合は、
       書き込み用に選ばれた接続を閉じます。単一ノード構成の場合はすべての接続を閉じることになりますが、
       レプリカセットに接続している場合は、close() とするとプライマリサーバーへの接続
       <emphasis>だけ</emphasis> を閉じることになります。
      </para>
      <para>
       &true; を渡すと、コネクションマネージャーが把握しているすべての接続を閉じます。
       つまり、close を呼んだオブジェクトを作ったときの接続文字列に含まれていない接続も、
       閉じる対象になる可能性があります。
      </para>
      <para>
       文字列を渡すと、このハッシュが指す接続だけを閉じます。
       ハッシュとは接続の識別子のことで、<function>Mongo::getConnections</function>
       を呼ぶと取得できます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   接続を閉じるのに成功したかどうかを返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoClient::close</function> の例</title>
   <para>この例は、セカンダリへの接続だけを選んで閉じる方法を示すものです。</para>
   <programlisting role="php">
<![CDATA[
<?php
// レプリカセットに接続します
$a = new Mongo("mongodb://whisky:13000/?replicaset=seta");

$connections = $a->getConnections();

foreach ( $connections as $con )
{
    // すべての接続をループし、型が "SECONDARY"
    // のときに接続を閉じます
    if ( $con['connection']['connection_type_desc'] == "SECONDARY" )
    {
        echo "Closing '{$con['hash']}': ";
        $closed = $a->close( $con['hash'] );
        echo $closed ? "ok" : "failed", "\n";
    }
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Closing 'whisky:13001;X;4948': ok
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL mongo 1.3.0</entry>
       <entry>
        <para>
         <parameter>connection</parameter> パラメータが追加されました。
         それより前のバージョンでは、このメソッドで閉じられるのは書き込み接続だけでした。
        </para>
       </entry>
      </row>
      <row>
       <entry>PECL mongo 1.2.0</entry>
       <entry>
        <para>
         1.2.0 より前のバージョンでは、デフォルトでは持続的接続を使いませんでした。
         そして、MongoDB の接続がスコープから抜ければすぐに閉じられていました。
         バージョン 1.2.0 からはそうではなくなりました。
         close を呼ばないと、高負荷な接続がサーバーを使い切ってしまう可能性があります。
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>Mongo::getConnections</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
