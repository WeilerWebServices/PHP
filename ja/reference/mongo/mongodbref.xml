<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338645 Maintainer: takagi Status: ready -->

<phpdoc:classref xml:id="class.mongodbref" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>MongoDBRef クラス</title>
 <titleabbrev>MongoDBRef</titleabbrev>

 <partintro>

  <warning>
   &mongo.noalternative.class.note;
   <para>
    The concept of database references, and hence this class, has been
    deprecated in the database.
   </para>
  </warning>

<!-- {{{ MongoGridfsCursor intro -->
  <section xml:id="mongodbref.intro">
   &reftitle.intro;
   <para>
    このクラスを使用して、別々のコレクション内にあるオブジェクト間の軽量なリンクを作成します。
   </para>
   <para>
    <emphasis>動機</emphasis>: 別のコレクションにあるドキュメントを参照する必要が出てきたとしましょう。
    いちばん簡単な方法は、現在のドキュメントにフィールドを作ることです。
    たとえば、"people" コレクションと "addresses" コレクションがあるときに
    人物のドキュメントと住所のドキュメントをリンクさせたいことがあるでしょう。
    <example>
     <title>ドキュメントのリンク</title>
     <programlisting role="php">
<![CDATA[
<?php

$people = $db->people;
$addresses = $db->addresses;

$myAddress = array("line 1" => "123 Main Street", 
    "line 2" => null,
    "city" => "Springfield",
    "state" => "Vermont",
    "country" => "USA");

// 住所を保存します
$addresses->insert($myAddress);

// その住所を参照する人物を保存します
$me = array("name" => "Fred", "address" => $myAddress['_id']);
$people->insert($me);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    そうすれば、誰かの住所を知りたくなったときには、
    "people" コレクションに保存した <classname>MongoId</classname>
    を使って "addresses" コレクションを検索することができます。
   </para>
   <para>
    もう少し一般化してみましょう。参照したいドキュメントがどのコレクション
    (あるいはどのデータベース) にあるかわからない場合です。こんな場合に
    <classname>MongoDBRef</classname> が使えます。
    これは共通のフォーマットであり、すべてのドライバやデータベースが理解できるからです。
   </para>
   <para>
    各個人が「好きなもの」リストを持っており、それはいろいろなコレクション
    ("hobbies", "sports", "books" など) にあるとしましょう。
    <classname>MongoDBRef</classname> を使えば、それぞれがどのコレクションからのものかを管理できます。
    <example>
     <title>MongoDBRef リンクの作成</title>
    <programlisting role="php">
<![CDATA[
<?php

$people = $db->selectCollection("people");

// 鉄道模型は "hobbies" コレクションにあります
$trainRef = MongoDBRef::create("hobbies", $modelTrains['_id']);
// サッカーは "sports" コレクションにあります
$soccerRef = MongoDBRef::create("sports", $soccer['_id']);

// このドキュメントを取得したときに、"likes" 配列の各項目がどのドキュメントのものなのかを
// 知ることができます
$people->insert(array("name" => "Fred", "likes" => array($trainRef, $soccerRef)));

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    データベース参照は、ハイパーリンクのようなものととらえることができます。
    別のドキュメントに関する一意なアドレスを提供しますが、
    それを読み込んだり自動的にリンク先/参照先をたどったりはしません。
   </para>
   <para>
    データベース参照は単なる連想配列であり、
    <classname>MongoDBRef</classname> のインスタンスではありません。
    そのため、このクラスは他のデータ型クラスとは多少異なります。
    このクラスに含まれているのは、
    データベース参照を操作するための静的メソッドだけです。
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongodbref.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDBRef</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoDBRef</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodbref')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section>
   &reftitle.seealso;
   <para>
    MongoDB コアドキュメントの <link xlink:href="&url.mongodb.dochub.dbrefs;">データベース参照</link>
    を参照ください。
   </para>
  </section>
 </partintro>

 &reference.mongo.entities.mongodbref;

</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
