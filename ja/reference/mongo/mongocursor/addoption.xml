<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<!-- EN-Revision: 334691 Maintainer: takagi Status: ready -->
<refentry xml:id="mongocursor.addoption" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::addOption</refname>
  <refpurpose>トップレベルの キー/値 のペアをクエリに追加する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::addOption</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   これは高度な関数なので、今何をしているのかをわかっている人以外は使ってはいけません。
  </para>
  <para>
   ソートやヒントなどの他のオプションを指定する場合は、クエリを
   "query" フィールドに書くこともできます。
   たとえばソートを追加した場合は、
   クエリは次のようにサブフィールドのひとつとなります。
   <programlisting role="php">
<![CDATA[
<?php

$query = array("query" => $query, "orderby" => $sort);

?>
]]>
   </programlisting>
  </para>
  <para>
   このメソッドは、トップレベルのフィールドをクエリに追加します。
   クエリにサブオブジェクトを作成 (まだ存在しない場合) し、
   指定した キー/値 のペアをトップレベルに追加します。
  </para>
  <warning>
   <para>
    クエリにその場で条件を追加するという目的で使うことはできません。たとえば、
    これは正しく動作<emphasis>しません</emphasis>。
    <programlisting role="php">
<![CDATA[
<?php

// 間違った使いかた
$cursor = $users->find()->addOption("name", "joe")->addOption("age", 20);

?>
]]>
    </programlisting>
    これは、名前が "joe" で 20 才のユーザーを捜すというクエリには
    <emphasis>なりません</emphasis>。
   </para>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>key</parameter>
     </term>
     <listitem>
      <para>
       追加したいフィールド名。
      </para>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>value</parameter>
     </term>
     <listitem>
      <para>
       追加したい値。
      </para>
     </listitem>
    </varlistentry>   
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   このカーソルを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   カーソルの反復処理が始まっている場合は <classname>MongoCursorException</classname>
   をスローします。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCursor::addOption</function> によるコメントの追加の例</title>
   <para>
    MongoDB は、サーバーに送る特別なオプションをサポートしています。
    シェルの <literal>_addSpecial</literal> オプションを使うと、
    <literal>$comment</literal> をサーバーに送信します。
    このコメントは、プロファイリングログ (遅いクエリのログなど) に表示されます。
    PHP ドライバでは、
    <function>MongoCursor::addOption</function> メソッドを利用します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$m = new MongoClient;
$c = $m->demo->demo;
$cursor = $c->find();
$cursor->addOption('$comment', "This comment will show up in the profiling log");

foreach ($cursor as $document) { /* empty */ }
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
{
    "op" : "query",
    "ns" : "demo.demo",
    "query" : {
        "$query" : {
             
        },
        "$comment" : "This comment will show up in the profiling log"
    },
    "cursorid" : 168463566447,
    "ntoreturn" : 0,
    "ntoskip" : 0,
    "nscanned" : 101,
    "nscannedObjects" : 101,
    "keyUpdates" : 0,
    "numYield" : 0,
…
]]>
   </screen>
  </example>

  <example>
   <title><function>MongoCursor::addOption</function> の例</title>
   <para>
    <function>MongoCursor::skip</function> を使って何百万件もの結果をスキップすると、
    処理速度が低下します。これを回避する方法のひとつが、クエリのオプション
    <literal>$min</literal> あるいは <literal>$max</literal> を使うことです。
    これらは便利ですが、検索するフィールドにインデックスがなければなりません。
    この例は、<literal>$min</literal> を
    <function>MongoCursor::skip</function> の代替として使う方法を示します。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

// インデックスがなければなりません
$c->ensureIndex(array("ts" => 1));

// マシンの性能によって、この値を適宜変更しなければならないかもしれません
// (性能の良いマシンで 30 秒ほどかかります)
for ($i = 0; $i < 30000000; $i++) {
    $c->insert(array("ts" => new MongoDate(), "i" => $i));
}

$now = strtotime("now");

// 最後の 2 秒で追加されたドキュメントを探します
$cursor = $c->find()->addOption('$min', array("ts" => $now-2));

?>
]]>
   </programlisting>
  </example>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
