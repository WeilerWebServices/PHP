<?xml version="1.0" encoding="utf-8"?>

<!-- $Revision$ -->
<!-- EN-Revision: 335760 Maintainer: takagi Status: ready -->
<refentry xml:id="mongocursor.timeout" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::timeout</refname>
  <refpurpose>このクエリのクライアント側のタイムアウトを設定する</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::timeout</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   タイムアウトはいつでも設定可能で、同じカーソルでのそれ以降のクエリに影響を及ぼします。
   また、データベースからのさらなる結果の取得にもこれは影響します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      カーソルがレスポンスを待つミリ秒数。
      ずっと待ち続ける場合は <literal>-1</literal> を指定します。
      デフォルトでは、<varname>30000</varname> ミリ秒 (30 秒) だけ待ちます。
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;  
  <para>
   このカーソルを返します。
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   指定したミリ秒数を超える長さのクエリを実行すると、結果を取得するメソッドが
   <classname>MongoCursorTimeoutException</classname> をスローするようになります。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>MongoCursor::timeout</function> の例</title>
   <para>
    この例では、最初のレスポンスはずっと待ち続けるけれども
    それ以降の結果は 100 ミリ秒でタイムアウトさせるようにします。
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();
$cursor->timeout(-1);

/* $cursor->hasNext() はクエリを実行します。タイムアウトが設定されていないので、
 * レスポンスが得られるまでずっと待ち続けます
 */
while ($cursor->hasNext()) {
    $cursor->timeout(100);

    /* タイムアウトが設定されました。カーソルからデータベースにさらに
     * 結果を問い合わせるときは、データベースからのレスポンスを 100 ミリ秒しか待ちません
     */
    try {
        print_r($cursor->getNext());
    } catch (MongoCursorTimeoutException $e) {
        echo "query took too long!";
    }
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
     これは、MongoDB サーバー上で時間がかかっている操作をキャンセルさせるわけではありません。
     ドライバが結果を待ち続ける時間を指定して、それに達したら
     <classname>MongoCursorTimeoutException</classname> をスローするだけです。
     サーバー側でのクエリのタイムアウトを指定したい場合は、
     <methodname>MongoCursor::maxTimeMS</methodname> を使いましょう。
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoCursorInterface::timeout</methodname></member>
   <member><function>MongoClient::__construct</function> の <literal>socketTimeoutMS</literal> オプション</member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
