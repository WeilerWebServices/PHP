<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350647 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.odbc-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_execute</refname>
  <refpurpose>プリペアドステートメントを実行する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>odbc_execute</methodname>
   <methodparam><type>resource</type><parameter>result_id</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>parameters_array</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>odbc_prepare</function> で準備された命令を実行します。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result_id</parameter></term>
     <listitem>
      <para>
       <function>odbc_prepare</function> で取得した結果 ID リソース。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>parameters_array</parameter></term>
     <listitem>
      <para>
       プリペアドステートメントの中のプレースホルダが、
       <parameter>parameter_array</parameter> 内のパラメータで順に置き換えられます。
       この関数をコールした際に、配列の要素は文字列に変換されます。
      </para>
      <para>
       <parameter>parameter_array</parameter> の中でシングルクォートで括られたデータがある場合、
       それはファイル名と解釈されます。そのファイルの内容が、
       該当するプレースホルダのデータとしてデータベースサーバーに送信されます。
      </para>
      <simpara>
       シングルクォートで括られたデータを純粋に文字列として使用したい場合は、
       空白などの別の文字を前後に付加する必要があります。
       それにより、パラメータがファイル名とみなされることがなくなります
       (もしこのオプションが不要なら、別の仕組み、たとえば
       <function>odbc_exec</function>
       で直接クエリを実行するなどを使用する必要があります)。
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>odbc_execute</function> および <function>odbc_prepare</function> の例</title>
    <para>
     次のコードは、myproc の 3 つのパラメータがすべて IN
     パラメータである場合にのみ <varname>$success</varname>
     が &true; となります。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;
$c = 3;
$stmt    = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$success = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   INOUT や OUT パラメータを用いるストアドプロシージャをコールしたい場合は、
   各データベース専用の拡張モジュール
   (たとえば Oracle なら <link linkend="ref.oci8">oci8</link>)
   を使うようにしましょう。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>odbc_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
