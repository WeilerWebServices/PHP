<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347555 Maintainer: hirokawa Status: ready -->
<refentry xml:id="function.dbx-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dbx_query</refname>
  <refpurpose>クエリを送信し、(ある場合には)結果を全て取得する</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>dbx_query</methodname>
   <methodparam><type>object</type><parameter>link_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   クエリを送信し、すべての結果を取得します。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       <function>dbx_connect</function> が返す DBX リンクオブジェクト。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql_statement</parameter></term>
     <listitem>
      <para>
       SQL 文。
      </para>
      <para>
       クエリ内のデータは <link
       linkend="function.dbx-escape-string">適切にエスケープ</link>
       しておかなければなりません。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> パラメータは、返される情報の量を制御する
       ために使用されます。以下の定数の組み合わせを、論理 OR 演算子
       (|) で連結したものとなります。DBX_COLNAMES_* フラグは &php.ini;
       の dbx.colnames_case 設定を上書きします。
       <variablelist>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INDEX</constant>
         </term>
         <listitem>
          <simpara>
           これは<emphasis>常に</emphasis>設定され、結果に二次元配列の
           <property>data</property> プロパティを含めます。たとえば
           <literal>data[2][3]</literal> では <literal>2</literal> が行番号
           （レコード番号）を表し、<literal>3</literal> がカラム番号
           （フィールド番号）を表します。最初の行やカラムの番号は 0 です。
          </simpara>
          <simpara>
           <constant>DBX_RESULT_ASSOC</constant> が指定された場合、返される
           オブジェクトには <constant>DBX_RESULT_INFO</constant> に関連する
           情報が（指定していなくても）含まれます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INFO</constant>
         </term>
         <listitem>
          <simpara>
           カラムに関する情報、つまりフィールド名とフィールドの型を含めます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_ASSOC</constant>
         </term>
         <listitem>
          <simpara>
           返されるオブジェクトの <property>data</property> プロパティの
           キーとして、関連するカラム名の値がアクセスされます。
          </simpara>
          <simpara>
           関連付けられた結果は数値添字となっているので、
           <literal>data[0][0]</literal> を変更すると
           <literal>data[0]['最初のカラムのフィールド名']</literal> も同様に
           変更されます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_UNBUFFERED</constant>
         </term>
         <listitem>
          <simpara>
           このフラグは <property>data</property> プロパティを作成せず、
           <property>rows</property> プロパティの初期値を 0 に設定します。
           結果セットが大きくなる場合にこのフラグを使用し、
           <function>dbx_fetch_row</function> を使用して結果を 1 行ごとに
           取得してください。
          </simpara>
          <simpara>
           <function>dbx_fetch_row</function> 関数は、このクエリで設定した
           フラグの内容を反映じた行を返します。また、この関数がコールされる
           たびに <property>rows</property> が更新されます。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UNCHANGED</constant>
         </term>
         <listitem>
          <simpara>
           返されるカラム名の大文字小文字を変更しません。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UPPERCASE</constant>
         </term>
         <listitem>
          <simpara>
           返されるカラム名を大文字に変更します。
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_LOWERCASE</constant>
         </term>
         <listitem>
          <simpara>
           返されるカラム名を小文字に変更します。
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
       <parameter>flags</parameter> パラメータの実際の値にかかわらず、常に
       <constant>DBX_RESULT_INDEX</constant> が有効となることに注意しましょう。
       つまり、結果的に使用可能なのは以下の組み合わせだけであるということです。
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant> |
          <constant>DBX_RESULT_ASSOC</constant> -
          <parameter>flags</parameter> を指定しなかった場合、これがデフォルトです。
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>dbx_query</function> は、成功した場合に オブジェクトあるいは
   <literal>1</literal>、失敗した場合に <literal>0</literal> を返します。
   結果オブジェクトが返されるのは、<parameter>sql_statement</parameter>
   で指定されたクエリが結果セットを生成する場合（例: SELECT クエリ。結果が
   0 件の場合も含む）のみです。
  </para>
  <para>
   返されるオブジェクトは、<parameter>flags</parameter>
   の設定により 4 つまたは 5 つのプロパティを保持します。
   <variablelist>
    <varlistentry>
     <term>
      <property>handle</property>
     </term>
     <listitem>
      <para>
       接続したデータベースの有効なハンドルで、モジュール専用関数で
       （必要ならば）使用されます。
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, "SELECT id FROM table");
mysql_field_len($result->handle, 0);
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>cols</property> および <property>rows</property>
     </term>
     <listitem>
      <para>
       これらは、それぞれカラム数（フィールド数）および行数（レコード数）
       を表します。
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id FROM table');
echo $result->rows; // レコード数
echo $result->cols; // フィールド数
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>info</property> (オプション)
     </term>
     <listitem>
      <simpara>
       <parameter>flags</parameter> パラメータに
       <constant>DBX_RESULT_INFO</constant> あるいは
       <constant>DBX_RESULT_ASSOC</constant> が指定されている場合のみ
       返されます。2 次元の配列で、2 つのキー（<literal>name</literal>
       および <literal>type</literal>）を持ち、カラムの情報を取得するために
       使用します。
      </simpara>
      <example>
       <title>各フィールドの名前と型を一覧表示する</title>
       <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id FROM table',
                     DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $result->cols; $i++ ) {
    echo $result->info['name'][$i] . "\n";
    echo $result->info['type'][$i] . "\n";  
}
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>data</property>
     </term>
     <listitem>
      <simpara>
       このプロパティには結果のデータが含まれます。<parameter>flags</parameter>
       の設定によってはこのデータはカラム名と関連付けられているでしょう。
       <constant>DBX_RESULT_ASSOC</constant> が設定されていた場合、
       <literal>$result->data[2]["field_name"]</literal> のように使用可能です。
      </simpara>
      <example>
       <title>data プロパティの内容を HTML テーブルで表示する</title>
       <programlisting role="php">
<![CDATA[
<?php
$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

echo "<table>\n";
foreach ($result->data as $row) {
    echo "<tr>\n";
    foreach ($row as $field) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";
?>
]]>
       </programlisting>
      </example>
      <example>
       <title>UNBUFFERED クエリの処理法</title>
       <programlisting role="php">
<![CDATA[
<?php

$result = dbx_query ($link, 'SELECT id, parentid, description FROM table', DBX_RESULT_UNBUFFERED);

echo "<table>\n";
while ($row = dbx_fetch_row($result)) {
    echo "<tr>\n";
    foreach ($row as $field) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";

?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>返り値を処理する方法</title>
    <programlisting role="php">
<![CDATA[
<?php
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("接続できませんでした");

$result = dbx_query($link, 'SELECT id, parentid, description FROM table');

if (is_object($result) ) {
    // ... ここで何かを行います。詳細は以下の例で示します。 ...
    // まず、フィールド名とデータ型を表示します。
    // 次に、返されたフィールド値をもとに表を作成します。
} else {
    exit("クエリに失敗しました");
}

dbx_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    モジュール固有のドキュメントも参照ください。
   </para>
   <para>
    Oracle データベースでは、クエリ結果のカラム名は小文字で返されます。
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dbx_escape_string</function></member>
    <member><function>dbx_fetch_row</function></member>
    <member><function>dbx_connect</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
