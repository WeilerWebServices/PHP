<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350871 Maintainer: hirokawa Status: ready -->
<!-- CREDITS: elf,shimooka,mumumu -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.move-uploaded-file">
 <refnamediv>
  <refname>move_uploaded_file</refname>
  <refpurpose>アップロードされたファイルを新しい位置に移動する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>move_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam><type>string</type><parameter>destination</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は、<parameter>filename</parameter>
   で指定されたファイルが
   (PHP の HTTP POST アップロード機構によりアップロードされたという意味で)
   有効なアップロードファイルであるかどうかを確認します。
   そのファイルが有効な場合、<parameter>destination</parameter>
   で指定したファイル名に移動されます。
  </para>
  <para>
   この種の確認は、アップロードされたファイルに関して何でもできる場
   合には、その内容をユーザー、または同じシステム上の他のユーザーにさえ
   暴かれる可能性があるため、特に重要です。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       アップロードしたファイルのファイル名。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>destination</parameter></term>
     <listitem>
      <para>
       ファイルの移動先。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   成功した場合に &true; を返します。
  </para>
  <para>
   <parameter>filename</parameter> が有効なアップロードファイルでない場合、
   処理は行われず、<function>move_uploaded_file</function> は
   &false; を返します。
  </para>
  <para>
   <parameter>filename</parameter> が有効なアップロードファイルであるが、
   何らかの理由により、移動できない場合、処理は行われず、
   <function>move_uploaded_file</function> は
   &false; を返します。加えて、警告が出力されます。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>複数のファイルのアップロード</title>
    <programlisting role="php">
<![CDATA[
<?php
$uploads_dir = '/uploads';
foreach ($_FILES["pictures"]["error"] as $key => $error) {
    if ($error == UPLOAD_ERR_OK) {
        $tmp_name = $_FILES["pictures"]["tmp_name"][$key];
        // basename() で、ひとまずファイルシステムトラバーサル攻撃は防げるでしょう。
        // ファイル名についてのその他のバリデーションも、適切に行いましょう。
        $name = basename($_FILES["pictures"]["name"][$key]);
        move_uploaded_file($tmp_name, "$uploads_dir/$name");
    }
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>move_uploaded_file</function> は
    <link linkend="ini.open-basedir">open_basedir</link> を考慮しています。
    しかしながら、アップロードされたファイルを移動する
    <parameter>destination</parameter> パスのみ制限が設けられます。
    そこでは <parameter>filename</parameter>
    がそれらの制限に抵触する可能性があるためです。
    <function>move_uploaded_file</function> は PHP
    を通じてアップロードされたファイルのみを移動できるようにすることで
    この操作の安全性を保証しています。
   </para>
  </note>
  <warning>
   <para>
    コピー先のファイルが既に存在する場合、上書きされます。
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_uploaded_file</function></member>
    <member><function>rename</function></member>
    <member>簡単な使用例については <link linkend="features.file-upload">ファイルアップロードの処理</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
