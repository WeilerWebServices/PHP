<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347496 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.curl-multi-exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_multi_exec</refname>
  <refpurpose>現在の cURL ハンドルから、サブ接続を実行する</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>curl_multi_exec</methodname>
   <methodparam><type>resource</type><parameter>mh</parameter></methodparam>
   <methodparam><type>int</type><parameter role="reference">still_running</parameter></methodparam>
  </methodsynopsis>
  <para>
   スタック内の各ハンドルを処理します。
   このメソッドは、ハンドルがデータの読み書きを要するかどうかにかかわらずコール可能です。
  </para> 
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.mh.description;
    <varlistentry>
     <term><parameter>still_running</parameter></term>
     <listitem>
      <para>
       処理が実行中かどうかを表すフラグへの参照。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   cURL <link linkend="curl.constants">定義済み定数</link> で定義された
   cURL コードを返します。
  </para>
  <note>
   <para>
    これは、マルチスタック全体に関するエラーのみを返します。この関数が
    <constant>CURLM_OK</constant> を返したとしても、各転送で個別にエラーが発生している可能性があります。
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>curl_multi_exec</function> の例</title>
    <para>
     この例は、ふたつの cURL ハンドルを作成し、それをマルチハンドルに追加して非同期で実行します。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// cURL リソースを作成します
$ch1 = curl_init();
$ch2 = curl_init();

// URL およびその他適切なオプションを設定します。
curl_setopt($ch1, CURLOPT_URL, "http://example.com/");
curl_setopt($ch1, CURLOPT_HEADER, 0);
curl_setopt($ch2, CURLOPT_URL, "http://www.php.net/");
curl_setopt($ch2, CURLOPT_HEADER, 0);

// マルチ cURL ハンドルを作成します
$mh = curl_multi_init();

// ふたつのハンドルを追加します
curl_multi_add_handle($mh,$ch1);
curl_multi_add_handle($mh,$ch2);

// ハンドルを実行します
do {
    $status = curl_multi_exec($mh, $active);
    if ($active) {
        // Wait a short time for more activity
        curl_multi_select($mh);
    }
} while ($active && $status == CURLM_OK);

// ハンドルを閉じます
curl_multi_remove_handle($mh, $ch1);
curl_multi_remove_handle($mh, $ch2);
curl_multi_close($mh);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_multi_init</function></member>
    <member><function>curl_multi_select</function></member>
    <member><function>curl_exec</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
