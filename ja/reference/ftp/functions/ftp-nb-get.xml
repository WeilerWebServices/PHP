<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 349710 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.ftp-nb-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_get</refname>
  <refpurpose>FTP サーバーからファイルを取得し、ローカルファイルに書き込む（非ブロッキング）</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ftp_nb_get</methodname>
   <methodparam><type>resource</type><parameter>ftp_stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>local_file</parameter></methodparam>
   <methodparam><type>string</type><parameter>remote_file</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>FTP_BINARY</constant></initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resumepos</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_get</function> は FTP サーバーからリモートファイルを取得し、
   それをローカルファイルに保存します。
  </para>
  <para>
   <function>ftp_get</function> との違いは、この関数が
   非同期処理でファイルを取得するということです。そのため、
   ファイルをダウンロードしている最中に別の処理を行うことができます。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ftp_stream</parameter></term>
     <listitem>
      <para>
       FTP 接続のリンク ID 。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>local_file</parameter></term>
     <listitem>
      <para>
       ローカルファイルのパス（ファイルがすでに存在する場合、上書きされます）。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remote_file</parameter></term>
     <listitem>
      <para>
       リモートファイルのパス。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       転送モード。<constant>FTP_ASCII</constant> または
       <constant>FTP_BINARY</constant> のどちらかを指定する必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>resumepos</parameter></term>
     <listitem>
      <para>ダウンロードを開始する、リモートファイル内の位置。</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <constant>FTP_FAILED</constant>、<constant>FTP_FINISHED</constant>
   あるいは <constant>FTP_MOREDATA</constant> を返します。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.3.0</entry>
      <entry>
       <parameter>mode</parameter> パラメータはオプションになりました。
       これより前のバージョンでは、このパラメータは必須でした。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ftp_nb_get</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php

// ダウンロードを開始する
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   
   // 何かお好みの動作を
   echo ".";

   // ダウンロードを継続する…
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error downloading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title><function>ftp_nb_get</function> でダウンロードを再開する</title>
    <programlisting role="php">
<![CDATA[
<?php

// 開始
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY, 
                      filesize("test"));
// あるいは: $ret = ftp_nb_get($my_connection, "test", "README", 
//                             FTP_BINARY, FTP_AUTORESUME);
while ($ret == FTP_MOREDATA) {
   
   // 何かお好みの動作を
   echo ".";

   // ダウンロードを継続する…
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "There was an error downloading the file...";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     <function>ftp_nb_get</function> を用い、ファイルの 100 バイト目以降から
     ダウンロードを再開する
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// 自動シークを無効にする
ftp_set_option($my_connection, FTP_AUTOSEEK, false);

// 開始
$ret = ftp_nb_get($my_connection, "newfile", "README", FTP_BINARY, 100);
while ($ret == FTP_MOREDATA) {

   /* ... */
   
   // ダウンロードを継続する…
   $ret = ftp_nb_continue($my_connection);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   上の例では、<filename>newfile</filename> のサイズは FTP サーバー上の
   <filename>README</filename> より 100 バイト小さくなります。なぜなら
   ダウンロードの開始位置を 100 バイトずらしたからです。
   もし <constant>FTP_AUTOSEEK</constant> を無効にしなければ、
   <filename>newfile</filename> の最初の 100 バイトは
   <literal>'\0'</literal> で埋められます。
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fget</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_fget</function></member>
    <member><function>ftp_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
