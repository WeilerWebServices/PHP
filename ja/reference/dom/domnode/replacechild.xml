<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336566 Maintainer: takagi Status: ready -->
<refentry xml:id='domnode.replacechild' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::replaceChild</refname>
  <refpurpose>
   子を置き換える
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>DOMNode</type><methodname>DOMNode::replaceChild</methodname>
   <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
   <methodparam><type>DOMNode</type><parameter>oldnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は、子要素 <parameter>oldnode</parameter> を新しいノードに
   置き換えます。もし <parameter>newnode</parameter> がすでに子要素であった場合は、
   それがふたたび追加されることはありません。置き換えに成功すると、
   置き換え前のノードが返されます。
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       新しいノード。対象ドキュメントのメンバ、
       すなわち、DOMDocument->createXXX() メソッドのひとつで作成されたものか
       <xref linkend='domdocument.importnode' /> で
       ドキュメントにインポートされたものである必要があります。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>oldnode</parameter></term>
     <listitem>
      <para>
       古いノード。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   古いノード、あるいはエラーが発生した場合は &false; を返します。
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       このノードが読み込み専用であったり、挿入されるノードの以前の親が
       読み込み専用であった場合に発生します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       <parameter>newnode</parameter> で指定した型の子ノードを
       保持することが許可されていない場合、あるいは追加しようとしている
       ノードが自分自身やその祖先であった場合に発生します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       <parameter>newnode</parameter> が、このノードとは別の
       ドキュメントで作成されたものである場合に発生します。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND</constant></term>
     <listitem>
      <para>
       <parameter>oldnode</parameter> がこのノードの子でない場合に発生します。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMNode::appendChild</methodname></member>
    <member><methodname>DOMNode::removeChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
