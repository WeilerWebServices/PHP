<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: haruki Status: ready -->
<!-- Credits: hirokawa, haruki -->
   <sect1 xml:id="install.unix.sun" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Sun, iPlanet, Netscape サーバー（Sun Solaris 用）</title>
    <para>
      このセクションでは、Sun Solaris 上の Sun Java System Web Server, Sun ONE Web Server, 
      iPlanet and Netscape server に PHP をインストールする際の
      手引きと注意事項について説明します。
    </para>
    <para>
     PHP 4.3.3 より、<link linkend="ref.nsapi">NSAPI モジュール</link> を使って 
     <link linkend="install.unix.sun.specialpages">独自エラーページ および
     ファイル一覧表示ページの生成</link> が可能です。 Apache 互換の関数も追加されています。 
     また、これらの Web サーバーについての
     <link linkend="install.unix.sun.notes">サブリクエストに関する注意</link> も参照してください。
    </para>
    <para>
     Netscape Enterprise Server (NES) への PHP のインストールに関しては
     <link xlink:href="&url.netscape.nsapi;">&url.netscape.nsapi;</link> にも情報があります。
    </para>
    
    <para>
     Sun JSWS/Sun ONE WS/iPlanet/Netscape Web サーバー用に PHP をビルド
     するには、<link linkend="configure.with-nsapi">--with-nsapi=[DIR]</link>
     オプションに適切なインストールディレクトリを指定してください。
     デフォルトのディレクトリは、通常、<filename class="directory">/opt/netscape/suitespot/</filename>
     です。
     <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename> も参照してください。
    </para>
    <para>
     <orderedlist>
      <listitem>
       <para>
        以下のパッケージを、<link xlink:href="&url.sun.freeware;">
        &url.sun.freeware;</link> や他のダウンロードサイトから取得し、
        インストールします。
        <simplelist>
         <member><filename>autoconf-2.13</filename></member>
         <member><filename>automake-1.4</filename></member>
         <member><filename>bison-1_25-sol26-sparc-local</filename></member>
         <member><filename>flex-2_5_4a-sol26-sparc-local</filename></member>
         <member><filename>gcc-2_95_2-sol26-sparc-local</filename></member>
         <member><filename>gzip-1.2.4-sol26-sparc-local</filename></member>
         <member><filename>m4-1_4-sol26-sparc-local</filename></member>
         <member><filename>make-3_76_1-sol26-sparc-local</filename></member>
         <member>
          <filename>mysql-3.23.24-beta</filename> (mysql サポートが必要な場合)
         </member>
         <member><filename>perl-5_005_03-sol26-sparc-local</filename></member>
         <member><filename>tar-1.13</filename> (GNU tar)</member>
        </simplelist>
       </para>
      </listitem>
      <listitem>
       <simpara>
        パスを適切に設定します
        ( <literal>PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin</literal> )。
        そして、<userinput>export PATH</userinput>とし、パスを有効にします。
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>gunzip php-x.x.x.tar.gz</userinput> (<filename>.gz</filename> 配布の場合のみ)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>tar xvf php-x.x.x.tar</userinput>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        PHP を展開したディレクトリに移動します
        <userinput>cd ../php-x.x.x</userinput>
       </simpara>
      </listitem>
      <listitem>
       <para>
        以下のステップを実施します。
        <filename class="directory">/opt/netscape/suitespot/</filename> は
        netscape サーバーがインストールされている場所です。
        異なる場合は、適切なパスに変更してください。
        <programlisting role="shell">
<![CDATA[
./configure --with-mysql=/usr/local/mysql \
--with-nsapi=/opt/netscape/suitespot/ \
--enable-libgcc
]]>
        </programlisting>
       </para>
      </listitem>
      <listitem>
       <simpara>
        <command>make</command> を実行し、その後 <command>make install</command>
        を実行します。
       </simpara>
      </listitem>
     </orderedlist>
    </para>
    <para>
     基本インストールを実行したら、適当な readme ファイルを参照してください。
     いくつかの追加インストール手順を実行する必要があるかもしれません。
    </para>
    <formalpara>
     <title>Sun/iPlanet/Netscape の設定手順</title>
     <para>
      まず、共有ライブラリの探索のために、環境変数
      LD_LIBRARY_PATH にパスをいくつか追加する必要があります。
      Webサーバーの開始スクリプトで行うのが最善でしょう。
      開始スクリプトは、通常 
      <filename class="directory">/path/to/server/https-servername/start</filename>
      にあります。
      また、<filename class="directory">/path/to/server/https-servername/config/</filename>
      にある設定ファイルの編集も必要です。
      <orderedlist>
       <listitem>
        <para>
         <filename>mime.types</filename>に次の行を追加します
         (administration server で行えます。)
         <screen>
<![CDATA[
type=magnus-internal/x-httpd-php exts=php
]]>
         </screen>
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>magnus.conf</filename> (サーバー&gt;= 6の場合) または
         <filename>obj.conf</filename> (サーバー&lt; 6の場合) を編集し、
         以下の行を追加します。
         ここで、shlib はシステムにより異なります。
         <filename>/opt/netscape/suitespot/bin/libphp4.so</filename>
         等となるでしょう。
         <literal>mime types init</literal> の後に置いてください。
         <programlisting>
<![CDATA[
Init fn="load-modules" funcs="php4_init,php4_execute,php4_auth_trans" shlib="/opt/netscape/suitespot/bin/libphp4.so"
Init fn="php4_init" LateInit="yes" errorString="Failed to initialize PHP!" [php_ini="/path/to/php.ini"]
]]>
         </programlisting>
         (PHP &gt;= 4.3.3) <literal>php_ini</literal> パラメータはオプションですが、 
         これを指定することにより、Web サーバーの設定ファイルがあるフォルダに 
         &php.ini; を置くことが可能になります。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>obj.conf</filename> のデフォルトオブジェクトを設定します 
         （バージョン 6 以降の仮想サーバーの場合は
         <filename>vserver.obj.conf</filename>。）
         <programlisting>
<![CDATA[
<Object name="default">
.
.
.
.#NOTE this next line should happen after all 'ObjectType' and before all 'AddLog' lines
Service fn="php4_execute" type="magnus-internal/x-httpd-php" [inikey=value inikey=value ...]
.
.
</Object>
]]>
         </programlisting>
         (PHP &gt;= 4.3.3) 追加のパラメータとして、いくつかの特別な &php.ini; 値を 
         追加することができます。例えば、コンテキスト <literal>php4_execute</literal> に対して 
         <literal>docroot=&quot;/path/to/docroot&quot;</literal> を設定するなどです。
         また、論理値の場合、0/1 を値として使用してください。 
         <literal>&quot;On&quot;,&quot;Off&quot;,...</literal> では正しく動作しません。
         例えば、<literal>zlib.output_compression=&quot;On&quot;</literal> ではなく、 
         <literal>zlib.output_compression=1</literal> とします。
        </para>
       </listitem>
       <listitem>
        <para>
         以下は、（<filename class="directory">cgi-bin</filename> ディレクトリ のように）
         PHP スクリプトだけが置かれるディレクトリを設定したい場合にのみ必要です。
         <programlisting>
<![CDATA[
<Object name="x-httpd-php">
ObjectType fn="force-type" type="magnus-internal/x-httpd-php"
Service fn=php4_execute [inikey=value inikey=value ...]
</Object>
]]>
         </programlisting>
         こうしておくと、Administration Server に特定のディレクトリを設定し、 
         これをスタイル <literal>x-httpd-php</literal> に割り付けることができます。
         このディレクトリの中にあるすべてのファイルは PHP スクリプト として実行されます。 
         これは、ファイルの拡張子を <filename>.html</filename> に変更し、
         PHP が使用されている事を隠したい場合に有用です。
        </para>
       </listitem>
       <listitem>
        <para>
         認証を設定します。PHP による認証は他の認証と併用することはできません。
         すべての認証は、PHP スクリプトに渡されます。
         サーバー全体に対して PHP 認証を設定する場合は、以下の行を追加してください。
         <programlisting>
<![CDATA[
<Object name="default">
AuthTrans fn=php4_auth_trans
.
.
.
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         単一のディレクトリでのみ PHP による認証を行う場合は、次の行を追加します。
         <programlisting>
<![CDATA[
<Object ppath="d:\path\to\authenticated\dir\*">
AuthTrans fn=php4_auth_trans
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
      </orderedlist>
     </para>
    </formalpara>
    <note>
     <para>
      PHP が使用するスタックサイズは Web サーバーの設定に依存します。 
      非常に大きい PHP スクリプトを実行させた際にクラッシュが発生する場合は、 
      Administration Server でスタックサイズ（&quot;MAGNUS EDITOR&quot;） を大きくすると良いでしょう。
     </para>
    </note>
   
   <sect2 xml:id="install.unix.sun.phpini">
    <title>CGI 環境変数と &php.ini; の変更</title>
    <para>
     Sun JSWS/Sun ONE WS/iPlanet/Netscape がマルチスレッドの Web サーバーだという事が 
     PHP スクリプトを書く際に重要になります。すべてのリクエストは同一の 
     （Web サーバー自体の）プロセス空間で実行され、そのプロセス空間は 1 つの環境変数しか
     持っていません。<literal>PATH_INFO</literal> や <literal>HTTP_HOST</literal>
     CGI 変数を取得する場合、 
     古い PHP で行っていたような方法、つまり <function>getenv</function> 関数を使用する方法や他の同等な方法
     （グローバル変数の登録機能、 <varname>$_ENV</varname>  等）を使うのは正しい方法ではありません。
     Web サーバーの環境変数をただ単に取得するだけと、
     正しい CGI 変数は得られないのです。
    </para>
    <note>
     <para>
      なぜ正しくない CGI 変数が登録されているのでしょうか？
     </para>
     <para>
      それは、Web サーバーのプロセスを Administration Server から起動させる際、
      Web サーバーの起動スクリプトが CGI スクリプトとして実行されるためです。したがって、
      起動された Web サーバーの環境変数には CGI 変数も含まれることになります。
      Administration Server 以外から Web サーバーを起動してみればこのことをテストできるでしょう。
      ルートユーザーでコマンドラインを使って、手動で起動してみると、CGI 変数らしき
      環境変数が登録されないことが確認できるでしょう。
     </para>
    </note>
    <para>
     PHP 4.x のスクリプトで CGI 変数を取得する場合は、スーパーグローバル
     <varname>$_SERVER</varname> を用いるのが正しい方法です。また、<varname>$HTTP_HOST</varname>
     などを使う古いスクリプトを使用する場合は、&php.ini; で <literal>register_globals</literal> 
     をオンにし、変数のパースの順番 (<literal>variables_order</literal>) を変更してください
     （<literal>&quot;E&quot;</literal> を削除。環境変数を読み込む必要は無いため。）
     <programlisting>
<![CDATA[
variables_order = "GPCS"
register_globals = On
]]>
     </programlisting>
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.specialpages">
    <title>独自エラーページおよびファイル一覧表示ページ (PHP &gt;= 4.3.3)</title>
    <para>
     PHP を使って、<literal>"404 Not Found"</literal> などに対するエラーページを生成することが
     できます。オーバーライドしたいすべてのエラーページ対して、以下の行を
     <filename>obj.conf</filename> 中のオブジェクトに追加してください。
     <programlisting>
<![CDATA[
Error fn="php4_execute" code=XXX script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     ここで、<literal>XXX</literal> は HTTP のエラーコードです。
     追加したものと干渉する <literal>Error</literal> ディレクティブは削除してください。
     発生するすべてのエラーに対応するページを設定したい場合は、
     <literal>code</literal> パラメータを省略してください。スクリプトで HTTP ステータス
     コードを取得するには、 <varname>$_SERVER['ERROR_TYPE']</varname> を使用します。
    </para>
    <para>
     独自のファイル一覧表示ページを PHP を使って生成することも可能です。
     ファイル一覧表示を行う PHP スクリプトを作成し、<filename>obj.conf</filename> の
     <literal>type=&quot;magnus-internal/directory&quot;</literal> の行に
     書かれているデフォルトの <literal>Service</literal> 行を以下のように置き換えます。
     <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/directory" script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     エラーページ、ファイル一覧表示ページのいずれでも、元の URI および
     変換後の URI は、それぞれ、<varname>$_SERVER['PATH_INFO']</varname> および
     <varname>$_SERVER['PATH_TRANSLATED']</varname> に格納されます。
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.notes">
    <title><function>nsapi_virtual</function> および サブリクエストに関する注意 (PHP &gt;= 4.3.3)</title>
    <para>
     NSAPI モジュールは、現在、<function>nsapi_virtual</function> 関数
     (エイリアス: <function>virtual</function>) をサポートしており、
     Web サーバーへサブリクエストを行い、結果を Web ページへ挿入することができます。
     ただし、この関数は NSAPI ライブラリの文書化されていない機能を若干使用しています。
     モジュールは、自動的に必要な関数群を探し、可能であればそれらの関数を
     使用ます。もし使用可能でなければ、<function>nsapi_virtual</function> 関数は
     使用不可となります。
    </para>
    <note>
     <para>
      <function>nsapi_virtual</function> サポートは「実験的」な機能です。
     </para>
    </note>
   </sect2>   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
