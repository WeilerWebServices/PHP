<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339251 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa, haruki -->

<sect2 xml:id="install.windows.legacy.iis7" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Microsoft IIS 7.0 以降</title>
 <para>
  このセクションでは、Internet Information
  Services (IIS) 7.0 以降を設定して、PHP を Microsoft Windows Vista SP1,
  Windows 7, Windows Server 2008 および Windows Server 2008 R2 で動かす方法を説明します。
  IIS 5.1 や IIS 6.0 を Windows XP および Windows Server 2003 で動かす方法については
  <link linkend="install.windows.legacy.iis6">Microsoft IIS 5.1 および IIS 6.0</link>
  を参照ください。
 </para>
 <sect3 xml:id="install.windows.legacy.iis7.fastcgi.enable">
  <title>IIS での FastCGI サポートの有効化</title>
  <para>
   FastCGI モジュールは、IIS のデフォルトでは無効になっています。
   有効化する手順は、Windows のバージョンによって異なります。
  </para>
  <para>
   Windows Vista SP1 および Windows 7 で FastCGI サポートを有効化する方法
   <procedure>
    <step>
     <simpara>
      Windows のスタートメニューで &quot;ファイル名を指定して実行&quot; を選び、
      &quot;optionalfeatures.exe&quot; と入力して &quot;Ok&quot; をクリックする
     </simpara>
    </step>
    <step>
     <simpara>
      &quot;Windows Features&quot; ダイアログで &quot;Internet Information 
      Services&quot;、&quot;World Wide Web Services&quot;、&quot;Application Development 
      Features&quot; を展開し、&quot;CGI&quot; チェックボックスを有効にする
     </simpara>
    </step>
    <step>
     <simpara>
      OK をクリックし、インストールが完了するまで待つ
     </simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>Windows Vista SP1 および Windows 7 での FastCGI サポートの有効化</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis7vistacgi.png" />
    </imageobject>
   </mediaobject>
  </para>
  <para>
   Windows Server 2008 および Windows Server 2008 R2 で FastCGI サポートを有効化する方法
   <procedure>
    <step>
     <simpara>
      Windows のスタートメニューで &quot;ファイル名を指定して実行&quot; を選び、
      &quot;CompMgmtLauncher&quot; と入力して &quot;Ok&quot; をクリックする
     </simpara>
    </step>
    <step>
     <simpara>
      &quot;Web Server (IIS)&quot; ロールが &quot;Roles&quot; ノードの下に存在しない場合は
      &quot;Add Roles&quot; をクリックして追加する
     </simpara>
    </step>
    <step>
     <simpara>
      &quot;Web Server (IIS)&quot; ロールが存在する場合は、&quot;Add Role Services&quot;
      をクリックして &quot;Application Development&quot; グループの
      &quot;CGI&quot; チェックボックスを有効にする
     </simpara>
    </step>
    <step>
     <simpara>
      &quot;Next&quot;、そして &quot;Install&quot; をクリックし、
      インストールが完了するまで待つ
     </simpara>
    </step>
   </procedure>
   <mediaobject>
    <alt>Windows Server 2008 および Windows Server 2008 R2 での FastCGI サポートの有効化</alt>
    <imageobject>
     <imagedata fileref="en/install/windows/figures/iis7w2k8cgi.png" />
    </imageobject>
   </mediaobject>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.fastcgi.conf">
  <title>IIS で PHP リクエストを処理するための設定</title>
  <para>
    <link linkend="install.windows.legacy.manual">手動インストールの手順</link>
    での説明にしたがって、PHP をダウンロードしてインストールします。
    <note>
     <para>
      IIS を使う場合は、非スレッドセーフ版の PHP を推奨します。非スレッドセーフ版は
      <link xlink:href="&url.php.win.downloads;">PHP for Windows: 
      Binaries and Sources Releases.</link> で取得できます。
     </para>
    </note>
  </para>
  <para>
   CGI や FastCGI 固有の設定を、<filename>php.ini</filename> で以下のように行います。
   <example>
    <title><filename>php.ini</filename> での CGI および FastCGI 用の設定</title>
    <programlisting role="ini">
<![CDATA[
fastcgi.impersonate = 1
fastcgi.logging = 0
cgi.fix_pathinfo=1
cgi.force_redirect = 0
]]>
    </programlisting>
   </example>
  </para>
  <para>
   PHP 用の IIS ハンドラマッピングを設定するには IIS マネージャのユーザーインターフェイス
   あるいはコマンドラインツールを使います。
  </para>
  <sect4 xml:id="install.windows.legacy.iis7.fastcgi.conf.ui">
   <title>IIS マネージャのユーザーインターフェイスを使った PHP 用ハンドラマッピングの作成</title>
    <para>
     PHP 用の IIS ハンドラマッピングを
     IIS マネージャのユーザーインターフェイスで設定する手順は次のとおりです。
     <procedure>
      <step>
       <simpara>Windows のスタートメニューで &quot;ファイル名を指定して実行&quot; を選び、&quot;inetmgr&quot; と入力して &quot;Ok&quot; をクリックする</simpara>
      </step>
      <step>
       <simpara>IIS マネージャのユーザーインターフェイスで、&quot;Connections&quot; ツリービューのサーバーノードを選ぶ</simpara>
      </step>
      <step>
       <para>
        &quot;Features View&quot; ページで &quot;Handler Mappings&quot; を開く
        <mediaobject>
         <alt>PHP 用の IIS ハンドラマッピングの作成 : ハンドラマッピングの場所</alt>
         <imageobject>
          <imagedata fileref="en/install/windows/figures/iis7handlericon.png" />
         </imageobject>
        </mediaobject>
       </para>
      </step>
      <step>
       <simpara>&quot;Actions&quot; ペインで &quot;Add Module Mapping...&quot; をクリックする</simpara>
      </step>
      <step>
       <para>
        &quot;Add Module Mapping&quot; ダイアログで次のように入力する
        <itemizedlist spacing="compact">
         <listitem>
          <simpara>Request path: *.php</simpara>
         </listitem>
         <listitem>
          <simpara>Module: FastCgiModule</simpara>
         </listitem>
         <listitem>
          <simpara>Executable: C:\[PHP をインストールしたパス]\php-cgi.exe</simpara>
         </listitem>
         <listitem>
          <simpara>Name: PHP_via_FastCGI</simpara>
         </listitem>
        </itemizedlist>
       </para>
      </step>
      <step>
       <simpara>
        &quot;Request Restrictions&quot; ボタンをクリックし、
        リクエストがファイルあるいはフォルダにマップされたときだけハンドラが起動するように設定する
        </simpara>
      </step>
      <step>
       <simpara>すべてのダイアログで OK をクリックし、設定を保存する</simpara>
      </step>
     </procedure>
     <mediaobject>
      <alt>PHP 用の IIS ハンドラマッピングの作成 : ハンドラマッピングの追加</alt>
      <imageobject>
       <imagedata fileref="en/install/windows/figures/iis7handlermap.png" />
      </imageobject>
     </mediaobject>
    </para>
  </sect4>
  <sect4 xml:id="install.windows.legacy.iis7.fastcgi.conf.cmd">
   <title>コマンドラインツールによる PHP 用ハンドラマッピングの作成</title>
   <para>
    次のコマンドを使うと、IIS FastCGI プロセスプールを作ることができます。
    PHP リクエストの処理には <filename>php-cgi.exe</filename> を使います。
    <varname>fullPath</varname> パラメータの値は
    <filename>php-cgi.exe</filename> への絶対パスで置き換えてください。
    <example>
     <title>IIS FastCGI プロセスプールの作成</title>
     <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd set config /section:system.webServer/fastCGI ^
/+[fullPath='c:\PHP\php-cgi.exe']
]]>
     </programlisting>
    </example>
   </para>
   <para>
    IIS に PHP のリクエストを処理させるには、以下のコマンドを実行します。
    <varname>scriptProcessor</varname> パラメータの値は
    <filename>php-cgi.exe</filename> への絶対パスで置き換えてください。
    <example>
     <title>PHP リクエスト用のハンドラマッピングの作成</title>
     <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd set config /section:system.webServer/handlers ^
/+[name='PHP_via_FastCGI', path='*.php',verb='*',modules='FastCgiModule',^
scriptProcessor='c:\PHP\php-cgi.exe',resourceType='Either']
]]>
     </programlisting>
    </example>
   </para>
   <para>
    このコマンドは、拡張子 *.php 用の IIS ハンドラマッピングを作成します。
    .php で終わるすべての URL を FastCGI モジュールで処理するようになります。
    <note>
     <para>
      この時点で、最低限必要なインストールと設定は完了しました。
      これ以降の手順は必須ではありませんが、IIS 上で PHP
      を効果的に動かすために強く推奨するものです。
     </para>
    </note>
   </para>
  </sect4>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.impersonation">
  <title>匿名化およびファイルシステムへのアクセス</title>
  <para>
   PHP を IIS で使う場合は、FastCGI の匿名化を有効にしておくことを推奨します。
   これは、<filename>php.ini</filename> ファイルの
   <varname>fastcgi.impersonate</varname> ディレクティブで設定します。
   匿名化を有効にすると、PHP はすべてのファイルシステム操作を
   IIS 認証で定義したユーザーアカウントで行います。
   こうしておけば、同じ PHP プロセスを異なる IIS ウェブサイトで共有している場合でも
   (各サイトで IIS 認証のユーザーアカウントを分けておけば)
   一方の PHP スクリプトからもう一方のファイルはアクセスできなくなります。
  </para>
  <para>
   IIS 7 のデフォルト設定では組み込みのユーザーアカウント
   IUSR による匿名認証が有効になっています。
   つまり、IIS で PHP スクリプトを実行する場合は IUSR
   アカウントにスクリプトの読み込み権限を付与しなければならないということです。
   PHP のアプリケーションからファイルへの書き込みやフォルダ内でのファイルの作成などをする場合は、
   IUSR アカウントに書き込み権限が必要となります。
  </para>
  <para>
   IIS 7 の匿名認証で使うユーザーアカウントを設定するには、次のコマンドを実行します。
   &quot;Default Web Site&quot; の部分は、使用する IIS ウェブサイト名に置き換えてください。
   出力される XML 設定要素の中から <varname>userName</varname> 属性を探します。
   <example>
    <title>IIS 匿名認証で使うアカウントの設定</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe list config "Default Web Site" ^
/section:anonymousAuthentication

<system.webServer>
  <security>
    <authentication>
      <anonymousAuthentication enabled="true" userName="IUSR" />
    </authentication>
   </security>
</system.webServer>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     <varname>userName</varname> 属性が <varname>anonymousAuthentication</varname>
     要素になかったり、あるいは属性の値が空の文字列になっている場合は、
     アプリケーションプールの認証情報をそのウェブサイトの匿名認証で使います。
    </para>
   </note>
  </para>
  <para>
   ファイルやフォルダのパーミッションを変更するには、エクスプローラあるいは
   <varname>icacls</varname> コマンドを使います。
   <example>
    <title>ファイルのアクセス権の設定</title>
    <programlisting>
<![CDATA[
icacls C:\inetpub\wwwroot\upload /grant IUSR:(OI)(CI)(M)
]]>
    </programlisting>
   </example>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.defaultdoc">
  <title>IIS のデフォルトドキュメントを <filename>index.php</filename> にする</title>
  <para>
   ドキュメント名を指定しない HTTP リクエストを受け取ったときには、
   IIS のデフォルトドキュメントが使われます。PHP アプリケーションでは、通常は
   <filename>index.php</filename> をデフォルトドキュメントとします。
   <filename>index.php</filename> を IIS のデフォルトドキュメントに追加するには、
   次のようにします。
   <example>
    <title><filename>index.php</filename> を IIS のデフォルトドキュメントにする</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config ^
-section:system.webServer/defaultDocument /+"files.[value='index.php']" ^
/commit:apphost
]]>
    </programlisting>
   </example>   
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.recycling">
  <title>FastCGI および PHP の再利用設定</title>
  <para>
   IIS FastCGI で PHP プロセスの再利用を設定するには以下のコマンドを使います。
   FastCGI の設定項目 <varname>instanceMaxRequests</varname> は、
   ひとつの <filename>php-cgi.exe</filename> が何回リクエストを処理すると
   FastCGI エクステンションがシャットダウンさせるかを表します。
   PHP の環境変数 <varname>PHP_FCGI_MAX_REQUESTS</varname> は、
   ひとつの <filename>php-cgi.exe</filename> プロセスが何回リクエストを処理すると
   自分をリサイクルするかを表します。
   FastCGI の <varname>InstanceMaxRequests</varname>
   で設定した値が <varname>PHP_FCGI_MAX_REQUESTS</varname>
   以下になるようにしましょう。
   <example>
    <title>FastCGI と PHP の再利用設定</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='c:\php\php-cgi.exe'].instanceMaxRequests:10000

%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/+"[fullPath='C:\{php_folder}\php-cgi.exe'].environmentVariables.^
[name='PHP_FCGI_MAX_REQUESTS',value='10000']"
]]>
    </programlisting>
   </example>
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.timeouts">
  <title>FastCGI のタイムアウト設定</title>
  <para>
   実行時間が長くなる PHP スクリプトがある場合は、FastCGI
   のタイムアウト設定を増やします。タイムアウトに関連する設定項目は
   <varname>activityTimeout</varname> と <varname>requestTimeout</varname> です。
   タイムアウト設定を変更するには以下のコマンドを使います。
   <varname>fullPath</varname> パラメータの値を
   <filename>php-cgi.exe</filename> ファイルへの絶対パスに置き換えてください。
   <example>
    <title>FastCGI のタイムアウト設定</title>
    <programlisting>
<![CDATA[
%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='C:\php\php-cgi.exe',arguments=''].activityTimeout:"90"  /commit:apphost

%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/fastCgi ^
/[fullPath='C:\php\php-cgi.exe',arguments=''].requestTimeout:"90"  /commit:apphost
]]>
    </programlisting>
   </example>   
  </para>
 </sect3>
 <sect3 xml:id="install.windows.legacy.iis7.phpinilocation">
  <title><filename>php.ini</filename> ファイルの場所の変更</title>
  <para>
   PHP が <filename>php.ini</filename> ファイルを探す場所は
   <link linkend="configuration.file">いくつかあり</link>、
   <filename>php.ini</filename> ファイルのデフォルトの場所を
   環境変数 <varname>PHPRC</varname> で変更することができます。
   特定の場所においた設定ファイルを PHP に読み込ませたい場合は、
   以下のコマンドを実行します。環境変数 <varname>PHPRC</varname>
   には、<filename>php.ini</filename>
   ファイルがあるディレクトリへの絶対パスを指定しなければなりません。
   <example>
    <title><filename>php.ini</filename> ファイルの場所の変更</title>
    <programlisting>
<![CDATA[
appcmd.exe set config  -section:system.webServer/fastCgi ^
/+"[fullPath='C:\php\php.exe',arguments=''].environmentVariables.^
[name='PHPRC',value='C:\Some\Directory\']" /commit:apphost
]]>         
    </programlisting>
   </example>   
  </para>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
