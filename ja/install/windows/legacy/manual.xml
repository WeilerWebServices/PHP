<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339251 Maintainer: haruki Status: ready -->
<!-- CREDITS: fujimoto, hirokawa, yuw, haruki, takagi -->
   <sect2 xml:id="install.windows.legacy.manual" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>手動でのインストール</title>
    <para>
     この節では、Microsoft Windows 環境に
     PHP を手動でインストールして設定する方法を説明します。
    </para>
    <sect3 xml:id="install.windows.legacy.manual.download">
     <title>PHP 配布パッケージの選択とダウンロード</title>
     <para>
      PHP バイナリの zip 版を
      <link xlink:href="&url.php.win.downloads;">PHP for Windows: Binaries and Sources</link>
      からダウンロードします。zip パッケージにはいくつかのバージョンがあります。
      適切なバージョンを選ぶための詳細な指針が、
      <link xlink:href="&url.php.win.downloads;">ダウンロードページ</link> にあるので、それに従いましょう。
     </para>
    </sect3>
    <sect3 xml:id="install.windows.legacy.manual.package">
     <title>PHP パッケージの構造と内容</title>
     <para>
      zip パッケージを、たとえば C:\PHP\ などのお好みの場所に展開しましょう。
      zip を展開した中身は、次のようになります。
      <example>
       <title>PHP 5 パッケージ構造</title>
     <programlisting>
<![CDATA[

c:\php
   |
   +--dev
   |  |
   |  |-php5ts.lib                 -- 非スレッドセーフバージョンの場合は php5.lib
   |
   +--ext                          -- PHP 拡張モジュールの DLL
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-...
   |
   +--extras                       -- 空
   |
   +--pear                         -- PEAR の初期コピー
   |
   |
   |-go-pear.bat                   -- PEAR セットアップ用スクリプト
   |
   |-...
   |
   |-php-cgi.exe                   -- CGI 実行ファイル
   |
   |-php-win.exe                   -- コマンドプロンプトを開かずにスクリプトを実行する
   |
   |-php.exe                       -- コマンドラインの PHP 実行ファイル (CLI)
   |
   |-...
   |
   |-php.ini-development           -- デフォルトの php.ini 設定
   |
   |-php.ini-production            -- 推奨される php.ini 設定
   |
   |-php5apache2_2.dll             -- 非スレッドセーフバージョンには存在しません
   |
   |-php5apache2_2_filter.dll      -- 非スレッドセーフバージョンには存在しません
   |
   |-...
   |
   |-php5ts.dll                    -- コア PHP DLL ( 非スレッドセーフバージョンの場合は php5.dll )
   | 
   |-...

]]>
       </programlisting>
      </example>
     </para>
     <para>
      PHP の zip 版に含まれているモジュールや実行ファイルの一覧をまとめました。
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <filename>go-pear.bat</filename> - PEAR セットアップスクリプト。詳細は <link xlink:href="&url.pear.installation;">Installation (PEAR)</link> を参照ください。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php-cgi.exe</filename> - CGI 実行ファイル。PHP を IIS 上で CGI あるいは FastCGI として実行するときに使います。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php-win.exe</filename> - PHP 実行ファイル。コマンドプロンプトを開かずに PHP スクリプトを実行します (Windows GUI を使う PHP アプリケーションなどに使います)。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php.exe</filename> - PHP 実行ファイル。PHP スクリプトをコマンドラインインターフェイス (CLI) で実行します。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php5apache2_2.dll</filename> - Apache 2.2.X モジュール。
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php5apache2_2_filter.dll</filename> - Apache 2.2.X フィルタ。
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </sect3>
    <sect3 xml:id="install.windows.legacy.manual.phpini">
     <title><filename>php.ini</filename> ファイルの変更</title>
     <para>
      php パッケージを展開したら、<filename>php.ini-production</filename> を
      <filename>php.ini</filename> という名前で同じフォルダにコピーします。
      必要に応じて <filename>php.ini</filename> を別の場所に置くこともできますが、
      その場合は <link linkend="configuration.file">PHP 設定ファイル</link>
      にあるような設定が別途必要となります。
     </para>
     <para>
      <filename>php.ini</filename> ファイルには、PHP の設定や動作環境についての情報を記述します。
      <filename>php.ini</filename> ファイルには
      PHP を Windows 上で動かすための設定項目が数多く用意されています。
      その中には必須でないものもあります。
      また、環境に合わせて指定するディレクティブも数多くあります。詳細は
      <link linkend="ini.list">php.ini ディレクティブのリスト</link> を参照ください。
     </para>
     <para>
      必須項目
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <varname>extension_dir</varname> = <literal>&lt;拡張モジュールのディレクトリへのパス&gt;</literal> -
         <varname>extension_dir</varname> には、
         PHP の拡張モジュールがあるディレクトリを指定しなければなりません。
         絶対パス (&quot;C:\PHP\ext&quot;) あるいは相対パス (i.e. &quot;.\ext&quot;)
         のどちらでもかまいません。<filename>php.ini</filename> ファイルに書かれている拡張モジュールは、
         <varname>extension_dir</varname> に置かなければなりません。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>extension</varname> = <literal>xxxxx.dll</literal> -
         使いたい拡張モジュールがある場合は、それに対応する &quot;extension=&quot;
         を書かなければなりません。<varname>extension_dir</varname>
         にある拡張モジュールのうち、ここで指定したものが起動時に読み込まれます。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>log_errors</varname> = <literal>On</literal> -
         PHP のログ出力機能を使うと、エラーをファイルに記録したり
         (syslog などの) サービスに渡したりすることができます。これは
         次の <varname>error_log</varname> ディレクティブと組み合わせて使います。
         IIS で実行している場合は、<varname>log_errors</varname>
         を有効にして <varname>error_log</varname> を正しく設定しておく必要があります。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>error_log</varname> = <literal>&lt;エラーログファイルへのパス&gt;</literal> -
         error_log には、PHP のエラーを記録するファイルを絶対パスあるいは相対パスで指定しなければなりません。
         このファイルは、ウェブサーバーから書き込み可能でなければなりません。
         このファイルを置く場所として一般的なのは、たとえば
         &quot;C:\inetpub\temp\php-errors.log&quot; のような TEMP ディレクトリです。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>cgi.force_redirect</varname> = <literal>0</literal> -
         このディレクティブは、IIS で動かす際に必須となります。
         他の多くのウェブサーバーではディレクトリセキュリティ機能を必要としますが、
         これを IIS で有効にすると、Windows 上での PHP エンジンの実行に失敗します。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>cgi.fix_pathinfo</varname> = <literal>1</literal> -
         これは、CGI 仕様に従った path info に PHP からアクセスできるようにします。
         IIS の FastCGI 実装では、これを設定しておく必要があります。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>fastcgi.impersonate</varname> = <literal>1</literal> -
         IIS での FastCGI には、呼び出し元のクライアントのセキュリティトークンをまねる機能があります。
         これを指定すると、IIS にリクエストのセキュリティコンテキストを定義します。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>fastcgi.logging</varname> = <literal>0</literal> -
         FastCGI のログ機能は、IIS では無効にしておかねばなりません。
         有効にしたままだと、すべてのクラスから発せられるあらゆるメッセージが
         FastCGI のエラーとみなされ、IIS が HTTP 500 を返すようになってしまいます。
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      オプションの項目
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <varname>max_execution_time</varname> = <literal>##</literal> -
         このディレクティブでは、スクリプトの実行に費やすことのできる最大時間を
         PHP に伝えます。デフォルトは 30 秒です。
         もし PHP アプリケーションの実行時間が長くなるのなら、このディレクティブの値を増やします。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>memory_limit</varname> = <literal>###M</literal> -
         PHP プロセスが使えるメモリの量をメガバイト単位で指定します。
         デフォルトは 128 で、たいていの PHP アプリケーションではこれで十分です。
         複雑なアプリケーションではもう少し必要となるかもしれません。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>display_errors</varname> = <literal>Off</literal> -
         このディレクティブは、ウェブサーバーに返すストリームに
         エラーメッセージを含めるかどうかを指定します。
         これを &quot;On&quot; にすると、<varname>error_reporting</varname>
         で設定したすべてのレベルのエラーを
         エラーストリームの一部としてウェブサーバーに返します。
         セキュリティ上の理由で、実運用環境ではこれを &quot;Off&quot;
         にしておくことを推奨します。
         エラーメッセージにはセキュリティ的に問題となる情報が含まれていることが多く、
         それが外部に漏れることを防げます。
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>open_basedir</varname> = <literal>&lt;ディレクトリへのパス、セミコロン区切り&gt;</literal>、
         たとえば openbasedir=&quot;C:\inetpub\wwwroot;C:\inetpub\temp&quot; -
         このディレクティブは、PHP からのファイルシステムの操作を許可するディレクトリのパスを指定します。
         指定したパス以外でのファイル操作はすべてエラーとなります。
         このディレクティブは、共用ホスティング環境に PHP を導入するときに特に有用です。
         ウェブサイトのルートディレクトリ以外のファイルを操作させないようにすることができます。
        </para>
       </listitem>
       <listitem>
         <para>
          <varname>upload_max_filesize</varname> = <literal>###M</literal> および <varname>post_max_size</varname> = <literal>###M</literal> -
          ファイルのアップロードおよび POST するデータの最大サイズを指定します。
          PHP のアプリケーションで写真や動画などの大きなファイルをアップロードさせたい場合は、
          これらの値を増やさなければなりません。
         </para>
        </listitem>
      </itemizedlist>
     </para>
    <para>
     以上で、Windows への PHP のインストールが完了しました。ついで、
     使用する WEB サーバー にあわせて、PHP を利用可能とするための設定を行います。
     目次から使用する WEB サーバーを選択し、該当するセクションを参照してください。
    </para>
    <para>
     PHP をウェブサーバー経由で実行するだけでなく、
     <literal>.BAT</literal> スクリプトなどでコマンドラインから実行することもできます。
     <!--詳細は
     <link linkend="install.windows.legacy.commandline">Microsoft
     Windows コマンドラインでの PHP</link> を参照ください。-->
    </para>
    </sect3>
   </sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
