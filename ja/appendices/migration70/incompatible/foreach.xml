<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337376 Maintainer: takagi Status: ready -->

<sect2 xml:id="migration70.incompatible.foreach">
 <title>&foreach; の変更</title>

 <para>
  &foreach; の振る舞いが多少変わりました。
  主に、内部の配列ポインタの扱いや、反復処理中の配列の変更に関する部分です。
 </para>

 <sect3 xml:id="migration70.incompatible.foreach.array-pointer">
  <title>&foreach; は内部の配列ポインタを変更しない</title>

  <para>
   PHP 7 より前のバージョンでは、&foreach;
   で配列を反復処理する際に、内部の配列ポインタを変更していました。
   PHP 7 ではそのようにはならず、以下の例のようになります。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$array = [0, 1, 2];
foreach ($array as &$val) {
    var_dump(current($array));
}
?>
]]>
   </programlisting>
   &example.outputs.5;
   <screen>
<![CDATA[
int(1)
int(2)
bool(false)
]]>
   </screen>
   &example.outputs.7;
   <screen>
<![CDATA[
int(0)
int(0)
int(0)
]]>
   </screen>
  </informalexample>
 </sect3>

 <sect3 xml:id="migration70.incompatible.foreach.by-value">
  <title>値渡しの &foreach; は、配列のコピーを使って操作を進める</title>

  <para>
   デフォルトの値渡しモードの場合の &foreach; は、
   配列そのものではなくそのコピーを使って反復処理を進めるようになりました。
   つまり、処理中に配列を書き換えた場合でも、反復処理の対象となる値には影響が及びません。
  </para>
 </sect3>

 <sect3 xml:id="migration70.incompatible.foreach.by-ref">
  <title>参照渡しの &foreach; の、反復処理の振る舞いを改良</title>

  <para>
   参照渡しでの &foreach; における、
   処理中の配列への変更の追跡が改良されました。
   たとえば、処理中の配列に新たな要素を追加した場合に、
   追加した新たな要素も反復処理の対象に含まれるようになります。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$array = [0];
foreach ($array as &$val) {
    var_dump($val);
    $array[1] = 1;
}
?>
]]>
   </programlisting>
   &example.outputs.5;
   <screen>
<![CDATA[
int(0)
]]>
   </screen>
   &example.outputs.7;
   <screen>
<![CDATA[
int(0)
int(1)
]]>
   </screen>
  </informalexample>
 </sect3>

 <sect3 xml:id="migration70.incompatible.foreach.object">
  <title><classname>Traversable</classname> でないオブジェクトの反復処理</title>

  <para>
   <classname>Traversable</classname> ではないオブジェクトの反復処理の挙動が、
   配列を参照渡しで反復処理したときと同じようになりました。
   <link linkend="migration70.incompatible.foreach.by-ref">反復処理中の配列を変更したときの挙動の改良</link>
   も適用され、処理中のオブジェクトにプロパティを追加したり削除したりした場合に、
   それが反復処理に反映されます。
  </para>
 </sect3>
</sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
