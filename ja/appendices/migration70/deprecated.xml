<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339359 Maintainer: takagi Status: ready -->

<sect1 xml:id="migration70.deprecated">
 <title>PHP 7.0.x で推奨されなくなる機能</title>

<!-- password_hash() salt option, PHP4-style constructors etc -->
 
<!-- skeleton
 <sect2 xml:id="migration70.deprecated.id">
  <title>Title</title>

  <para>
   Content
  </para>
 </sect2>
-->
 <sect2 xml:id="migration70.deprecated.php4-constructors">
  <title>PHP 4 形式のコンストラクタ</title>

  <para>
   PHP 4 形式のコンストラクタ (クラス名と同じ名前のメソッドを定義するもの) が非推奨となりました。将来的に削除される見込みです。
   PHP 7 では、クラス内でこの形式のコンストラクタしか定義されていない場合に <constant>E_DEPRECATED</constant> が発生します。
   <function>__construct</function> メソッドを実装していれば、この警告は発生しません。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo {
    function foo() {
        echo 'I am the constructor';
    }
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; foo has a deprecated constructor in example.php on line 3
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration70.deprecated.static-calls">
  <title>非 static メソッドに対する static 呼び出し</title>

  <para>
   <command>static</command> 宣言されていないメソッドに対する
   <link linkend="language.oop5.static">static</link> 呼び出しが非推奨となりました。
   将来的には削除される見込みです。
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo {
    function bar() {
        echo 'I am not static!';
    }
}

foo::bar();
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Deprecated: Non-static method foo::bar() should not be called statically in - on line 8
I am not static!
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration70.deprecated.pwshash-salt-option">
  <title><function>password_hash</function> の salt オプション</title>

  <para>
   <function>password_hash</function> 関数の salt オプションが非推奨となりました。
   これは、開発者が自前で (たいていはセキュアでない) salt を作ってしまうことを避けるためです。
   開発者が salt を指定しない場合は、この関数自身が暗号論的にセキュアな salt を生成します。
   したがって、もはや自前で salt を作る必要はありません。
  </para>
 </sect2>

 <sect2 xml:id="migration70.deprecated.capture-session-meta">
  <title><literal>capture_session_meta</literal> SSL コンテキストオプション</title>

  <para>
   SSL コンテキストオプション <literal>capture_session_meta</literal> が非推奨となりました。
   SSL メタデータは
   <function>stream_get_meta_data</function> 関数で利用できるようになります。
  </para>
 </sect2>

 <sect2 xml:id="migration70.deprecated.ldap">
  <title><link linkend="book.ldap">LDAP</link></title>
   <simpara>
    以下の関数が非推奨になりました。
   </simpara>

   <itemizedlist>
    <listitem>
     <simpara>
      <function>ldap_sort</function>
     </simpara>
    </listitem>
   </itemizedlist>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
