<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350644 Maintainer: takagi Status: ready -->
<!-- Credits: mumumu -->
<appendix xml:id="migration52" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PHP 5.1.x から PHP 5.2.x への移行</title>
 <para>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link>、
  <link linkend="migration51">5.1.x</link>、
  <link linkend="migration53">5.3.x</link>、
  <link linkend="migration54">5.4.x</link>、
  <link linkend="migration55">5.5.x</link> および
  <link linkend="migration56">5.6.x</link>。
 </para>

 <section xml:id="migration52.changes">
  <title>PHP 5.2.x における変更点</title>
  <para>
   PHP 5.2.x で改良された点のほとんどは、既存のコードには影響を及ぼしません。
   ただ、<link linkend="migration52.incompatible">互換性を失う変更</link> や
   <link linkend="migration52.error-messages">新しいエラーメッセージ</link>
   もあるので、実運用環境の PHP のバージョンをあげる際には事前にテストするようにしましょう。
  </para>
  <para>
   もし PHP 5.0.x からアップグレードするのなら、このマニュアルの
   <link linkend="migration51">PHP 5.1.x への移行時の注意</link>
   も読んでおく必要があります。
  </para>
  <para>
   同様に、もし PHP 4 からアップグレードするのなら、このマニュアルの
   <link linkend="migration5">PHP 4 から PHP 5 への移行</link>
   も読んでおく必要があります。
  </para>
 </section>

 <section xml:id="migration52.incompatible">
  <title>下位互換性のない変更点</title>
  <para>
   既存の PHP 5 のコードのほとんどは変更なしで動作するはずですが、
   以下の下位互換性のない変更点については注意しましょう。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>getrusage</function> に互換性のない引数を渡した場合に、
     PHP 5.2.1 以降では &null; を返すようになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ZipArchive::setCommentName</function>
     は、PHP 5.2.1 以降は成功した場合に &true; を返すようになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ZipArchive::setCommentIndex</function>
     は、PHP 5.2.1 以降は成功した場合に &true; を返すようになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SplFileObject::getFilename</function>
     は、PHP 5.2.1 以降ではファイルへの相対パスではなくファイル名のみを返すようになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Win32 における環境変数 <varname>PHPRC</varname> の優先順位が変わりました。
    </simpara>
    <simpara>
     環境変数 <varname>PHPRC</varname> は、Windows レジストリに保存されているパスより優先されるようになりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     CLI SAPI は、カレントディレクトリにある
     &php.ini; や <filename>php-cli.ini</filename>
     を見に行かないようになりました。
    </simpara>
    <simpara>
     明示されていませんでしたが、PHP 5.1.x では
     CLI バイナリが現在の作業ディレクトリにある PHP 設定ファイルを参照するようになっていました。
     これは、予期せぬ設定ファイルを読み込んでしまうという問題を起こす可能性がありました。
     この機能は PHP 5.2.0 で削除されました。PHP は、カレントディレクトリの
     &php.ini; や <filename>php-cli.ini</filename> を参照しません。
     マニュアルの <link linkend="features.commandline">コマンドライン</link>
     の部分も参照ください。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     ゼロで割った余りを求めようとすると警告が発生するようになりました。
    </simpara>
    <simpara>
     以前のバージョンの PHP では、integer % 0 は何も警告を発せず、
     予期せぬ結果である &false; を返していました。
     PHP 5.2.0 以降では、このような操作をしようとすると <constant>E_WARNING</constant>
     が発生するようになりました。これは、ゼロで除算を行った際の挙動と同じです。
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
print 10 % 0;
/* Warning:  Division by zero in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="object.tostring">__toString()</link> が、適切な場面で常にコールされるようになりました。
    </simpara>
    <simpara>
     マジックメソッド <link linkend="object.tostring">__toString()</link>
     は、文字列コンテキストでコールされるようになりました。
     つまり、オブジェクトを文字列として使用する際には常にコールされるということです。
    </simpara>
    <simpara>
     オブジェクトを文字列として扱った場合に自動的にオブジェクト ID
     が返されるという機能は、PHP 5.2.0 で廃止されました。
     オブジェクト ID は常に一意となるわけではないので、この機能には問題があったわけです。
     この変更により、オブジェクト ID
     が返されることを前提としたアプリケーションは動作がおかしくなってしまいます。
     オブジェクトの値を文字列として使用すると、(捕捉可能な) 致命的なエラーとなります。
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {}
$foo = new foo;
print $foo;
/* Catchable fatal error:  Object of class foo could
   not be converted to string in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
    <simpara>
     たとえ <link linkend="object.tostring">__toString()</link> を実装したとしても、
     オブジェクトを配列のインデックスやキーとして使用することはできません。
     将来的には組み込みの機能でハッシュをサポートする予定ですが、
     現時点の PHP 5.2.x の段階では、自分でハッシュ処理を実装するか
     SPL の関数 <function>spl_object_hash</function> を使用してください。
    </simpara>
    <simpara>
     <link linkend="object.tostring">__toString()</link> メソッド内からは例外をスローすることはできません。
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {
    public function __toString() {
        throw new Exception;
    }
}

try {
    print new foo;
    /* Fatal error:  Method foo::__toString() must
       not throw an exception in filename on line n */
} catch(Exception $e) {}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     abstract static なクラス関数が削除されました。
    </simpara>
    <simpara>
     ちょっとした手違いで、PHP 5.0.x および 5.1.x では abstract static 
     な関数をクラス内で定義できてしまっていました。PHP 5.2.x では、
     これはインターフェイス内でのみ定義できるようになりました。
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
abstract class foo {
    abstract static function bar();
    /* Strict Standards:  Static function foo::bar()
       should not be abstract in filename on line n */
}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.oci8">Oracle 拡張モジュール</link>
     を Windows で使用するには、最低でも Oracle のバージョン 10
     が必要となりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     RFC2397 (<literal>data:</literal> ストリーム) に対応しました。
    </simpara>
    <simpara>
     'data' URL スキームに対応したことにより、
     Windows 環境での挙動が変わる可能性があります。
     <acronym>NTFS</acronym> ファイルシステムを使用しており、
     アプリケーションでメタストリームを使用していた場合、
     もし 'data:' という名前のファイルをパス情報なしでアクセスしようとすると正しく動作しません。
     これを避けるには、アクセス時に 'file:' プロトコルを使用します。
    </simpara>
    <simpara>
     <link xlink:href="&url.rfc;2397">RFC 2397</link> も参照ください。
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
/* allow_url_include が OFF (デフォルト) の場合 */
include "data:;base64,PD9waHAgcGhwaW5mbygpOz8+";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     <literal>glob()</literal> パターンの退化
    </simpara>
    <simpara>
     バージョン 5.2.4 でのセキュリティ修正の副作用で、
     "/foo/*/bar/*" 形式のパターンがうまく動作しなくなってしまっていました。
     バージョン 5.2.5 以降では、<literal>glob()</literal> が <literal>openbase_dir</literal>
     制約に違反した場合に警告を発生させず &false; を返すようになります。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.error-messages">
  <title>新しいエラーメッセージ</title>
  <para>
   以下に示す新しいエラーメッセージは、まだこのマニュアルのどこにも説明されていないものです。
  </para>
  <para>
   <example>
    <title>PHP コア</title>
    <programlisting role="php">
<![CDATA[
<?php
echo " ";
session_regenerate_id();
/*  Warning:  session_regenerate_id(): Cannot regenerate
    session id - headers already sent in filename on line n */

str_word_count("string", 4);
/* Warning:  str_word_count(): Invalid format value 4
   in filename on line n */

strripos("foo", "f", 4);
/* Notice:  strripos(): Offset is greater than the
   length of haystack string in filename on line n */

strrpos("foo", "f", 4);
/* Notice:  strrpos(): Offset is greater than the
   length of haystack string in filename on line n */

/* As of PHP 5.2.1, when allow_url_include is OFF (default) */
include "php://input";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>PHP コアにおける <link linkend="language.oop5">オブジェクト指向のコード</link></title>
    <programlisting role="php">
<![CDATA[
<?php
interface foo {
}
class bar implements foo, foo {
}
/* Fatal error: Class bar cannot implement previously
   implemented interface foo in filename on line n */


class foo {
    public $bar;
    function __get($var)
    {
        return $this->bar;
    }
}

$foo = new foo;
$bar =& $foo->prop;
/* Notice: Indirect modification of overloaded property
   foo::$prop has no effect in filename on line n */


class foo implements iterator {
    public function current() {
    }
    public function next() {
    }
    public function key() {
    }
    public function valid() {
    }
    public function rewind() {
    }
}

$foo = new foo();
foreach($foo as &$ref) {}
/* Fatal error: An iterator cannot be used with foreach
   by reference in filename on line n */


class foo {
    private function __construct() {
    }
}
class bar extends foo {
    public function __construct() {
        parent::__construct();
        /* Fatal error:  Cannot call private
           foo::__construct() in filename on line n */
    }
}
new bar;


stream_filter_register("", "class");
/* Warning:  stream_filter_register(): Filter name
   cannot be empty in filename on line n */


stream_filter_register("filter", "");
/* Warning:  stream_filter_register(): Class name
   cannot be empty in filename on line n */
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.bzip2">bzip2</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
bzopen("", "w");
/* Warning:  bzopen(): filename cannot be empty
   in filename on line n */

bzopen("foo", "a");
/* Warning:  bzopen(): 'a' is not a valid mode for
   bzopen(). Only 'w' and 'r' are supported in
   filename on line n */

$fp = fopen("foo", "w");
bzopen($fp, "r");
/* Warning:  bzopen(): cannot read from a stream
   opened in write only mode in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.datetime">datetime</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
strtotime("today", "now");
/* Warning:  strtotime() expects parameter 2 to be
   long, string given in filename on line n */

/* PHP 5.2.1 以降 */
new DateTime(new stdclass);
/* Fatal error: Uncaught exception 'Exception' with
   message 'DateTime::__construct() expects parameter
   1 to be string, object given' in filename:n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.dbase">dBase</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
dbase_open("foo", -1);
/* Warning: Invalid access mode -1 in filename on line n */

/* PHP 5.2.1 以降 */
dbase_open("foo", null);
/* Warning: The filename cannot be empty in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.mcrypt">mcrypt</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
$key = "this is a secret key";
$td = mcrypt_module_open('tripledes', '', 'ecb', '');
$iv = mcrypt_create_iv (mcrypt_enc_get_iv_size($td),
                        MCRYPT_RAND);
mcrypt_generic_init($td, $key, $iv);
$encrypted_data = mcrypt_generic($td, "");
/* Warning: mcrypt_generic(): An empty string was
   passed in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.oci8">oci8</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
oci_connect("user", "pass", "db", "bogus_charset");
/* Warning: Invalid character set name:
   bogus_charset in filename on line n */

$oci = oci_connect("user", "pass", "db");
oci_password_change($oci, "", "old", "new");
/* Warning: username cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "", "new");
/* Warning: old password cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "old", "");
/* Warning: new password cannot be empty in filename
   on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.spl">SPL</link> 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new SplFileObject(__FILE__);
$obj->fgetcsv("foo");
/* Warning:  SplFileObject::fgetcsv(): delimiter must
   be a character in filename on line n */

$obj->fgetcsv(",", "foo");
/* Warning:  SplFileObject::fgetcsv(): enclosure must
   be a character in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="ref.sem">Semaphore</link> (sysvmsg) 拡張モジュール</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Warning:  maximum size of the message has to be
   greater then zero in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>5.2.1 以降の <link linkend="ref.zip">Zip</link> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new ZipArchive();
$obj->open('archive.zip');
$obj->setCommentName('', 'comment');
/* Notice:  ZipArchive::setCommentName(): Empty string
   as entry name in filename on line n */

/* PHP 5.2.1 以降 */
$obj->getCommentName('');
/* Notice:  ZipArchive::getCommentName(): Empty string
   as entry name in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
 </section>

 <section xml:id="migration52.datetime">
  <title>PHP での <link linkend="ref.datetime">datetime</link> サポートの変更点</title>

  <para>
   PHP 5.1.0 から、<literal>date</literal> 拡張モジュールが
   PHP コアに組み込まれるようになりました。
   これは、PHP の日付時刻サポートを新たに実装しなおしたものです。
   システムのタイムゾーン設定を自動的に取得しようとはしますが、
   手動で設定しておいたほうがよいでしょう。以下の三通りのうち、
   いずれかの方法で設定します。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     &php.ini; で、
     <link linkend="ini.date.timezone">date.timezone</link>
     ディレクティブを設定する
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     システムの環境変数 <varname>TZ</varname> を設定する
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     スクリプト中で、関数
     <function>date_default_timezone_set</function>
     を使用する
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   サポートしている <link linkend="timezones">タイムゾーン</link>
   の一覧は、PHP マニュアルに記載されています。
  </para>
  <para>
   PHP 5.2.x では、日付やタイムゾーンをオブジェクトとして扱えるようになりました。
   それぞれ <literal>DateTime</literal> および <literal>DateTimeZone</literal> という名前になります。
   このオブジェクトのメソッドは、既存の手続き型の日付関数群に対応しています。
  </para>
 </section>

 <section xml:id="migration52.parameters">
  <title>新しいパラメータ</title>
  <para>
   PHP 5.2.x で、新しいパラメータやオプションのパラメータが追加された関数があります。
  </para>

  <para>PHP コア:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>htmlentities</function>
     - PHP 5.2.3 で <parameter>double_encode</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>htmlspecialchars</function>
     - PHP 5.2.3 で <parameter>double_encode</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>base64_decode</function>
     - <parameter>strict</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setcookie</function>
     - <parameter>httponly</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setrawcookie</function>
     - <parameter>httponly</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>session_set_cookie_params</function>
     - <parameter>httponly</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_usage</function>
     - <parameter>real_usage</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>get_loaded_extensions</function>
     - PHP 5.2.4 で <parameter>zend_extensions</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>curl_multi_info_read</function>
     - <parameter>msgs_in_queue</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.datetime">datetime</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>date</function>
     - PHP 5.2.2 で、書式文字 "u" (ミリ秒) が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.imap">imap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imap_open</function>
     - <parameter>n_retries</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imap_reopen</function>
     - <parameter>n_retries</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>mb_strrpos</function>
     - <parameter>offset</parameter> が追加されました。
    </simpara>
    <warning>
     <simpara>
      <parameter>offset</parameter> パラメータが、かつて
      <parameter>encoding</parameter> パラメータのあった場所に入りました。
      下位互換性のために <parameter>encoding</parameter>
      を三番目のパラメータとして指定することもできます。
      しかし、この下位互換性モードの使用はお勧めしません。
      これは将来は廃止される予定だからです。
     </simpara>
    </warning>
   </listitem>
  </itemizedlist>

  <para>ming:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>SWFMovie::streamMP3</function>
     - <parameter>skip</parameter> が PHP 5.2.1 で追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_verify</function>
     - <parameter>signature_algo</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_escape_bytea</function>
     - <parameter>connection</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>pg_escape_string</function>
     - <parameter>connection</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.simplexml">simplexml</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::__construct</function>
     - <parameter>is_prefix</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::attributes</function>
     - <parameter>is_prefix</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::children</function>
     - <parameter>is_prefix</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_file</function>
     - <parameter>is_prefix</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_string</function>
     - <parameter>is_prefix</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     array iterator_to_array(Traversable it [, bool use_keys = true])
     - <parameter>use_keys</parameter> が PHP 5.2.1 で追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.xmlreader">xmlreader</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>XMLReader::open</function>
     - <parameter>encoding</parameter> および
     <parameter>options</parameter> が追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>XMLReader::XML</function>
     - <parameter>encoding</parameter> および
     <parameter>options</parameter> が追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">XMLWriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>xmlwriter_write_element</function>
     - PHP 5.2.3 で <parameter>content</parameter> はオプションとなりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_element_ns</function>
     - PHP 5.2.3 で <parameter>content</parameter> はオプションとなりました。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.functions">
  <title>新しい関数</title>
  <para>
   PHP 5.2.x で新しく追加された関数は次のとおりです。
  </para>

  <para>PHP コア:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>array_fill_keys</function>
     - 最初のパラメータで指定した要素をキーとして、値を初期化した配列を作成します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>error_get_last</function>
     - 直近に発生したエラーを連想配列として取得します。
     エラーが発生していない場合は &null; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>image_type_to_extension</function>
     - <function>getimagesize</function>, <function>exif_read_data</function>,
     <function>exif_thumbnail</function>, <function>exif_imagetype</function>
     が返した画像形式に対応する拡張子を取得します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_peak_usage</function>
     - PHP のメモリ割り当ての最大値を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>sys_get_temp_dir</function>
     - 一時ファイル用のディレクトリのパスを返します (PHP 5.2.1 で追加されました)。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_abbreviations_list</function>
     - 夏時間の情報や時差、タイムゾーン名を含む連想配列を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_identifiers_list</function>
     - すべてのタイムゾーン ID を配列で返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_name_from_abbr</function>
     - タイムゾーンの略称を指定して、正式名を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>stream_socket_shutdown</function>
     - ストリームに関連付けられたソケット上の全二重通信
     (のすべてあるいは一部) をシャットダウンします。PHP 5.2.1 以降で使用できます。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.image">Image</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imagegrabscreen</function>
     - 画面全体のスクリーンショットを取得します。PHP 5.2.2 以降で使用可能です。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imagegrabwindow</function>
     - ウィンドウをキャプチャします。PHP 5.2.2 以降で使用可能です。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.libxml">libXML</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>libxml_disable_entity_loader</function>
     - 外部エンティティの読み込み機能を無効にします。PHP 5.2.11 以降で使用可能です。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <!--
   FIXME: Apparently these two never made it into a release
          see bug#41070
   <listitem>
    <simpara>
     <function>mb_list_encodings_alias_names</function>
     - サポートするすべての実体エンコーディングを配列で返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_list_mime_names</function>
     - サポートするすべての mime 名を配列あるいは文字列で返します。
    </simpara>
   </listitem>
   -->
   <listitem>
    <simpara>
     <function>mb_stripos</function>
     - 大文字小文字を区別せず、ある文字列が別の文字列中に最初に現れる位置を探します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_stristr</function>
     - 大文字小文字を区別せず、ある文字列が別の文字列中に最初に現れる場所を探します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrchr</function>
     - ある文字が文字列中に最後に現れる場所を探します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrichr</function>
     - 大文字小文字を区別せず、ある文字が文字列中に最後に現れる場所を探します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strripos</function>
     - 大文字小文字を区別せず、ある文字が文字列中に最後に現れる位置を探します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strstr</function>
     - ある文字列が別の文字列中に最初に現れる場所を探します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para>ming (PHP 5.2.1 以降):</para>
  <itemizedlist>
   <listitem>
    <simpara>
     void ming_setSWFCompression(int num)
     - 出力の圧縮を設定します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::namedanchor(string name)
     - アンカーを作成します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::protect([string password])
     - プロテクトします。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_csr_get_public_key</function>
     - CERT から公開鍵を取り出し、使用できるようにします。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_csr_get_subject</function>
     - CERT の subject を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_pkey_get_details</function>
     - 鍵の詳細 (bits、pkey、type) を配列で返します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>spl_object_hash</function>
     - 指定したオブジェクトのハッシュ ID を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int iterator_apply(Traversable it, mixed function [, mixed params])
     - イテレータのすべての要素に対して関数をコールします。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pcre">pcre</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>preg_last_error</function>
     - 直近に実行した正規表現のエラーコードを返します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_field_table</function>
     - フィールドが属するテーブルの名前、あるいは <literal>oid_only</literal> が &true;
     の場合にテーブルの oid を返します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.posix">posix</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>posix_initgroups</function>
     - 名前で指定したユーザーのグループアクセスリストを計算します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">gmp</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>gmp_nextprime</function>
     - 指定した数より大きい次の素数を探します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">xmlwriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>xmlwriter_full_end_element</function>
     - 現在の要素を終了します。エラー時に &false; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_raw</function>
     - テキストを書き込みます。エラー時に &false; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_start_dtd_entity</function>
     - DTD エンティティを開始します。エラー時に &false; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_end_dtd_entity</function>
     - 現在の DTD エンティティを終了します。エラー時に &false; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_dtd_entity</function>
     - 完全な DTD エンティティタグを書き込みます。エラー時に &false; を返します。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.methods">
  <title>新しいメソッド</title>
  <para>
   5.2.x で新しく追加されたメソッドは次のとおりです。
  </para>

  <para><link linkend="book.dom">dom</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>DOMDocument::registerNodeClass</function>
     - 基底ノード型を作成するために使用する拡張クラスを登録します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttribute</function>
     - ID 型の属性を名前で宣言します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttributeNode</function>
     - ID 型の属性をノードで宣言します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttributeNS</function>
     - ID 型の属性をローカル名および名前空間 URI で宣言します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::C14N</methodname>([bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - ノードを文字列に正規化します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::C14NFile</methodname>(string uri [, bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - ノードをファイルに正規化します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::getNodePath</methodname>()
     - ノードの <literal>xpath</literal> を取得します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.soap">soap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>SoapServer::setObject</methodname>(object obj)
     - SOAP リクエストを処理するオブジェクトを設定します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::asort</methodname>(void)
     - エントリを値で並べ替えます。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::ksort</methodname>(void)
     - エントリをキーで並べ替えます。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::natcasesort</methodname>(void)
     - エントリをキーで並べ替えます。大文字小文字を区別しない
     "自然順" アルゴリズムを使用します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::natsort</methodname>(void)
     - エントリを値で並べ替えます。"自然順" アルゴリズムを使用します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::uasort</methodname>(callback cmp_function)
     - エントリを、ユーザー定義関数を使用して値で並べ替えます。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::uksort</methodname>(callback cmp_function)
     - エントリを、ユーザー定義関数を使用してキーで並べ替えます。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     ArrayIterator <methodname>AppendIterator::getArrayIterator</methodname>()
     - 内部の <literal>ArrayIterator</literal> にアクセスします。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>AppendIterator::getIteratorIndex</methodname>()
     - イテレータのインデックスを取得します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool <methodname>CachingIterator::getCache</methodname>()
     - キャッシュを返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>CachingIterator::getFlags</methodname>()
     - 内部フラグを返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool <methodname>CachingIterator::offsetExists</methodname>(mixed index)
     - 指定したインデックスが存在する場合に &true; を返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     string <methodname>CachingIterator::offsetGet</methodname>(mixed index)
     - 内部キャッシュを使用している場合にそれを返します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::offsetSet</methodname>(mixed index, mixed newval)
     - キャッシュ内の指定したインデックスを設定します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::offsetUnset</methodname>(mixed index)
     - キャッシュ内の指定したインデックスを削除します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::setFlags</methodname>()
     - 内部フラグを設定します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     array("delimiter" =>, "enclosure" =>) <methodname>SplFileObject::getCsvControl</methodname>(void)
     - <function>fgetcsv</function> で使用する区切り文字および囲み文字を取得します。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>SplFileObject::setCsvControl</methodname>([string delimiter = ',' [, string enclosure = '"']])
     - <function>fgetcsv</function> で使用する区切り文字および囲み文字を設定します。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.tidy">Tidy</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     tidyNode <methodname>tidyNode::getParent</methodname>()
     - 現在のノードの親ノードを返します (PHP 5.2.2 で追加されました)。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.xmlreader">XMLReader</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     boolean <function>XMLReader::setSchema</function>
     - W3C XSD スキーマを使用して、処理するドキュメントを検証します。
     最初の <function>XMLReader::read</function> を行う前にのみ実行可能です。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.zip">zip</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>ZipArchive::addEmptyDir</methodname>()
     - 空のディレクトリをアーカイブ内に作成します。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.removed-extensions">
  <title>削除された拡張モジュール</title>
  <para>
   これらの拡張モジュールは PECL に移されました。PHP の配布ファイルには含まれません。
   これらの拡張モジュールの PECL 版は、必要に応じてユーザーが各自で作成します。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filepro">filePro</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Hyperwave API
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.new-extensions">
  <title>新しい拡張モジュール</title>
  <para>
   これらの拡張モジュールは、PHP 5.2.0 以降で (デフォルトで)
   新しく追加されました。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filter">Filter</link>
     - データの検証とフィルタリングを行います。ユーザーの入力のように、
     安全でないデータを扱うときに使用することを考慮した設計になっています。
     この拡張モジュールはデフォルトで有効になります。
     デフォルトのモードである RAW は、入力データに一切手を加えません。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.json">JSON</link>
     - JavaScript Object Notation (JSON) データ交換フォーマットを実装します。
     この拡張モジュールはデフォルトで有効になります。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.zip">Zip</link>
     - ZIP 圧縮されたアーカイブおよびその中のファイルを
     透過的に読み書きすることができます。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.classes">
  <title>新しいクラス</title>
  <para>
   以下のクラスが PHP 5.2.0 で追加されました。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTime</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTimeZone</link>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     RegexIterator - extends <classname>FilterIterator</classname>;
     implements <classname>Iterator</classname>, <classname>Traversable</classname>,
     <classname>OuterIterator</classname>
    </simpara>
    <simpara>
     定数
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     プロパティ
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       public <property>replacement</property>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     メソッド
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RegexIterator::__construct(Iterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - 別のイテレータおよび正規表現をもとにして <literal>RegexIterator</literal> を作成します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::accept()
       - (string)current() を正規表現とマッチさせます。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getFlags()
       - 現在の操作フラグを返します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getMode()
       - 現在の操作モードを返します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getPregFlags()
       - 現在の PREG フラグ (使用中の場合。それ以外は &null;) を返します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setFlags(int new_flags)
       - 操作フラグを設定します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setMode(int new_mode)
       - 操作モードを設定します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setPregFlags(int new_flags)
       - PREG フラグを設定します。
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>
     RecursiveRegexIterator
    </simpara>
    <simpara>
     定数
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     メソッド
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RecursiveRegexIterator::__construct(RecursiveIterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - 別の再帰イテレータおよび正規表現をもとにして
       <literal>RecursiveRegexIterator</literal> を作成します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       RecursiveRegexIterator RecursiveRegexIterator::getChildren()
       - <literal>RecursiveRegexIterator</literal> に含まれる内部イテレータの子を返します。
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RecursiveRegexIterator::hasChildren()
       - 内部イテレータの現在の要素が子を持つかどうかを調べます。
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.global-constants">
  <title>新しいグローバル定数</title>

  <para>PHP コア:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>M_EULER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_LNPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRT3</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRTPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PATHINFO_FILENAME</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BACKTRACK_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BAD_UTF8_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_INTERNAL_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_NO_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_RECURSION_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>UPLOAD_ERR_EXTENSION</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_WR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RDWR</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CURLE_FILESIZE_EXCEEDED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_FTP_SSL_FAILED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_LDAP_INVALID_URL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_DEFAULT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_TLS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_ALL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_CONTROL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_NONE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_TRY</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTP_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTPSSLAUTH</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TCP_NODELAY</constant>
    </simpara>
    <simpara>
     PHP 5.2.1 で追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TIMEOUT_MS</constant>
    </simpara>
    <simpara>
     PHP 5.2.3 で追加されました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    </simpara>
    <simpara>
     PHP 5.2.3 で追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">GMP</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>GMP_VERSION</constant>
    </simpara>
    <simpara>
     PHP 5.2.2 で追加されました。
    </simpara>
   </listitem>
  </itemizedlist>

  <para>ming:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_USEFONT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_AUTOSIZE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_ADPCM_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MP3_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED_LE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NELLY_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_5KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_11KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_22KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_44KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_8BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_16BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MONO</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_STEREO</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_NUMBER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_TEXT</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.snmp">snmp</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_FULL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_NUMERIC</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.sem">Semaphore</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>MSG_EAGAIN</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>MSG_ENOMSG</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.class-constants">
  <title>新しいクラス定数</title>

  <para><link linkend="intro.pdo">pdo</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_PROPS_LATE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_KEY_PAIR</constant>
    </simpara>
    <simpara>
     2 つのカラムからなる結果セットを連想配列に格納します (PHP 5.2.3 で追加されました)。
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CachingIterator::FULL_CACHE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CachingIterator::TOSTRING_USE_INNER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_AHEAD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_CSV</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::SKIP_EMPTY</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.newconf">
  <title>新しい INI 設定項目</title>
  <para>
   PHP 5.2.0 で、&php.ini; に新しい項目が追加されました。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.allow-url-include">allow_url_include</link>
    </simpara>
    <simpara>
     この便利なオプションを使用すると、
     リモートファイルに対する通常のファイル操作と
     リモートファイルのインクルードを別々に制御することができるようになります。
     前者はよくある要求ですが、
     後者については何も考えずに使用するとセキュリティリスクとなる可能性があります。
     PHP 5.2.0 以降では、リモートファイルの操作はできるけれども
     リモートファイルをローカルスクリプトにインクルードすることはできない
     という設定が可能となりました。実際のところ、これがデフォルトの設定となっています。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.backtrack-limit">pcre.backtrack_limit</link>
    </simpara>
    <simpara>
     PCRE におけるバックトラックの制限値。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.recursion-limit">pcre.recursion_limit</link>
    </simpara>
    <simpara>
     PCRE の再帰処理の制限値。この値をあまり大きくしすぎると、
     プロセススタックを食いつぶして (OS のスタックサイズの制限に到達してしまって)
     PHP がクラッシュすることがあるので注意しましょう。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.session.cookie-httponly">session.cookie_httponly</link>
    </simpara>
    <simpara>
     クッキーを、HTTP プロトコルでのみアクセスできるようにします。
     つまり、JavaScript のようなスクリプト言語からはアクセスできなくなるということです。
     この設定を使用すると、XSS 攻撃によって ID を盗まれる可能性が少なくなります
     (とはいえ、ブラウザによってはこれをサポートしていないものもあります)。
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   PHP 5.2.2 で新しく追加された項目です。
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.max-input-nesting-level">max_input_nesting_level</link>
    </simpara>
    <simpara>
     <link linkend="language.variables.external">外部から受け取る入力変数
     </link> のネストの深さを制限します。デフォルトは 64 です。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.errorrep">
  <title>エラー処理</title>
  <para>
   これまで <constant>E_ERROR</constant> となっていた内容のうちのいくつかについて、
   ユーザー定義のエラーハンドラで処理できるようになりました。これは
   <link
   linkend="errorfunc.constants"><constant>E_RECOVERABLE_ERROR</constant></link>
   で表され、ハンドラを作成しなかった場合は、
   <constant>E_ERROR</constant> と同様に振る舞います。
   この型のエラーは、ログには
   <literal>Catchable fatal error</literal> と記録されます。
  </para>
  <para>
   この変更によって、
   <link linkend="ini.error-reporting">error_reporting</link> の定数
   <constant>E_ALL</constant> の値は 6143 となりました。
   以前は、この値は 2047 でした。PHP の定数は PHP の外部では使用できないので、
   外部でこの整数値を指定していることもあるでしょう。その場合は値を変更する必要があります。
   たとえば error_reporting の設定を
   <link linkend="apache.configuration">httpd.conf</link> あるいは
   <filename>.htaccess</filename> で行っている場合は、値を適切に変更する必要があります。
   また、PHP スクリプト内で定数ではなく値自体を指定している場合も同様です。
  </para>
  <para>
   この変更の副作用として、
   <link linkend="ini.track-errors">track_errors</link> が On
   の場合にエラーメッセージが重複してしまうことがあるようになりました。
   これを防ぐため、エラーハンドラで
   <varname>$php_errormsg</varname>
   を設定した際には &false; を返さなければならないようになりました。
   これにより、さまざまなレベルのメッセージをより精密に制御できるようになります。
  </para>
 </section>

 <section xml:id="migration52.other">
  <title>その他の機能向上</title>
  <itemizedlist>
   <listitem>
    <simpara>
     メモリ管理を改善しデフォルトのメモリ制限を増加しました。
    </simpara>
    <simpara>
     新しいメモリマネージャは、以前のものに比べて
     より少ないメモリでより高速に動作するようになりました。
     システムから取得したメモリをラージブロックに割り当て、
     自分でヒープを管理します。
     これまでのバージョンでは、<literal>emalloc()</literal> がコールされるたびに
     &php.ini; の <literal>memory_limit</literal> をチェックしていました。
     現在は、システムから実際にメモリを取得する際にのみチェックしています。
     つまり、<literal>memory_limit</literal> はこれまでに比べて大幅に精度が上がったということです。
     これまでのメモリマネージャは、
     <literal>malloc</literal> ライブラリが使用するメモリのオーバーヘッドを考慮していませんでした。
    </simpara>
    <simpara>
     このように計算精度を向上させたおかげで、
     これまでより効率的にメモリを使用できるようになりました。
     これに対応するため、デフォルトの <literal>memory_limit</literal> 設定も変更され、
     8 メガバイトから 16 メガバイトとなりました。
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     インターフェイスのコンストラクタで、
     実装クラスのコンストラクタのシグネチャを強制できるようになりました。
    </simpara>
    <simpara>
     PHP 5.2.0 以降で、インターフェイスにコンストラクタを定義できるようになりました。
     しかし、インターフェイスでコンストラクタを宣言した場合は、
     そのインターフェイスを実装するクラスは
     インターフェイスのコンストラクタと同じシグネチャのコンストラクタを持つ必要があります。
     ここでいう「シグネチャ」とは、パラメータや返り値の定義のことです。
     また、型ヒントや 参照渡し/値渡し の区別なども含まれます。
    </simpara>
   </listitem>
  </itemizedlist>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
