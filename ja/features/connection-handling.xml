<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347626 Maintainer: hirokawa Status: ready -->
 <chapter xml:id="features.connection-handling" xmlns="http://docbook.org/ns/docbook">
  <title>接続処理</title>

  <para>
  PHP 内部で、接続ステータスが保持されます。
  これは、次の 4 つの状態をとりえます。
   <itemizedlist>
    <listitem><simpara>0 - NORMAL</simpara></listitem>
    <listitem><simpara>1 - ABORTED</simpara></listitem>
    <listitem><simpara>2 - TIMEOUT</simpara></listitem>
    <listitem><simpara>3 - ABORTED および TIMEOUT</simpara></listitem>
   </itemizedlist>
  </para>

  <simpara>
  通常 PHP が実行されている場合、NORMAL 状態がアクティブになります。
  リモートクライアントが接続を切った場合、ABORTED 状態フラグが有効になります。
  通常、リモートクライアントの接続断は、STOP ボタンを押すことにより発生します。
  PHP 側の時間制限 (<function>set_time_limit</function> 参照) にかかった場合、
  TIMEOUT 状態フラグが有効になります。</simpara>

  <simpara>
   スクリプトを終了させるためにクライアントとの接続を切断するかどうかを
   決めることが出来ます。
   時々、出力がどのリモートブラウザにも受信されない場合でも、
   常にスクリプトの実行完了まで実行する方が便利であることがあります。
   しかし、デフォルトの動作はリモートクライアントとの接続が断となった際にスクリプト
   の実行は破棄されます。
   この動作は、&php.ini; ディレクティブ ignore_user_abort にて 
   設定できます。
   同様に同じ意味を有する Apache &httpd.conf; ディレクティブ
   <literal>php_value ignore_user_abort</literal> または
   <function>ignore_user_abort</function> 関数にて設定することも可能です。
   PHP にユーザーによる破棄を無視するように設定していない場合、
   ユーザーが破棄した場合、スクリプトの実行は終了します。
   一つの例外は、<function>register_shutdown_function</function> を用いて
   シャットダウン関数を定義した場合です。
   シャットダウン関数を定義した場合、リモートユーザーが STOP ボタンを押した後、
   次にスクリプトが何か出力を行おうとした場合、PHP は接続が破棄されたことを検知し、
   シャットダウン関数がコールされます。
   このシャットダウン関数は、スクリプトが正常に終了した
   際にもコールされます。
   このため、クライアントが接続を切断した場合に別の動作をさせたい場合に
   は、<function>connection_aborted</function> 関数を使用することが
   可能です。
   この関数は、接続が破棄された場合に、&true; を返します。
  </simpara>

  <simpara>
   スクリプトは、組み込みのスクリプトタイマーによっても終了することが
   できます。デフォルトのタイムアウトは、30 秒です。
   これは、&php.ini;ディレクティブ <option>max_execution_time</option>
   または同義の
   Apache &httpd.conf; ディレクティブ <literal>php_value max_execution_time</literal>
   を <function>set_time_limit</function> 関数と同様に用いることにより
   変更することが可能です。タイマーが切れた時、スクリプトは中断されます。
   上記のクライアントが接続を切るケースのように
   シャットダウン関数が登録されている場合、この関数がコールされます。
   このシャットダウン関数の中では、
   <function>connection_status</function> 関数のコールにより
   タイムアウトがシャットダウン関数のコールを生じさせるかどうかを
   確認することができます。
   この関数は、タイムアウトによりシャットダウン関数がコールされた
   場合に 2 を返します。
  </simpara>

  <simpara>
   もう一つ注意すべき点は、状態 ABORTED および TIMEOUT
   は同時にアクティブにできるということです。
   これは、PHP をユーザーによる中断を無視するよう設定した場合に
   可能です。
   PHP は、ユーザーが接続を破棄しているが、スクリプトは
   実行しつづけるということがある可能性があることに注意する
   必要があります。
   時間制限にかかって中断される場合、もしあればシャットダウン関数が
   コールされます。
   ここで、<function>connection_status</function> は 3 を返します。
  </simpara>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
