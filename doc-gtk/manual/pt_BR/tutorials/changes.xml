<?xml version="1.0" encoding="utf-8" ?>
<!-- EN-Revision: 1.6 Maintainer: dnfeitosa Status: ready -->
<chapter id="tutorials.changes">
 <title>Mudanças desde o PHP-GTK 1</title>

 <sect1>
  <title>Sobre este tutorial</title>
  <simpara>
   O intuito deste tutorial é falar sobre as diferenças entre o PHP-GTK 1
   e o PHP-GTK 2: o que mudou, o que é novo e o que não fazer.
  </simpara>
  <simpara>
   O PHP-GTK 2 tenta ser compatível o máximo possível, mas como o GTK 2 muda
   freqüentemente, o PHP-GTK 2 não pode fazer mágica. Há muitas coisas que
   não mudaram, mas há também algumas pequenas e importantes mudanças que 
   você precisa saber quando for migrar para a segunda versão.
  </simpara>
 </sect1>

 <sect1 id="tutorials.changes.loadmodule">
  <title>Carregando o módulo php_gtk</title>
  <para>
   No PHP-GTK 1, você nunca sabia se o módulo havia sido carregado no PHP
   automaticamente via <filename>php.ini</filename>, ou se houve uma má
   instalação (o que era comum), e você tinha que carregar o módulo
   manualmente:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
     href="&directory.examples;/tutorials/changes/extension_load.phpw"
     parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>

  <para>
   No PHP 5, carregar módulos via <literal>dl()</literal> é obsoleto. Isto
   significa que ainda funciona, mas as pessoas são encorajadas a não usá-lo
   mais. Então, você assume que o PHP-GTK já está carregado, ou, se você
   quiser capturar qualquer possível erro, verifique a existência do módulo e
   dispare um erro se não estiver lá:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
     href="&directory.examples;/tutorials/changes/extension_check.phpw"
     parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>
 </sect1>

 <sect1 id="tutorials.changes.references">
  <title>Referência de Objetos (o Ampersand &amp;)</title>
  <para>
   O suporte para orientação a objetos era completamente novo para o PHP 4, e
   sendo assim, não era muito sofisticado em comparação ao suporte a OO de
   outras linguagens, como o Java. Na atribuição de objetos GTK à variáveis,
   era absolutamente necessário não fazer uma cópia do mesmo, mas sim,
   passá-lo por referência.
   <programlisting role="php"><![CDATA[
//PHP 4: cópia como um comportamento padrão
$a = new GtkLabel();
$a->set_text('1');
$b = $a;
$b->set_text('2');
echo $a->get();//still 1
]]></programlisting>
    Então, para não fazer apenas uma cópia, era necessário o uso do ampersand
    &amp; na atribuição das variáveis:
   <programlisting role="php"><![CDATA[
//PHP 4: construindo referências
$a = new GtkLabel();
$a->set_text('1');
$b = &$a;
$b->set_text('2');
echo $a->get();//is 2 now
]]></programlisting>
   Entretanto, uma cópia do objeto <emphasis>ainda</emphasis> é feita: na
   construção. Para ser totalmente correto, especialmente com widgets, você
   tinha que fazer:
   <programlisting role="php"><![CDATA[
//PHP 4: referência na construção
$a = &new GtkLabel();
]]></programlisting>
  </para>

  <para>
   Com o PHP 5 as coisas mudaram: passagem por referência agora é o
   comportamento padrão; não é preciso mais usar o ampersand! O seguinte
   script funciona perfeitamente no PHP 5 com o PHP-GTK 2, e sem nenhum
   problema:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
     href="&directory.examples;/tutorials/changes/ampersand_php5.phpw"
     parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>

  <para>
   O mesmo se aplica para callbacks: nada de ampersand!
   Uma vez que você tinha que fazer o seguinte no PHP-GTK 1:
   <programlisting role="php"><![CDATA[
$window->connect_object('destroy', array(&$object, 'function'));
]]></programlisting>
   você simplesmente deixa de lado o &amp; com o PHP 5 e o GTK 2:
   <programlisting role="php"><![CDATA[
$window->connect_simple('destroy', array($object, 'function'));
]]></programlisting>
  </para>
 </sect1>

 <sect1 id="tutorials.changes.constants">
  <title>Constantes GTK</title>

  <para>
   O GTK+ utiliza muitas constantes. No PHP-GTK 1, elas eram definidas em um
   escopo global e podiam ser acessadas via:
   <programlisting role="php"><![CDATA[
echo GTK_WIN_POS_CENTER;
]]></programlisting>
   Se você executar este código com o PHP-GTK 2, o seguinte erro será
   disparado:
  </para>

  <screen><![CDATA[
PHP Notice:  Use of undefined constant GTK_WIN_POS_CENTER -
assumed 'GTK_WIN_POS_CENTER' in /path/to/file.php on line 23
]]></screen>

  <para>
   O problema é que aquele valor original não é mais usado
   (<literal>GTK_WIN_POS_CENTER</literal> é reconhecido como um inteiro
   <literal>1</literal> no PHP-GTK 1). Uma string literal por si só
   <literal>"GTK_WIN_POS_CENTER"</literal>, é tudo o que o PHP-GTK 2 reconhece
   - o que tornaria seu código incorreto.
  </para>

  <para>
   Constantes estáticas de classe são suportadas no PHP 5, então foi decidido
   não mais poluir o espaço global com constantes do PHP-GTK. Elas são
   definidas nas classes <literal>Gtk</literal>, <literal>Gdk</literal> e
   outras.
  </para>

  <para>
   Simplificando, tudo o que você tem que fazer (na maioria dos casos) é
   substituir o primeiro underscore <literal>_</literal> pelo operador de 
   resolução de escopo (::). <literal>GTK_WIN_POS_CENTER</literal> no PHP-GTK
   1, torna-se <literal>Gtk::WIN_POS_CENTER</literal> no PHP-GTK 2. 
  </para>

  <para>
   Note também, o novo estilo de codificação. Apenas a primeira letra deve ser
   maiúscula nos nomes das classes <literal>Gtk</literal>,
   <literal>Gdk</literal>, <literal>Pango</literal> e <literal>Atk</literal>.
   Isto serve para exibir o novo status de constantes de classe ao invés de
   constantes globais.
  </para>
 </sect1>

 <sect1 id="tutorials.changes.connect">
  <title>Conectando Sinais</title>

  <para>
   Para associar sinais à funções específicas no PHP-GTK 1, você podia usar
   <function class="GtkObject">connect</function>,
   <function class="GtkObject">connect_object</function>,
   <function class="GtkObject">connect_after</function> ou
   <function class="GtkObject">connect_object_after</function>.
   A funcionalidade de <literal>connect_object</literal>, em particular, não
   era muito clara a princípio.
  </para>

  <para>
   Algumas modificações foram feitas na API de sinais do GTK, e a decisão
   tomada foi renomear <literal>connect_object</literal> para
   <function class="GtkObject">connect_simple</function> e
   <literal>connect_object_after</literal> para
   <function class="GtkObject">connect_simple_after</function> no PHP-GTK 2.
   <emphasis>Simple</emphasis> aqui significa que você possui menos parâmetros
   para a função, porque o próprio objeto não está entre eles - algo que
   <literal>connect_object</literal> significa, mas não é implícito.
  </para>
 </sect1>

 <sect1 id="tutorials.changes.deprecated">
  <title>Widgets Obsoletos</title>

  <simpara>
   O GTK 2 possui diversas classes de widgets novas. A maioria das classes faz
   algo melhor ou de uma forma diferente que as outras classes; então os
   widgets antigos tornaram-se obsoletos em favor dos novos.
  </simpara>

  <simpara>
   Para manter compatibilidade, os widgets antigos ainda podem ser usados, mas
   podem ser removidos em um possível GTK 3 e assim por diante. Isto significa
   que você não precisa reescrever seu programa completamente, mas ainda pode
   usá-lo sem muitas mudanças. Entretanto, você não deve usar qualquer um dos
   widgets obsoletos nos seus novos programas. Não façam isso!
  </simpara>

<!-- xsltproc segfaults when I uncomment the table!
     Because of that I used the unordered list.
  <table>
   <title>List of deprecated widgets</title>
   <tgroup>
    <thead>
     <row>
      <entry>Old widget class</entry>
      <entry>New widget class</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><classname>GtkCList</classname></entry>
      <entry><classname>GtkTreeView</classname> with <classname>GtkListStore</classname></entry>
     </row>
     <row>
      <entry><classname>GtkCTree</classname></entry>
      <entry><classname>GtkTreeView</classname> with <classname>GtkTreeStore</classname></entry>
     </row>
     <row>
      <entry><classname>GtkPixmap</classname></entry>
      <entry><classname>GtkImage</classname> with <classname>GdkPixbuf</classname></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
-->

  <para>
   <itemizedlist>
    <title>Lista de Widgets Obsoletos</title>
    <listitem>
     <classname>GtkCList</classname> e <classname>GtkList</classname> =>
     <classname>GtkTreeView</classname> com <classname>GtkListStore</classname>
    </listitem>
    <listitem>
     <classname>GtkCTree</classname> =>
     <classname>GtkTreeView</classname> com <classname>GtkTreeStore</classname>
    </listitem>
    <listitem>
     <classname>GtkCombo</classname> e <classname>GtkOptionMenu</classname> =>
     <classname>GtkComboBox</classname> com <classname>GtkTreeModel</classname>
    </listitem>
    <listitem>
     <classname>GtkItemFactory</classname> =>
     <classname>GtkUIManager</classname>
    </listitem>
    <listitem>
     <classname>GtkOldEditable</classname> =>
     <classname>GtkEditable</classname>
    </listitem>
    <listitem>
     <classname>GtkPixmap</classname> e <classname>GtkPreview</classname> =>
     <classname>GtkImage</classname> com <classname>GdkPixbuf</classname>
    </listitem>
    <listitem>
     <literal>GtkText</literal> =>
     <classname>GtkTextView</classname> com <classname>GtkTextBuffer</classname>
    </listitem>
   </itemizedlist>
   </para>
  <para>
   <itemizedlist>
    <title>Lista de Métodos Obsoletos</title>
    <listitem>
     <function class="GtkWindow">set_policy</function> => 
     <function classname="GtkWindow">set_resizable</function>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   A lista pode não estar completa. Se você encontrar algum widget obsoleto
   que não está listado aqui, por favor, escreva para
   <ulink url="mailto:php-gtk-doc@lists.php.net">php-gtk-doc</ulink>.
  </simpara>
 </sect1>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
