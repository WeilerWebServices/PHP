<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1.34 Maintainer: dnfeitosa Status: ready -->
<classentry id="gtk.gtkwidget">
 <classmeta>
  <classtitle>GtkWidget</classtitle>
  <classparent>GtkObject</classparent>
  <shortdesc>
   Classe base para todos os widgets.
  </shortdesc>
  <desc>
   <simpara>
    Um widget é qualquer classe herdada a partir de <classname>GtkWidget</classname>. 
    Widgets são classes que podem aguardar e reagir à eventos do usuário. Eles são 
    geralmente associados com exibição ou layout.
   </simpara>
  </desc>
 </classmeta>

 <methods>
  <method id="gtk.gtkwidget.method.activate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>activate</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Ativa o widget.
   </shortdesc>
   <desc>
    <simpara>
     Ativa o widget se ele pode ser ativado, como um
     <classname>GtkButton</classname> ou <classname>GtkMenuItem</classname>.
     A ativação é o que acontece quando a tecla <literal>Enter</literal> é
     pressionada em um widget com foco.
    </simpara>
    <simpara>
     Se o widget pode ser ativado, este método retornará
     <literal>true</literal>, caso contrário, retornará
     <literal>false</literal>.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.add_accelerator">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_accelerator</function></funcdef>
     <paramdef>string <parameter>signal</parameter></paramdef>
     <paramdef>
      <classname>GtkAccelGroup</classname> <parameter>group</parameter>
     </paramdef>
     <paramdef>int <parameter>accel_key</parameter></paramdef>
     <paramdef><enumname>GdkModifyerType</enumname> <parameter>modifiers</parameter></paramdef>
     <paramdef><enumname>GtkAccelFlags</enumname> <parameter>flags</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona um acelerador para o widget.
   </shortdesc>
   <desc>
    <para>
     Adiciona um acelerador (tecla de atalho) ao widget, fazendo com que ele possa
     ser acessado usando o teclado, sem mover o mouse, ou sem mover o foco através
     da tecla <literal>Tab</literal>.
    </para>
    <para>
     <parameter>signal</parameter> é o nome do sinal que deve ser emitido no
     widget quando o acelerador for pressionado. Para um botão, o caso mais comum é
     <literal>clicked</literal> aqui.
    </para>
    <para>
     <parameter>group</parameter> é um <classname>GtkAccelGroup</classname>
     e deve ser o mesmo que foi definido para a janela. Talvez você precise
     criar o grupo e adicioná-lo à janela primeiro através de
     <function class="GtkWindow">add_accel_group</function> para ser capaz
     de usá-lo aqui.
    </para>
    <para>
     <parameter>accel_key</parameter> define a tecla a ser pressionada. Veja
     <link linkend="appendix.keysyms">Nomes simbólicos de teclas</link> para
     achar a correta.
    </para>
    <para>
     <parameter>modifiers</parameter> informa qual botão adicional deve ser
     pressionado para emitir o sinal. Normalmente, você desejará usar
     <literal>Gdk::CONTROL_MASK</literal> (tecla <literal>Ctrl</literal>)
     ou <literal>Gdk::MOD1_MASK</literal> (tecla <literal>Alt</literal>).
    </para>

    <example>
     <title>Adicionando um atalho para um botão</title>
     <programlisting role="php"><![CDATA[
// Sua janela
$wnd = new GtkWindow();
// Grupo acelerador (AccelGroup)
$group = new GtkAccelGroup();
// Adicionando o grupo à janela, tornando-o ativo
$wnd->add_accel_group($group);

// Botão "back"
$btn = GtkButton::new_from_stock(Gtk::STOCK_GO_BACK);
$btn->add_accelerator(
    'clicked', $group, Gdk::KEY_Left, Gdk::MOD1_MASK, 0
);
$wnd->add($btn);
]]></programlisting>
     <para>
      Neste exemplo, você pode usar o atalho <literal>Alt+Left</literal>
      para ativar o botão "back".
     </para>
    </example>
    <para>
     &seealso;
     <function class="GtkWidget">remove_accelerator</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.add_events">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_events</function></funcdef>
     <paramdef><enumname>GdkEventMask</enumname> <parameter>events</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Permite que o widget receba mais eventos.
   </shortdesc>
   <desc>
    <para>
     Permite que o widget receba mais eventos, adicionando máscaras à lista
     dos tipos de evento a ser notificado.
    </para>
    <para>
     Com isso, você pode por exemplo, fazer com que um
     <classname>GtkButton</classname> receba
     <signalname class="GtkWidget">motion-notify-event</signalname>s que não é
     feito por padrão.
    </para>
    <example>
     <title>Rastreando eventos do mouse em um botão com add_events</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/add_events.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
     <function class="GtkWidget">get_events</function>, 
     <function class="GtkWidget">set_events</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.add_mnemonic_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_mnemonic_label</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona um widget à lista de rótulos mnemônicos para este widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">remove_mnemonic_label</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.can_activate_accel">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>can_activate_accel</function></funcdef>
     <paramdef>int <parameter>signal_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna se o sinal pode ou não ser ativado pelo acelerador associado.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.child_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>child_focus</function></funcdef>
     <paramdef><enumname>GtkDirectionType</enumname> <parameter>direction</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Invoca o sinal focus quando o widget filho possuir foco.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">grab_focus</function>, 
     <function class="GtkWidget">is_focus</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.child_notify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>child_notify</function></funcdef>
     <paramdef>string <parameter>child_property</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emite o sinal child-notify para a propriedade do filho especificado.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.class_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>class_path</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Não público ou não implementado.
   </shortdesc>
   <desc>
    <para>
     Retorna o caminho do widget ao longo da hierarquia de empacotamento, a
     partir do parent raíz ao widget em si. Os nomes das classes são separados
     por pontos.
    </para>
    <para>
     É o mesmo que <function class="GtkWidget">path</function>,
     de forma que sempre o nome da classe é usado, e não o nome do widget.
    </para>
    <example>
     <title>Retornando o caminho do um widget</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/path.php" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
     <function class="GtkWidget">path</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.create_pango_context">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>create_pango_context</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Cria um novo <classname>PangoContext</classname> com o mapa de fonte apropriado, 
    descrição de fonte e direção base do desenho do texto para este widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_pango_context</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.create_pango_layout">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>create_pango_layout</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Cria um novo <classname>PangoLayout</classname> com o mapa de fonte apropriado, 
    descrição de fonte e direção base do desenho do texto para este widget.
   </shortdesc>
   <desc>

   </desc>
  </method>


<!--
  <method id="gtk.gtkwidget.method.destroyed">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>destroyed</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Não público ou não implementado.
   </shortdesc>
   <desc>

   </desc>
  </method>
  -->
  <method id="gtk.gtkwidget.method.drag_begin">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkDragContext</classname> <function>drag_begin</function></funcdef>
     <paramdef>array <parameter>targets</parameter></paramdef>
     <paramdef><enumname>GdkDragAction</enumname> <parameter>actions</parameter></paramdef>
     <paramdef>int <parameter>button</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inicia o arraste do lado fonte.
   </shortdesc>
   <desc>
    <para>
     Inicia um arraste na fonte. A função necessita apenas ser usada quando a
     aplicação inicia um arraste por si só, e não é necessária quando
     <function class="GtkWidget">drag_source_set</function> é utilizado.
    </para>
    <table>
     <title>Parâmetros do método</title>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry>targets</entry>
        <entry>
         Os alvos (formatos de dados) nos quais a fonte pode oferecer o dado.
        </entry>
       </row>
       <row>
        <entry>actions</entry>
        <entry>
         Uma máscara de bits com as ações permitidas para este arrastamento.
        </entry>
       </row>
       <row>
        <entry>button</entry>
        <entry>
         O botão que o usuário pressiona para iniciar o arraste.
        </entry>
       </row>
       <row>
        <entry>event</entry>
        <entry>
         O evento que disparou o início do arraste.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_check_threshold">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>drag_check_threshold</function></funcdef>
     <paramdef>int <parameter>start_x</parameter></paramdef>
     <paramdef>int <parameter>start_y</parameter></paramdef>
     <paramdef>int <parameter>current_x</parameter></paramdef>
     <paramdef>int <parameter>current_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Verifica se um arraste do mouse cruzou a área do widget e se deve então
    disparar uma operação arrastar-soltar.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_add_image_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_add_image_targets</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_add_text_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_add_text_targets</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona alvos de imagem suportados por <classname>GtkSelection</classname>
    à lista de alvos do destino do arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_add_uri_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_add_uri_targets</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona URI dos alvos suportados por <classname>GtkSelection</classname>
    à lista de alvos do destino do arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_find_target">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>drag_dest_find_target</function></funcdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef><parameter><optional>targets</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Procura por um alvo entre o contexto dos alvos e a lista de destinos.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_get_target_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>drag_dest_get_target_list</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna uma lista de widgets alvos que podem aceitar algo a partir de um clique-arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_set">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_set</function></funcdef>
     
     <paramdef><parameter>flags</parameter></paramdef>
     <paramdef><parameter>targets</parameter></paramdef>
     <paramdef><parameter>actions</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o widget como um potencial destino.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_set_proxy">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_set_proxy</function></funcdef>
     <paramdef><classname>GdkWindow</classname> <parameter>proxy_window</parameter></paramdef>
     <paramdef><parameter>protocol</parameter></paramdef>
     <paramdef><parameter>use_coordinates</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define este widget como um intermediário para que widgets sejam soltos e
    enviados à outra janela.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_set_target_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_set_target_list</function></funcdef>
     <paramdef><parameter>targets</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define uma lista de alvos que este widget poderá aceitar um arrastar-soltar.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_dest_unset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_dest_unset</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Redefine o widget como não sendo um potencial destino de um arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_get_data">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_get_data</function></funcdef>
     
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef><parameter>target</parameter></paramdef>
     <paramdef><parameter><optional>time</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o dado associado ao arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_highlight">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_highlight</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Desenha um contorno em volta do widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_add_text_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_add_text_targets</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona os alvos de text suportados por <classname>GtkSelection</classname>
    à lista de destinos.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_get_target_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>drag_source_get_target_list</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna uma lista de alvos que este widget pode oferecer para
    arrastar-soltar.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_set">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_set</function></funcdef>
     <paramdef><parameter>sbmask</parameter></paramdef>
     <paramdef><parameter>targets</parameter></paramdef>
     <paramdef><parameter>actions</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o widget como sendo a fonte de uma operação de arraste.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_set_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_set_icon</function></funcdef>
     <paramdef><classname>GdkColormap</classname> <parameter>colormap</parameter></paramdef>
     <paramdef><classname>GdkPixmap</classname> <parameter>pixmap</parameter></paramdef>
     <paramdef><parameter><optional>mask</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o ícone que será exibido quando o usuário arrastar o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_set_icon_pixbuf">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_set_icon_pixbuf</function></funcdef>
     <paramdef><classname>GdkPixbuf</classname> <parameter>pixbuf</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o ícone que será exibido quando o usuário arrastar o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_set_icon_stock">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_set_icon_stock</function></funcdef>
     <paramdef>string <parameter>stock_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o ícone de estoque que será exibido quando o usuário arrastar o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_set_target_list">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_set_target_list</function></funcdef>
     
     <paramdef><parameter>targets</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define os tipos de alvos que o widget oferece para uma operação
    arrastar-soltar.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_unset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_source_unset</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Redifine o widget como não sendo uma potencial fonte da operação de
    arrastar-soltar.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_unhighlight">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>drag_unhighlight</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove o contorno em volta do widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.draw">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>draw</function></funcdef>
     <paramdef>GdkRectangle <parameter>area</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    OBSOLETO. Invalida e depois atualiza uma região do widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.ensure_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>ensure_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Assegura que um widget possui um estilo.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_style</function>, 
     <function class="GtkWidget">modify_style</function>, 
     <function class="GtkWidget">set_style</function>, 
     <fieldname class="GtkWidget">style</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.event">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>event</function></funcdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emite um sinal de evento no widget.
   </shortdesc>
   <desc>
    <para>
     Uma função raramente usada. Esta função é usada para emitir sinais de
     evento em um widget (aqueles sinais não devem ser emitidos usando esta
     função). Se você deseja sintetizar um evento, não utilize esta função; ao
     invés, use <function class="Gtk">main_do_event</function> e então o
     evento se comportará como um evento fila de eventos. Não forge eventos de
     exposição; no lugar, use
     <function class="GdkWindow">invalidate_rect</function> para invalidar uma
     região da janela.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.freeze_child_notify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>freeze_child_notify</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Interrompe a emissão de sinais child-notify.
   </shortdesc>
   <desc>
    <para>
     Interrompe a emissão de sinais 
     <signalname class="GtkContainer">child-notify</signalname>
     no widget. Os sinais são enfilerados até que 
     <function class="GtkWidget">thaw_child_notify </function> seja chamado.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">thaw_child_notify</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_accessible">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>AtkNoOpObject</classname> <function>get_accessible</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_allocation">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkRectangle</classname> <function>get_allocation</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna a alocação atual do widget.
   </shortdesc>
   <desc>
    <para>
     Retorna a alocação (tamanho) atual do widget.
    </para>
    <example>
     <title>Exibindo o tamanho de um widget</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/get_allocation.php" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
     <fieldname class="GtkWidget">allocation</fieldname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_ancestor">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_ancestor</function></funcdef>
     <paramdef><classname>GType</classname> <parameter>widget_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o primeiro ancestor de um tipo específico.
   </shortdesc>
   <desc>
    <para>
     Retorna o primeiro ancestor de um widget do tipo
     <parameter>widget_type</parameter>.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">is_ancestor</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_child_requisition">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_child_requisition</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_child_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_child_visible</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna um valor definido por set_child_visible().
   </shortdesc>
   <desc>
    <para>
     Retorn o valor definido com
     <function class="GtkWidget">set_child_visible</function>. Se você sentir
     a necessidade de usar esta função, seu código provavelmente necessita de
     reorganização.
    </para>
    <para>
     Esta função é util apenas para implementação de containers e não deve ser
     chamada por uma aplicação.
    </para>
    <para>
     Retorna <literal>true</literal> se o widget está mapeado com seu parent.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">set_child_visible</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkClipboard</classname> <function>get_clipboard</function></funcdef>
     
     <paramdef><parameter>selection</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_colormap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">pop_colormap</function>, 
     <function class="GtkWidget">push_colormap</function>, 
     <function class="GtkWidget">set_colormap</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_composite_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_composite_name</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_composite_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_default_colormap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_default_colormap</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_default_direction">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextDirection <function>get_default_direction</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_default_direction</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_default_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkStyle <function>get_default_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_default_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_default_visual</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_direction">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextDirection <function>get_direction</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_direction</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_display">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkDisplay</classname> <function>get_display</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o GdkDisplay para o parent deste widget.
   </shortdesc>
   <desc>
    <para>
     Retorna o <classname>GdkDisplay</classname> para a janela acima deste
     widget. Esta função pode apenas ser chamada após o widget ter sido
     adicionado a uma hierarquia com um 
     <classname>GtkWindow</classname> no topo.
    </para>
    <para>
     De modo geral, você deve apenas criar recursos de exibição específicos
     quando um widget já foi processado.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_events">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GdkEventMask</enumname> <function>get_events</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna uma máscara de eventos para o widget.
   </shortdesc>
   <desc>
    <para>
     Retorna a máscara de eventos para o widget (um campo de bits contendo
     flags da enumeração <enumname>GdkEventMask</enumname>).
     Estes são os eventos que o widget irá receber.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">add_events</function>, 
     <function class="GtkWidget">set_events</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_extension_events">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_extension_events</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_extension_events</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_modifier_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkRcStyle <function>get_modifier_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_name</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o nome personalizado do widget.
   </shortdesc>
   <desc>
    <para>
     Retorna o nome personalizado do widget.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">set_name</function>,
     <fieldname class="GtkWidget">name</fieldname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_no_show_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_no_show_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_no_show_all</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_pango_context">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_pango_context</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">create_pango_context</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_parent">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_parent</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o widget pai do widget.
   </shortdesc>
   <desc>
    <simpara>
     Retorna o widget parent. O widget parent é o container que
     abriga o widget. Geralmente, os únicos widgets em uma aplicação que não
     possuem um parent são as janelas.
    </simpara>
    <para>
     O widget retornado será um descendente de 
     <classname>GtkContainer</classname>.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">set_parent</function>, 
     <fieldname class="GtkWidget">parent</fieldname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_parent_window">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkWindow</classname> <function>get_parent_window</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o GdkWindow do widget parent.
   </shortdesc>
   <desc>
    <para>
     Retorna o GdkWindow do widget parent.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">set_parent_window</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_pointer">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>get_pointer</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna as coordenadas do mouse relativas ao widget.
   </shortdesc>
   <desc>
    <para>
     Obtém a localização do ponteiro do mouse no widget como coordenadas.
    </para>
    <para>
     As coordenadas do widget são um tanto quanto desconfortáveis; por razões
     históricas, elas são definidas como widget->window para widgets que não
     possuem <literal>Gtk::NO_WINDOW</literal>, e são relativas à
     widget->allocation.x, widget->allocation.y para widgets que são
     <literal>Gtk::NO_WINDOW</literal>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_root_window">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkWindow</classname> <function>get_root_window</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o GdkWIndow raíz.
   </shortdesc>
   <desc>
    <para>
     Retorna a janela raíz onde o widget está localizado. Esta função pode ser
     chamada apenas após o widget ter sido adicionado à uma hierarquia com o
     um GtkWindow no topo.
    </para>
    <para>
     A janela raíz é util para propósitos como criar um
     <classname>GdkWindow</classname> popup associado à janela.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_screen">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkScreen</classname> <function>get_screen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o GdkScreen do parent toplevel.
   </shortdesc>
   <desc>
    <para>
     Retorna o <classname>GdkScreen</classname> da janela raíz associada à este
     widget. Esta função só pode ser chamada após o widget ter sido adicionado
     à uma hierarquia com uma <classname>GtkWindow</classname> no topo.
    </para>
    <para>
     De modo geral, você deve apenas criar recursos específicos de tela quando
     um widget for processado, e você deve liberar estes recursos quando o
     widget não for mais utilizado.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">has_screen</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_settings">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkSettings</classname> <function>get_settings</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_size_request">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_size_request</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_size_request</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkStyle</classname> <function>get_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o objeto <classname>GtkStyle</classname> do widget.
   </shortdesc>
   <desc>
    <para>
     Retorna o objeto <classname>GtkStyle</classname> do widget.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">ensure_style</function>, 
     <function class="GtkWidget">modify_style</function>, 
     <function class="GtkWidget">set_style</function>, 
     <fieldname class="GtkWidget">style</fieldname>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_toplevel">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>get_toplevel</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o widget ancestor raíz do widget atual.
   </shortdesc>
   <desc>
    <para>
     Retorna o widget ancestor raíz do widget atual.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.get_visual">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_visual</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.grab_add">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>grab_add</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.grab_default">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>grab_default</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.grab_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>grab_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">child_focus</function>, 
     <function class="GtkWidget">is_focus</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.grab_remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>grab_remove</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.has_screen">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>has_screen</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Verifica se um GdkScreen está associado com o widget.
   </shortdesc>
   <desc>
    <para>
     Verifica se há um <classname>GdkScreen</classname> associado com este
     widget. Todos os widgets raíz possuem um screen associado, e todos os
     widgets adicionados em uma hierarquia com uma janela raíz no topo.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">get_screen</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.hide">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>hide</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove o widget de ser exibido na tela.
   </shortdesc>
   <desc>
    <para>
     Oculta o widget.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">show</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.hide_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>hide_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove o widget e todos seus filhos de serem exibidos na tela.
   </shortdesc>
   <desc>
    <para>
     Oculta o widget e todos seus filhos.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">show_all</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.hide_on_delete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>hide_on_delete</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Oculta o widget quando recebe o sinal <signalname>delete-event</signalname>
    ao invés de excluí-lo.
   </shortdesc>
   <desc>
    <para>
     Oculta o widget quando recebe o sinal 
     <signalname>delete-event</signalname>
     ao invés de excluí-lo.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.intersect">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>intersect</function></funcdef>
     <paramdef><classname>GdkRectangle</classname> <parameter>area</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Verifica se há intersecção entre um widget e uma área.
   </shortdesc>
   <desc>
    <para>
     Verifica se há intersecção entre um widget e uma área
     indicado por <parameter>area</parameter>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.is_ancestor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>is_ancestor</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>ancestor</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Verifica se o widget que foi chamado é ou não um ancestor de um dado widget.
   </shortdesc>
   <desc>
    <para>
     Verifica se o widget que foi chamado é ou não um ancestor de um dado widget.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">get_ancestor</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.is_focus">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>is_focus</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Verifica se o widget é o widget com foco em seu parent.
   </shortdesc>
   <desc>
    <para>
     Verifica se o widget 
     é o widget com foco em seu parent.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">child_focus</function>, 
     <function class="GtkWidget">grab_focus</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.is_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>is_visible</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Informa se o widget atualmente é visível ou não.
   </shortdesc>
   <desc>
    <para>
     Informa se o widget atualmente é visível ou não.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">set_visible</function>
    </para>
   </desc>
  </method>


  <method id="gtk.gtkwidget.method.list_mnemonic_labels">
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>list_mnemonic_labels</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna um array de widgets mnemônicos no qual o widget atual é o alvo.
   </shortdesc>
   <desc>
    <para>
     Retorna um array de widgets mnemônicos no qual o widget atual é o alvo.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.map">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>map</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Mapeia o widget para a tela.
   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.mnemonic_activate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>mnemonic_activate</function></funcdef>
     <paramdef>bool <parameter>group_cycling</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Ativa o mnemônico para o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_base">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_base</function></funcdef>
     <paramdef>
      <enumname>GtkStateType</enumname> <parameter>state</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> <parameter>color</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define a cor base para o widget em um estado
    <parameter>state</parameter>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_bg">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_bg</function></funcdef>
     <paramdef>
      <enumname>GtkStateType</enumname> <parameter>state</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> <parameter>color</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define a cor de fundo para o widget em um estado
    <parameter>state</parameter>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_fg">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_fg</function></funcdef>
     <paramdef>
      <enumname>GtkStateType</enumname> <parameter>state</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> <parameter>color</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define a cor de frente para o widget em um estado
    <parameter>state</parameter>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_font">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_font</function></funcdef>
     <paramdef>
      <classname>PangoFontDescription</classname> <parameter>font</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define a fonte para o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_style</function></funcdef>
     <paramdef>GtkRcStyle <parameter>style</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Modifica os valores de estilo para o widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">ensure_style</function>, 
     <function class="GtkWidget">get_style</function>, 
     <function class="GtkWidget">set_style</function>, 
     <fieldname class="GtkWidget">style</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.modify_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>modify_text</function></funcdef>
     <paramdef>
      <enumname>GtkStateType</enumname> <parameter>state</parameter>
     </paramdef>
     <paramdef>
      <classname>GdkColor</classname> <parameter>color</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define a cor do texto para o widget em um estado
    <parameter>state</parameter>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>path</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Retorna o caminho do widget.
   </shortdesc>
   <desc>
    <para>
     Obtém o caminho completo para o widget. O caminho do widget é
     simplesmente o seu nome e de todos seus parents no container, separados
     por períodos. O nome de um widget vem de
     <function class="GtkWidget">get_name</function>.
     Os caminhos são usados para aplicar estilos à um widget nos arquivos de
     configuração <filename>gtkrc</filename>.
     Por padrão, o nome de um widget é o seu tipo (por exemplo "GtkButton")
     ou pode ser definido para um valor específico com
     <function class="GtkWidget">set_name</function>. Definindo o nome de um
     widget, você permite à usuários ou autores de temas, aplicar estilos para
     aquele widget específico em seus arquivos gtkrc.
    </para>
    <example>
     <title>Pegando o caminho de widget</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/path.php" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
     <function class="GtkWidget">path</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.pop_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pop_colormap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove um colormap que foi adicionado com
    <function class="GtkWidget">push_colormap</function>.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_colormap</function>,
     <function class="GtkWidget">push_colormap</function>,
     <function class="GtkWidget">set_colormap</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.pop_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pop_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove um composite adicionado com <function class="GtkWidget">push_composite_child</function>.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">push_composite_child</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>


  <method id="gtk.gtkwidget.method.push_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>push_colormap</function></funcdef>
     <paramdef>
      <classname>GdkColormap</classname> <parameter>colormap</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adiciona um colormap em uma pilha global de colormaps.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_colormap</function>, 
     <function class="GtkWidget">pop_colormap</function>, 
     <function class="GtkWidget">set_colormap</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.push_composite_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>push_composite_child</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Torna todos os widgets recém criados como um composite filho até que a
    chamada do <function class="GtkWidget">pop_composite_child</function>
    correspondente.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">pop_composite_child</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_clear">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_clear</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    OBSOLETO. Atalho para <function class="GtkWidget">queue_draw</function>.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">selection_clear</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_clear_area">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_clear_area</function></funcdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    OBSOLETO. Atalho para <function class="GtkWidget">queue_draw_area</function>.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_draw">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_draw</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Coloca o widget na fila para ser redesenhado.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_draw_area">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_draw_area</function></funcdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Coloca uma área do widget na fila para ser redesenhada, invalidando-a.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_resize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_resize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Marca o widget para ter seu tamanho renegociado.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.queue_resize_no_redraw">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>queue_resize_no_redraw</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Marca o widget para ter seu tamanho renegociado sem invalidá-lo.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.rc_get_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkStyle <function>rc_get_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    OBSOLETO. Use <function class="GtkWidget">get_style</function> instead.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.realize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>realize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Torna o widget real.
   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.remove_accelerator">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>remove_accelerator</function></funcdef>
     
     <paramdef><classname>GtkAccelGroup</classname> <parameter>accel_group</parameter></paramdef>
     <paramdef><parameter>accel_key</parameter></paramdef>
     <paramdef><parameter>accel_mods</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">add_accelerator</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.remove_mnemonic_label">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_mnemonic_label</function></funcdef>
     <paramdef>GtkWidget <parameter>label</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">add_mnemonic_label</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.render_icon">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GdkPixbuf</classname> <function>render_icon</function></funcdef>
     <paramdef><enumname>GtkStockItems</enumname> <parameter>stock_id</parameter></paramdef>
     <paramdef><enumname>GtkIconSize</enumname> <parameter>size</parameter></paramdef>
     <paramdef>string <parameter><optional>detail = null</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Cria um GdkPixbuf a partir de um item de estoque.
   </shortdesc>
   <desc>
    <para>
     Cria um <classname>GdkPixbuf</classname> a partir do enumerador de um item de estoque
     e do tamanho (<parameter>size</parameter>) definido.
    </para>
    <para>
     Veja <function class="GtkWindow">set_icon</function> para um exemplo de uso.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.reparent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reparent</function></funcdef>
     <paramdef>GtkWidget <parameter>new_parent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Move o widget de seu container parent atual para um outro container.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.reset_rc_styles">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reset_rc_styles</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.selection_add_target">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>selection_add_target</function></funcdef>
     
     <paramdef><parameter>selection</parameter></paramdef>
     <paramdef><parameter>target</parameter></paramdef>
     <paramdef><parameter>info</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.selection_clear">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>selection_clear</function></funcdef>
     
     <paramdef><parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">queue_clear</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.selection_clear_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>selection_clear_targets</function></funcdef>
     
     <paramdef><parameter>selection</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.selection_convert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>selection_convert</function></funcdef>
     
     <paramdef><parameter>selection</parameter></paramdef>
     <paramdef><parameter>target</parameter></paramdef>
     <paramdef><parameter><optional>time</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.selection_owner_set">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>selection_owner_set</function></funcdef>
     
     <paramdef><parameter>selection</parameter></paramdef>
     <paramdef><parameter><optional>time</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.selection_remove_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>selection_remove_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.send_expose">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>send_expose</function></funcdef>
     
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.set_accel_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_accel_path</function></funcdef>
     <paramdef>string <parameter>accel_path</parameter></paramdef>
     <paramdef>GtkAccelGroup <parameter>accel_group</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_app_paintable">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_app_paintable</function></funcdef>
     <paramdef>bool <parameter>app_paintable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_child_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_visible</function></funcdef>
     <paramdef>bool <parameter>is_visible</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_child_visible</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_colormap</function></funcdef>
     
     <paramdef><classname>GdkColormap</classname> <parameter>colormap</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_colormap</function>, 
     <function class="GtkWidget">pop_colormap</function>, 
     <function class="GtkWidget">push_colormap</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_composite_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_composite_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_composite_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_default_colormap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_default_colormap</function></funcdef>
     
     <paramdef><classname>GdkColormap</classname> <parameter>colormap</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_default_colormap</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_default_direction">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_default_direction</function></funcdef>
     <paramdef>GtkTextDirection <parameter>dir</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_default_direction</function>
    </para>

    <simpara>
     &static;
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_direction">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_direction</function></funcdef>
     <paramdef>GtkTextDirection <parameter>dir</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_direction</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_double_buffered">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_double_buffered</function></funcdef>
     <paramdef>bool <parameter>double_buffered</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_events">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_events</function></funcdef>
     <paramdef>int <parameter>events</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">add_events</function>, 
     <function class="GtkWidget">get_events</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_extension_events">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_extension_events</function></funcdef>
     
     <paramdef><parameter>mode</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_extension_events</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o nome de um widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_name</function>, 
     <fieldname class="GtkWidget">name</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_no_show_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_no_show_all</function></funcdef>
     <paramdef>bool <parameter>no_show_all</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_no_show_all</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_parent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_parent</function></funcdef>
     <paramdef>GtkWidget <parameter>parent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o container parent de um widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_parent</function>, 
     <fieldname class="GtkWidget">parent</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_parent_window">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_parent_window</function></funcdef>
     
     <paramdef><classname>GdkWindow</classname> <parameter>parent_window</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_parent_window</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_redraw_on_allocate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_redraw_on_allocate</function></funcdef>
     <paramdef>bool <parameter>redraw_on_allocate</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_scroll_adjustments">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>set_scroll_adjustments</function></funcdef>
     <paramdef>GtkAdjustment <parameter>hadjustment</parameter></paramdef>
     <paramdef>GtkAdjustment <parameter>vadjustment</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_sensitive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_sensitive</function></funcdef>
     <paramdef>bool <parameter>sensitive</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define se o widget reagirá ou não à eventos.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_size_request">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_size_request</function></funcdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Solicita um novo tamanho para o widget.
   </shortdesc>
   <desc>
    <simpara>
     Solicita que o tamanho do widget seja modificado para:
     <parameter>width</parameter> pixels wide by 
     <parameter>height</parameter> pixels high.
    </simpara>
    <para>
     &seealso;
     <function class="GtkWidget">get_size_request</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_state">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_state</function></funcdef>
     <paramdef><enumname>GtkStateType</enumname> <parameter>state</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <fieldname class="GtkWidget">state</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_style</function></funcdef>
     <paramdef>GtkStyle <parameter>style</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o objeto <classname>GtkStyle</classname> para o widget.
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">ensure_style</function>, 
     <function class="GtkWidget">get_style</function>, 
     <function class="GtkWidget">modify_style</function>, 
     <fieldname class="GtkWidget">style</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_uposition">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_uposition</function></funcdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    OBSOLETO. Define a posição do widget relativa ao seu parent.
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_usize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_usize</function></funcdef>
     <paramdef>int <parameter>width</parameter></paramdef>
     <paramdef>int <parameter>height</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define o tamanho de um widget.
   </shortdesc>
   <desc>
    <simpara>
     Solicita que o tamanho do widget seja modificado para:
     <parameter>width</parameter> pixels wide by 
     <parameter>height</parameter> pixels high.
    </simpara>
    <note>
     Este método é OBSOLETO. Ele não deve ser usado em novo código escrito
     e deve ser substituído em qualquer código existente.
     Ao invés, use <function class="GtkWidget">set_size_request</function>.
    </note>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.set_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>boolean <function>set_visible</function></funcdef>
     <paramdef>boolean <parameter>visible</parameter></paramdef>
     <paramdef>
      boolean
      <parameter><optional>all = <literal>true</literal></optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Oculta ou exibe o widget dependendo do valor do parâmetro
    <parameter>visible</parameter>.
   </shortdesc>
   <desc>
    <para>
     Oculta ou exibe o widget dependendo do valor do parâmetro
     <parameter>visible</parameter>. Se <parameter>visible</parameter> é
     <literal>true</literal> o widget será mostrado. Se for
     <literal>false</literal> será ocultado.
    </para>
    <para>
     O parâmetro opcional <parameter>all</parameter> pode ser usado para
     ocultar ou exibir todos os children abaixo do widget. Se
     <parameter>all</parameter> for <literal>true</literal>,
     <function class="GtkWidget">show_all</function> ou
     <function class="GtkWidget">hide_all</function> será chamada ao invés de
     <function class="GtkWidget">show</function> ou <function class="GtkWidget">hide</function>.
    </para>
    <para>
     <function class="GtkWidget">set_visible</function> retorna
     <literal>true</literal> se o widget for visìvel ou 
     <literal>false</literal>.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">show</function>,
     <function class="GtkWidget">hide</function>,
     <function class="GtkWidget">is_visible</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.shape_combine_mask">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>shape_combine_mask</function></funcdef>
     
     <paramdef><parameter>shape_mask</parameter></paramdef>
     <paramdef><parameter>offset_x</parameter></paramdef>
     <paramdef><parameter>offset_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.show">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>show</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Exibe o widget na tela.
   </shortdesc>
   <desc>
    <para>
     Exibe o widget na tela.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">hide</function>,
     <function class="GtkWidget">show_all</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.show_all">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>show_all</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Exibe o widget e todos seus childs na tela.
   </shortdesc>
   <desc>
    <para>
     Exibe o widget e todos seus childs na tela.
    </para>
    <para>
     &seealso;
     <function class="GtkWidget">show</function>,
     <function class="GtkWidget">hide_all</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.show_now">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>show_now</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Define um widget como visível e aguarda até que ele seja exibido.
   </shortdesc>
   <desc>
    <para>
     Exibe um widget. Se o widget é um widget toplevel não mapeado, (ex. um
     GtkWindow que não foi exibido ainda), entra-se no loop principal e
     aguarda-se que a janela seja mapeada. Seja cuidadoso; pelo fato do loop
     principal estar rodando, qualquer coisa pode acontecer durante esa
     função.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.size_allocate">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>size_allocate</function></funcdef>
     
     <paramdef><parameter>allocation</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.size_request">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>size_request</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>


  <method id="gtk.gtkwidget.method.thaw_child_notify">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>thaw_child_notify</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">freeze_child_notify</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.translate_coordinates">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>translate_coordinates</function></funcdef>
     
     <paramdef><classname>GtkWidget</classname> <parameter>dest_widget</parameter></paramdef>
     <paramdef><parameter>src_x</parameter></paramdef>
     <paramdef><parameter>src_y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.unmap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unmap</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.unparent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unparent</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove o widget de seu container.
   </shortdesc>
   <desc>
    <para>
     Remove o widget de seu container.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkwidget.method.unrealize">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unrealize</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Destrói o widget.
   </shortdesc>
   <desc>

   </desc>
  </method>


 <method id="gtk.gtkwidget.method.drag_source_add_image_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>drag_source_add_image_targets</function></funcdef>

     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtkwidget.method.drag_source_add_uri_targets">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>drag_source_add_uri_targets</function></funcdef>

     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

 </methods>

 <fields>
  <field id="gtk.gtkwidget.field.allocation" type="ro">
   <fieldname>allocation</fieldname>
   <fieldtype>GdkRectangle</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_allocation</function>
    </para>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.name" type="ro">
   <fieldname>name</fieldname>
   <fieldtype>string</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_name</function>, 
     <function class="GtkWidget">set_name</function>
    </para>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.parent" type="ro">
   <fieldname>parent</fieldname>
   <fieldtype>GtkWidget</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">get_parent</function>, 
     <function class="GtkWidget">set_parent</function>
    </para>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.saved_state" type="ro">
   <fieldname>saved_state</fieldname>
   <fieldtype>int</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.state" type="ro">
   <fieldname>state</fieldname>
   <fieldtype>int</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">set_state</function>
    </para>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.style" type="ro">
   <fieldname>style</fieldname>
   <fieldtype>GtkStyle</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkWidget">ensure_style</function>, 
     <function class="GtkWidget">get_style</function>, 
     <function class="GtkWidget">modify_style</function>, 
     <function class="GtkWidget">set_style</function>
    </para>

   </desc>
  </field>

  <field id="gtk.gtkwidget.field.window" type="ro">
   <fieldname>window</fieldname>
   <fieldtype/>
   <shortdesc>
    GdkWindow para o widget.
   </shortdesc>
   <desc>
    <para>
     A propriedade <fieldname>window</fieldname> é um objeto 
     <classname>GdkWindow</classname>. Ele somente está disponível
     após o widget ter sido processado.
    </para>
   </desc>
  </field>
 </fields>

 <signals>
  <signal id="gtk.gtkwidget.signal.accel-closures-changed">
   <signalname>accel-closures-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.button-press-event">
   <signalname>button-press-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Botão do mouse foi pressionado.
   </shortdesc>
   <desc>
    <para>
     Este sinal é emitido quando um botão do mouse é pressionado.
    </para>
    <para>
     As propriedades de eventos úteis são:
     <itemizedlist>
      <listitem>
       <literal>x, y</literal> - As coordenadas x e y do widget onde o cursor
       se encontra.
      </listitem>
      <listitem>
       <literal>button</literal> - Botão do mouse (1 - esquerda, 2 - meio, 3 - direita)
      </listitem>
      <listitem>
       <literal>state</literal> - Máscara de outras teclas que estão sendo
       pressionadas (ex. Ctrl ou Shift) - <enumname>GdkModifierType</enumname>
      </listitem>
      <listitem>
       <literal>type</literal> - Tipo de evento, ex. um clique, clique duplo
       e etc. - <enumname>GdkEventType</enumname>.
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>Usando o sinal key-press-event</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/button-press-event.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.button-release-event">
   <signalname>button-release-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Botão do mouse foi solto.
   </shortdesc>
   <desc>
    <para>
     Este sinal é emitido sempre que um botão do mouse é solto.
    </para>
    <para>
     Veja <signalname class="GtkWidget">button-press-event</signalname>
     como exemplo.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.can-activate-accel">
   <signalname>can-activate-accel</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>int <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.child-notify">
   <signalname>child-notify</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GParam -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.client-event">
   <signalname>client-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.configure-event">
   <signalname>configure-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.delete-event">
   <signalname>delete-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.destroy-event">
   <signalname>destroy-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.direction-changed">
   <signalname>direction-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkTextDirection <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-begin">
   <signalname>drag-begin</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Arrastamento a partir do widget foi iniciado.
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-begin</literal> é emitido no widget quando o
     arrastamento é iniciado. Uma razão comum para usar este sinal é quando
     se quiser atribuir um ícone personalizado com 
     <function class="GtkWidget">drag_source_set_icon</function>.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-data-delete">
   <signalname>drag-data-delete</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    O arrastamento foi completado.
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-data-delete</literal> é emitido na fonte
     quando um arrastamento com a ação <literal>Gdk::ACTION_MOVE</literal>
     é completado com sucesso. O manipulador do sinal é responsável por apagar
     o dado que foi solto. O que "apagar" significa, depende do contexto da
     operação de arraste.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-data-get">
   <signalname>drag-data-get</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef><classname>GtkSelectionData</classname> <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>info</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Dados de arrastamento precisam ser fornecidos.
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-data-get</literal> é emitido na fonte de
     arrastamento quando local onde foi solto, solicita o dado que foi
     arrastado. É responsabilidade do manipulador de sinais de preencher
     os dados com o dado no formato que foi indicado pela informação. Veja
     <function class="GtkSelectionData">set</function> e 
     <function class="GtkSelectionData">set_text</function>.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-data-received">
   <signalname>drag-data-received</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef><classname>GtkSelectionData</classname> <parameter>data</parameter></paramdef>
     <paramdef>int <parameter>info</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Recebe os dados arrastados na aplicação.
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-data-received</literal> é emitido no local onde o
     dado arrastado é recebido. Se o dado foi recebido a fim de determinar se
     será aceito, o maipulador irá esperar 
     <function class="GtkDragContext">drag_status</function> e não terminará o
     arraste. Se o dado foi recebido em resposta ao sinal 
     <signalname class="GtkWidget">drag-drop</signalname> (e este é o último
     alvo a ser recebido), será esperado que o manipulador para este sinal
     processará o dado recebido e chamará
     <function class="GtkDragContext">drag_finish</function>, setando o
     parâmetro dependendo se o dado foi processado corretamente.
    </para>
    <para>
     O manipulador deve esperar e modificar <literal>drag_context-&gt;action</literal>
     antes de chamar <function class="GtkDragContext">drag_finish</function>,
     ex. para implementar <literal>Gdk::ACTION_ASK</literal>.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-drop">
   <signalname>drag-drop</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Ocorreu um arrastamento.
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-drop</literal> é emitido no local onde o dado foi
     solto quando o usuário arrasta algum dado em algum widget. O manipulador
     de sinais deve determinar se a posição do cursor está no local onde foi
     solto ou não. Se não está, retorna <literal>false</literal> e nenhum
     processamento adicional é necessário. Caso contrário, o manipulador
     retornará <literal>true</literal>. Neste caso, o manipulador deve
     assegurar que <function class="GdkDragContext">drop_finish</function> foi
     chamado para deixar que a fonte saiba que o arrastamento está completo.
     A chamada para <function class="GdkDragContext">drop_finish</function>
     pode ser feita também diretamente ou em um manipulador 
     <signalname class="GtkWidget">drag-data-received</signalname> que é
     disparado pela chamada <function class="GdkDragContext">get_data</function>
     para receber o dado para um ou mais dos alvos suportados.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-end">
   <signalname>drag-end</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     O sinal <literal>drag-end</literal> é emitido na fonte do arrastamento
     quando o mesmo é concluído. Uma razão comum para usar este sinal é
     desfazer coisas feitas em
     <signalname class="GtkWidget">drag-begin</signalname>.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-leave">
   <signalname>drag-leave</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.drag-motion">
   <signalname>drag-motion</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkDragContext</classname> <parameter>context</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>time</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.enter-notify-event">
   <signalname>enter-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.event">
   <signalname>event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.event-after">
   <signalname>event-after</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.expose-event">
   <signalname>expose-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.focus">
   <signalname>focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkDirectionType <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.focus-in-event">
   <signalname>focus-in-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.focus-out-event">
   <signalname>focus-out-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.grab-focus">
   <signalname>grab-focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.grab-notify">
   <signalname>grab-notify</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>bool <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.hide">
   <signalname>hide</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.hierarchy-changed">
   <signalname>hierarchy-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.key-press-event">
   <signalname>key-press-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Uma tecla foi pressionada.
   </shortdesc>
   <desc>
    <para>
     Este sinal é emitido quando uma tecla é pressionada.
    </para>
    <note>
     Este sinal é emitido antes de qualquer mudança ser feita no widget. Por
     exemplo, se você está usando <classname>GtkEntry</classname>, o sinal
     será emitido antes do texto ser modificado.
    </note>
    <para>
     Propriedades de eventos úteis são:
     <itemizedlist>
      <listitem>
       <literal>keyval</literal> - inteiro que pode ser comparado com  
       the <link linkend="appendix.keysyms">key symbols</link> para checar se
       uma tecla foi pressionada.
      </listitem>
      <listitem>
       <literal>state</literal> - uma máscara de
       <enumname>GdkModifierType</enumname>s que podem ser usadas para checar
       se <literal>Ctrl</literal> ou <literal>Alt</literal> está sendo
       pressionada adicionalmente junto à outra tecla.
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>Usando o sinal key-press-event</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkwidget/key-press-event.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.key-release-event">
   <signalname>key-release-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef><classname>GdkEvent</classname> <parameter>event</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Uma tecla foi solta.
   </shortdesc>
   <desc>
    <para>
     Este sinal é emitido sempre que uma tecla é solta.
    </para>
    <para>
     Veja a documentação de <signalname class="GtkWidget">key-press-event</signalname>
     para um exemplo.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.leave-notify-event">
   <signalname>leave-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.map">
   <signalname>map</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.map-event">
   <signalname>map-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.mnemonic-activate">
   <signalname>mnemonic-activate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>bool <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.motion-notify-event">
   <signalname>motion-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.no-expose-event">
   <signalname>no-expose-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.parent-set">
   <signalname>parent-set</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Disparado quando o widget parent é modificado.
   </shortdesc>
   <desc>
    O sinal <signalname>parent-set</signalname> é emitido quando o parent
    é setado. A chamada de retorno é passada ao widget que emitiu o sinal
    e a algum valor cuja a finalidade ou origem é desconhecida.
   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.popup-menu">
   <signalname>popup-menu</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.property-notify-event">
   <signalname>property-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.proximity-in-event">
   <signalname>proximity-in-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.proximity-out-event">
   <signalname>proximity-out-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.realize">
   <signalname>realize</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.screen-changed">
   <signalname>screen-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkScreen -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.scroll-event">
   <signalname>scroll-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.selection-clear-event">
   <signalname>selection-clear-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.selection-get">
   <signalname>selection-get</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GtkSelectionData -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>int <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>int <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.selection-notify-event">
   <signalname>selection-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.selection-received">
   <signalname>selection-received</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GtkSelectionData -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>int <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.selection-request-event">
   <signalname>selection-request-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.show">
   <signalname>show</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.show-help">
   <signalname>show-help</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkWidgetHelpType <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.size-allocate">
   <signalname>size-allocate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GdkRectangle <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.size-request">
   <signalname>size-request</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GtkRequisition -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.state-changed">
   <signalname>state-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkStateType <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.style-set">
   <signalname>style-set</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef>GtkStyle <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.unmap">
   <signalname>unmap</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.unmap-event">
   <signalname>unmap-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.unrealize">
   <signalname>unrealize</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.visibility-notify-event">
   <signalname>visibility-notify-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtkwidget.signal.window-state-event">
   <signalname>window-state-event</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkWidget <parameter>widget</parameter></paramdef>
     <paramdef><!-- was: GdkEvent -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

 </signals>

</classentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
