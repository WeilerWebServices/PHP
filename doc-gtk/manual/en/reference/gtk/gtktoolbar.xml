<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.12 $ -->
<classentry id="gtk.gtktoolbar">
 <classmeta>
  <classtitle>GtkToolbar</classtitle>
  <classparent>GtkContainer</classparent>
  <classimage fileref="&directory.images;/reference/gtk/gtktoolbar.png"/>
  <shortdesc>
   A toolbar widget that displays GtkToolItems.
  </shortdesc>
  <desc>
   <para>
    A toolbar displays buttons, dropdown menus and other widgets in a row.
    The widgets need to be subclasses of <classname>GtkToolItem</classname>
    and can be added with <function class="GtkToolbar">insert</function> and
    deleted with <function class="GtkContainer">remove</function>.
   </para>
   <para>
    You can group items on the toolbar by using
    <classname>GtkSeparatorToolItem</classname>. If the
    <propname class="GtkSeparatorToolItem">expand</propname> is set to
    <literal>true</literal>, and
    <propname class="GtkSeparatorToolItem">draw</propname> set to
    <literal>false</literal>, it forces all following items to the end of the
    toolbar.
   </para>
   <para>
    If you get a warning like
    <literal>Gtk-WARNING **: Mixing deprecated and non-deprecated
    GtkToolbar API is not allowed</literal> remember that
    <function class="GtkToolbar">insert</function> is the
    <emphasis>only</emphasis> valid method to add items. All other
    <literal>prepend_*</literal>, <literal>append_*</literal> and
    <literal>insert_*</literal>methods are deprecated.
   </para>
  </desc>
 </classmeta>

 <constructors>
  <constructor id="gtk.gtktoolbar.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkToolbar</function></funcdef>
    <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a new toolbar instance.
   </shortdesc>
   <desc>
    <para>
     Creates a new empty toolbar widget.
    </para>
    <para>
     Items can be added with <function class="GtkToolbar">insert</function>
     and need to be subclass of <classname>GtkToolItem</classname>.
    </para>
    <example>
     <title>Creating a toolbar and adding buttons</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktoolbar/constructor.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </constructor>
 </constructors>

 <methods>
<!-- not implemented
  <method id="gtk.gtktoolbar.method.append_element">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWidget <function>append_element</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Create and append an item to the toolbar.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function> instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">insert_element</function>, 
     <function class="GtkToolbar">prepend_element</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.append_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>append_item</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>icon</parameter></paramdef>
     <paramdef><parameter>callback</parameter></paramdef>
     <paramdef>mixed <parameter><optional>userdata</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Append an item.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function> instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">insert_item</function>, 
     <function class="GtkToolbar">prepend_item</function>
    </para>
   </desc>
  </method>
-->
  <method id="gtk.gtktoolbar.method.append_space">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>append_space</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Append a space.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">insert_space</function>, 
     <function class="GtkToolbar">prepend_space</function>, 
     <function class="GtkToolbar">remove_space</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.append_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>append_widget</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Append a widget with tooltips.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">insert_widget</function>, 
     <function class="GtkToolbar">prepend_widget</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_drop_index">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_drop_index</function></funcdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the item position for a point.
   </shortdesc>
   <desc>
    <para>
     Returns the item index position for the given (x,y) point on the toolbar.
     Useful when dragging items onto the toolbar.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_icon_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GtkIconSize</enumname> <function>get_icon_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Returns the size of the icons.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method;
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_icon_size</function>, 
     <function class="GtkToolbar">unset_icon_size</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_item_index">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_item_index</function></funcdef>
     <paramdef><classname>GtkToolItem</classname> <parameter>item</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the index position for an item.
   </shortdesc>
   <desc>
    <para>
     Returns the index position at which <parameter>item</parameter>
     is located.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_n_items">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_n_items</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the number of items on the toolbar.
   </shortdesc>
   <desc>
    <para>
     Returns the number of items on the toolbar.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_nth_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkToolItem</classname> <function>get_nth_item</function></funcdef>
     <paramdef>int <parameter>n</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns tool item at a certain position.
   </shortdesc>
   <desc>
    <para>
     Returns the tool item at position number <parameter>n</parameter>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_orientation">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GtkOrientation</enumname> <function>get_orientation</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the orientation.
   </shortdesc>
   <desc>
    <para>
     Returns the orientation (horizontal or vertical) of the toolbar.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_orientation</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_relief_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef><enumname>GtkReliefStyle</enumname> <function>get_relief_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the relief style of the buttons.
   </shortdesc>
   <desc>
    <para>
     Returns the relief style of the buttons on the toolbar.
    </para>
    <para>
     &seealso;
     <function class="GtkButton">set_relief</function>
     (<classname>GtkButton</classname>)
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.get_show_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_show_arrow</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns if the toolbar has an overflow menu.
   </shortdesc>
   <desc>
    <para>
     Returns if the toolbar shows a dropdown arrow with a menu
     containing the missing items if there is not enough space
     to display all items.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_show_arrow</function>
    </para>
   </desc>
  </method>

  

  <method id="gtk.gtktoolbar.method.get_tooltips">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_tooltips</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns if tooltips are enabled.
   </shortdesc>
   <desc>
    <para>
     Returns if tooltips are enabled.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_tooltips</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert</function></funcdef>
     <paramdef><classname>GtkToolItem</classname> <parameter>item</parameter></paramdef>
     <paramdef>int <parameter>pos</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts an item at a certain position.
   </shortdesc>
   <desc>
    <para>
     Inserts a widget that is subclass of <classname>GtkToolItem</classname>
     to the toolbar at a certain position.
    </para>
    <para>
     If <parameter>pos</parameter> is <literal>0</literal>, it is prepended
     at the beginning of the toolbar, before all items. If
     <parameter>pos</parameter> is negative, it is appended after all other
     elements.
    </para>
    <warning>
     <para>
     Despite all the other <literal>prepend_*</literal>,
     <literal>append_*</literal> or <literal>insert_*</literal> methods,
     this one here is the only valid. The other ones are all deprecated.
     </para>
    </warning>
   </desc>
  </method>
<!-- not implemented
  <method id="gtk.gtktoolbar.method.insert_element">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWidget <function>insert_element</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Create and insert an element.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_element</function>, 
     <function class="GtkToolbar">prepend_element</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.insert_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>insert_item</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>icon</parameter></paramdef>
     <paramdef><parameter>callback</parameter></paramdef>
     <paramdef>mixed <parameter>userdata</parameter></paramdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Insert a widget at a position.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_item</function>, 
     <function class="GtkToolbar">prepend_item</function>
    </para>
   </desc>
  </method>
-->
  <method id="gtk.gtktoolbar.method.insert_space">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_space</function></funcdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Insert a separator at a certain position.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_space</function>, 
     <function class="GtkToolbar">prepend_space</function>, 
     <function class="GtkToolbar">remove_space</function>
    </para>
   </desc>
  </method>

  

  <method id="gtk.gtktoolbar.method.insert_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_widget</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Create and insert a widget at a certain position.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_widget</function>, 
     <function class="GtkToolbar">prepend_widget</function>
    </para>
   </desc>
  </method>
<!-- not implemented
  <method id="gtk.gtktoolbar.method.prepend_element">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkWidget</classname> <function>prepend_element</function></funcdef>
     <paramdef><enumname>GtkToolbarChildType</enumname> <parameter>type</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>icon</parameter></paramdef>
     <paramdef><parameter>callback</parameter></paramdef>
     <paramdef>mixed <parameter>userdata</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Creates and add a child to the beginning.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_element</function>, 
     <function class="GtkToolbar">insert_element</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.prepend_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWidget <function>prepend_item</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
     <paramdef><classname>GtkWidget</classname> <parameter>icon</parameter></paramdef>
     <paramdef><parameter>callback</parameter></paramdef>
     <paramdef>mixed <parameter>userdata</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Creates and adds a item to the beginning.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_item</function>, 
     <function class="GtkToolbar">insert_item</function>
    </para>
   </desc>
  </method>
-->
  <method id="gtk.gtktoolbar.method.prepend_space">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>prepend_space</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Prepends a separator item.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_space</function>, 
     <function class="GtkToolbar">insert_space</function>, 
     <function class="GtkToolbar">remove_space</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.prepend_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>prepend_widget</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>widget</parameter></paramdef>
     <paramdef>string <parameter>tooltip_text</parameter></paramdef>
     <paramdef>string <parameter>tooltip_private_text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Prepends a widget with tooltips.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkToolbar">insert</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_widget</function>, 
     <function class="GtkToolbar">insert_widget</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.remove_space">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_space</function></funcdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Removes a space element.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method; Use <function class="GtkContainer">remove</function>
     instead.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">append_space</function>, 
     <function class="GtkToolbar">insert_space</function>, 
     <function class="GtkToolbar">prepend_space</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.set_drop_highlight_item">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_drop_highlight_item</function></funcdef>
     <paramdef>GtkToolItem <parameter>tool_item</parameter></paramdef>
     <paramdef>int <parameter>index</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Highlights toolbar with a new item.
   </shortdesc>
   <desc>
    <para>
     Highlights the toolbar to give an idea of what it would look like if
     <parameter>tool_item</parameter> was added to the toolbar at position
     <parameter>index</parameter>. If <parameter>tool_item</parameter> is
     <literal>null</literal>, highlighting is turned off.
    </para>
    <para>
     The <parameter>tool_item</parameter> must not be part of the widget
     hierarchy. While this lasts, it may not be added to the hierarchy
     or used as highlighting item for another toolbar.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.set_icon_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_icon_size</function></funcdef>
     <paramdef><enumname>GtkIconSize</enumname> <parameter>icon_size</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Set the icon size.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method;
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_icon_size</function>, 
     <function class="GtkToolbar">unset_icon_size</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.set_orientation">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_orientation</function></funcdef>
     <paramdef><enumname>GtkOrientation</enumname> <parameter>orientation</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the toolbar orientation.
   </shortdesc>
   <desc>
    <para>
     Sets the toolbar orientation, horizontal or vertical.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_orientation</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.set_show_arrow">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_show_arrow</function></funcdef>
     <paramdef>bool <parameter>show_arrow</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If an overflow menu shall be displayed if necessary.
   </shortdesc>
   <desc>
    <para>
     Sets whether an arrow with a dropdown menu shall be shown
     when there is not enough space to display all the items.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_show_arrow</function>
    </para>
   </desc>
  </method>

  

  <method id="gtk.gtktoolbar.method.set_tooltips">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_tooltips</function></funcdef>
     <paramdef>bool <parameter>enable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Enables or disabled tooltips.
   </shortdesc>
   <desc>
    <para>
     Enables or disables tooltips for the tool items.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_tooltips</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.unset_icon_size">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unset_icon_size</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated; Resets the icon size to the default.
   </shortdesc>
   <desc>
    <para>
     &deprecated.method;
    </para>
    <para>
     Resets the user-defined icon size to the default one.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_icon_size</function>, 
     <function class="GtkToolbar">set_icon_size</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.unset_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unset_style</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Resets the toolbar style to the user preference.
   </shortdesc>
   <desc>
    <para>
     Resets the toolbar style to the default, that is the
     user preference.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">get_style</function>, 
     <function class="GtkToolbar">set_style</function>
    </para>
   </desc>
  </method>
  <method id="gtk.gtktoolbar.method.get_toolbar_style">
   <funcsynopsis>
    <funcprototype>
     <funcdef>
      <enumname>GtkToolbarStyle</enumname> 
      <function>get_toolbar_style</function>
     </funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the <enumname>GtkToolbarStyle</enumname> for the toolbar.
   </shortdesc>
   <desc>
    <para>
     Returns the <enumname>GtkToolbarStyle</enumname> for the toolbar. The 
     toolbar style determines if the toolbar items show text, images or both.
    </para>
    <para>
     &seealso;
     <function classname="GtkToolbar">set_toolbar_style</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktoolbar.method.set_toolbar_style">
    <funcsynopsis>
    <funcprototype>
     <funcdef> <function>set_toolbar_style</function></funcdef>
     <paramdef>
      <enumname>GtkToolbarStyle</enumname> <parameter>style</parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the <enumname>GtkToolbarStyle</enumname> for the toolbar.
   </shortdesc>
   <desc>
    <para>
     Sets the <enumname>GtkToolbarStyle</enumname> for the toolbar. The
     toolbar style determines if the toolbar items show text, images or both.
    </para>
    <para>
     &seealso;
     <function classname="GtkToolbar">get_toolbar_style</function>
    </para>
   </desc>
  </method>

  </methods>

 <properties>
  <prop id="gtk.gtktoolbar.property.orientation" type="rw">
   <fieldname>orientation</fieldname>
   <fieldtype><enumname>GtkOrientation</enumname></fieldtype>
   <shortdesc>
    The orientation of the toolbar.
   </shortdesc>
   <desc>
    <para>
     The orientation of the toolbar.
    </para>
    <para>
     &seealso;
     <function class="GtkWindow">get_orientation</function>,
     <function class="GtkWindow">set_orientation</function>
    </para>
   </desc>
  </prop>

  <prop id="gtk.gtktoolbar.property.show_arrow" type="rw">
   <fieldname>show_arrow</fieldname>
   <fieldtype>bool</fieldtype>
   <shortdesc>
    If an arrow should be shown if the toolbar doesn't fit.
   </shortdesc>
   <desc>
    <para>
     If an arrow should be shown if the toolbar doesn't fit.
    </para>
    <para>
     &seealso;
     <function class="GtkWindow">get_show_arrow</function>,
     <function class="GtkWindow">set_show_arrow</function>
    </para>
   </desc>
  </prop>

  <prop id="gtk.gtktoolbar.property.toolbar_style" type="rw">
   <fieldname>toolbar-style</fieldname>
   <fieldtype><enumname>GtkToolbarStyle</enumname></fieldtype>
   <shortdesc>
    How to draw the toolbar.
   </shortdesc>
   <desc>
    <para>
     How to draw the toolbar.
    </para>
    <para>
     &seealso;
     <function class="GtkWindow">get_style</function>,
     <function class="GtkWindow">set_style</function>
    </para>
   </desc>
  </prop>
 </properties>

 <signals>
  <signal id="gtk.gtktoolbar.signal.focus-home-or-end">
   <signalname>focus-home-or-end</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkToolbar</classname> <parameter>toolbar</parameter></paramdef>
     <paramdef>bool <parameter>focus_home</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Internal use only.
   </shortdesc>
   <desc>
    <para>
     A keybinding signal used internally by GTK+.
     This signal can't be used in application code.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtktoolbar.signal.move-focus">
   <signalname>move-focus</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkToolbar</classname> <parameter>toolbar</parameter></paramdef>
     <paramdef><enumname>GtkDirectionType</enumname> <parameter>direction</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Internal use only.
   </shortdesc>
   <desc>
    <para>
     A keybinding signal used internally by GTK+.
     This signal can't be used in application code.
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtktoolbar.signal.orientation-changed">
   <signalname>orientation-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkToolbar</classname> <parameter>toolbar</parameter></paramdef>
     <paramdef><enumname>GtkOrientation</enumname> <parameter>orientation</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The orientation has been changed.
   </shortdesc>
   <desc>
    <para>
     Emitted when the orientation of the toolbar changes.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_orientation</function>
    </para>
   </desc>
  </signal>

  <signal id="gtk.gtktoolbar.signal.popup-context-menu">
   <signalname>popup-context-menu</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkToolbar</classname> <parameter>toolbar</parameter></paramdef>
     <paramdef>int <parameter>x</parameter></paramdef>
     <paramdef>int <parameter>y</parameter></paramdef>
     <paramdef>int <parameter>button</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The user right-clicked the toolbar.
   </shortdesc>
   <desc>
    <para>
     This signal is emitted when the user right-clicked the toolbar
     or used the key bound to display the popup menu.
    </para>
    <para>
     You should use this if you want to display a popup menu for the toolbar.
     If the signal was triggered by the keyboard, <parameter>button</parameter>
     is <literal>-1</literal>.
    </para>
    <note>
     <para>
      The signal is emitted only if the right-click happens on the toolbar,
      not on a tool item.
     </para>
    </note>
    <example>
     <title>Adding a popup menu to the toolbar</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktoolbar/popup.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </signal>

  <signal id="gtk.gtktoolbar.signal.style-changed">
   <signalname>style-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkToolbar</classname> <parameter>toolbar</parameter></paramdef>
     <paramdef><enumname>GtkToolbarStyle</enumname> <parameter>new_style</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The style of the toolbar has been changed.
   </shortdesc>
   <desc>
    <para>
     Emitted when the style of the toolbar changes.
    </para>
    <para>
     &seealso;
     <function class="GtkToolbar">set_style</function>
    </para>
   </desc>
  </signal>
 </signals>

</classentry>
