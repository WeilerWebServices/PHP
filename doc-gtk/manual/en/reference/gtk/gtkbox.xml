<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.18 $ -->
<classentry id="gtk.gtkbox">
 <classmeta>
  <classtitle>GtkBox</classtitle>
  <classparent>GtkContainer</classparent>
  <shortdesc>
   Base class for box containers.
  </shortdesc>
  <desc>
   <para>
    <classname>GtkBox</classname> is a base class providing box
    containers <classname>GtkHBox</classname> and 
    <classname>GtkVBox</classname> with properties and methods for
    packing any number of child widgets.
   </para>
   <para>
    Note that <classname>GtkBox</classname> is an abstract class
    and cannot be constructed directly.
   </para>
   <para>
    For more information about packing widgets see
    the <link linkend="tutorials.packing">packing tutorial</link>.
   </para>
  </desc>
 </classmeta>

 <methods>
  <method id="gtk.gtkbox.method.get_homogeneous">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_homogeneous</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Whether all children are allocated the same size.
   </shortdesc>
   <desc>
    <para>
     Returns <literal>true</literal> if all child widgets are allocated
     the same size.
    </para>
    <para>
     &seealso;
     <function class="GtkBox">set_homogeneous</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.get_spacing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_spacing</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the spacing between widgets.
   </shortdesc>
   <desc>
    <para>
     Returns the size of the space between the child widgets, in pixels.
    </para>
    <para>
     &seealso;
     <function class="GtkBox">set_spacing</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_end">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_end</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>bool <parameter><optional>expand = true</optional></parameter></paramdef>
     <paramdef>bool <parameter><optional>fill = true</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>padding = 0</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a widget to the box in the next available position, starting from the
    end.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>child</parameter> to the box starting from the end. See
     <function class="GtkBox">pack_start</function> for the parameter
     description.
    </simpara>

    <para>
     The difference between <function class="GtkBox">pack_start</function> and
     <function class="GtkBox">pack_end</function> can be explained with curtains:
     <literal>pack_start</literal> adds the widgets from the left side of the box,
     and <literal>pack_end</literal> does the same, but from the right side. The
     more widgets you add, the more of the free space of the "window" between the
     curtains is taken by the widgets. If the box is full, the "curtains" meet
     in the center.
    </para>

    <simpara>
     The buttons in the following image have been packed one after the other
     in numerical order: Button 1 first, Button 5 at last. You see that
     they are in order when using <function class="GtkBox">pack_start</function>,
     but turned order when with <function class="GtkBox">pack_end</function> as
     places are taken from the end.
    </simpara>

    <graphic fileref="&directory.images;/reference/gtk/gtkbox.pack_start_end.png"/>

    <example>
     <title>pack_start versus pack_end</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkbox/start_vs_end.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>

    <simpara>
     &seealso;
     <function class="GtkBox">pack_start</function>
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_start">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>pack_start</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>bool <parameter><optional>expand = true</optional></parameter></paramdef>
     <paramdef>bool <parameter><optional>fill = true</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>padding = 0</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a widget to the box in the next available position starting from the
    begining.
   </shortdesc>
   <desc>
    <simpara>
     Adds <parameter>child</parameter> to the box starting from the begining.
     If the box is a <classname>GtkVBox</classname>, the
     <parameter>child</parameter> will be added starting from the top. If the
     box is a <classname>GtkHBox</classname> the <parameter>child</parameter>
     will be added starting from the left.
    </simpara>
    <simpara>
     The optional argument <parameter>expand</parameter>, controls whether or
     not the widget should consume all of the space available when the
     container and the <parameter>child</parameter> are shown. Consuming the
     available space does not mean the <parameter>child</parameter> will be
     resized to fit the container.
    </simpara>
    <simpara>
     &seealso;
     <function class="GtkBox">pack_end</function>
    </simpara>

    <example>
     <title>GtkBox' expand and fill parameters in action</title>

     <para>
      This example demonstrates the <parameter>expand</parameter> and
      <parameter>fill</parameter> parameters.
     </para>
     <para>
      At first two <classname>GtkLabel</classname>s are created and
      <function class="GtkBox">pack_start</function>'ed to a box,
      the first expanded and the second unexpanded.
     </para>
     <para>
      The right side of the window shows the <parameter>fill</parameter>
      parameter: Two buttons are added to the box, both expanded, but only
      the first one filled: The second one takes half of the space, but
      keeps the ideal size required to display all the text, while
      the first one takes all the space for display.
     </para>

     <graphic fileref="&directory.images;/reference/gtk/gtkbox.packing.png"/>

     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtkbox/packing.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.reorder_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reorder_child</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>int <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Moves a child widget to a certain position.
   </shortdesc>
   <desc>
    <para>
     Moves the <parameter>child</parameter>'s position to the position given
     as the second parameter. This allows you to change the order
     of the widgets after they have been added to the box. Positions start at
     0.
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_child_packing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_child_packing</function></funcdef>
     <paramdef><classname>GtkWidget</classname> <parameter>child</parameter></paramdef>
     <paramdef>bool <parameter>expand</parameter></paramdef>
     <paramdef>bool <parameter>fill</parameter></paramdef>
     <paramdef>int <parameter>padding</parameter></paramdef>
     <paramdef><enumname>GtkPackType</enumname> <parameter>pack_type</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
     Sets packing parameters for a child.
   </shortdesc>
   <desc>
    <para>
     Changes the packing parameters set with 
     <function class="GtkBox">pack_start</function> or
     <function class="GtkBox">pack_end</function>.
    </para>
    <para>
     &seealso;
     <function class="GtkBox">query_child_packing</function>
     <function class="GtkBox">pack_start</function>
     <function class="GtkBox">pack_end</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_homogeneous">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_homogeneous</function></funcdef>
     <paramdef>bool <parameter>homogeneous</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Toggles equality of child sizing.
   </shortdesc>
   <desc>
    <para>
     <function class="GtkBox">set_homogeneous</function> sizes all
     the child widgets in the container to the dimensions of the largest
     child widget if set to <literal>true</literal>.  The default setting
     is <literal>false</literal>.
    </para>
    <para>
     &seealso;
     <function class="GtkBox">get_homogeneous</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.set_spacing">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_spacing</function></funcdef>
     <paramdef>int <parameter>spacing</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets spacing between children.
   </shortdesc>
   <desc>
    <simpara>
     <function class="GtkBox">set_spacing</function> is used to set the
     universal minimum spacing between the child widgets, in pixels.
    </simpara>
    <simpara>
     The default setting is <literal>0</literal>.
    </simpara>
    <para>
     &seealso;
     <function class="GtkBox">get_spacing</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_end_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>pack_end_defaults</function></funcdef>
      <paramdef><classname>GtkWidget</classname><parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated;: use <function class="GtkBox">pack_end</function> instead
   </shortdesc>
   <desc>
    <para>
     &deprecated.method;
    </para>
   </desc>
  </method>

  <method id="gtk.gtkbox.method.pack_start_defaults">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>pack_start_defaults</function></funcdef>
      <paramdef><classname>GtkWidget</classname><parameter>widget</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    &deprecated;: use <function class="GtkBox">pack_start</function> instead
   </shortdesc>
  <desc>
    <para>
     &deprecated.method;
    </para>
   </desc>
  </method>
  <method id="gtk.gtkbox.method.query_child_packing">
    <funcsynopsis>
    <funcprototype>
     <funcdef> <function>query_child_packing</function></funcdef>
     <paramdef><classname>GtkWidget</classname><parameter>child</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns array of information about a packed widget.
   </shortdesc>
   <desc>
    <para>
     This method returns an array with four elements containing information
     about how the child widget is packed. Index 0 contains the
     <literal>expand</literal> value for the widget where 0 is
     <literal>false</literal> and 1 is <literal>true</literal>. Index 1 contains
     the <literal>fill</literal> value for the widget where 0 is
     <literal>false</literal> and 1 is <literal>true</literal>. Index 2 contains
     the <literal>padding</literal> value for the widget as an integer of the
     number of pixels of padding. Index 3 contains the
     <literal>pack_type</literal> value for the widget: either <optionname enum="GtkPackType">Gtk::PACK_START</optionname> or <optionname enum="GtkPackType">Gtk::PACK_END</optionname>
    </para>
   </desc>
  </method>

  </methods>

</classentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
