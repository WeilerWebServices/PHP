<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.16 $ -->
<classentry id="gtk.gtktextbuffer">
 <classmeta>
  <classtitle>GtkTextBuffer</classtitle>
  <classparent>GObject</classparent>
  <shortdesc>
   An object for storing and editing text.
  </shortdesc>
  <desc>
   <simpara>
    A <classname>GtkTextBuffer</classname> stores text, which can be edited. The
    text can then be displayed in one or more <classname>GtkTextView</classname>
    widgets. Text in a buffer can be marked with
    <classname>GtkTextTag</classname> widgets which apply attributes to a range
    of text.
   </simpara>
   <simpara>
    Text in PHP-GTK 2 is UTF-8. This means that one character can be encoded
    as multiple bytes. Character counts are usually referred to as offsets,
    while byte counts are called indexes. If you confuse these two, things
    will work fine with ASCII, but as soon as your buffer contains multibyte
    characters, bad things will happen.
   </simpara>
   <simpara>
    A combination of <classname>GtkTextBuffer</classname> and 
    <classname>GtkTextView</classname> widgets should be used as instead of the
    deprecated <classname>GtkText</classname> widget.
   </simpara>
   <para>
    <example>
     <title>Simple use of GtkTextBuffer.</title>
     <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktextbuffer/constructor.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
     </programlisting>
    </example>
   </para>
   <simpara>
    &seealso;<classname>GtkTextView</classname>,
    <classname>GtkTextTag</classname>, <classname>GtkTextTagTable</classname>,
    <classname>GtkTextIter</classname>, <classname>GtkTextMark</classname>,
    <classname>GtkTextChildAnchor</classname>
   </simpara>
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gtk.gtktextbuffer.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkTextBuffer</function></funcdef>
    <paramdef>GtkTextTagTable <parameter><optional>tag_table = null</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns a new <classname>GtkTextBuffer</classname> object.
   </shortdesc>
   <desc>
    <simpara>
     Returns a new <classname>GtkTextBuffer</classname> object. You can also
     get a new buffer by first instantiating a new
     <classname>GtkTextView</classname> and then
     calling <function class="GtkTextView">get_buffer</function>.
    </simpara>
    <para>
     <example>
      <title>Instantiating a new buffer directly.</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktextbuffer/constructor.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
     <example>
      <title>Getting a new buffer from a view.</title>
      <programlisting role="php">
       <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktextbuffer/buffer_from_view.phpw" parse="text">
        <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
       </xi:include>
      </programlisting>
     </example>
    </para>
    <simpara>
     &seealso;<function class="GtkTextView">get_buffer</function>
    </simpara>
   </desc>
  </constructor>

 </constructors>

 <methods>

  <method id="gtk.gtktextbuffer.method.add_selection_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_selection_clipboard</function></funcdef>
     <paramdef>GtkClipboard <parameter>clipboard</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">remove_selection_clipboard</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.apply_tag">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>apply_tag</function></funcdef>
     <paramdef><classname>GtkTextTag</classname> <parameter>tag</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Apply a <classname>GtkTextTag</classname> to a range of text.
   </shortdesc>
   <desc>
    <para>
    Apply a <classname>GtkTextTag</classname> to the range of text
    between <parameter>start</parameter> and <parameter>end</parameter>.
    </para>
    <para>
    This method emits the <signalname>apply-tag</signalname> signal.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_tag</function>, 
     <function class="GtkTextBuffer">remove_tag</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.apply_tag_by_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>apply_tag_by_name</function></funcdef>
     
     <paramdef><parameter>name</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">remove_tag_by_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.backspace">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>backspace</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><parameter>interactive</parameter></paramdef>
     <paramdef><parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.begin_user_action">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>begin_user_action</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">end_user_action</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.copy_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>copy_clipboard</function></funcdef>
     <paramdef><classname>GtkClipboard</classname> <parameter>clipboard</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">cut_clipboard</function>, 
     <function class="GtkTextBuffer">paste_clipboard</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.create_child_anchor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextChildAnchor <function>create_child_anchor</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">insert_child_anchor</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.create_mark">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextMark <function>create_mark</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>location</parameter></paramdef>
     <paramdef>boolean <parameter>left_gravity</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a mark with the name and position specified by the user.
   </shortdesc>
   <desc>
    <para>
    Creates a mark with the name specified by <parameter>name</parameter>
    at the position specified by <parameter>location</parameter>.
    If <parameter>name</parameter> is NULL, the mark is anonymous;
    otherwise, the mark can be retrieved by name using the
    <function class="GtkTextBuffer">get_mark</function> method.
    If a mark has <parameter>left_gravity</parameter>, and text
    is inserted at the mark's current location, the mark will
    be moved to the left of the newly-inserted text.
    </para>
    <para>
    This method emits the <signalname>mark_set</signalname>
    signal as notification of the mark's initial placement.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">delete_mark</function>, 
     <function class="GtkTextBuffer">get_mark</function>, 
     <function class="GtkTextBuffer">move_mark</function>
    </para>

   </desc>
  </method>

  

  <method id="gtk.gtktextbuffer.method.cut_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>cut_clipboard</function></funcdef>
     <paramdef><classname>GtkClipboard</classname> <parameter>clipboard</parameter></paramdef>
     <paramdef>bool <parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">copy_clipboard</function>, 
     <function class="GtkTextBuffer">paste_clipboard</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.delete">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>delete</function></funcdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Deletes the text between the range given by the user.
   </shortdesc>
   <desc>
    <para>
     Deletes the text between <parameter>start</parameter> and
     <parameter>end</parameter>.
    </para>
    <para>
     Because the textbuffer is modified, all outstanding
     iterators become invalid after calling this function.
    </para>
    <para>
     This method emits the <signalname>delete_range</signalname> signal.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.delete_interactive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>delete_interactive</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>start_iter</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end_iter</parameter></paramdef>
     <paramdef><parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">insert_interactive</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.delete_mark">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>delete_mark</function></funcdef>
     <paramdef><classname>GtkTextMark</classname> <parameter>mark</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_mark</function>, 
     <function class="GtkTextBuffer">get_mark</function>, 
     <function class="GtkTextBuffer">move_mark</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.delete_mark_by_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>delete_mark_by_name</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">move_mark_by_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.delete_selection">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>delete_selection</function></funcdef>
     <paramdef>bool <parameter>interactive</parameter></paramdef>
     <paramdef>bool <parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.end_user_action">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>end_user_action</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">begin_user_action</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_bounds">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_bounds</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_char_count">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_char_count</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the number of characters in the buffer. 
   </shortdesc>
   <desc>
    <simpara>
     Returns the number of characters in a buffer. Remeber that because text
     in PHP-GTK 2 is UTF-8, the number of characters may not be the same as
     the number of bytes in the buffer. 
    </simpara>
    <para>
     <example>
      <title>
       Using <function class="GtkTextBuffer">get_char_count</function>
      </title>
      <programlisting role="php">
<![CDATA[
<?php
// Make sure the PHP-GTK 2 extension is loaded.
if (!extension_loaded('php-gtk')) {
        dl( 'php_gtk2.' . PHP_SHLIB_SUFFIX);
}

// Still working on this one...
]]>
      </programlisting>
     </example>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_end_iter">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_end_iter</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an iterator pointing at the last position in the text buffer.
   </shortdesc>
   <desc>
    Returns an iterator pointing at the "end iterator" one past
    the last valid character in the text buffer.
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextMark <function>get_insert</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_child_anchor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_child_anchor</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_line">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_line</function></funcdef>
     
     <paramdef><parameter>line_number</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_line_index">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_line_index</function></funcdef>
     
     <paramdef><parameter>line_number</parameter></paramdef>
     <paramdef><parameter>byte_offset</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_line_offset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_line_offset</function></funcdef>
     
     <paramdef><parameter>line_number</parameter></paramdef>
     <paramdef><parameter>char_offset</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_mark">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_mark</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_iter_at_offset">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_iter_at_offset</function></funcdef>
     
     <paramdef><parameter>char_offset</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_line_count">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_line_count</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_mark">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextMark <function>get_mark</function></funcdef>
     <paramdef>string <parameter>name</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_mark</function>, 
     <function class="GtkTextBuffer">delete_mark</function>, 
     <function class="GtkTextBuffer">move_mark</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_modified">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_modified</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">set_modified</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_selection_bound">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextMark <function>get_selection_bound</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_selection_bounds">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_selection_bounds</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an array containing iterators that point
    at the start and end of the selection.
   </shortdesc>
   <desc>
    Returns an array containing iterators that point
    at the start and end of the selection, if any.
    If there is no selection an empty array is returned.
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_slice">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_slice</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
     <paramdef><parameter><optional>include_hidden_chars</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_start_iter">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>get_start_iter</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an iterator pointing at the location of the first position in the text buffer.
   </shortdesc>
   <desc>
    Returns an iterator pointing at the location of the first position in the text buffer.
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_tag_table">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextTagTable <function>get_tag_table</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <fieldname class="GtkTextBuffer">tag_table</fieldname>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.get_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_text</function></funcdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
     <paramdef>boolean <parameter><optional>include_hidden_chars</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the text in the specified range.
   </shortdesc>
   <desc>
    <para>
    Returns the text in the specified range (<parameter>start</parameter>,
    <parameter>end</parameter>). This method does not return characters
    representing embedded images, so byte and character indexes
    into the returned string do not correspond to byte and character
    indexes into the buffer. Text marked with tags that set the
    invisibility attribute are excluded if <parameter>include_hidden_chars</parameter>
    is FALSE.
    </para>
	<para>Note: If you want to get the full text stored in the <classname>GtkTextBuffer</classname>, use the <function class="GtkTextBuffer">get_start_iter</function> and <function class="GtkTextBuffer">get_end_iter</function> respectively.</para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">set_text</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><parameter>text</parameter></paramdef>
     <paramdef><parameter><optional>len</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_at_cursor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_at_cursor</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter><optional>len = -1</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts the given text in the current cursor position.
   </shortdesc>
   <desc>
    Calls the <function class="GtkTextBuffer">insert</function> method,
    using the current cursor position as the insertion point.
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_child_anchor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_child_anchor</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTextChildAnchor</classname> <parameter>anchor</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_child_anchor</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_interactive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>insert_interactive</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><parameter>text</parameter></paramdef>
     <paramdef><parameter>len</parameter></paramdef>
     <paramdef><parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">delete_interactive</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_interactive_at_cursor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>insert_interactive_at_cursor</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>len</parameter></paramdef>
     <paramdef>bool <parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_pixbuf">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_pixbuf</function></funcdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>location</parameter></paramdef>
     <paramdef><classname>GdkPixbuf</classname> <parameter>image</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts an image into the text buffer.
   </shortdesc>
   <desc>
    Inserts an image specified by <parameter>image</parameter>
    into the text buffer at the location specified by <parameter>location</parameter>.
    The image will be counted as one character in character counts, and when
    obtaining the buffer contents as a string, will be represented by the Unicode
    "object replacement character" 0xFFFC.
   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_range">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_range</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">select_range</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.insert_range_interactive">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>insert_range_interactive</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
     <paramdef><parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  

  

  <method id="gtk.gtktextbuffer.method.move_mark">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>move_mark</function></funcdef>
     
     <paramdef><classname>GtkTextMark</classname> <parameter>mark</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>where</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_mark</function>, 
     <function class="GtkTextBuffer">delete_mark</function>, 
     <function class="GtkTextBuffer">get_mark</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.move_mark_by_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>move_mark_by_name</function></funcdef>
     
     <paramdef><parameter>name</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>where</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">delete_mark_by_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.paste_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>paste_clipboard</function></funcdef>
     
     <paramdef><classname>GtkClipboard</classname> <parameter>clipboard</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>override_location</parameter></paramdef>
     <paramdef><parameter>default_editable</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">copy_clipboard</function>, 
     <function class="GtkTextBuffer">cut_clipboard</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.place_cursor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>place_cursor</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>where</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.remove_all_tags">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_all_tags</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.remove_selection_clipboard">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_selection_clipboard</function></funcdef>
     <paramdef><classname>GtkClipboard</classname> <parameter>clipboard</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">add_selection_clipboard</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.remove_tag">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_tag</function></funcdef>
     
     <paramdef><classname>GtkTextTag</classname> <parameter>tag</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">apply_tag</function>, 
     <function class="GtkTextBuffer">create_tag</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.remove_tag_by_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_tag_by_name</function></funcdef>
     
     <paramdef><parameter>name</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>start</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>end</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">apply_tag_by_name</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.select_range">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>select_range</function></funcdef>
     
     <paramdef><classname>GtkTextIter</classname> <parameter>ins</parameter></paramdef>
     <paramdef><classname>GtkTextIter</classname> <parameter>bound</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">insert_range</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.set_modified">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_modified</function></funcdef>
     <paramdef>bool <parameter>setting</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">get_modified</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtktextbuffer.method.set_text">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_text</function></funcdef>
     <paramdef>string <parameter>text</parameter></paramdef>
     <paramdef>int <parameter>len</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Replaces the current contents of the textbuffer.
   </shortdesc>
   <desc>
    <para>
    Replaces the current contents of the textbuffer with the contents
    of <parameter>text</parameter>.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">get_text</function>
    </para>

   </desc>
  </method>

 </methods>

 <fields>

  <field id="gtk.gtktextbuffer.field.tag_table" type="ro">
   <fieldname>tag_table</fieldname>
   <fieldtype>GtkTextTagTable</fieldtype>
   <shortdesc>
   </shortdesc>
   <desc>
    <para>
     &seealso;
     <function class="GtkTextBuffer">get_tag_table</function>
    </para>

   </desc>
  </field>

 </fields>

 <signals>

  <signal id="gtk.gtktextbuffer.signal.apply-tag">
   <signalname>apply-tag</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef>GtkTextTag <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.begin-user-action">
   <signalname>begin-user-action</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.changed">
   <signalname>changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.delete-range">
   <signalname>delete-range</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.end-user-action">
   <signalname>end-user-action</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.insert-child-anchor">
   <signalname>insert-child-anchor</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>GtkTextChildAnchor <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.insert-pixbuf">
   <signalname>insert-pixbuf</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GdkPixbuf -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.insert-text">
   <signalname>insert-text</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: gchararray -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>int <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.mark-deleted">
   <signalname>mark-deleted</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef>GtkTextMark <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.mark-set">
   <signalname>mark-set</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>GtkTextMark <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.modified-changed">
   <signalname>modified-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
  <signal id="gtk.gtktextbuffer.signal.remove-tag">
   <signalname>remove-tag</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkTextBuffer <parameter>textbuffer</parameter></paramdef>
     <paramdef>GtkTextTag <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
     <paramdef><!-- was: GtkTextIter -->XXX <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>
  
 </signals>

</classentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
