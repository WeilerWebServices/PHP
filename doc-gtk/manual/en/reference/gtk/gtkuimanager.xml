<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.12 $ -->
<classentry id="gtk.gtkuimanager">
 <classmeta>
  <classtitle>GtkUIManager</classtitle>
  <classparent>GObject</classparent>
  <shortdesc>
   An object for creating menus and toolbars from XML.
  </shortdesc>
  <desc>
    A GtkUIManager object constructs menus and toolbars from an XML description.
    GtkUIManager is used to create a user interfaces consisting of menus and
    toolbars from a UI definition which references one or more action groups.
  </desc>
 </classmeta>

 <constructors>

  <constructor id="gtk.gtkuimanager.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkUIManager</function></funcdef>
    <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Creates a new GtkUIManager object.
   </shortdesc>
   <desc>
    A GtkUIManager object constructs menus and toolbars from an XML description.
   </desc>
  </constructor>

 <constructor id="gtk.gtkuimanager.constructor.new_merge_id">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>GtkUIManager::new_merge_id</function></funcdef>
     
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </constructor>

  </constructors>

 <methods>

  <method id="gtk.gtkuimanager.method.add_ui">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>add_ui</function></funcdef>
     <paramdef>int <parameter>merge_id</parameter></paramdef>
     <paramdef>string <parameter>path</parameter></paramdef>
     <paramdef>string <parameter>name</parameter></paramdef>
     <paramdef>string <parameter>action</parameter></paramdef>
     <paramdef>GtkUIManagerItemType <parameter>type</parameter></paramdef>
     <paramdef>bool <parameter>top</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Adds a new UI element to the specified location.
   </shortdesc>
   <desc>
    <para>
      Adds a UI element of the 
      <enumname>GtkUiManagerItemType</enumname> specified by type to the
      current contents of the ui manager at the location specified by path.
      Use <function class="GtkUiManager">new_merge_id</function> to get an
      unused merge id.
     &seealso;
     <function class="GtkUIManager">get_ui</function>, 
     <function class="GtkUIManager">remove_ui</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.add_ui_from_file">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>add_ui_from_file</function></funcdef>
     <paramdef>string <parameter>filename</parameter></paramdef>
     <paramdef>GError <parameter>error</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Merges a file UI definition.
   </shortdesc>
   <desc>
    This method parses a file containing a UI definition and merges it with the
    current UI definition. If there is an error during the parsing of the file
    it will be place in GError. This method returns a merge id which can be used
    to unmerge the UI with the
    <function class="GtkUiManager">remove_ui</function> method.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.add_ui_from_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>add_ui_from_string</function></funcdef>
     
     <paramdef><parameter>text</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Merges a string UI definition.
   </shortdesc>
   <desc>
    This method parses a string containing a UI definition and merges it with
    the current UI definition. An enclosing &lt;ui&gt; element is added if it is
    missing. This method returns a merge id which can be used to unmerge the UI
    with the <function class="GtkUiManager">remove_ui</function> method.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.ensure_update">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>ensure_update</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Make sure all pending updates have been added.
   </shortdesc>
   <desc>
    This method makes sure that all pending updates to the UI have been
    completed. This may occasionally be necessary, since GtkUiManager updates
    the UI in an idle function. A typical example where this method is useful is
    to enforce that the menubar and toolbar have been added to the main window
    before showing it.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_accel_group">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkAccelGroup <function>get_accel_group</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an associated <classname>GtkAccelGroup</classname>
   </shortdesc>
   <desc>
    This method returns the <classname>GtkAccelGroup</classname> associated
    with the current instance.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_action">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkAction <function>get_action</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Looks up a <classname>GtkAction</classname> by following a path.
   </shortdesc>
   <desc>
    This method looks up a <classname>GtkAction</classname> by following 
    a path. The path consists of the names specified in the XML description 
    of the UI. separated by '/'. Elements that don't have a name or action 
    attribute in the XML (e.g. &lt;popup&gt;) can be addressed by their XML 
    element name (e.g. "popup"). The root element ("/ui") can be omitted in
    the path.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_action_groups">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_action_groups</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns associated <classname>GtkActionGroup</classname> objects.
   </shortdesc>
   <desc>
    This method returns the list of associated GtkActionGroup objects.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_add_tearoffs">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_add_tearoffs</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns <literal>true</literal>
    if regular menus will have tearoff menu items.
   </shortdesc>
   <desc>
    <para>
     If true, regular menus generated will have tearoff menu items.
     &seealso;
     <function class="GtkUIManager">set_add_tearoffs</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_toplevels">
   <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get_toplevels</function></funcdef>
     <paramdef>GtkUIManagerItemType <parameter>types</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Obtains a list of all toplevel widgets of the requested types.
   </shortdesc>
   <desc>
    Returns a list of all specified the types of toplevel widgets to include.
    Allowed types are: 
    <optionname enum="GtkUiManagerItemType">Gtk::UI_MANAGER_MENUBAR</optionname>
    ,<optionname enum="GtkUiManagerItemType">Gtk::UI_MANAGER_TOOLBAR</optionname> 
    and <optionname enum="GtkUiManagerItemType">Gtk::UI_MANAGER_POPUP</optionname>.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_ui">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_ui</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Gets a string containing an XML representation of the merged UI.
   </shortdesc>
   <desc>
    <para>
      This method creates a UI definition of the merged UI and returns it as an
      XML string.
     &seealso;
     <function class="GtkUIManager">add_ui</function>, 
     <function class="GtkUIManager">remove_ui</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.get_widget">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkWidget <function>get_widget</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Looks up a widget by following a path.
   </shortdesc>
   <desc>
    This method looks up a widget by following a path. The path consists of 
    the names specified in the XML description of the UI. separated by '/'.
    Elements that don't have a name or action attribute in the XML (e.g. 
    &lt;popup&gt;) can be addressed by their XML element name (e.g. "popup").
    The root element ("/ui") can be omitted in the path.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.insert_action_group">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>insert_action_group</function></funcdef>
     <paramdef>GtkActionGroup <parameter>action_group</parameter></paramdef>
     <paramdef>int <parameter>pos</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Inserts a <classname>GtkActionGroup</classname> at a location.
   </shortdesc>
   <desc>
    <para>
      This method inserts a <classname>GtkActionGroup</classname> into the
      list of associated action groups at the position specified by 
      <literal>pos</literal>. Actions in earlier groups hide actions with 
      the same name in later groups. If pos is negative the group
      is inserted at the end of the list.
     &seealso;
     <function class="GtkUIManager">remove_action_group</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.new_merge_id">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>new_merge_id</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns a merge id for use when adding a ui component.
   </shortdesc>
   <desc>
    Returns an unused merge id, suitable for use with
    <function class="GtkUiManager">add_ui</function>.
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.remove_action_group">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_action_group</function></funcdef>
     <paramdef>GtkActionGroup <parameter>action_group</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes the par of the ui definition content.
   </shortdesc>
   <desc>
    <para>
     Using a merge id returned by 
     <function class="GtkUiManager">add_ui</function>, 
     <function class="GtkUiManager">add_ui_from_string</function> or
     <function class="GtkUiManager">add_ui_from_file</function> methods
     and removes the part of the UI content identified by the id.
     &seealso;
     <function class="GtkUIManager">insert_action_group</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.remove_ui">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>remove_ui</function></funcdef>
     <paramdef>int <parameter>merge_id</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove part of the ui description.
   </shortdesc>
   <desc>
    <para>
     This method unmerges the part of the ui manager content identified by <literal>merge_id</literal>.
     &seealso;
     <function class="GtkUIManager">add_ui</function>, 
     <function class="GtkUIManager">get_ui</function>
    </para>

   </desc>
  </method>

  <method id="gtk.gtkuimanager.method.set_add_tearoffs">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_add_tearoffs</function></funcdef>
     <paramdef>bool <parameter>add_tearoffs</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Controls if regular menu items will have tearoffs.
   </shortdesc>
   <desc>
    <para>
     If set to <literal>true</literal> regular menus generated by
     <classname>GtkUIManager</classname> will have tearoff
     menu items. Note that this only affects regular menus. Generated popup
     menus never have tearoff menu items.
     &seealso;
     <function class="GtkUIManager">get_add_tearoffs</function>
    </para>
   </desc>
  </method>

 </methods>

 <signals>

  <signal id="gtk.gtkuimanager.signal.actions-changed">
   <signalname>actions-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when the set of actions changes.
   </shortdesc>
   <desc>
    This signal is emitted whenever the set of actions changes. One items, the
    <classname>GtkUIManager</classname> instance, is passed to a registered
    callback.
   </desc>
  </signal>
  
  <signal id="gtk.gtkuimanager.signal.add-widget">
   <signalname>add-widget</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted for each generated menubar and toolbar
   </shortdesc>
   <desc>
    This signal is emitted for each generated menubar and toolbar. It is not
    emitted for generated popup menus, which can be obtained by
    <function class="GtkUiManager">get_widget</function>.  Two items, the
    <classname>GtkUIManager</classname> instance and the
    widget added are passed to a registered callback.
   </desc>
  </signal>
  
  <signal id="gtk.gtkuimanager.signal.connect-proxy">
   <signalname>connect-proxy</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
     <paramdef>GtkAction <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when a widget is connected to an action.
   </shortdesc>
   <desc>
    The <literal>connect-proxy</literal> signal is emitted after connecting a
    proxy to an action in the group. This is intended for simple customizations
    for which a custom action class would be too clumsy, e.g. showing tooltips
    for menuitems in the statusbar. Three items, the
    <classname>GtkUIManager</classname> instance, the action and the proxy
    widget are passed to a registered callback.
   </desc>
  </signal>
  
  <signal id="gtk.gtkuimanager.signal.disconnect-proxy">
   <signalname>disconnect-proxy</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
     <paramdef>GtkAction <parameter>UNKNOWN</parameter></paramdef>
     <paramdef>GtkWidget <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    This signal is emitted when a widget is disconnected from an action.
   </shortdesc>
   <desc>
    The <literal>disconnect-proxy</literal> signal is emitted after
    disconnecting a proxy from an action in the group. Three items, the 
    <classname>GtkUIManager</classname> instance, the action and
    the proxy widget are passed to a registered callback.
   </desc>
  </signal>
  
  <signal id="gtk.gtkuimanager.signal.post-activate">
   <signalname>post-activate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
     <paramdef>GtkAction <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emitted after action is activated.
   </shortdesc>
   <desc>
    The <literal>post-activate</literal> signal is emitted after action is
    activated. This signal is intended for applications to get notification
    after any action is activated. Two items, the 
    <classname>GtkUIManager</classname> instance and the action are passed
    to a registered callback.
   </desc>
  </signal>
  
  <signal id="gtk.gtkuimanager.signal.pre-activate">
   <signalname>pre-activate</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <cbfunction>callback</cbfunction></funcdef>
     <paramdef>GtkUIManager <parameter>uimanager</parameter></paramdef>
     <paramdef>GtkAction <parameter>UNKNOWN</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emitted before action is activated.
   </shortdesc>
   <desc>
    The <literal>pre-activate</literal> signal is emitted before action is
    activated. This signal is intended for applications to get notification
    before any action is activated. Two items, the
    <classname>GtkUIManager</classname> instance and the action are passed to
    a registered callback.
   </desc>
  </signal>
  
 </signals>

</classentry>
