<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision: 1.23 $ -->
<enums id="gtk.gtkenum">

 <enum id="gtk.enum.accelflags">
  <enumname>GtkAccelFlags</enumname>
  <desc>
   <simpara>

   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ACCEL_VISIBLE</optionname>
   <shortdesc>
    Display in GtkAccelLabel?
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>?</value>
   <optionname>Gtk::ACCEL_SIGNAL_VISIBLE</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ACCEL_LOCKED</optionname>
   <shortdesc>
    Is it removable?
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::ACCEL_MASK</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.anchortype">
  <enumname>GtkAnchorType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::ANCHOR_CENTER</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ANCHOR_NORTH</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ANCHOR_NORTH_WEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::ANCHOR_NORTH_EAST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::ANCHOR_SOUTH</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::ANCHOR_SOUTH_WEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::ANCHOR_SOUTH_EAST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::ANCHOR_WEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::ANCHOR_EAST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ANCHOR_N</optionname>
   <shortdesc>
   
   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_NORTH</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ANCHOR_NW</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_NORTH_WEST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::ANCHOR_NE</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_NORTH_EAST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::ANCHOR_S</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_SOUTH</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::ANCHOR_SW</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_SOUTH_WEST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::ANCHOR_SE</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_SOUTH_EAST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::ANCHOR_W</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_WEST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::ANCHOR_E</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>

  <enumoption>
   <value> </value>
   <optionname>Gtk::ANCHOR_EAST</optionname>
   <shortdesc>

   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.argflags">
  <enumname>GtkArgFlags</enumname>
  <desc>
   <simpara>
    GtkArgFlags is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    Possible flags indicating how an argument should be treated. Deprecated in favor of GParamSpec features.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ARG_READABLE</optionname>
   <shortdesc>
    The argument is readable. (i.e. can be queried).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ARG_WRITABLE</optionname>
   <shortdesc>
    The argument is writable. (i.e. settable).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::ARG_CONSTRUCT</optionname>
   <shortdesc>
    The argument needs construction.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::ARG_CONSTRUCT_ONLY</optionname>
   <shortdesc>
    The argument needs construction (and will be set once during object
    creation), but is otherwise cannot be set. Hence this flag is not
    allowed with <literal>Gtk::ARG_WRITABLE</literal>, and is redundant
    with <literal>Gtk::ARG_CONSTRUCT</literal>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>16</value>
   <optionname>Gtk::ARG_CHILD_ARG</optionname>
   <shortdesc>
    An argument type that applies to (and may be different for) each child. 
    Used by <classname>GtkContainer</classname>.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.arrowtype">
  <enumname>GtkArrowType</enumname>
  <desc>
   <simpara>
    Used to indicate the direction in which a
    <classname>GtkArrow</classname> should point.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::ARROW_UP</optionname>
   <shortdesc>
    Represents an upward pointing arrow.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ARROW_DOWN</optionname>
   <shortdesc>
    Represents a downward pointing arrow
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ARROW_LEFT</optionname>
   <shortdesc>
    Represents a left pointing arrow.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::ARROW_RIGHT</optionname>
   <shortdesc>
    Represents a right pointing arrow.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.attachoptions">
  <enumname>GtkAttachOptions</enumname>
  <desc>
   <simpara>
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::EXPAND</optionname>
   <shortdesc>
    The widget should expand to take up any extra 
    space in its container that has been allocated.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SHRINK</optionname>
   <shortdesc>
    The widget should shrink as and when possible.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::FILL</optionname>
   <shortdesc>
    The widget should fill the space allocated to it.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.buttonaction">
  <enumname>GtkButtonAction</enumname>
  <desc>
   <simpara>
    GtkButtonAction is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    Values for specifying what mouse button events a CList will react to.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::BUTTON_IGNORED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::BUTTON_SELECTS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::BUTTON_DRAGS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::BUTTON_EXPANDS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.buttonboxstyle">
  <enumname>GtkButtonBoxStyle</enumname>
  <desc>
   <simpara>
    Used to dictate the style that a <classname>GtkButtonBox</classname>
    uses to layout the buttons it contains. (&seealso;
    <classname>GtkVButtonBox</classname> and <classname>GtkHButtonBox</classname>).
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::BUTTONBOX_DEFAULT_STYLE</optionname>
   <shortdesc>
    Default packing.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::BUTTONBOX_SPREAD</optionname>
   <shortdesc>
    Buttons are evenly spread across the ButtonBox.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::BUTTONBOX_EDGE</optionname>
   <shortdesc>
    Buttons are placed at the edges of the ButtonBox.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::BUTTONBOX_START</optionname>
   <shortdesc>
    Buttons are grouped towards the start of box, 
    (on the left for a HBox, or the top for a VBox).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::BUTTONBOX_END</optionname>
   <shortdesc>
    Buttons are grouped towards the end of a box, 
    (on the right for a HBox, or the bottom for a VBox)
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.buttonstype">
  <enumname>GtkButtonsType</enumname>
  <desc>
   <para>
    Prebuilt sets of buttons for the dialog. If none of these choices are
    appropriate, simply use <literal>Gtk::BUTTONS_NONE</literal> then call
    <function class="GtkDialog">add_buttons</function>.
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::BUTTONS_NONE</optionname>
   <shortdesc>
    No buttons at all.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::BUTTONS_OK</optionname>
   <shortdesc>
    An OK button.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::BUTTONS_CLOSE</optionname>
   <shortdesc>
    A Close button.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::BUTTONS_CANCEL</optionname>
   <shortdesc>
    A Cancel button.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::BUTTONS_YES_NO</optionname>
   <shortdesc>
    Yes and No buttons.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::BUTTONS_OK_CANCEL</optionname>
   <shortdesc>
    OK and Cancel buttons.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.calendardisplayoptions">
  <enumname>GtkCalendarDisplayOptions</enumname>
  <desc>
   <para>
    These options can be used to influence the display and behaviour of a 
    <classname>GtkCalendar</classname>.
   </para>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CALENDAR_SHOW_HEADING</optionname>
   <shortdesc>
    Specifies that the month and year should be displayed.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CALENDAR_SHOW_DAY_NAMES</optionname>
   <shortdesc>
    Specifies that three letter day descriptions should be present.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::CALENDAR_NO_MONTH_CHANGE</optionname>
   <shortdesc>
    Prevents the user from switching months with the calendar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::CALENDAR_SHOW_WEEK_NUMBERS</optionname>
   <shortdesc>
    Displays each week numbers of the current year, down the left 
    side of the calendar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>16</value>
   <optionname>Gtk::CALENDAR_WEEK_START_MONDAY</optionname>
   <shortdesc>
    Since GTK+ 2.4, this option is deprecated and ignored by GTK+. 
    The information on which day the calendar week starts is derived from the locale.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.celltype">
  <enumname>GtkCellType</enumname>
  <desc>
   <simpara>
    GtkCellType is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    Identifies the type of element in the current cell of the <classname>GtkCList</classname>.
    Cells can contain text, pixmaps, or both. Unfortunately 
    support for <literal>GTK_CELL_WIDGET</literal> was never completed.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CELL_EMPTY</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CELL_RENDERER_SELECTED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CELL_RENDERER_PRELIT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CELL_PIXTEXT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::CELL_RENDERER_INSENSITIVE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::CELL_RENDERER_SORTED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>16</value>
   <optionname>Gtk::CELL_RENDERER_FOCUSED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.clistdragpos">
  <enumname>GtkCListDragPos</enumname>
  <desc>
   <simpara>
    GtkCListDragPos is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    An enumeration for drag operations.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CLIST_DRAG_NONE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CLIST_DRAG_BEFORE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CLIST_DRAG_INTO</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CLIST_DRAG_AFTER</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.cornertype">
  <enumname>GtkCornerType</enumname>
  <desc>
   <simpara>
    Specifies which corner a child widget should be placed 
    in when packed into a <classname>GtkScrolledWindow</classname>.
    This is effectively the opposite of where the scroll bars are placed.
   </simpara>
   <para>
    <graphic fileref="&directory.images;/reference/gtk/gtkscrolledwindow/placement.png"/>
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CORNER_TOP_LEFT</optionname>
   <shortdesc>
    Place the scrollbars on the right and bottom of the widget (default behaviour).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CORNER_BOTTOM_LEFT</optionname>
   <shortdesc>
    Place the scrollbars on the top and right of the widget.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CORNER_TOP_RIGHT</optionname>
   <shortdesc>
    Place the scrollbars on the left and bottom of the widget.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CORNER_BOTTOM_RIGHT</optionname>
   <shortdesc>
    Place the scrollbars on the top and left of the widget.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.ctreepos">
  <enumname>GtkCTreePos</enumname>
  <desc>
   <simpara>
    GtkCListDragPos is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    A value specifying the position of a new node relative to an old one.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CTREE_POS_BEFORE</optionname>
   <shortdesc>
    As a sibling, before the specified node.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CTREE_POS_AS_CHILD</optionname>
   <shortdesc>
    As a child of the specified node.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CTREE_POS_AFTER</optionname>
   <shortdesc>
    As a sibling, after the specified node.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.ctreelinestyle">
  <enumname>GtkCTreeLineStyle</enumname>
  <desc>
   <simpara>
    GtkCTreeLineStyle is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    The appearance of the lines in the tree graphics.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::GTK_CTREE_LINES_NONE</optionname>
   <shortdesc>
    No lines.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::GTK_CTREE_LINES_SOLID</optionname>
   <shortdesc>
    Solid lines.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::GTK_CTREE_LINES_DOTTED</optionname>
   <shortdesc>
    Dotted lines.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CTREE_LINES_TABBED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.ctreeexpanderstyle">
  <enumname>GtkCTreeExpanderStyle</enumname>
  <desc>
   <simpara>
    GtkCTreeExpanderStyle is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    The appearance of the expander buttons, i.e. the small buttons 
    which expand or contract parts of the tree when pressed.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CTREE_EXPANDER_NONE</optionname>
   <shortdesc>
    No expanders.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CTREE_EXPANDER_SQUARE</optionname>
   <shortdesc>
    Square expanders.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CTREE_EXPANDER_TRIANGLE</optionname>
   <shortdesc>
    Triangular expanders.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CTREE_EXPANDER_CIRCULAR</optionname>
   <shortdesc>
    Round expanders.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.ctreeexpansiontype">
  <enumname>GtkCTreeExpansionType</enumname>
  <desc>
   <simpara>
    GtkCTreeExpansionType is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    How to expand or collapse a part of a tree.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CTREE_EXPANSION_EXPAND</optionname>
   <shortdesc>
    Expand this node.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CTREE_EXPANSION_EXPAND_RECURSIVE</optionname>
   <shortdesc>
    Expand this node and everything below it in the hierarchy.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CTREE_EXPANSION_COLLAPSE</optionname>
   <shortdesc>
    Collapse this node.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::CTREE_EXPANSION_COLLAPSE_RECURSIVE</optionname>
   <shortdesc>
    Collapse this node and everything below it in the hierarchy.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::CTREE_EXPANSION_TOGGLE</optionname>
   <shortdesc>
    Toggle this node (i.e. expand if collapsed and vice versa).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::CTREE_EXPANSION_TOGGLE_RECURSIVE</optionname>
   <shortdesc>
    Toggle this node and everything below it in the hierarchy.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.curvetype">
  <enumname>GtkCurveType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::CURVE_TYPE_LINEAR</optionname>
   <shortdesc>
    Linear interpolation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::CURVE_TYPE_SPLINE</optionname>
   <shortdesc>
    Spline interpolation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CURVE_TYPE_FREE</optionname>
   <shortdesc>
    Free form curve.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.deletetype">
  <enumname>GtkDeleteType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::DELETE_CHARS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::DELETE_WORD_ENDS</optionname>
   <shortdesc>
    Delete only the portion of the word to the
    left/right of cursor if we're in the middle
    of a word.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::DELETE_WORDS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::DELETE_DISPLAY_LINES</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::DELETE_DISPLAY_LINE_ENDS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::DELETE_PARAGRAPH_ENDS</optionname>
   <shortdesc>
    Like C-k in Emacs (or its reverse).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::DELETE_PARAGRAPHS</optionname>
   <shortdesc>
    C-k in pico, kill whole line.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::DELETE_WHITESPACE</optionname>
   <shortdesc>
    M-\ in Emacs.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.destdefaults">
  <enumname>GtkDestDefaults</enumname>
  <desc>
   <simpara>
    The GtkDestDefaults enumeration specifies the various types of action 
    that will be taken on behalf of the user for a drag destination site.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::DEST_DEFAULT_MOTION</optionname>
   <shortdesc>
    If set for a widget, GTK+, during a drag over this widget will check 
    if the drag matches this widget's list of possible targets and actions. 
    GTK+ will then call gdk_drag_status() as appropriate.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::DEST_DEFAULT_HIGHLIGHT</optionname>
   <shortdesc>
    If set for a widget, GTK+ will draw a highlight on this widget as long
    as a drag is over this widget and the widget drag format and action 
    are acceptable.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::DEST_DEFAULT_DROP</optionname>
   <shortdesc>
    If set for a widget, when a drop occurs, GTK+ will will check if the 
    drag matches this widget's list of possible targets and actions. 
    If so, GTK+ will call gtk_drag_get_data() on behalf of the widget. 
    Whether or not the drop is successful, GTK+ will call gtk_drag_finish(). 
    If the action was a move, then if the drag was successful, then 
    <literal>true</literal> will be passed for the delete parameter to
    gtk_drag_finish().
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::DEST_DEFAULT_ALL</optionname>
   <shortdesc>
    If set, specifies that all default actions should be taken.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.dialogflags">
  <enumname>GtkDialogFlags</enumname>
  <desc>
   <simpara>
    Flags used to influence dialog construction.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::DIALOG_MODAL</optionname>
   <shortdesc>
    Make the constructed dialog modal, see <function class="GtkWidget">set_modal</function>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::DIALOG_DESTROY_WITH_PARENT</optionname>
   <shortdesc>
    Destroy the dialog when its parent is destroyed, see 
    <function class="GtkWindow">set_destroy_with_parent</function>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::DIALOG_NO_SEPARATOR</optionname>
   <shortdesc>
    Don't put a separator between the action area and the dialog content.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.directiontype">
  <enumname>GtkDirectionType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::DIR_TAB_FORWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::DIR_TAB_BACKWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::DIR_UP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::DIR_DOWN</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::DIR_LEFT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::DIR_RIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.expanderstyle">
  <enumname>GtkExpanderStyle</enumname>
  <desc>
   <simpara>
    Used to specify the style of the expanders drawn by a 
    <classname>GtkTreeView</classname>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::EXPANDER_COLLAPSED</optionname>
   <shortdesc>
    The style used for a collapsed subtree.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::EXPANDER_SEMI_COLLAPSED</optionname>
   <shortdesc>
    Intermediate style used during animation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::EXPANDER_SEMI_EXPANDED</optionname>
   <shortdesc>
    Intermediate style used during animation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::EXPANDER_EXPANDED</optionname>
   <shortdesc>
    The style used for an expanded subtree.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.filechoosererror">
  <enumname>GtkFileChooserError</enumname>
  <desc>
   <simpara>
    These identify the various errors that can occur while calling 
    <classname>GtkFileChooser</classname> functions.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::FILE_CHOOSER_ERROR_NONEXISTENT</optionname>
   <shortdesc>
    Indicates that a file does not exist.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::FILE_CHOOSER_ERROR_BAD_FILENAME</optionname>
   <shortdesc>
    Indicates a malformed filename.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.filechooseraction">
  <enumname>GtkFileChooserAction</enumname>
  <desc>
   <simpara>
    Describes whether a <classname>GtkFileChooser</classname> is being 
    used to open existing files or to save to a possibly new file.
   </simpara>
  </desc>

  <enumoption>
   <value></value>
   <optionname>Gtk::FILE_CHOOSER_ACTION_OPEN</optionname>
   <shortdesc>
    Indicates open mode. The file chooser will only let the user pick an existing file.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value></value>
   <optionname>Gtk::FILE_CHOOSER_ACTION_SAVE</optionname>
   <shortdesc>
    Indicates save mode. The file chooser will let the user pick an existing file, 
    or type in a new filename.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value></value>
   <optionname>Gtk::FILE_CHOOSER_ACTION_SELECT_FOLDER</optionname>
   <shortdesc>
    Indicates an Open mode for selecting folders. The file chooser will let the user 
    pick an existing folder.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value></value>
   <optionname>Gtk::FILE_CHOOSER_ACTION_CREATE_FOLDER</optionname>
   <shortdesc>
    Indicates a mode for creating a new folder. The file chooser will let the user 
    name an existing or new folder.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.filefilterflags">
  <enumname>GtkFileFilterFlags</enumname>
  <desc>
   <simpara>
    These flags indicate what parts of a GtkFileFilterInfo struct 
    are filled or need to be filled.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::FILE_FILTER_FILENAME</optionname>
   <shortdesc>
    The filename of the file being tested.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::FILE_FILTER_URI</optionname>
   <shortdesc>
    The URI for the file being tested.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::FILE_FILTER_DISPLAY_NAME</optionname>
   <shortdesc>
    The string that will be used to display the file in the file chooser.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::FILE_FILTER_MIME_TYPE</optionname>
   <shortdesc>
    The mime type of the file.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.iconlookupflags">
  <enumname>GtkIconLookupFlags</enumname>
  <desc>
   <simpara>
    Used to specify options for <function class="GtkIconTheme">lookup_icon</function>.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ICON_LOOKUP_NO_SVG</optionname>
   <shortdesc>
    Never return SVG icons, even if gdk-pixbuf supports them. This flag cannot
    be used in conjunction with <literal>Gtk::ICON_LOOKUP_FORCE_SVG</literal>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ICON_LOOKUP_FORCE_SVG</optionname>
   <shortdesc>
    Return SVG icons, even if gdk-pixbuf doesn't support them. This flag
    cannot be used together with <literal>Gtk::ICON_LOOKUP_NO_SVG</literal>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::ICON_LOOKUP_USE_BUILTIN</optionname>
   <shortdesc>
    When passed to <function class="GtkIconTheme">lookup_icon</function> includes 
    builtin icons as well as files. For a built-in icon, 
    <function class="GtkIconInfo">get_filename</function> returns
    <literal>null</literal> and you need to call
    <function class="GtkIconInfo">get_builtin_pixbuf</function>.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.iconthemeerror">
  <enumname>GtkIconThemeError</enumname>
  <desc>
   <simpara>
    Error codes for GtkIconTheme operations.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::ICON_THEME_NOT_FOUND</optionname>
   <shortdesc>
    The icon specified does not exist in the theme.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ICON_THEME_FAILED</optionname>
   <shortdesc>
    An unspecified error occurred.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.iconsize">
  <enumname>GtkIconSize</enumname>
  <desc>
   <simpara>
    Built-in stock icon sizes.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::ICON_SIZE_INVALID</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ICON_SIZE_MENU</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::ICON_SIZE_SMALL_TOOLBAR</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::ICON_SIZE_LARGE_TOOLBAR</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::ICON_SIZE_BUTTON</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::ICON_SIZE_DND</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::ICON_SIZE_DIALOG</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.imstatusstyle">
  <enumname>GtkIMStatusStyle</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::IM_STATUS_NOTHING</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::IM_STATUS_CALLBACK</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::IM_STATUS_NONE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.imagetype">
  <enumname>GtkImageType</enumname>
  <desc>
   <para>
    Describes the image data representation used by a
    <classname>GtkImage</classname>. If you want to get the image from the
    widget, you can only get the currently stored representation. For example,
    if the <function class="GtkImage">get_storage_type</function> returns
    <literal>Gtk::IMAGE_PIXBUF</literal>, then you can call
    <function class="GtkImage">get_pixbuf</function> but not
    <function class="GtkImage">get_stock</function>. <!-- FIXME - this method isn't for real, is it? -->
    For empty images, you can request any storage type (call any of the "get"
    functions), but they will all return <literal>null</literal> values.
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::IMAGE_EMPTY</optionname>
   <shortdesc>
    There is no image displayed by the widget.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::IMAGE_PIXMAP</optionname>
   <shortdesc>
    The widget contains a <classname>GdkPixmap</classname>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::IMAGE_IMAGE</optionname>
   <shortdesc>
    The widget contains a <classname>GdkImage</classname>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::IMAGE_PIXBUF</optionname>
   <shortdesc>
    The widget contains a <classname>GdkPixbuf</classname>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::IMAGE_STOCK</optionname>
   <shortdesc>
    The widget contains a stock icon name
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::IMAGE_ICON_SET</optionname>
   <shortdesc>
    The widget contains a <classname>GtkIconSet</classname>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::IMAGE_ANIMATION</optionname>
   <shortdesc>
    The widget contains a <classname>GdkPixbufAnimation</classname>.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::IMAGE_ICON_NAME</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.justification">
  <enumname>GtkJustification</enumname>
  <desc>
   <simpara>
    Used for justifying the text inside a <classname>GtkLabel</classname>
    widget. (See also <classname>GtkAlignment</classname>).
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::JUSTIFY_LEFT</optionname>
   <shortdesc>
    The text is placed at the left edge of the label.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::JUSTIFY_RIGHT</optionname>
   <shortdesc>
    The text is placed at the right edge of the label.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::JUSTIFY_CENTER</optionname>
   <shortdesc>
    The text is placed in the center of the label.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::JUSTIFY_FILL</optionname>
   <shortdesc>
    The text is placed is distributed across the label.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.matchtype">
  <enumname>GtkMatchType</enumname>
  <desc>
   <simpara>
    GtkMatchType is deprecated and should not be used in newly-written code.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::MATCH_ALL</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::MATCH_ALL_TAIL</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::MATCH_HEAD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::MATCH_TAIL</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::MATCH_EXACT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::MATCH_LAST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.menudirectiontype">
  <enumname>GtkMenuDirectionType</enumname>
  <desc>
   <simpara>
    An enumeration representing directional movements within a menu.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::MENU_DIR_PARENT</optionname>
   <shortdesc>
    To the parent menu shell.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::MENU_DIR_CHILD</optionname>
   <shortdesc>
    To the submenu, if any, associated with the item.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::MENU_DIR_NEXT</optionname>
   <shortdesc>
    To the next menu item.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::MENU_DIR_PREV</optionname>
   <shortdesc>
    To the previous menu item.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.messagetype">
  <enumname>GtkMessageType</enumname>
  <desc>
   <simpara>
    The type of message being displayed in the dialog.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::MESSAGE_INFO</optionname>
   <shortdesc>
    Informational message
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::MESSAGE_WARNING</optionname>
   <shortdesc>
    Nonfatal warning message
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::MESSAGE_QUESTION</optionname>
   <shortdesc>
    Question requiring a choice
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::MESSAGE_ERROR</optionname>
   <shortdesc>
    Fatal error message
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.metrictype">
  <enumname>GtkMetricType</enumname>
  <desc>
   <simpara>
    Used to indicate which metric is used by a <classname>GtkRuler</classname>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PIXELS</optionname>
   <shortdesc>
    Pixels.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::INCHES</optionname>
   <shortdesc>
    Inches.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::CENTIMETERS</optionname>
   <shortdesc>
    Centimeters.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.movementstep">
  <enumname>GtkMovementStep</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::MOVEMENT_LOGICAL_POSITIONS</optionname>
   <shortdesc>
    Move by forward/back graphemes.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::MOVEMENT_VISUAL_POSITIONS</optionname>
   <shortdesc>
    Move by left/right graphemes.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::MOVEMENT_WORDS</optionname>
   <shortdesc>
    Move by forward/back words.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::MOVEMENT_DISPLAY_LINES</optionname>
   <shortdesc>
    Move up/down lines (wrapped lines).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::MOVEMENT_DISPLAY_LINE_ENDS</optionname>
   <shortdesc>
    Move up/down lines (wrapped lines).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::MOVEMENT_PARAGRAPHS</optionname>
   <shortdesc>
    Move up/down paragraphs (newline-ended lines).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::MOVEMENT_PARAGRAPH_ENDS</optionname>
   <shortdesc>
    Move to either end of a paragraph.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::MOVEMENT_PAGES</optionname>
   <shortdesc>
    Move by pages.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::MOVEMENT_BUFFER_ENDS</optionname>
   <shortdesc>
    Move to ends of the buffer.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>9</value>
   <optionname>Gtk::MOVEMENT_HORIZONTAL_PAGES</optionname>
   <shortdesc>
    Move horizontally by pages.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.objectflags">
  <enumname>GtkObjectFlags</enumname>
  <desc>
   <simpara>
    Gives information about the state of the object.
   </simpara>
  </desc>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::IN_DESTRUCTION</optionname>
   <shortdesc>
    The object is currently being destroyed. This is used internally 
    by GTK+ to prevent reinvocations during destruction.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::FLOATING</optionname>
   <shortdesc>
    The object is orphaned. Objects that take strong hold of an object 
    may <function class="GtkObject">sink</function> it, after obtaining their 
    own references, if they believe they are nearly primary ownership of 
    the object. GTK_CONNECTED: signals are connected to this object.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::RESERVED_1</optionname>
   <shortdesc>
    Reserved for future use.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::RESERVED_2</optionname>
   <shortdesc>
    Reserved for future use.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.orientation">
  <enumname>GtkOrientation</enumname>
  <desc>
   <simpara>
    Represents the orientation of widgets which can be switched 
    between horizontal and vertical orientation on the fly, 
    like <classname>GtkToolbar</classname>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::ORIENTATION_HORIZONTAL</optionname>
   <shortdesc>
    The widget is in horizontal orientation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::ORIENTATION_VERTICAL</optionname>
   <shortdesc>
    The widget is in vertical orientation.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.packtype">
  <enumname>GtkPackType</enumname>
  <desc>
   <simpara>
    Represents the packing location GtkBox children. 
    (See: <classname>GtkVBox</classname>, <classname>GtkHBox</classname>, 
    and <classname>GtkButtonBox</classname>).
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PACK_START</optionname>
   <shortdesc>
    The child is packed into the start of the box.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::PACK_END</optionname>
   <shortdesc>
    The child is packed into the end of the box.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.pathprioritytype">
  <enumname>GtkPathPriorityType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PATH_PRIO_LOWEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::PATH_PRIO_GTK</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::PATH_PRIO_APPLICATION</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>10</value>
   <optionname>Gtk::PATH_PRIO_THEME</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>12</value>
   <optionname>Gtk::PATH_PRIO_RC</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>15</value>
   <optionname>Gtk::PATH_PRIO_HIGHEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.pathtype">
  <enumname>GtkPathType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PATH_WIDGET</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value></value>
   <optionname>Gtk::PATH_WIDGET_CLASS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value></value>
   <optionname>Gtk::PATH_CLASS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.policytype">
  <enumname>GtkPolicyType</enumname>
  <desc>
   <simpara>
    Determines when a scroll bar will be visible.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::POLICY_ALWAYS</optionname>
   <shortdesc>
    The scrollbar is always visible.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::POLICY_AUTOMATIC</optionname>
   <shortdesc>
    The scrollbar will appear and disappear as necessary. 
    For example, when all of a <classname>GtkCList</classname> can not be seen.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::POLICY_NEVER</optionname>
   <shortdesc>
    The scrollbar will never appear.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.positiontype">
  <enumname>GtkPositionType</enumname>
  <desc>
   <simpara>
    Describes which edge of a widget a certain feature is 
    positioned at, e.g. the tabs of a <classname>GtkNotebook</classname>, 
    the handle of a <classname>GtkHandleBox</classname> or the label 
    of a <classname>GtkScale</classname>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::POS_LEFT</optionname>
   <shortdesc>
    The feature is at the left edge.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::POS_RIGHT</optionname>
   <shortdesc>
    The feature is at the right edge.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::POS_TOP</optionname>
   <shortdesc>
    The feature is at the top edge.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::POS_BOTTOM</optionname>
   <shortdesc>
    The feature is at the bottom edge.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.previewtype">
  <enumname>GtkPreviewType</enumname>
  <desc>
   <simpara>
    GtkPreviewType is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    An enumeration which describes whether a preview contains grayscale or red-green-blue data.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PREVIEW_COLOR</optionname>
   <shortdesc>
    The preview contains red-green-blue data.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::PREVIEW_GRAYSCALE</optionname>
   <shortdesc>
    The preview contains grayscale data.
   </shortdesc>
  </enumoption>
 </enum>

 <enum id="gtk.enum.progressbarstyle">
  <enumname>GtkProgressBarStyle</enumname>
  <desc>
   <simpara>
    An enumeration representing the styles for drawing the progress bar.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PROGRESS_CONTINUOUS</optionname>
   <shortdesc>
    The progress bar grows in a smooth, continuous manner.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::PROGRESS_DISCRETE</optionname>
   <shortdesc>
    The progress bar grows in discrete, visible blocks.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.progressbarorientation">
  <enumname>GtkProgressBarOrientation</enumname>
  <desc>
   <simpara>
    An enumeration representing the styles for drawing the progress bar.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::PROGRESS_LEFT_TO_RIGHT</optionname>
   <shortdesc>
    A horizontal progress bar growing from left to right.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::PROGRESS_RIGHT_TO_LEFT</optionname>
   <shortdesc>
    A horizontal progress bar growing from right to left.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::PROGRESS_BOTTOM_TO_TOP</optionname>
   <shortdesc>
    A vertical progress bar growing from bottom to top.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::PROGRESS_TOP_TO_BOTTOM</optionname>
   <shortdesc>
    A vertical progress bar growing from top to bottom.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.rcflags">
  <enumname>GtkRcFlags</enumname>
  <desc>
   <simpara>
    The GtkRcFlags enumeration is used as a bitmask to 
    specify which fields of a <classname>GtkRcStyle</classname>
    have been set for each state.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::RC_FG</optionname>
   <shortdesc>
    If present, the foreground color has been set for this state.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::RC_BG</optionname>
   <shortdesc>
    If present, the background color has been set for this state.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::RC_TEXT</optionname>
   <shortdesc>
    If present, the text color has been set for this state.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::RC_BASE</optionname>
   <shortdesc>
    If present, the base color has been set for this state.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.rctokentype">
  <enumname>GtkRcTokenType</enumname>
  <desc>
   <simpara>
    The GtkRcTokenType enumeration represents the tokens in the RC file. 
    It is exposed so that theme engines can reuse these tokens when 
    parsing the theme-engine specific portions of a RC file.
   </simpara>
  </desc>

  <enumoption>
   <value>270</value>
   <optionname>Gtk::RC_TOKEN_INVALID</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>271</value>
   <optionname>Gtk::RC_TOKEN_INCLUDE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>272</value>
   <optionname>Gtk::RC_TOKEN_NORMAL</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>273</value>
   <optionname>Gtk::RC_TOKEN_ACTIVE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>274</value>
   <optionname>Gtk::RC_TOKEN_PRELIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>275</value>
   <optionname>Gtk::RC_TOKEN_SELECTED</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>276</value>
   <optionname>Gtk::RC_TOKEN_INSENSITIVE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>277</value>
   <optionname>Gtk::RC_TOKEN_FG</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>278</value>
   <optionname>Gtk::RC_TOKEN_BG</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>279</value>
   <optionname>Gtk::RC_TOKEN_TEXT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>280</value>
   <optionname>Gtk::RC_TOKEN_BASE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>281</value>
   <optionname>Gtk::RC_TOKEN_XTHICKNESS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>282</value>
   <optionname>Gtk::RC_TOKEN_YTHICKNESS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>283</value>
   <optionname>Gtk::RC_TOKEN_FONT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>284</value>
   <optionname>Gtk::RC_TOKEN_FONTSET</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>285</value>
   <optionname>Gtk::RC_TOKEN_FONT_NAME</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>286</value>
   <optionname>Gtk::RC_TOKEN_BG_PIXMAP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>287</value>
   <optionname>Gtk::RC_TOKEN_PIXMAP_PATH</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>288</value>
   <optionname>Gtk::RC_TOKEN_STYLE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>289</value>
   <optionname>Gtk::RC_TOKEN_BINDING</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>290</value>
   <optionname>Gtk::RC_TOKEN_BIND</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>291</value>
   <optionname>Gtk::RC_TOKEN_WIDGET</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>292</value>
   <optionname>Gtk::RC_TOKEN_WIDGET_CLASS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>293</value>
   <optionname>Gtk::RC_TOKEN_CLASS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>294</value>
   <optionname>Gtk::RC_TOKEN_LOWEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>295</value>
   <optionname>Gtk::RC_TOKEN_GTK</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>296</value>
   <optionname>Gtk::RC_TOKEN_APPLICATION</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>297</value>
   <optionname>Gtk::RC_TOKEN_THEME</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>298</value>
   <optionname>Gtk::RC_TOKEN_RC</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>299</value>
   <optionname>Gtk::RC_TOKEN_HIGHEST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>300</value>
   <optionname>Gtk::RC_TOKEN_ENGINE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>301</value>
   <optionname>Gtk::RC_TOKEN_MODULE_PATH</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>302</value>
   <optionname>Gtk::RC_TOKEN_IM_MODULE_PATH</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>303</value>
   <optionname>Gtk::RC_TOKEN_IM_MODULE_FILE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>304</value>
   <optionname>Gtk::RC_TOKEN_STOCK</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>305</value>
   <optionname>Gtk::RC_TOKEN_LTR</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>306</value>
   <optionname>Gtk::RC_TOKEN_RTL</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>307</value>
   <optionname>Gtk::RC_TOKEN_LAST</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>65536</value>
   <optionname>Gtk::RC_STYLE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.reliefstyle">
  <enumname>GtkReliefStyle</enumname>
  <desc>
   <simpara>
    Indicated the relief to be drawn around a <classname>GtkButton</classname>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::RELIEF_NORMAL</optionname>
   <shortdesc>
    Draw a normal relief.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::RELIEF_HALF</optionname>
   <shortdesc>
    A half relief.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::RELIEF_NONE</optionname>
   <shortdesc>
    No relief.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.resizemode">
  <enumname>GtkResizeMode</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::RESIZE_PARENT</optionname>
   <shortdesc>
    Pass resize request to the parent.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::RESIZE_QUEUE</optionname>
   <shortdesc>
    Queue resizes on this widget.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::RESIZE_IMMEDIATE</optionname>
   <shortdesc>
    Perform the resizes now.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.responsetype">
  <enumname>GtkResponseType</enumname>
  <desc>
   <simpara>
    Predefined values for use as response ids in <function class="GtkDialog">add_button</function>.
    All predefined values are negative, GTK+ leaves positive values for application-defined 
    response ids.
   </simpara>
  </desc>

  <enumoption>
   <value>-11</value>
   <optionname>Gtk::RESPONSE_HELP</optionname>
   <shortdesc>
    Returned by Help buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-10</value>
   <optionname>Gtk::RESPONSE_APPLY</optionname>
   <shortdesc>
    Returned by Apply buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-9</value>
   <optionname>Gtk::RESPONSE_NO</optionname>
   <shortdesc>
    Returned by No buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-8</value>
   <optionname>Gtk::RESPONSE_YES</optionname>
   <shortdesc>
    Returned by Yes buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-7</value>
   <optionname>Gtk::RESPONSE_CLOSE</optionname>
   <shortdesc>
    Returned by Close buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-6</value>
   <optionname>Gtk::RESPONSE_CANCEL</optionname>
   <shortdesc>
    Returned by Cancel buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-5</value>
   <optionname>Gtk::RESPONSE_OK</optionname>
   <shortdesc>
    Returned by OK buttons in GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-4</value>
   <optionname>Gtk::RESPONSE_DELETE_EVENT</optionname>
   <shortdesc>
    Returned if the dialog is deleted.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-3</value>
   <optionname>Gtk::RESPONSE_ACCEPT</optionname>
   <shortdesc>
    Generic response id, not used by GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-2</value>
   <optionname>Gtk::RESPONSE_REJECT</optionname>
   <shortdesc>
    Generic response id, not used by GTK+ dialogs.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>-1</value>
   <optionname>Gtk::RESPONSE_NONE</optionname>
   <shortdesc>
    Returned if an action widget has no response id, or if the dialog 
    gets programmatically hidden or destroyed.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.scrolltype">
  <enumname>GtkScrollType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SCROLL_NONE</optionname>
   <shortdesc>
    Nothing is done.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SCROLL_JUMP</optionname>
   <shortdesc>
    The list scrolls to the ratio position: 0 is top, 1 is bottom.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SCROLL_STEP_BACKWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SCROLL_STEP_FORWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::SCROLL_PAGE_BACKWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::SCROLL_PAGE_FORWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::SCROLL_STEP_UP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>7</value>
   <optionname>Gtk::SCROLL_STEP_DOWN</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::SCROLL_PAGE_UP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>9</value>
   <optionname>Gtk::SCROLL_PAGE_DOWN</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>10</value>
   <optionname>Gtk::SCROLL_STEP_LEFT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>11</value>
   <optionname>Gtk::SCROLL_STEP_RIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>12</value>
   <optionname>Gtk::SCROLL_PAGE_LEFT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>13</value>
   <optionname>Gtk::SCROLL_PAGE_RIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>14</value>
   <optionname>Gtk::SCROLL_START</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>15</value>
   <optionname>Gtk::SCROLL_END</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.selectionmode">
  <enumname>GtkSelectionMode</enumname>
  <desc>
   <simpara>
    Used to control what selections users are allowed to make.
   </simpara>
   <para>
    Used by methods of the <classname>GtkTreeSelection</classname> class;
    <function class="GtkTreeSelection">set_mode</function> and
    <function class="GtkTreeSelection">get_mode</function>.
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SELECTION_NONE</optionname>
   <shortdesc>
    No selection is possible.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SELECTION_SINGLE</optionname>
   <shortdesc>
    Zero or one element may be selected.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SELECTION_BROWSE</optionname>
   <shortdesc>
    Exactly one element is selected. In some circumstances, such as initially or
    during a search operation, it's possible for no element to be selected with
    <literal>Gtk::SELECTION_BROWSE</literal>. What is really enforced is that
    the user can't deselect a currently selected element except by selecting
    another element.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SELECTION_MULTIPLE</optionname>
   <shortdesc>
    Any number of elements may be selected. Clicks toggle the state 
    of an item. Any number of elements may be selected. Click-drag 
    selects a range of elements; the Ctrl key may be used to enlarge 
    the selection, and Shift key to select between the focus and 
    the child pointed to.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.shadowtype">
  <enumname>GtkShadowType</enumname>
  <desc>
   <simpara>
    Used to change the appearance of an outline typically provided by a 
    <classname>GtkFrame</classname> or a
    <classname>GtkScrolledWindow</classname>.
    <classname>GtkArrow</classname>s also use the shadow type.
   </simpara>
   <para>
    <graphic fileref="&directory.images;/reference/gtk/gtkshadowtype.png"/>
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SHADOW_NONE</optionname>
   <shortdesc>
    No outline.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SHADOW_IN</optionname>
   <shortdesc>
    The outline is bevelled inwards.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SHADOW_OUT</optionname>
   <shortdesc>
    The outline is bevelled outwards like a button.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SHADOW_ETCHED_IN</optionname>
   <shortdesc>
    The outline itself is an inward bevel, but the frame does.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::SHADOW_ETCHED_OUT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.sidetype">
  <enumname>GtkSideType</enumname>
  <desc>
   <simpara>
    GtkSideType is deprecated and should not be used in newly-written code.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SIDE_TOP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SIDE_BOTTOM</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SIDE_LEFT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SIDE_RIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.sizegroupmode">
  <enumname>GtkSizeGroupMode</enumname>
  <desc>
   <simpara>
    The mode of the size group determines the directions in which 
    the size group effects the requested sizes of its component widgets.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SIZE_GROUP_NONE</optionname>
   <shortdesc>
    Group has no effect.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SIZE_GROUP_HORIZONTAL</optionname>
   <shortdesc>
    Group effects horizontal requisition.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SIZE_GROUP_VERTICAL</optionname>
   <shortdesc>
    Group effects vertical requisition.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SIZE_GROUP_BOTH</optionname>
   <shortdesc>
    Group effects both horizontal and vertical requisition.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.sorttype">
  <enumname>GtkSortType</enumname>
  <desc>
   <simpara>
    Determines the direction of a sort.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SORT_ASCENDING</optionname>
   <shortdesc>
    Sorting is in ascending order.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SORT_DESCENDING</optionname>
   <shortdesc>
    Sorting is in descending order.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.spintype">
  <enumname>GtkSpinType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::SPIN_STEP_FORWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::SPIN_STEP_BACKWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::SPIN_PAGE_FORWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::SPIN_PAGE_BACKWARD</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::SPIN_HOME</optionname>
   <shortdesc>
    Set the spin button's value to the minimum possible value.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::SPIN_END</optionname>
   <shortdesc>
    Set the spin button's value to the maxmimum possible value.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::SPIN_USER_DEFINED</optionname>
   <shortdesc>
    The programmer must specify the exact amount to spin the 
    <classname>GtkSpinButton</classname>.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.statetype">
  <enumname>GtkStateType</enumname>
  <desc>
   <simpara>
    This type indicates the current state of a widget; the state determines 
    how the widget is drawn. The GtkStateType enumeration is also used 
    to identify different colors in a <classname>GtkStyle</classname> for 
    drawing, so states can be used for subparts of a widget as well as entire widgets.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::STATE_NORMAL</optionname>
   <shortdesc>
    State during normal operation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::STATE_ACTIVE</optionname>
   <shortdesc>
    State of a currently active widget, such as a depressed button.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::STATE_PRELIGHT</optionname>
   <shortdesc>
    State indicating that the mouse pointer is over the widget and the widget will respond to mouse clicks.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::STATE_SELECTED</optionname>
   <shortdesc>
    State of a selected item, such the selected row in a list.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::STATE_INSENSITIVE</optionname>
   <shortdesc>
    State indicating that the widget is unresponsive to user actions.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.stockitems">
 <!-- Whoever put this here - these are NOT enums!!!! Should be in appendix. - sf -->
  <enumname>GtkStockItems</enumname>
  <desc>
   <simpara>
    Stock items for use in toolbars and buttons.
   </simpara>
  </desc>

  <enumoption>
   <optionname>Gtk::STOCK_ABOUT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_about_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ADD</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_add_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_APPLY</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_apply_20.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_BOLD</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_bold_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CANCEL</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_cancel_20.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CDROM</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_cdrom_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CLEAR</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_clear_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CLOSE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_close_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_COLOR_PICKER</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_color_picker_25.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CONNECT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_connect_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CONVERT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_convert_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_COPY</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_copy_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_CUT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_cut_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DELETE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_trash_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIALOG_AUTHENTICATION</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dialog_authentication_48.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIALOG_ERROR</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dialog_error_48.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIALOG_INFO</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dialog_info_48.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIALOG_QUESTION</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dialog_question_48.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIALOG_WARNING</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dialog_warning_48.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DIRECTORY</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_directory_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DISCONNECT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_disconnect_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DND</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dnd_32.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_DND_MULTIPLE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_dnd_multiple_32.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_EDIT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_edit_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_EXECUTE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_exec_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_FILE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_file_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_FIND</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_search_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_FIND_AND_REPLACE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_search_replace_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_FLOPPY</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_save_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GO_BACK</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_left_arrow_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_right_arrow_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GO_DOWN</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_down_arrow_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GO_FORWARD</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_right_arrow_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_left_arrow_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GO_UP</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_up_arrow_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GOTO_BOTTOM</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_bottom_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GOTO_FIRST</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_first_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_last_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GOTO_LAST</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_last_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_first_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_GOTO_TOP</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_top_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_HARDDISK</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_harddisk_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_HELP</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_help_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_HOME</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_home_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_INDENT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_indent_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_INDEX</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_index_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ITALIC</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_italic_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_JUMP_TO</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_jump_to_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_jump_to_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_JUSTIFY_CENTER</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_align_center_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_JUSTIFY_FILL</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_align_justify_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_JUSTIFY_LEFT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_align_left_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_JUSTIFY_RIGHT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_align_right_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_FORWARD</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_forward_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_rewind_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_NEXT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_next_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_previous_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_PAUSE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_pause_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_PLAY</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_play_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_play_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_PREVIOUS</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_previous_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_next_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_RECORD</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_record_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_REWIND</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_rewind_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_forward_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MEDIA_STOP</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_media_stop_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_MISSING_IMAGE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_broken_image_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_NETWORK</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_network_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_NEW</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_new_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_NO</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_no_20.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_OK</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_ok_20.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_OPEN</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_open_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_PASTE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_paste_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_PREFERENCES</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_preferences_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_PRINT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_print_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_PRINT_PREVIEW</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_print_preview_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_PROPERTIES</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_properties_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_QUIT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_exit_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_REDO</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_redo_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_redo_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_REFRESH</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_refresh_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_REMOVE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_remove_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_REVERT_TO_SAVED</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_revert_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_revert_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SAVE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_save_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SAVE_AS</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_save_as_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SELECT_COLOR</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_colorselector_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SELECT_FONT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_font_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SORT_ASCENDING</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_sort_ascending_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SORT_DESCENDING</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_sort_descending_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_SPELL_CHECK</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_spellcheck_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_STOP</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_stop_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_STRIKETHROUGH</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_strikethrough_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_UNDELETE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_undelete_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_undelete_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_UNDERLINE</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_underline_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_UNDO</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_undo_24.png"/>
    RTL variant: <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_undo_rtl_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_UNINDENT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_text_unindent_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_YES</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_yes_20.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ZOOM_100</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_zoom_1_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ZOOM_FIT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_zoom_fit_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ZOOM_IN</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_zoom_in_24.png"/>
   </shortdesc>
  </enumoption>

  <enumoption>
   <optionname>Gtk::STOCK_ZOOM_OUT</optionname>
   <shortdesc>
    <inlinegraphic fileref="&directory.images;/reference/gtk/stock_icons/stock_zoom_out_24.png"/>
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.submenudirection">
  <enumname>GtkSubmenuDirection</enumname>
  <desc>
   <simpara>
    GtkSubmenuDirection is deprecated and should not be used in newly-written code.
   </simpara>
   <simpara>
    Indicates the direction a sub-menu will appear.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::DIRECTION_LEFT</optionname>
   <shortdesc>
    A sub-menu will appear at the left side of the parent menu.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::DIRECTION_RIGHT</optionname>
   <shortdesc>
    A sub-menu will appear at the right side of the parent menu.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.submenuplacement">
  <enumname>GtkSubmenuPlacement</enumname>
  <desc>
   <simpara>
    GtkSubmenuPlacement is deprecated and should not be used in newly-written code.
   </simpara>
  </desc>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TOP_BOTTOM</optionname>
   <shortdesc>
   
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::LEFT_RIGHT</optionname>
   <shortdesc>
   
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.targetflags">
  <enumname>GtkTargetFlags</enumname>
  <desc>
   <simpara>
    The GtkTargetFlags enumeration is used to specify 
    constraints on an entry in a GtkTargetTable.
   </simpara>
  </desc>

  <enumoption>
   <value>1 &lt;&lt; 0</value>
   <optionname>Gtk::TARGET_SAME_APP</optionname>
   <shortdesc>
    If this is set, the target will only be selected for drags within a single application.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1 &lt;&lt; 1</value>
   <optionname>Gtk::TARGET_SAME_WIDGET</optionname>
   <shortdesc>
    If this is set, the target will only be selected for drags within a single widget.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.textwindowtype">
  <enumname>GtkTextWindowType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::TEXT_WINDOW_PRIVATE</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TEXT_SEARCH_VISIBLE_ONLY</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::TEXT_SEARCH_TEXT_ONLY</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::TEXT_WINDOW_LEFT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::TEXT_WINDOW_RIGHT</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>5</value>
   <optionname>Gtk::TEXT_WINDOW_TOP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>6</value>
   <optionname>Gtk::TEXT_WINDOW_BOTTOM</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.toolbarstyle">
  <enumname>GtkToolbarStyle</enumname>
  <desc>
   <simpara>
    Used to customize the appearance of a <classname>GtkToolbar</classname>.
    Note that setting the toolbar style overrides the user's preferences 
    for the default toolbar style.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::TOOLBAR_ICONS</optionname>
   <shortdesc>
    Buttons display only icons in the toolbar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TOOLBAR_TEXT</optionname>
   <shortdesc>
    Buttons display only text labels in the toolbar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::TOOLBAR_BOTH</optionname>
   <shortdesc>
    Buttons display text and icons in the toolbar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::TOOLBAR_BOTH_HORIZ</optionname>
   <shortdesc>
    Buttons display icons and text alongside each other, rather than vertically stacked
   </shortdesc>
  </enumoption>

<!--  not in gtk2 manual
  <enumoption>
   <value>4</value>
   <optionname>Gtk::TOOLBAR_CHILD_WIDGET</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>-->
 </enum>


 <enum id="gtk.enum.treemodelflags">
  <enumname>GtkTreeModelFlags</enumname>
  <desc>
   <simpara>
    These flags indicate various properties of a <classname>GtkTreeModel</classname>.
    They are returned by <function class="GtkTreeModel">get_flags</function>, and must be 
    static for the lifetime of the object.
   </simpara>
  </desc>

  <enumoption>
   <value>1 &lt;&lt; 0</value>
   <optionname>Gtk::TREE_MODEL_ITERS_PERSIST</optionname>
   <shortdesc>
    Iterators survive all signals emitted by the tree.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1 &lt;&lt; 1</value>
   <optionname>Gtk::TREE_MODEL_LIST_ONLY</optionname>
   <shortdesc>
    The model is a list only, and never has children.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.treeviewcolumnsizing">
  <enumname>GtkTreeViewColumnSizing</enumname>
  <desc>
   <simpara>
    Used by <classname>GtkTreeViewColumn</classname>
    <function class="GtkTreeViewColumn">set_sizing</function>.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::GtkTreeViewColumnSizing</optionname>
   <shortdesc>
    Columns only get bigger in reaction to changes in the model.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TREE_VIEW_COLUMN_AUTOSIZE</optionname>
   <shortdesc>
    Columns resize to be the optimal size everytime the model changes.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::TREE_VIEW_COLUMN_FIXED</optionname>
   <shortdesc>
    Columns are a fixed numbers of pixels wide.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.treeviewmode">
  <enumname>GtkTreeViewMode</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::TREE_VIEW_LINE</optionname>
   <shortdesc>
    Default mode.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TREE_VIEW_ITEM</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.treeviewdropposition">
  <enumname>GtkTreeViewDropPosition</enumname>
  <desc>
   <simpara>
    An enum for determining where a dropped row goes.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::TREE_VIEW_DROP_BEFORE</optionname>
   <shortdesc>
    Drop before this row.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::TREE_VIEW_DROP_AFTER</optionname>
   <shortdesc>
    Drop after this row.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::TREE_VIEW_DROP_INTO_OR_BEFORE</optionname>
   <shortdesc>
    Drop as a child of this row (with fallback to before if into is not possible)
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::TREE_VIEW_DROP_INTO_OR_AFTER</optionname>
   <shortdesc>
    Drop as a child of this row (with fallback to after if into is not possible)
   </shortdesc>
  </enumoption>
 </enum>

 <enum id="gtk.enum.uimanageritemtype">
  <enumname>GtkUiManagerItemType</enumname>
  <desc>
   <simpara>
    These enumeration values are used by 
    <function class="GtkUiManger">add_ui</function> to determine what UI 
    element to create.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::UI_MANAGER_AUTO</optionname>
   <shortdesc>
    Pick the type of the UI element according to context.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::UI_MANAGER_MENUBAR</optionname>
   <shortdesc>
    Create a menubar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::UI_MANAGER_MENU</optionname>
   <shortdesc>
    Create a menu.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::UI_MANAGER_TOOLBAR</optionname>
   <shortdesc>
    Create a toolbar.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>8</value>
   <optionname>Gtk::UI_MANAGER_PLACEHOLDER</optionname>
   <shortdesc>
    Insert a placeholder.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>16</value>
   <optionname>Gtk::UI_MANAGER_POPUP</optionname>
   <shortdesc>
    Create a popup menu.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>32</value>
   <optionname>Gtk::UI_MANAGER_MENUITEM</optionname>
   <shortdesc>
    Create a menuitem.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>64</value>
   <optionname>Gtk::UI_MANAGER_TOOLITEM</optionname>
   <shortdesc>
    Create a toolitem.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>128</value>
   <optionname>Gtk::UI_MANAGER_SEPARATOR</optionname>
   <shortdesc>
    Create a separator.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>256</value>
   <optionname>Gtk::UI_MANAGER_ACCELERATOR</optionname>
   <shortdesc>
    Install an accelerator.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.updatetype">
  <enumname>GtkUpdateType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::UPDATE_CONTINUOUS</optionname>
   <shortdesc>
    Means that anytime the range slider is moved, the range value will 
    change and the value_changed signal will be emitted.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::UPDATE_DISCONTINUOUS</optionname>
   <shortdesc>
    Means that the value will only be updated when the user releases 
    the button and ends the slider drag operation.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::UPDATE_DELAYED</optionname>
   <shortdesc>
    Means that the value will be updated after a brief timeout where 
    no slider motion occurs, so updates are spaced by a short 
    time rather than continuous.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.visibility">
  <enumname>GtkVisibility</enumname>
  <desc>
   <simpara>
    Used by <classname>GtkCList</classname> and <classname>GtkCTree</classname>
    to indicate whether a row is visible.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::VISIBILITY_NONE</optionname>
   <shortdesc>
    The row is not visible.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::VISIBILITY_PARTIAL</optionname>
   <shortdesc>
    The row is partially visible.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::VISIBILITY_FULL</optionname>
   <shortdesc>
    The row is fully visible.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.widgethelptype">
  <enumname>GtkWidgetHelpType</enumname>
  <desc>
   <simpara>
    
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::WIDGET_HELP_TOOLTIP</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::WIDGET_HELP_WHATS_THIS</optionname>
   <shortdesc>
    
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.windowposition">
  <enumname>GtkWindowPosition</enumname>
  <desc>
   <simpara>
    Window placement can be influenced using this enumeration.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::WIN_POS_NONE</optionname>
   <shortdesc>
    No influence is made on placement.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::WIN_POS_CENTER</optionname>
   <shortdesc>
    Windows should be placed in the center of the screen.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::WIN_POS_MOUSE</optionname>
   <shortdesc>
    Windows should be placed at the current mouse position.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::WIN_POS_CENTER_ALWAYS</optionname>
   <shortdesc>
    Keep window centered as it changes size, etc.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>4</value>
   <optionname>Gtk::WIN_POS_CENTER_ON_PARENT</optionname>
   <shortdesc>
    Center the window on its transient parent 
    (see <function class="GtkWindow">set_transient_for</function>).
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.windowtype">
  <enumname>GtkWindowType</enumname>
  <desc>
   <para>
    A <classname>GtkWindow</classname> can be one of these types. 
    Most things you'd consider a "window" should have type 
    <literal>Gtk::WINDOW_TOPLEVEL</literal>; windows with this type are
    managed by the window manager and have a frame by default (call
    <function class="GtkWindow">set_decorated</function> to toggle the frame).
   </para>
   <para>
    Windows with type <literal>Gtk::WINDOW_POPUP</literal> are ignored by the window 
    manager; window manager keybindings won't work on them, the window manager 
    won't decorate the window with a frame, many GTK+ features that rely on the 
    window manager will not work (e.g. resize grips and maximization/minimization). 
    <literal>Gtk::WINDOW_POPUP</literal> is used to implement widgets such as 
    <classname>GtkMenu</classname> or tooltips that you normally don't think of 
    as windows per se. 
   </para>
   <para>
    Nearly all windows should be <literal>Gtk::WINDOW_TOPLEVEL</literal>. In particular, 
    do not use <literal>Gtk::WINDOW_POPUP</literal> just to turn off the window 
    borders; use <function class="GtkWindow">set_decorated</function> for that.
   </para>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::WINDOW_TOPLEVEL</optionname>
   <shortdesc>
    A regular window, such as a dialog.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::WINDOW_POPUP</optionname>
   <shortdesc>
    A special window such as a tooltip.
   </shortdesc>
  </enumoption>
 </enum>


 <enum id="gtk.enum.wrapmode">
  <enumname>GtkWrapMode</enumname>
  <desc>
   <simpara>
    Describes a type of line wrapping.
   </simpara>
  </desc>

  <enumoption>
   <value>0</value>
   <optionname>Gtk::WRAP_NONE</optionname>
   <shortdesc>
    Do not wrap lines; just make the text area wider.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>1</value>
   <optionname>Gtk::WRAP_CHAR</optionname>
   <shortdesc>
    Wrap text, breaking lines anywhere the cursor can appear 
    (between characters, usually - if you want to be technical, 
    between graphemes, see <function class="Pango">get_log_attrs</function>).
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>2</value>
   <optionname>Gtk::WRAP_WORD</optionname>
   <shortdesc>
    Wrap text, breaking lines in between words.
   </shortdesc>
  </enumoption>

  <enumoption>
   <value>3</value>
   <optionname>Gtk::WRAP_WORD_CHAR</optionname>
   <shortdesc>
    Wrap text, breaking lines in between words, or if that is not enough, 
    also between graphemes.
   </shortdesc>
  </enumoption>
 </enum>

</enums>
