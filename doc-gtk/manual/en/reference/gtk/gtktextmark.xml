<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<classentry id="gtk.gtktextmark">
 <classmeta>
  <classtitle>GtkTextMark</classtitle>
  <classparent>GObject</classparent>
  <shortdesc>
   A position in a GtkTextBuffer which persists across buffer modifications.
  </shortdesc>
  <desc>
   <para>
    A <classname>GtkTextMark</classname> is used to identify a location within
    a <classname>GtkTextBuffer</classname>. Unlike a
    <classname>GtkTextIter</classname>, a <classname>GtkTextMark</classname>
    will persist across buffer modifications. 
   </para>
   <para>
    A <classname>GtkTextMark</classname> cannot be instantiated directly with
    the <literal>new</literal> operator. Instead it must be created using
    <function class="GtkTextBuffer">create_mark</function>.
   </para>
   <para>
    By default, every buffer automatically creates two
    <classname>GtkTextMark</classname>s named <literal>insert</literal> and
    <literal>selection_boud</literal>. They point to the insertion point
    (cursor) and the selection boundry which is not the insertion point,
    respectively. Moving these two marks to two different places in the buffer
    will select the range of text between them. Both marks have right <link linkend="appendix.glossary.g.gravity">gravity</link>.
   </para>
  </desc>
 </classmeta>

 <methods>

  <method id="gtk.gtktextmark.method.get_buffer">
   <funcsynopsis>
    <funcprototype>
     <funcdef>GtkTextBuffer <function>get_buffer</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the <classname>GtkTextBuffer</classname> that the mark belongs to.
   </shortdesc>
   <desc>
    <para>
     Returns the <classname>GtkTextBuffer</classname> that the mark belongs
     to. The buffer returned will be the buffer that was used to call
     <function class="GtkTextBuffer">create_mark</function>.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_mark</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextmark.method.get_deleted">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_deleted</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns whether or not the mark has been deleted from its
    <classname>GtkTextBuffer</classname>.
   </shortdesc>
   <desc>
    <para>
     Returns whether or not the mark has been deleted from its
     <classname>GtkTextBuffer</classname>. A mark which has been deleted may
     not be used.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">delete_mark</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextmark.method.get_left_gravity">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_left_gravity</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns whether or not the mark has left <link linkend="appendix.glossary.g.gravity">gravity</link>.
   </shortdesc>
   <desc>
    <para>
     Returns <literal>true</literal> if the mark has left <link linkend="appendix.glossary.g.gravity">gravity</link> and
     <literal>false</literal> if it has right <link linkend="appendix.glossary.g.gravity">gravity</link>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextmark.method.get_name">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_name</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the name of the mark, or <literal>null</literal> if the mark is
    anonymous.
   </shortdesc>
   <desc>
    <para>
     Returns the name of the mark, or <literal>null</literal> if the mark is
     anonymous. Marks are given a name when they are created.
    </para>
    <para>
     &seealso;
     <function class="GtkTextBuffer">create_mark</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextmark.method.get_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>get_visible</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns whether or not a cursor is shown for the mark.
   </shortdesc>
   <desc>
    <para>
     Returns <literal>true</literal> if a cursor is shown for the mark and
     <literal>false</literal> if a cursor is not shown.
    </para>
    <para>
     &seealso;
     <function class="GtkTextMark">set_visible</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktextmark.method.set_visible">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_visible</function></funcdef>
     <paramdef>bool <parameter>visible</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets whether or not a cursor should be shown for the mark.
   </shortdesc>
   <desc>
    <para>
     If <parameter>visible</parameter> is <literal>true</literal> a cursor
     will be shown where the mark is located in the buffer. If
     <parameter>visible</parameter> is <literal>false</literal> nothing will
     be shown at the position of the mark.
    </para>
    <para>
     &seealso;
     <function class="GtkTextMark">get_visible</function>
    </para>
   </desc>
  </method>

 </methods>

</classentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
