<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.9 $ -->
<classentry id="gtk.gtktreemodel" type="interface">
 <classmeta>
  <classtitle>GtkTreeModel</classtitle>
  <classparent>GInterface</classparent>
  <shortdesc>
   The tree interface used by <classname>GtkTreeView</classname>.
  </shortdesc>
  <desc>
   <para>
    The GtkTreeModel interface defines a generic tree interface for 
    use by the <classname>GtkTreeView</classname> widget. It is an abstract 
    interface, and is designed to be usable with any appropriate data 
    structure. The programmer just has to implement this interface on their
    own data type for it to be viewable by a <classname>GtkTreeView</classname>
    widget.
   </para>
  </desc>
 </classmeta>

 <methods>

  

  <method id="gtk.gtktreemodel.method.foreach">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>foreach</function></funcdef>
     <paramdef>function <parameter>callback_func</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Loop through all rows.
   </shortdesc>
   <desc>
    <para>
     Calls the given callback function for each single row in
     the store.
    </para>
    <para>
     The callback function can have the following parameters:
     <literal>(<classname>GtkTreeModel</classname> model,
      <classname>GtkTreePath</classname> path,
      <classname>GtkTreeIter</classname> iter)</literal>.
    </para>
    <example>
     <title>Looping through all rows with foreach</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreemodel/foreach.php" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_column_type">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GType</classname> <function>get_column_type</function></funcdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the type of the column.
   </shortdesc>
   <desc>
    <simpara>
     Returns the type of the column.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_flags">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_flags</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns a set of flags supported by the interface.
   </shortdesc>
   <desc>
    <para>
     Returns a set of flags supported by the interface. The flags will be 
     different for different implementations of the interface 
     (<classname>GtkListStore</classname>, 
     <classname>GtkTreeModelSort</classname>, etc.) but will be constant for 
     the life of the object.
    </para>
    <para>
     The interger returned will be a bitwise mask of 
     <enumname>GtkTreeModelFlags</enumname> values.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_iter">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>get_iter</function></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an iter for the given GtkTreePath.
   </shortdesc>
   <desc>
    <para>
     Returns an iter for the given <parameter>path</parameter>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_iter_first">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>get_iter_first</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns an iter to the first row.
   </shortdesc>
   <desc>
    <para>
     Returns an iterator to the first row in the store (the one
     with path <literal>'0'</literal>).
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_iter_root">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>get_iter_root</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    DEPRECATED. Alias for get_iter_first().
   </shortdesc>
   <desc>
    <para>
     DEPRECATED. Alias for <function class="GtkTreeModel">get_iter_first</function>.
     Provided for compatibility reasons only. Don't use it in newly written code.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_iter_from_string">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>get_iter_from_string</function></funcdef>
     <paramdef>string <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Convert the given string path to a valid path and return the iter.
   </shortdesc>
   <desc>
    <para>
     The function converts the given string (e.g. <literal>'0:1:0'</literal>)
     to a valid <classname>GtkTreePath</classname> and returns the proper
     iterator.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_n_columns">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>get_n_columns</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the number of columns used by tree_model.
   </shortdesc>
   <desc>
    <simpara>
     Returns the number of columns used by tree_model.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_path">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreePath</classname> <function>get_path</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns a path to the given iterator.
   </shortdesc>
   <desc>
    <para>
     Returns the path for the given iterator.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_string_from_iter">
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>get_string_from_iter</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Generates a string representation of the iter.
   </shortdesc>
   <desc>
    <para>
     Generates a string representation of the iter. This string is a ':' separated
     list of numbers. For example, <literal>"4:10:0:3"</literal> would be an 
     acceptable return value for this string.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.get_value">
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>get_value</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef>int <parameter>column</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the value of a column of the given iter.
   </shortdesc>
   <desc>
    <para>
     Returns the value set at the <parameter>column</parameter> of the
     given <parameter>iter</parameter>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_children">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>iter_children</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns iter for the first child row.
   </shortdesc>
   <desc>
    <para>
     Returns an iterator for the first child row of
     <parameter>parent</parameter>. If the parameter is omitted, or
     <literal>null</literal> is passed, the iterator to the first root row is
     returned.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_has_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>iter_has_child</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If an iterator has one or more children.
   </shortdesc>
   <desc>
    <para>
     Tells you if the passed iterator has children rows or not.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_n_children">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>iter_n_children</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Returns the number of childen <parameter>iter</parameter> has.
   </shortdesc>
   <desc>
    <para>
     Returns the number of children <parameter>iter</parameter> has.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_next">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>iter_next</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Next iterator on the same level.
   </shortdesc>
   <desc>
    <para>
     Returns an iterator to the next row on the same level as
     <parameter>sibling</parameter>. Returns <literal>null</literal> if the row
     has no follower.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_nth_child">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>iter_nth_child</function></funcdef>
     
     <paramdef><classname>GtkTreeIter</classname> <parameter>parent_iter</parameter></paramdef>
     <paramdef><parameter>n</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    FIXME: behavior needs to be changed
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.iter_parent">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>iter_parent</function></funcdef>
     
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>iter</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    FIXME: behavior needs to be changed
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.ref_node">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>ref_node</function></funcdef>
     
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    FIXME
   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.row_changed">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>row_changed</function></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "row_changed" signal.
   </shortdesc>
   <desc>
    <para>
     Emits the "row_changed" signal.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.row_deleted">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>row_deleted</function></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "row_deleted" signal.
   </shortdesc>
   <desc>
    <simpara>
     Emits the "row_deleted" signal.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.row_has_child_toggled">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>row_has_child_toggled</function></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "row_has_child_toggled" signal.
   </shortdesc>
   <desc>
    <simpara>
     Emits the "row_has_child_toggled" signal.
     This should be called by models after the child state of 
     a node changes.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.row_inserted">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>row_inserted</function></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Emits the "row_inserted" signal.
   </shortdesc>
   <desc>
    <simpara>
     Emits the "row_inserted" signal.
    </simpara>
   </desc>
  </method>

  <method id="gtk.gtktreemodel.method.unref_node">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>unref_node</function></funcdef>
     
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    FIXME
   </shortdesc>
   <desc>

   </desc>
  </method>

 <method id="gtk.gtktreemodel.method.get">
    <funcsynopsis>
    <funcprototype>
     <funcdef> <function>get</function></funcdef>
     
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  </methods>




 <signals>
  <signal id="gtk.gtktreemodel.signal.row-changed">
   <signalname>row-changed</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef><cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Row has been changed in the model.
   </shortdesc>
   <desc>
    <simpara>
     Row has been changed in the model.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtktreemodel.signal.row-deleted">
   <signalname>row-deleted</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef><cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Row has been deleted.
   </shortdesc>
   <desc>
    <simpara>
     Row has been deleted.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtktreemodel.signal.row-has-child-toggled">
   <signalname>row-has-child-toggled</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef><cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
   </shortdesc>
   <desc>

   </desc>
  </signal>

  <signal id="gtk.gtktreemodel.signal.row-inserted">
   <signalname>row-inserted</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef><cbfunction>callback</cbfunction></funcdef>
     <paramdef><classname>GtkTreePath</classname> <parameter>path</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    The row has been inserted.
   </shortdesc>
   <desc>
    <simpara>
     The row has been inserted.
    </simpara>
   </desc>
  </signal>

  <signal id="gtk.gtktreemodel.signal.rows-reordered">
   <signalname>rows-reordered</signalname>
   <funcsynopsis>
    <funcprototype>
     <funcdef><cbfunction>callback</cbfunction></funcdef>
     <paramdef>???</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Rows have been reordered.
   </shortdesc>
   <desc>

   </desc>
  </signal>
 </signals>
</classentry>
