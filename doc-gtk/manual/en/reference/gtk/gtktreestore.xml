<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.13 $ -->
<classentry id="gtk.gtktreestore">
 <classmeta>
  <classtitle>GtkTreeStore</classtitle>
  <classparent>GObject</classparent>
  <implements>GtkTreeModel</implements>
  <implements>GtkTreeDragSource</implements>
  <implements>GtkTreeDragDest</implements>
  <implements>GtkTreeSortable</implements>
    <implements>Traversable</implements>
<shortdesc>
   A tree-like data structure that can be used with the GtkTreeView.
  </shortdesc>
  <desc>
   <para>
    The <classname>GtkTreeStore</classname> object is a list model
    for use with a <classname>GtkTreeView</classname> widget. It implements
    the <classname>GtkTreeModel</classname> interface, and consequentialy, can
    use all of the methods available there. It also implements the 
    <classname>GtkTreeSortable</classname> interface so it can be sorted by
    the view. Finally, it also implements the tree drag and drop interfaces.
   </para>
  </desc>
 </classmeta>


 <constructors>
  <constructor id="gtk.gtktreestore.constructor">
   <funcsynopsis>
    <funcprototype>
    <funcdef> <function>GtkTreeStore</function></funcdef>
    <paramdef><enumname>GtkType</enumname> <parameter>type_column_0</parameter></paramdef>
    <paramdef><enumname>GtkType</enumname> <parameter><optional>type_column_1</optional></parameter></paramdef>
    <paramdef><enumname>GtkType</enumname> <parameter><optional>type_column_2</optional></parameter></paramdef>
    <paramdef>...</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Create a new tree store with a number of columns.
   </shortdesc>
   <desc>
    <para>
     Create a new tree store with a number of columns. For each colum, the
     type has to be specified by choosing one of the <enumname>GtkType</enumname>s.
    </para>
    <example>
     <title>Creating and filling a GtkTreeStore</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/constructor.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </constructor>
 </constructors>


 <methods>

  <method id="gtk.gtktreestore.method.append">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>append</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
     <paramdef>array <parameter>items</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Appends a new row to the store.
   </shortdesc>
   <desc>
    <para>
     Creates a new line and appends it to the end of the store. The first
     parameter <parameter>parent</parameter> can be <literal>null</literal>.
     If that's the case, the new entry will have no parent and thus 
     be a "root" entry.
    </para>
    <para>
     The second parameter <parameter>items</parameter> is an array with a value
     for each column. If your treestore has three columns, the array should have
     three values.
    </para>
    <para>
     The method returns a <classname>GtkTreeIter</classname> which you can use
     to refer to the entry row; e.g. to use it as a parent for another row.
    </para>
    <para>
     If you pass no parameters at all, an empty row with no values will be
     created, and you have to use other methods like
     <function class="GtkTreeStore">set</function> to change the column values.
    </para>
    <example>
     <title>Creating and filling a GtkTreeStore</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/append.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
      <function class="GtkTreeStore">insert</function>,
      <function class="GtkTreeStore">insert_after</function>,
      <function class="GtkTreeStore">insert_before</function>,
      <function class="GtkTreeStore">prepend</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.clear">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>clear</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Removes all rows.
   </shortdesc>
   <desc>
    <para>
     This method removes all rows from the store, clearing and leaving it 
     empty.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.insert">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>insert</function></funcdef>
     <paramdef>int <parameter>position</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
     <paramdef>array <parameter><optional>items</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Insert a new row at the given position.
   </shortdesc>
   <desc>
    <para>
     Inserts a new row as child of <parameter>parent</parameter> at
     <parameter>position</parameter>.
    </para>
    <para>
     If <parameter>parent</parameter> is <literal>null</literal>, the new row
     will be created at top-level. If <parameter>position</parameter> is
     larger than the number of rows at that level, then the new row will
     be inserted to the end of the list.
    </para>
    <para>
     <parameter>items</parameter> can be an array of values for the column.
    </para>
    <example>
     <title>Filling a GtkTreeStore with insert</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/insert.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
      <function class="GtkTreeStore">insert_after</function>,
      <function class="GtkTreeStore">insert_before</function>,
      <function class="GtkTreeStore">append</function>,
      <function class="GtkTreeStore">prepend</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.insert_after">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>insert_after</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>sibling</optional></parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
     <paramdef>array <parameter><optional>items</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Insert a new row after a given one.
   </shortdesc>
   <desc>
    <para>
     Inserts a new row after <parameter>sibling</parameter>. If sibling is
     <literal>null</literal>, then the row will be prepended to parent's
     children. If <parameter>parent</parameter> and
     <parameter>sibling</parameter> are <literal>null</literal>, then the row
     will be prepended to the toplevel. If both <parameter>sibling</parameter>
     and <parameter>parent</parameter> are set, then
     <parameter>parent</parameter> must be the parent of
     <parameter>sibling</parameter>. When <parameter>sibling</parameter> is
     set, <parameter>parent</parameter> is optional.
    </para>
    <para>
     <parameter>items</parameter> can be an array of values for the column.
    </para>
    <example>
     <title>Filling a GtkTreeStore with insert_after</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/insert_after.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
      <function class="GtkTreeStore">insert</function>,
      <function class="GtkTreeStore">insert_before</function>,
      <function class="GtkTreeStore">append</function>,
      <function class="GtkTreeStore">prepend</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.insert_before">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>insert_before</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>sibling</optional></parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
     <paramdef>array <parameter><optional>items</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Insert a new row before a given one.
   </shortdesc>
   <desc>
    <para>
     Inserts a new row before <parameter>sibling</parameter>. If sibling is
     <literal>null</literal>, then the row will be appended to parent's
     children. If <parameter>parent</parameter> and
     <parameter>sibling</parameter> are <literal>null</literal>, then the row
     will be appended to the toplevel. If both <parameter>sibling</parameter>
     and <parameter>parent</parameter> are set, then
     <parameter>parent</parameter> must be the parent of
     <parameter>sibling</parameter>. When <parameter>sibling</parameter> is
     set, <parameter>parent</parameter> is optional.
    </para>
    <para>
     <parameter>items</parameter> can be an array of values for the column.
    </para>
    <example>
     <title>Filling a GtkTreeStore with insert_before</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/insert_before.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
      <function class="GtkTreeStore">insert</function>,
      <function class="GtkTreeStore">insert_after</function>,
      <function class="GtkTreeStore">append</function>,
      <function class="GtkTreeStore">prepend</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.is_ancestor">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>is_ancestor</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>descendant</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Checks if an iter is parent or grandparent of another iter.
   </shortdesc>
   <desc>
    <para>
     Returns <literal>true</literal> if <parameter>iter</parameter> is an
     ancestor of <parameter>descendant</parameter>. That is,
     <parameter>iter</parameter> is the parent (or grandparent or
     great-grandparent) of <parameter>descendant</parameter>.
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.iter_depth">
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>iter_depth</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    How deep an iterator is nested in the tree.
   </shortdesc>
   <desc>
    <para>
     Calculates how deep the given <parameter>iter</parameter> is nested in
     the store. If the given iter is a top-level row, <literal>0</literal>
     is returned.
    </para>
    <example>
     <title>Using iter_depth to determine the depth of a row</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/iter_depth.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.iter_is_valid">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>iter_is_valid</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    If a given row exists in the store.
   </shortdesc>
   <desc>
    <para>
     Returns <literal>true</literal> if the given iterator points to a row
     that exists in the model.
    </para>
    <para>
     An iterator can get unvalid by removing it (or one of its parents)
     from the tree.
    </para>
    <example>
     <title>Checking an iter's validity by using iter_is_valid()</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/iter_is_valid.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.move_after">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>move_after</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Moves a given iter directly after another one.
   </shortdesc>
   <desc>
    <para>
     Moves the row given by <parameter>iter</parameter> directly after
     <parameter>position</parameter>.
    </para>
    <para>
     That method works only with unsorted stores and requires both iters to
     be at the same level. If <parameter>position</parameter> is
     <literal>null</literal>, the row will be moved to the start
     of the level.
    </para>
    <example>
     <title>Moving rows</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/move_after.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
     <function class="GtkTreeStore">move_before</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.move_before">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>move_before</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>position</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Moves a given iter directly before another one.
   </shortdesc>
   <desc>
    <para>
     Moves the row given by <parameter>iter</parameter> directly before
     <parameter>position</parameter>.
    </para>
    <para>
     That method works only with unsorted stores and requires both iters to
     be at the same level. If <parameter>position</parameter> is
     <literal>null</literal>, the row will be moved to the end
     of the level.
    </para>
    <para>
     &seealso;
     <function class="GtkTreeStore">move_before</function>
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.prepend">
   <funcsynopsis>
    <funcprototype>
     <funcdef><classname>GtkTreeIter</classname> <function>prepend</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter><optional>parent</optional></parameter></paramdef>
     <paramdef>array <parameter>items</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Add a row to the beginning of the store.
   </shortdesc>
   <desc>
    <para>
     Creates a new line and inserts it at the beginning of the store. The first
     parameter <parameter>parent</parameter> can be <literal>null</literal>.
     If that's the case, the new entry will have no parent and thus 
     be a "root" entry.
    </para>
    <para>
     The second parameter <parameter>items</parameter> is an array with a value
     for each column. If your treestore has three columns, the array should have
     three values.
    </para>
    <para>
     The method returns a <classname>GtkTreeIter</classname> which you can use
     to refer to the entry row; e.g. to use it as a parent for another row.
    </para>
    <para>
     If you pass no parameters at all, an empty row with no values will be
     created, and you have to use other methods like
     <function class="GtkTreeStore">set</function> to change the column values.
    </para>
    <para>
     &seealso;
      <function class="GtkTreeStore">append</function>
      <function class="GtkTreeStore">insert</function>,
      <function class="GtkTreeStore">insert_after</function>,
      <function class="GtkTreeStore">insert_before</function>,
    </para>
   </desc>
  </method>

  <method id="gtk.gtktreestore.method.remove">
   <funcsynopsis>
    <funcprototype>
     <funcdef>bool <function>remove</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Remove a row from the tree.
   </shortdesc>
   <desc>
    <para>
     Removes a row specified by <parameter>iter</parameter> from the tree.
    </para>
   </desc>
  </method>

<!--
  <method id="gtk.gtktreestore.method.reorder">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>reorder</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>
-->
  <method id="gtk.gtktreestore.method.set">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter</parameter></paramdef>
     <paramdef><parameter>column</parameter></paramdef>
     <paramdef><parameter>value</parameter></paramdef>
     <paramdef><parameter><optional>column</optional></parameter></paramdef>
     <paramdef><parameter><optional>value</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Set the values of a row.
   </shortdesc>
   <desc>
    <para>
     Sets the values of the row specified by <parameter>iter</parameter>.
     The parameters have to be pairs, determining the column id and the value
     the column shall be set to.
    </para>
    <para>
     This method is useful when you used
     <function class="GtkTreeStore">insert</function> or one of its siblings
     to create an empty row, or if you want to change multiple columns of a
     row.
    </para>
    <example>
     <title>Setting column values with set()</title>
     <programlisting role="php">
      <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="&directory.examples;/reference/gtk/gtktreestore/set.phpw" parse="text">
       <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
      </xi:include>
     </programlisting>
    </example>
    <para>
     &seealso;
<!--       <function class="GtkTreeStore">set_value</function>, -->
      <function class="GtkTreeStore">append</function>,
      <function class="GtkTreeStore">prepend</function>
    </para>
   </desc>
  </method>
<!--
  <method id="gtk.gtktreestore.method.set_column_types">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_column_types</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktreestore.method.set_valist">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_valist</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>

  <method id="gtk.gtktreestore.method.set_value">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>set_value</function></funcdef>
     <paramdef>void</paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>

   </shortdesc>
   <desc>

   </desc>
  </method>
-->
  <method id="gtk.gtktreestore.method.swap">
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>swap</function></funcdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter1</parameter></paramdef>
     <paramdef><classname>GtkTreeIter</classname> <parameter>iter2</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Swaps two rows.
   </shortdesc>
   <desc>
    <para>
     Swaps two rows on the same level. Works only with unsorted tree stores.
    </para>
   </desc>
  </method>

 <method id="gtk.gtktreestore.method.set_column_types">
    <funcsynopsis>
    <funcprototype>
     <funcdef> <function>set_column_types</function></funcdef>
     <paramdef>array <parameter>columns</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <shortdesc>
    Sets the column types for the tree store.
   </shortdesc>
   <desc>
    <para>
     Sets the column types for the tree store to the types in the array 
     <parameter>columns</parameter>.
    </para>
    <para>
     This method is meant primarily for objects that inherit from 
     <classname>GtkTreeStore</classname>, and should only be used when
     constructing a new <classname>GtkTreeStore</classname>. It will not
     function after a row has been added, or a method on the 
     <classname>GtkTreeModel</classname> interface is called.
    </para>
   </desc>
  </method>
 </methods>
</classentry>
