<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision: 1.1 $ -->
<chapter id="tutorials.changes">
 <title>Промени от PHP-GTK 1</title>

 <sect1>
  <title>Относно този урок</title>
  <simpara>
   В този урок ще разгледаме разликите между PHP-GTK 1 и PHP-GTK 2 - 
   какво беше променено, кое е новото и какво е отпаднало.
  </simpara>
  <simpara>
   PHP-GTK 2 се опитва да бъде съвместима по възможно най-добрият начин с
   версия 1, но поради коренните промени направени във версия 2 на GTK,
   това понякога е невъзможно. Много от нещата в предишната верия не бяха 
   променени, но някои малки, но много важни промени трябва да знаете, за да
   можете успешно да преминете от версия 1 към верия 2 на PHP-GTK.
  </simpara>
 </sect1>

 <sect1 id="tutorials.changes.loadmodule">
  <title>Зареждане на модула php_gtk</title>
  <para>
   В PHP-GTK 1 не знаехте дали модула php-gtk е бил зареден автомотично в PHP от
   конфигурационният фаил <filename>php.ini</filename> или поради лошо 
   конфигуриране на този фаил (най-честият случай), е необходимо да заредите модула ръчно:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
     href="&directory.examples;/tutorials/changes/extension_load.phpw" parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>

  <para>
   Във версия 5 на PHP зареждането на модули чрез <literal>dl()</literal> ще отпадне.
   Този метод все още може да бъде използван, но не е за предпочитане. Можете да предположите, 
   че модулът PHP-GTK е вече зареден или да направите проверка за съществуването на този модул
   и да отпечатите грешка:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
     href="&directory.examples;/tutorials/changes/extension_check.phpw" parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>
 </sect1>

 <sect1 id="tutorials.changes.references">
  <title>Референции на обекти (Амперсант &amp;)</title>
  <para>
   Новото в PHP 4 беше поддръжката на Обектно-Ориентираното (ОО) програмиране, но
   използването му не беше така добре развито, както при някои други еизици за ОО
   програмиране, например JAVA. Когато задавахте дадена променлива беше абсолютно
   необходимо да не правите копие на GTK обектите, а да се използват референциите.
   <programlisting role="php"><![CDATA[
//PHP 4: копирането беше основният процес
$a = new GtkLabel();
$a->set_text('1');
$b = $a;
$b->set_text('2');
echo $a->get();//стойността е все още 1
]]></programlisting>
    За да не правите копие бяхте задължени да използвате амперсант (&amp;):
   <programlisting role="php"><![CDATA[
//PHP 4: създаване на референция (отпратка)
$a = new GtkLabel();
$a->set_text('1');
$b = &$a;
$b->set_text('2');
echo $a->get();//стойността сега е 2
]]></programlisting>
   Въпреки това, копие на обекта <emphasis>се прави</emphasis> при създаването.
   При GTK уйджетите, за да бъдем по ясни, трябва да направите:
   <programlisting role="php"><![CDATA[
//PHP 4: Референция
$a = &new GtkLabel();
]]></programlisting>
  </para>

  <para>
   В PHP 5 нещата бяха променени. Основният метод сега е референцията (не копирането) и
   използването на амперсант вече не е обходимо вече! Следващият скрипт работи със PHP 5
   и GTK 2:
   <programlisting role="php">
    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" 
     href="&directory.examples;/tutorials/changes/ampersand_php5.phpw" parse="text">
     <xi:fallback>FIXME: MISSING XINCLUDE CONTENT</xi:fallback>
    </xi:include>
   </programlisting>
  </para>

  <para>
   Същото се отнася и за callbacks (обратно извикване) - отпада амперсанта!
   При PHP 4 и GTK 1 трябваше да:
   <programlisting role="php"><![CDATA[
$window->connect_object('destroy', array(&$object, 'function'));
]]></programlisting>
   при PHP 5 и GTK 2 амперсанта отпада:
   <programlisting role="php"><![CDATA[
$window->connect_simple('destroy', array($object, 'function'));
]]></programlisting>
  </para>
 </sect1>

 <sect1 id="tutorials.changes.constants">
  <title>Константи в GTK</title>

  <para>
   GTK+ използва многобройни константи. В PHP-GTK 1 те се дефинираха като глобални
   и можеха да бъдат използвани чрез
   <programlisting role="php"><![CDATA[
echo GTK_WIN_POS_CENTER;
]]></programlisting>
   Ако обаче използвате този код в PHP-GTK 2 ще получите следната грешка:
  </para>

  <screen><![CDATA[
PHP Notice:  Use of undefined constant GTK_WIN_POS_CENTER -
assumed 'GTK_WIN_POS_CENTER' in /path/to/file.php on line 23
]]></screen>

  <para>
   Проблемът, е че първоначалната стойност използвана от
   (<literal>GTK_WIN_POS_CENTER</literal> връща стойност
   <literal>1</literal> в PHP-GTK 1). PHP-GTK 2 вижда само текста
   <literal>"GTK_WIN_POS_CENTER"</literal>и това ще доведе до грешка във
   вашият код.
  </para>

  <para>
   Статичните клас константи се поддържат в PHP 5 и така се изчиства кодът. Дефинирането
   им става в класове на <literal>Gtk</literal>, <literal>Gdk</literal> и други.
  </para>

  <para>
   Накратко казано, единстевеното нещо което трябва да направите (в повечето случаи)
   е да замените <literal>долното подчертаване</literal> с двуеточие, така че:
   <literal>GTK_WIN_POS_CENTER</literal> при PHP-GTK 1 да стане
   <literal>Gtk::WIN_POS_CENTER</literal> при PHP-GTK 2. 
  </para>

  <para>
   Забележете също и новият стил на писане на код. Главни букви трябва да си използват
   само за първите букви в <literal>Gtk</literal>, <literal>Gdk</literal>, <literal>Pango</literal>
   и <literal>Atk</literal> константите при официалната дистрибуция на документацията и кода на PHP-GTK 2
   с което се променя техният статус на константи на класа, а не като глобални такива.
  </para>
 </sect1>

 <sect1 id="tutorials.changes.connect">
  <title>Свързване на сигнали</title>

  <para>
   За да свържете сигналите към определена функция при PHP-GTK 1 кода, можехте да ползвате
   <function class="GtkObject">connect</function>,
   <function class="GtkObject">connect_object</function>,
   <function class="GtkObject">connect_after</function> или
   <function class="GtkObject">connect_object_after</function>.
   Особено функцията <literal>connect_object</literal>, не беше много ясна вначалото.
  </para>

  <para>
   Следвайки промените направени в API сигналите на GTK signals API, бе взето решени
   да се преименуват <literal>connect_object</literal> на
   <function class="GtkObject">connect_simple</function> и
   <literal>connect_object_after</literal> на
   <function class="GtkObject">connect_simple_after</function> в PHP-GTK 2.
   <emphasis>Простичко</emphasis>, това довежда до по-малко параметри на функцията, тъй като
   обектите вече не са във функциите - нещо което трябваще да прави
   <literal>connect_object</literal>, но не го правеше.
  </para>
 </sect1>

 <sect1 id="tutorials.changes.deprecated">
  <title>Отхвърлени уйджети</title>

  <simpara>
   GTK 2 има много нови уйджет класове.По-голявата часто от новите класове правят нещи по-добро
   или по-различно от старите класове и така старите класове отпаднаха.
  </simpara>

  <simpara>
   За да се запази съвместимостта със старата версия, старите уйджети все още
   могат да се ползват, но е почти сигурно, че ще бъдат премахнати във версия 3 на GTK 3.
   Това не означава, че трябва да пренапишете старите си програми отново. Желателно е обаче
   в новият си код на програмата да не се използват. Простичко казано - ако не искате да
   Ви боли главата просто избягвайте отхверлените уйджети занапред.
  </simpara>

<!-- xsltproc segfaults when I uncomment the table!
     Because of that I used the unordered list.
  <table>
   <title>Лист с отхвърлените уйджети/title>
   <tgroup>
    <thead>
     <row>
      <entry>Старите Класове Уйджети</entry>
      <entry>Нови Класове Уйджеути</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><classname>GtkCList</classname></entry>
      <entry><classname>GtkTreeView</classname> със <classname>GtkListStore</classname></entry>
     </row>
     <row>
      <entry><classname>GtkCTree</classname></entry>
      <entry><classname>GtkTreeView</classname> със <classname>GtkTreeStore</classname></entry>
     </row>
     <row>
      <entry><classname>GtkPixmap</classname></entry>
      <entry><classname>GtkImage</classname> със <classname>GdkPixbuf</classname></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
-->

  <para>
   <itemizedlist>
    <title>Листа с отхвърлените уйджети</title>
    <listitem>
     <classname>GtkCList</classname> и <classname>GtkList</classname> =>
     <classname>GtkTreeView</classname> със <classname>GtkListStore</classname>
    </listitem>
    <listitem>
     <classname>GtkCTree</classname> =>
     <classname>GtkTreeView</classname> със <classname>GtkTreeStore</classname>
    </listitem>
    <listitem>
     <classname>GtkCombo</classname> и <classname>GtkOptionMenu</classname> =>
     <classname>GtkComboBox</classname> със <classname>GtkTreeModel</classname>
    </listitem>
    <listitem>
     <classname>GtkItemFactory</classname> =>
     <classname>GtkUIManager</classname>
    </listitem>
    <listitem>
     <classname>GtkOldEditable</classname> =>
     <classname>GtkEditable</classname>
    </listitem>
    <listitem>
     <classname>GtkPixmap</classname> и <classname>GtkPreview</classname> =>
     <classname>GtkImage</classname> със <classname>GdkPixbuf</classname>
    </listitem>
    <listitem>
     <literal>GtkText</literal> =>
     <classname>GtkTextView</classname> със <classname>GtkTextBuffer</classname>
    </listitem>
   </itemizedlist>
   </para>
  <para>
   <itemizedlist>
    <title>Листа с отхвърлените методи</title>
    <listitem>
     <function class="GtkWindow">set_policy</function> => 
     <function classname="GtkWindow">set_resizable</function>
    </listitem>
   </itemizedlist>
  </para>
  <simpara>
   Тези листи може да не са пълни. Ако откриете някой отхвърлен уйджет,
   който не е споменат в по-горе изброените листи, Ви умоляваме да ни пишете
   на <ulink url="mailto:php-gtk-doc@lists.php.net">php-gtk-doc</ulink>.
  </simpara>
 </sect1>

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
