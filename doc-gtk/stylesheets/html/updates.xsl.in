<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:saxon="http://icl.com/saxon"
                xmlns:lxslt="http://xml.apache.org/xslt"
                xmlns:xalanredirect="org.apache.xalan.xslt.extensions.Redirect"
                xmlns:doc="http://nwalsh.com/xsl/documentation/1.0"
                version="1.1"
                exclude-result-prefixes="doc"
                extension-element-prefixes="saxon xalanredirect lxslt">

<!-- This stylesheet works with Saxon and Xalan; for XT use xtchunk.xsl -->

<xsl:output method="html"
            encoding="UTF-8"
            indent="no"/>

<xsl:strip-space elements="*"/>

<xsl:template name="last">
 <xsl:param name="nodes"/>
 <xsl:param name="titlename"/>
 <xsl:for-each select="$nodes">
  <xsl:text disable-output-escaping="yes">&amp;#0149; </xsl:text>
  <xsl:variable name="id"><xsl:value-of select="@id"/></xsl:variable>
  <a href="http://gtk.php.net/manual/@LANG@/{$id}.php" date="">
  <xsl:value-of select="descendant::*[name()=$titlename]"/>
  </a>
  <xsl:if test="contains(@id, 'tutorial')"> (tutorial)</xsl:if>
  <xsl:if test="contains(@id, 'appendix')"> (appendix)</xsl:if>
  <xsl:text> [</xsl:text>@LANG@<xsl:text disable-output-escaping="yes">]&lt;br /&gt;</xsl:text>
  <xsl:text>
  </xsl:text>
 </xsl:for-each>
</xsl:template>

<!--
aiming for this output:
&#0149; <a href="http://gtk.php.net/manual/en/gtk.gtklayout.php" date="">GtkLayout</a> [en]<br />
date needs adding in via sed during updates build, and &nbsp;[en] needs stripping;
final file entries should be:
&#0149; <a href="http://gtk.php.net/manual/en/gtk.gtklayout.php" date="20050710">GtkLayout</a><br />
and either PHP or sed will be used to limit the number of entries to 15.

On the server, we'll need:
<div id="docsupdates">
<h3>Docs Updates</h3>
<p>
...
</p>
</div>
-->

<xsl:template match="book">
  <xsl:call-template name="last">
   <xsl:with-param name="nodes" select="./classset/classentry"/>
   <xsl:with-param name="titlename">classtitle</xsl:with-param>
  </xsl:call-template>
  <xsl:call-template name="last">
   <xsl:with-param name="nodes" select="//refentry"/>
   <xsl:with-param name="titlename">refentrytitle</xsl:with-param>
  </xsl:call-template>
  <xsl:call-template name="last">
   <xsl:with-param name="nodes" select="//chapter"/>
   <xsl:with-param name="titlename">title</xsl:with-param>
  </xsl:call-template>
  <xsl:call-template name="last">
   <xsl:with-param name="nodes" select="//appendix"/>
   <xsl:with-param name="titlename">title</xsl:with-param>
  </xsl:call-template>
</xsl:template>

</xsl:stylesheet>
