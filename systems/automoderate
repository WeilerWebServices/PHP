#!/bin/sh

PATH="/usr/local/bin:/usr/local/bin/ezmlm:$PATH"
SA="/var/qmail/alias/self-approved"
SENDER=`echo $SENDER | sed -e 's/ //'`

# yeah, this is pretty lame, security-wise. whatever. :)
hash=`echo -n PhPSeCrEt$SENDER | md5 | cut -d ' ' -f 1`
clean=`echo -n $SENDER | sed -e 's/@/=/'`

# send a message to the person telling them they have to confirm
sender="confirm-bounce-$hash-$clean@php.net"

if [ "$SENDER" = "postmaster" -o -z "$SENDER" ]; then
  exit 0
fi

# allow lists.php.net mail through
if echo $SENDER | grep -q -e '@lists.php.net'; then
  exit 0
fi

# if we know who this is, allow it through
if ezmlm-issubn $SA; then
  exit 0
fi

# if a confirmation mail has already bounced, send an appropriate message
if ezmlm-issubn "$SA/bounced"; then
  /var/qmail/bin/qmail-inject -f$sender <<MAIL
From: PHP Automoderator <confirm@php.net>
To: $SENDER
Reply-To: <confirm@php.net>
Subject: PHP posting confirmation for $SENDER

This is an automatic reply to an email you sent to a PHP project
mailing address protected by our 'self-moderation' system. To reduce
the amount of spam received at these addresses, we require you to
confirm that you're a real person before your email will be allowed
through.

Unfortunately, we got a bounce for one of the confirmation emails we
already sent, so you've been added to the list of addresses which will
get bounced immediately.

In order to have yourself added to the list of real email addresses,
and removed from the list of those who have bounced, you need to
send an email to confirm@php.net with the following text (square
brackets and all):

[confirm: $hash $SENDER]

which you should be able to do simply by replying to this email.
(Don't worry, any leading text added for quoting will simply be
ignored.)

After we have received your confirmation, "$SENDER"
will be added to the list of pre-approved mail addresses for all of
the PHP project mail addresses and future emails from that address
will be delivered without delay automatically.

You will not receive any confirmation of your confirmation -- future
messages will simply be sent along without delay.

Sorry for the hassle, but the volume of unsolicited commercial email
sent to these addresses has made this step necessary.

--- Your original email is below.

$(cat /dev/stdin)
MAIL

  # consider the message delivered
  exit 99
fi

# if we already have a mail pending from this person, just ignore it.
if ezmlm-issubn "$SA/pending"; then
  echo timed out waiting for confirmation that $SENDER is real
  exit 111
fi

# record the pending status of the email address
ezmlm-sub "$SA/pending" "$SENDER"

# this is very odd redirection. someday /bin/sh programming will make sense.
/var/qmail/bin/qmail-inject -f$sender <<MAIL
From: PHP Automoderator <confirm@php.net>
To: $SENDER
Reply-To: <confirm@php.net>
Subject: PHP posting confirmation for $SENDER

This is an automatic reply to an email you sent to a PHP project
mailing address protected by our 'self-moderation' system. To reduce
the amount of spam received at these addresses, we require you to
confirm that you're a real person before your email will be allowed
through.

All you have to do in order to have your original message sent is
send an email to confirm@php.net with the following text (square
brackets and all):

[confirm: $hash $SENDER]

which you should be able to do simply by replying to this email.
(Don't worry, any leading text added for quoting will simply be
ignored.)

After we have received your confirmation, "$SENDER"
will be added to the list of pre-approved mail addresses for all of
the PHP project mail addresses, your original message will be
delivered, and future emails from that address will be delivered
without delay automatically.

You will not receive any confirmation of your confirmation -- your
original message (and any other messages you have sent since then)
will simply be sent to its original destination (possibly after a
short delay).

Sorry for the hassle, but the volume of unsolicited commercial email
sent to these addresses has made this step necessary.

--- Your original email is below.

$(cat /dev/stdin)
MAIL

# and just give a temporary failure so the mail will be delivered
# when it can be.
exit 111
