<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 339155 Maintainer: felipe Status: ready -->
<section xml:id="pdo-mysql.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &pdo.driver-constants;
 <variablelist>
  <varlistentry xml:id="pdo.constants.mysql-attr-use-buffered-query">
   <term>
    <constant>PDO::MYSQL_ATTR_USE_BUFFERED_QUERY</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Se esse atributo é definido como &true; em um
     <classname>PDOStatement</classname>, o driver MySQL usará a
     versão bufferizada da API do MySQL. Se você está escrevendo um código portável, você
     deve usar <function>PDOStatement::fetchAll</function>.
    </simpara>
    <para>
     <example><title>Forçando queries a serem bufferizadas no mysql</title>
     <programlisting role="php">
<![CDATA[
<?php
if ($db->getAttribute(PDO::ATTR_DRIVER_NAME) == 'mysql') {
    $stmt = $db->prepare('select * from foo',
        array(PDO::MYSQL_ATTR_USE_BUFFERED_QUERY => true));
} else {
    die("my application only works with mysql; I should use \$stmt->fetchAll() instead");
}
?>
]]>
      </programlisting>
     </example>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-local-infile">
   <term>
    <constant>PDO::MYSQL_ATTR_LOCAL_INFILE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Habilita <literal>LOAD LOCAL INFILE</literal>.
    </para>
    <para>
     Note que essa constante só pode ser usada no array <parameter>driver_options</parameter> 
     ao construir um novo manipulador de banco de dados.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-init-command">
   <term>
    <constant>PDO::MYSQL_ATTR_INIT_COMMAND</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Comando para executar ao se conectar no servidor MySQL. Irá
     ser executado novamente ao reconectar.
    </para>
    <para>
     Note que essa constante só pode ser usada no array <parameter>driver_options</parameter> 
     ao construir um novo manipulador de banco de dados.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-read-default-file">
   <term>
    <constant>PDO::MYSQL_ATTR_READ_DEFAULT_FILE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Lê configurações do arquivo definido nas opções ao invés do arquivo
     <filename>my.cnf</filename>. Essa opção não está disponível se
     mysqlnd for usado, porque mysqlnd não lê os arquivos de
     configurações do mysql.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-read-default-group">
   <term>
    <constant>PDO::MYSQL_ATTR_READ_DEFAULT_GROUP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Lê configurações do grupo nomeado em <filename>my.cnf</filename> ou no
     arquivo especificado com <constant>MYSQL_READ_DEFAULT_FILE</constant>. Essa opção
     não está disponível se mysqlnd for usado, porque mysqlnd não lê os arquivos de
     configurações do mysql.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-max-buffer-size">
   <term>
    <constant>PDO::MYSQL_ATTR_MAX_BUFFER_SIZE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Tamanho máximo do buffer. O padrão é 1 MiB. Essa constante não é suportada quando
     utilizado mysqlnd.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-direct-query">
   <term>
    <constant>PDO::MYSQL_ATTR_DIRECT_QUERY</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Executa queries diretamente, não usa prepared statements.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-found-rows">
   <term>
    <constant>PDO::MYSQL_ATTR_FOUND_ROWS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Retorna a quantidade de linhas encontradas (matched), e não a
     quantidade de linhas modificadas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-ignore-space">
   <term>
    <constant>PDO::MYSQL_ATTR_IGNORE_SPACE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Permite espaços depois do nome das funções. Torna o nome de todas as funções
     palavras reservadas.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="pdo.constants.mysql-attr-compress">
   <term>
    <constant>PDO::MYSQL_ATTR_COMPRESS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Habilita a compressão na comunicação de rede. Também é suportado quando é
     compilado usando mysqlnd a partir do PHP 5.3.11.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-ca">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CA</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Caminho para o arquivo da autoridade certificadora (CA) SSL.
    </para>
    <para>
     &version.exists.asof; 5.3.7.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-capath">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CAPATH</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Caminho para o diretório que contém os certificados SSL confiáveis da autoridade
     certificadora (CA), armazenados no formato PEM.
    </para>
    <para>
     &version.exists.asof; 5.3.7.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-ssl-cert">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CERT</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Caminho para o certificado SSL.
    </para>
    <para>
     &version.exists.asof; 5.3.7.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-cipher">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_CIPHER</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Uma lista de um ou mais "ciphers" admissíveis para usar na encriptação SSL, em um formato
     compreendido pelo OpenSSL. For example: <literal>DHE-RSA-AES256-SHA:AES128-SHA</literal>
    </para>
    <para>
     &version.exists.asof; 5.3.7.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-key">
   <term>
    <constant>PDO::MYSQL_ATTR_SSL_KEY</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Caminho para a chave SSL.
    </para>
    <para>
     &version.exists.asof; 5.3.7.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="pdo.constants.mysql-attr-multi-statements">
   <term>
    <constant>PDO::MYSQL_ATTR_MULTI_STATEMENTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <para>
     Desabilita a execução de queries múltiplas nas funções <function>PDO::prepare</function>
     e <function>PDO::query</function> quando definido como &false;.
    </para>
    <para>
     Note que essa constante só pode ser usada no array <parameter>driver_options</parameter> 
     ao construir um novo manipulador de banco de dados.
    </para>
    <para>
     &version.exists.asof; 5.5.21 and PHP 5.6.5.
    </para>
   </listitem>
  </varlistentry>

 </variablelist>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
