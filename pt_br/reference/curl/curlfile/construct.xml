<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 336593 Maintainer: fabioluciano Status: ready -->

<refentry xml:id="curlfile.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CURLFile::__construct</refname>
  <refname>curl_file_create</refname>
  <refpurpose>Criar um objeto CURLFile</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis>
   <modifier>public</modifier> <methodname>CURLFile::__construct</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>mimetype</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>postname</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>CURLFile</type><methodname>curl_file_create</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>mimetype</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>postname</parameter></methodparam>
  </methodsynopsis>
  <para>
   Cria um objeto <classname>CURLFile</classname>, usado para o upload de um arquivo <constant>CURLOPT_POSTFIELDS</constant>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>filename</parameter></term>
    <listitem>
     <para>
      Caminho para onde arquivo que ser√° enviado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>mimetype</parameter></term>
    <listitem>
     <para>
      O mimetype do arquivo.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>postname</parameter></term>
    <listitem>
     <para>
      Nome do arquivo a ser usado nos dados de upload.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um objeto <classname>CURLFile</classname>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>CURLFile::__construct</function> example</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
/* http://example.com/upload.php:
<?php var_dump($_FILES); ?>
*/

// Cria um manipulador cURL
$ch = curl_init('http://example.com/upload.php');

// Cria um objeto CURLFile
$cfile = new CURLFile('cats.jpg','image/jpeg','test_name');

// Atribui dados ao POST
$data = array('test_file' => $cfile);
curl_setopt($ch, CURLOPT_POST,1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

// Executa o manipulador
curl_exec($ch);
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
/* http://example.com/upload.php:
<?php var_dump($_FILES); ?>
*/

// Cria um manipulador cURL
$ch = curl_init('http://example.com/upload.php');

// Cria um objeto CURLFile
$cfile = curl_file_create('cats.jpg','image/jpeg','test_name');

// Atribui dados ao POST
$data = array('test_file' => $cfile);
curl_setopt($ch, CURLOPT_POST,1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

// Executa o manipulador
curl_exec($ch);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
array(1) {
  ["test_file"]=>
  array(5) {
    ["name"]=>
    string(9) "test_name"
    ["type"]=>
    string(10) "image/jpeg"
    ["tmp_name"]=>
    string(14) "/tmp/phpPC9Kbx"
    ["error"]=>
    int(0)
    ["size"]=>
    int(46334)
  }
}
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
