<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 297028 Maintainer: simionea Status: ready -->
<!-- CREDITS: adiju -->

<refentry xml:id="function.array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array</refname>
  <refpurpose>Creează un tablou</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Creează un tablou. Citiți secțiunea despre
   <link linkend="language.types.array">tipul array</link> pentru informații
   suplimentare despre ce este un tablou.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Sintaxa "indice =&gt; valori", separate prin virgule, definesc indicii
       și valorile. Indicele poate fi de tip string sau integer. Când indicele
       este omis, este generat automat un indice de tip integer, începând cu 0.
       Dacă indicele este de tip integer, următorul indice generat va fi cel
       mai mare indice întreg + 1. Observați că atunci când sunt definiți doi
       indici identici, ultima definiție se suprapune peste prima.
      </para>
      <para>
       Plasarea unei virgule după ultima înregistrare definită în tablou este
       o sintaxă validă, cu toate că este neobișniută.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Întoarce un tablou al parametrilor. Parametrilor le poate fi asociat un
   indice cu ajutorul operatorului <literal>=&gt;</literal>. Citiți
   secțiunea despre <link linkend="language.types.array">tipul array</link>
   pentru informații suplimentare despre ce este un tablou.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Următorul exemplu demonstrează cum se creează un tablou bidimensional, cum
   se specifică cheile pentru tablourile asociative și cum se sare peste
   indicii numerici în tablouri obișnuite.
   <example>
    <title>Exemplu <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$diverse = array (
    "fructe"  => array("a" => "portocală", "b" => "banană", "c" => "măr"),
    "numere" => array(1, 2, 3, 4, 5, 6),
    "gauri"   => array("prima", 5 => "a doua", "a treia")
);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Indexarea automată cu <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array(1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Observați că indicele '3' este definit de două ori și își păstrează valoarea
   finală 13. Indicele '4' este definit după indicele '8' și următorul indice
   generat (valoarea 19) este '9', deoarece cel mai mare indice a fost '8'.
  </para>
  <para>
   Acest exemplu creează un tablou cu indicele începând cu 1.
   <example>
    <title>Indicele începând cu 1 cu ajutorul <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$firstquarter = array(1 => 'January', 'February', 'March');
print_r($firstquarter);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [1] => January
    [2] => February
    [3] => March
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Ca și în Perl, puteți accesa o valoare din tablou între ghilimele duble.
   Însă cu PHP va trebui să introduceți tabloul între paranteze figurate.
   <example>
    <title>Accesarea unui tablou între ghilimele duble</title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Salut, {$foo['bar']}!"; // Salut, baz!

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   <note>
    <para>
     <function>array</function> este o construcție a limbajului utilizată
     pentru a reprezenta tablouri literale, și nu o funcție obișnuită.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_pad</function></member>
    <member><function>list</function></member>
    <member><function>count</function></member>
    <member><function>range</function></member>
    <member>&foreach;</member>
    <member>Tipul <link linkend="language.types.array">array</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
