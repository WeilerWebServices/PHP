<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 297028 Maintainer: alexxed Status: ready -->

<chapter xml:id="mbstring.php4.req" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Cerințe pentru codarea caracterelor în PHP</title>
 <para>
  Următoarele codări pot fi folosite în siguranță cu PHP.
  <itemizedlist>
   <listitem>
    <para>
     Orice codare de caractere pe un singur octet,
     <itemizedlist>
      <listitem>
       <simpara>
        care are mapări compatibile ASCII (compatibile cu standardul ISO646)
        pentru caracterele de la <literal>00h</literal> la
        <literal>7fh</literal>.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
   <listitem>
    <para>
     Orice codare de caractere pe mai mulți octeți,
     <itemizedlist>
      <listitem>
       <simpara>
        care are mapări compatibile ASCII pentru caracterele de la
        <literal>00h</literal> la <literal>7fh</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        care nu utilizează secvențe de de evadare ISO2022.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        care nu folosesc o valoare de la <literal>00h</literal> la
        <literal>7fh</literal> în octeții de compunere care reprezintă un
        singur caracter.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  Acestea sunt exemple de codări de caractere care probabil nu merg în PHP.
  <informalexample>
   <programlisting>
<![CDATA[
JIS, SJIS, ISO-2022-JP, BIG-5
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Deși s-ar putea ca scripturile PHP scrise în orice codare de mai sus
  să nu meargă, în special în cazul în care stringuri codate apar ca identificatori
  sau literalmente în scripturi, puteți evita alte probleme cu aceste codări
  stabilind în <literal>mbstring</literal> o funcție-filtru de conversie
  transparentă a codificării pentru interpelările venite prin HTTP.
 </para>
 <note>
  <para>
   Nu folosiți SJIS, BIG5, CP936, CP949 și GB18030 pentru codarea internă decât dacă
   sunteți familiarizat(ă) cu parser-ul, scanerul și codarea de caractere.
  </para>
 </note>
 <note>
  <para>
   Dacă vă conectați la o bază de date cu PHP, este recomandat să folosiți aceași
   codare de caractere atât pentru baza de date cât și pentru
   <literal>codarea internă</literal> pentru ușurință în utilizare și o performanță
   mai bună.
  </para>
  <para>
   Dacă folosiți PostgreSQL, codarea de caractere folosită în baza de date ar putea
   diferi față de cea folosită în PHP deoarece suportă conversia automată a setului
   de caractere între backend și frontend.
  </para>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
