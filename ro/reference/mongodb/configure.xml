<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 350928 Maintainer: simionea Status: ready -->

<article xml:id="mongodb.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.install;

 <section xml:id="mongodb.installation.pecl">
  <title>Instalarea driver-ului PHP MongoDB cu PECL</title>

  <para>
   &pecl.info;
   <link xlink:href="&url.pecl.package;mongodb">&url.pecl.package;mongodb</link>
  </para>

  <para>
   Utilizatorii Linux, Unix și macOS pot rula următoarea comandă pentru a instala
   driver-ul:
   <programlisting role="shell">
<![CDATA[
$ sudo pecl install mongodb
]]>
   </programlisting>
  </para>

  <para>
   Dacă sistemul dumneavoastră are instalate multiple versiuni PHP (de ex. macOS
   implicit, Homebrew, <link xlink:href="&url.xampp;">XAMPP</link>), atrageți
   atenția că fiecare versiune PHP își are propria comandă
   <link linkend="install.pecl">pecl</link> și fișier &php.ini;.
  </para>

  <para>
   Instalarea driver-ului cu ajutorul PECL va utiliza versiunile încorporate ale
   bibliotecilor <link xlink:href="&url.mongodb.libbson;">libbson</link> și
   <link xlink:href="&url.mongodb.libmongoc;">libmongoc</link> și va încerca
   configurarea lor automată.
  </para>

  <note>
   <simpara>
    Dacă procesul de asamblare nu găsește o bibliotecă SSL, verificați dacă
    pachetele de dezvoltare (de ex. <literal>libssl-dev</literal>) și
    <link xlink:href="&url.mongodb.wiki.pkg-config;">pkg-config</link> sunt
    instalate. Dacă aceasta nu soluționează problema, considerați procesul de
    <link linkend="mongodb.installation.manual">instalare manuală</link>.
   </simpara>
  </note>

  <para>
   În final, adăugați următoarea linie în fișierul &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=mongodb.so
]]>
   </programlisting>
  </para>
 </section>

 <section xml:id="mongodb.installation.homebrew">
  <title>Instalarea driver-ului PHP MongoDB pe macOS cu Homebrew</title>

  <para>
   <link xlink:href="https://brew.sh/2018/01/19/homebrew-1.5.0/">Homebrew 1.5.0</link>
   a învechit <link xlink:href="&url.mac.homebrew;">Homebrew/php tap</link>
   și a eliminat formulele pentru extensiile individuale PHP. De aici încolo,
   utilizatorii macOS sunt sfătuiți să instaleze formula
   <link xlink:href="https://formulae.brew.sh/formula/php">php</link> și să urmeze
   <link linkend="mongodb.installation.pecl">Instrucțiunile de instalare PECL</link>
   standarde utilizând comanda <link linkend="install.pecl">pecl</link> oferită
   de instalarea PHP Homebrew.
  </para>
 </section>

 <section xml:id="mongodb.installation.windows">
  <title>Instalarea driver-ului PHP MongoDB pe Windows</title>

  <para>
   În <link xlink:href="&url.pecl.package;mongodb">PECL</link> sunt disponibile
   binare precompilate pentru o varietate de combinații ale versiunilor,
   siguranței față de firele de execuție multiple și biblioteci VC. Extrageți
   arhiva și puneți <filename>php_mongodb.dll</filename> în directorul cu extensii
   PHP (implicit "ext").
  </para>

  <para>
   Adăugați următoarea linie în fișierul &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=php_mongodb.dll
]]>
   </programlisting>
  </para>

  <note>
   <title>Dependențe DLL suplimentare pentru utilizatori Windows</title>
   <para>
    &ext.windows.path.dll;
    <filename>libsasl.dll</filename>
   </para>
  </note>
 </section>

 <section xml:id="mongodb.installation.manual">
  <title>Asamblarea driver-ului PHP MongoDB din cod-sursă</title>

  <para>
   Dezvoltatorii de drivere și persoanele interesate de ultimele bugfix-uri pot
   compila driver-ul din cel mai recent cod-sursă de pe
   <link xlink:href="&url.mongodb.github.new;">Github</link>. Rulați următoarele
   comenzi pentru a clona și a asambla proiectul:
   <programlisting role="shell">
<![CDATA[
$ git clone https://github.com/mongodb/mongo-php-driver.git
$ cd mongo-php-driver
$ git submodule update --init
$ phpize
$ ./configure
$ make all
$ sudo make install
]]>
   </programlisting>
  </para>

  <para>
   Dacă sistemul dumneavoastră are instalate versiuni PHP multiple (de ex. macOS
   implicit <emphasis>și</emphasis> <link xlink:href="&url.xampp;">XAMPP</link>),
   atrageți atenția că fiecare versiune PHP are propria comandă
   <link linkend="install.pecl.phpize">phpize</link> și fișierul &php.ini;.
  </para>

  <para>
   Implicit driver-ul va folosi versiunile încorporate ale
   <link xlink:href="&url.mongodb.libbson;">libbson</link>,
   <link xlink:href="&url.mongodb.libmongoc;">libmongoc</link> și
   <link xlink:href="&url.mongodb.libmongocrypt;">libmongocrypt</link> și va
   încerca să le configureze. Dacă aceste biblioteci sunt deja instalate ca
   biblioteci de sistem, puteți instrui driver-ul să le utilizeze specificând
   <literal>--with-libbson=yes --with--libmongoc=yes</literal> ca argumente pentru
   <literal>configure</literal>. Începând cu versiunea 1.7.0 a extensiei, aceste
   argumente sunt învechite și ar trebui să utilizați în loc
   <literal>--with-mongodb-system-libs=yes</literal>.
  </para>

  <para>
   Pentru a obține o listă completă a opțiunilor <literal>configure</literal>,
   executați <command>configure --help</command>.
  </para>

  <para>
   La utilizarea versiunilor încorporate ale biliotecilor libbson și libmongoc,
   driver-ul de asemenea va încerca să selecteze o bibliotecă SSL în conformitate
   cu opțiunea <literal>--with-mongodb-ssl</literal> pentru
   <literal>configure</literal>. Valoarea implicită este
   <literal>--with-mongodb-ssl=auto</literal>, ce va face să fie căutată Secure
   Transport (doar pe macOS), OpenSSL și LibreSSL în această ordine. În plus,
   puteți specifica <literal>openssl</literal>, <literal>libressl</literal> sau
   <literal>darwin</literal> pentru a forța selectarea respectivă a unei anumite
   biblioteci.
  </para>

  <note>
   <para>
    Dacă procesul de asamblare nu găsește o bibliotecă SSL verificați dacă
    pachetele de dezvoltare (de ex. <literal>libssl-dev</literal>) și
    <link xlink:href="&url.mongodb.wiki.pkg-config;">pkg-config</link> sunt
    instalate.
   </para>

   <para>
    La utilizarea Homebrew pe macOS, este un lucru obișnuit ca un sistem să aibă
    instalate multiple versiuni OpenSSL. Pentru a vă asigura că este selectată
    versiunea dorită OpenSSL, variabila de mediu <literal>PKG_CONFIG_PATH</literal>
    poate fi folosită pentru a controla calea de căutare pentru
    <literal>pkg-config</literal>. Dacă <literal>pkg-config</literal> nu este
    utilizat, <literal>configure</literal> de asemenea susține un argument
    <literal>--with-openssl-dir=DIR</literal>, care poate fi utilizat pentru a
    specifica manual calea de căutare (doar pentru OpenSSL).
   </para>
  </note>

  <para>
   Etapa finală a asamblării, <command>make install</command>, va raporta unde a
   fost instalată <filename>mongodb.so</filename>, similar cu:
   <programlisting role="txt">
<![CDATA[
Installing shared extensions:     /usr/lib/php/extensions/debug-non-zts-20151012/
]]>
   </programlisting>
  </para>

  <para>
   Asigurați-vă că opțiunea <link linkend="ini.extension-dir">extension_dir</link>
   din &php.ini; indică către directorul unde <filename>mongodb.so</filename> a
   fost instalat. Puteți afla valoarea opțiunii cu următoarea comandă:
   <programlisting role="shell">
<![CDATA[
$ php -i | grep extension_dir
  extension_dir => /usr/lib/php/extensions/debug-non-zts-20151012 =>
                   /usr/lib/php/extensions/debug-non-zts-20151012
]]>
   </programlisting>
  </para>

  <para>
   Dacă directoarele diferă schimbați
   <link linkend="ini.extension-dir">extension_dir</link> din &php.ini; sau
   deplasați manual <filename>mongodb.so</filename> în directorul corect.
  </para>

  <para>
   În final, adăugați următoarea linie în fișierul &php.ini;:
   <programlisting role="ini">
<![CDATA[
extension=mongodb.so
]]>
   </programlisting>
  </para>
 </section>

</article>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
