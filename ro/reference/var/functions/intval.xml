<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 350653 Maintainer: simionea Status: ready -->
<!-- CREDITS: adiju -->

<refentry xml:id="function.intval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>intval</refname>
  <refpurpose>Obține valoarea întreagă a unei variabile</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>intval</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>10</initializer></methodparam>
  </methodsynopsis>
  <para>
   Întoarce valoarea de tip <type>integer</type> a parametrului
   <parameter>var</parameter>, utilizând baza
   <parameter>base</parameter> specificată pentru a efectua conversia (baza
   implicită este 10). <function>intval</function> nu trebuie utilizat asupra
   obiectelor, deoarece aceasta va provoca o eroare de nivel
   <constant>E_NOTICE</constant> și va întoarce 1.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Valoarea scalară ce va fi convertită într-un integer
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       Baza pentru efectuarea conversiei
      </para>
      <note>
       <para>
        Dacă <parameter>base</parameter> este 0, atunci baza utilizată este
        determinată cu ajutorul formatului <parameter>var</parameter>:
        <itemizedlist>
         <listitem>
          <simpara>
           dacă șirul conține prefixul "0x" (sau "0X"), baza este considerată
           16 (hexazecimală); în caz contrar,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           dacă șirul începe cu "0", baza este considerată 8 (octală); în caz
           contrar,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           baza este considerată 10 (zecimală).
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Valoarea întreagă a <parameter>var</parameter> în cazul succesului sau 0 în
   caz de eșec. Tablourile vide întorc 0, tablourile nevide întorc 1.
  </para>
  <para>
   Valoarea maximală depinde de sistem. Sistemele pe 32 biți au diapazonul
   maxim al numerelor întregi cu semn de la -2147483648 până la 2147483647.
   Deci, de exemplu, pe un așa sistem <literal>intval('1000000000000')</literal>
   va întoarce 2147483647. Valoarea maximă pentru numerele întregi cu semn pe
   sistemele pe 64 biți este 9223372036854775807.
  </para>
  <para>
   String-urile cel mai probabil vor întoarce 0, cu toate că aceasta depinde de
   caracterul cel mai din stânga din string. Regulile obișnuite pentru
   <link linkend="language.types.integer.casting">transformările integer</link>
   se aplică în acest caz.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple <function>intval</function></title>
    <para>
     Următoarele exemple se bazează pe un sistem de 32 de biți.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
echo intval(42);                      // 42
echo intval(4.2);                     // 4
echo intval('42');                    // 42
echo intval('+42');                   // 42
echo intval('-42');                   // -42
echo intval(042);                     // 34
echo intval('042');                   // 42
echo intval(1e10);                    // 1410065408
echo intval('1e10');                  // 1
echo intval(0x1A);                    // 26
echo intval(42000000);                // 42000000
echo intval(420000000000000000000);   // 0
echo intval('420000000000000000000'); // 2147483647
echo intval(42, 8);                   // 42
echo intval('42', 8);                 // 34
echo intval(array());                 // 0
echo intval(array('foo', 'bar'));     // 1
echo intval(false);                   // 0
echo intval(true);                    // 1
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Parametrul <parameter>base</parameter> are efect numai dacă parametrul
    <parameter>var</parameter> este un string.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>boolval</function></member>
    <member><function>floatval</function></member>
    <member><function>strval</function></member>
    <member><function>settype</function></member>
    <member><function>is_numeric</function></member>
    <member><link linkend="language.types.type-juggling">Manipularea tipurilor</link></member>
    <member><link linkend="ref.bc">Funcțiile matematice de precizie arbitrară BCMath</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
