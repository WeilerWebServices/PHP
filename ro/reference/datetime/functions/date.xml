<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 350653 Maintainer: simionea Status: ready -->
<!-- CREDITS: adiju -->

<refentry xml:id="function.date" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>date</refname>
  <refpurpose>Formatează o oră/dată</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>date</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timestamp</parameter><initializer>time()</initializer></methodparam>
  </methodsynopsis>
  <para>
   Întoarce un string formatat în conformitate cu string-ul de formatare dat,
   utilizând <parameter>timestamp</parameter>-ul întreg dat, sau data și ora
   curentă dacă nu este furnizat nici un timestamp. Cu alte cuvinte,
   <parameter>timestamp</parameter> este opțional și implicit are valoarea
   întoarsă de <function>time</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>format</parameter></term>
    <listitem>
     <para>
      Format acceptat de <function>DateTimeInterface::format</function>.
     </para>
    </listitem>
   </varlistentry>

   &date.timestamp.description;

  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Întoarce un string cu dată formatat. Dacă este utilizată o valoare
   non-numerică pentru <parameter>timestamp</parameter>, este întors &false;
   și este emisă o eroare de nivel <constant>E_WARNING</constant>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;

   &date.timezone.errors.description;

 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemple <function>date</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Stabilește fusul orar implicit. Disponibil începând cu PHP 5.1
date_default_timezone_set('UTC');

// Afișează ceva de felul: Monday
echo date("l");

// Afișează ceva de felul: Monday 8th of August 2005 03:12:46 PM
echo date('l jS \of F Y h:i:s A');

// Afișează: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));

/* utilizarea constantelor în parametrul format */
// Afișează ceva de felul: Wed, 25 Sep 2013 15:28:57 -0700
echo date(DATE_RFC2822);

// Afișează ceva de felul: 2000-07-01T00:00:00+00:00
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Puteți preveni ca un caracter recunoscut în string-ul de formatare să fie
   expandat prin prefixarea lui cu un backslash. Dacă caracterul cu backslash
   de acum este o secvență specială, va trebui de asemenea să prefixați
   backslash-ul.
   <example>
    <title>Evadarea caracterelor în <function>date</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Afișează ceva de felul: Wednesday the 15th
echo date('l \t\h\e jS');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Este posibil de utilizat <function>date</function> și
   <function>mktime</function> împreună pentru a afla date din trecut sau
   viitor.
   <example>
    <title>Exemplu <function>date</function> și <function>mktime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tomorrow  = mktime(0, 0, 0, date("m")  , date("d")+1, date("Y"));
$lastmonth = mktime(0, 0, 0, date("m")-1, date("d"),   date("Y"));
$nextyear  = mktime(0, 0, 0, date("m"),   date("d"),   date("Y")+1);
?>
]]>
    </programlisting>
   </example>
   <note>
    <para>
     Aceasta poate fi mai sigur decât simpla adăugare sau scădere a numărului
     de secunde în zi sau lună la un timestamp din cauza timpului de vară.
    </para>
   </note>
  </para>
  <para>
   Unele exemple de formatare <function>date</function>. Observați că trebuie
   să evadați caracterele suplimentare, deoarece cele ce au o însemnătate
   specială vor produce rezultate nedorite, iar celelalte caractere pot căpăta
   o însemnătate specială în versiunile viitoare ale PHP. Când evadați, aveți
   grijă să utilizați ghilimele singulare pentru a preveni caractere ca \n să
   devină newline.
   <example>
    <title>Formatarea <function>date</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Presupunem că astăzi este: March 10th, 2001, 5:16:18 pm
// și ne aflăm în fusul orar Mountain Standard Time (MST)

$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day');     // 05-16-18, 10-03-01, 1631 1618 6 Satpm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // it is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 17:16:18 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:18 m is month
$today = date("H:i:s");                         // 17:16:18
$today = date("Y-m-d H:i:s");                   // 2001-03-10 17:16:18 (formatul MySQL DATETIME)
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Pentru a formata date în alte limbi, trebuie să utilizați funcțiile
   <function>setlocale</function> și <function>strftime</function> în loc de
   <function>date</function>.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Pentru a genera un timestamp dintr-o reprezentare string a datei, puteți
    utiliza <function>strtotime</function>. În plus, unele baze de date au
    funcții pentru a converti formatele lor de date în timestamp-uri
    (cum ar fi funcția
    <link xlink:href="&url.mysql.docs.date;">UNIX_TIMESTAMP</link> la MySQL).
   </para>
  </note>
  <tip>
   <para>
    Timestamp-ul începutului interpelării este disponibil în variabila
    <varname>$_SERVER['REQUEST_TIME']</varname> începând cu PHP 5.1.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>gmdate</function></member>
    <member><function>idate</function></member>
    <member><function>getdate</function></member>
    <member><function>getlastmod</function></member>
    <member><function>mktime</function></member>
    <member><function>strftime</function></member>
    <member><function>time</function></member>
    <member><function>DateTimeImmutable::__construct</function></member>
    <member><link linkend="datetime.constants.types">Constante DateTime predefinite</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
