<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- $Author$ -->
<!-- EN-Revision: 334762 Maintainer: simionea Status: ready -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Istoria PHP și a proiectelor asociate</title>
 <para>
  PHP a parcurs o cale lungă de la conceperea sa în mijlocul anilor 1990. La
  început modest, devenind apoi unul din cele mai proeminente limbaje care
  dirijează web-ul, evoluția PHP este o poveste pentru tocilari. Or, o astfel de
  creștere explozivă nu a fost o sarcină ușoară. Cei dintre voi interesați de a
  afla pe scurt cum PHP a crescut până la ceea ce este el în ziua de azi, citiți
  în continuare. Dacă doriți să atingeți o parte din istoria Internetului,
  puteți găsi versiuni mai vechi ale PHP în
  <link xlink:href="&url.php.museum;">muzeul PHP</link>.
 </para>

 <sect1 xml:id="history.php">
  <title>Istoria PHP</title>

  <sect2 xml:id="history.phpfi">
   <title>Unelte PHP, FI, Construction Kit și PHP/FI</title>
   <para>
    PHP cum este cunoscut astăzi este, de fapt succesorul unui produs numit
    PHP/FI. Creat în 1994 de către Rasmus Lerdorf, prima încarnare a PHP a fost
    un simplu set de binare Common Gateway Interface (CGI) scrise în limbajul
    de programare C. Inițial folosit pentru urmărirea vizitelor la CV-ul său
    on-line, el a numit suita de script-uri "Personal Home Page Tools", mai
    frecvent menționate ca "Unelte PHP". De-a lungul timpului, a apărut dorința
    de a avea mai multe funcționalități, și Rasmus a rescris Uneltele PHP,
    producând o implementare mult mai mare și mai bogată. Acest nou model a
    fost capabil de interacțiune cu baze de date și mai mult, oferind un
    framework cu ajutorul cărora utilizatorii puteau dezvolta aplicatii web
    simple și dinamice, cum ar fi cărțile de oaspeți. În luna iunie a anului
    1995, Rasmus <link xlink:href="&url.php.release1.0.0;">a lansat</link>
    codul sursă pentru Uneltele PHP către public, ceea ce a permis
    dezvoltatorilor să-l folosească după cum considerau de cuviință. Acest
    lucru, de asemenea, a permis și a încurajat utilizatorii să ofere remedieri
    pentru bug-uri în cod, și în general să-l îmbunătățească.
   </para>
   <para>
    În luna septembrie a aceluiași an, Rasmus a extins PHP și, pentru o perioadă
    scurtă de timp, chiar a renunțat la denumirea PHP. Acum, referindu-se la
    Unelte ca FI (prescurtarea de la "Forms Interpreter"), noua implementare a
    inclus o parte din funcționalitatea de bază a PHP așa cum o știm astăzi. Ea
    a avut variabile ca în Perl, interpretare automată a variabilelor din
    formulare și sintaxă inclusă în HTML. Insăși sintaxa a fost similară cu cea
    din Perl, deși mult mai limitată, simplă, și oarecum inconsistentă. De fapt,
    pentru a încorpora codul într-un fișier HTML, dezvoltatorii trebuiau să
    utilizeze comentarii HTML. Deși această metodă nu a fost în întregime
    bine-primită, FI a continuat să se bucure de o creștere și de acceptare ca
    un instrument CGI, dar încă nu chiar ca un limbaj. Cu toate acestea, acest
    lucru a început să se schimbe în luna următoare; în octombrie 1995,
    Rasmus a lansat o rescriere completă a codului. Readucând denumirea PHP, a
    fost acum (pe scurt) numit "Personal Home Page Construction Kit", și a fost
    prima versiune ce s-a lăudat cu ceea ce a fost considerat, la momentul
    respectiv, o interfață avansată de scripting. Limbajul a fost în mod
    intenționat conceput să semene cu structura C, ceea ce făcea mai simplă
    adopția sa pentru dezvoltatori familiarizați cu C, Perl, și limbaje similare.
    Fiind până acum limitat doar la sisteme UNIX și sisteme compatibile POSIX,
    a început explorarea potențialului pentru o implementare Windows NT.
   </para>
   <para>
    Codul iarăși a suferit o rescriere completă, și în aprilie 1996,
    combinând denumirile implementărilor din trecut, Rasmus a introdus PHP/FI.
    Această implementare de generația a doua a început să evolueze cu adevărat
    PHP de la o suită de instrumente spre un limbaj de programare cu drepturi
    depline. Aceasta a inclus susținerea încorporată a bazelor de date DBM, mSQL
    Postgres95, cookies, suport pentru funcții definite de utilizator, și multe
    altele. În acea lună iunie, lui PHP/FI i-a fost oferit un statut de versiune
    2.0. Un fapt interesant despre aceasta este că a fost doar o singură
    versiune deplină de PHP 2.0. Când în cele din urmă ea a absolvit statutul de
    versiune beta în noiembrie 1997, motorul de interpretare care stătea la bază
    a fost deja rescris în întregime.
   </para>
   <para>
    Deși a trăit o viață de dezvoltare scurtă, el a continuat să se bucure de o
    popularitate în creștere în lumea încă tânără a dezvoltării web. În 1997 și
    1998, PHP/FI a avut un cult de câțiva mii de utilizatori în jurul lumii. Un
    sondaj Netcraft din luna mai, 1998, a indicat că aproape 60.000 de domenii
    au raportat prezența antetelor care conțin "PHP", indicând faptul că serverul
    gazdă într-adevăr îl avea instalat. Acest număr echivala cu aproximativ 1%
    din toate domeniile pe Internet existente la momentul respectiv. În ciuda
    acestor cifre impresionante, maturizarea PHP/FI era condamnată la limitări;
    în timp ce au existat mai mulți contribuabili mici, el încă mai era dezvoltat
    cu precădere de către un singur individ.
   </para>
   <para>
    <example>
     <title>Exemplu de cod PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Hey, you are using Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Sorry, that record does not exist<p>
<!--endif exit-->
  Welcome <!--$user-->!<p>
  You have <!--$index:0--> credits left in your account.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 a fost prima versiune care se aseamănă mult cu PHP cum el este
    astăzi. Găsind PHP/FI 2.0 încă ineficient și fără funcționalitățile de care
    aveau nevoie pentru a susține o aplicație de comerț electronic, pe care o
    dezvoltau pentru un proiect universitar, Andi Gutmans și Zeev Suraski de la
    Tel Aviv, Israel, au început încă o rescriere completă a interpretorului
    de bază în 1997. Apropiindu-se de Rasmus on-line, ei au discutat diverse
    aspecte ale implementării curente și redezvoltarea lor a PHP. Într-un efort
    de a îmbunătăți motorul și a continua dezvoltarea pe baza de utilizatori
    deja existentă a PHP/FI, Andi, Rasmus, și Zeev au decis să colaboreze în
    dezvoltarea unui nou limbaj de programare independent. Acest cu totul nou
    limbaj a fost lansat sub o altă denumire, care a eliminat implicarea uzului
    pur personal, pe care îl implica denumirea PHP/FI 2.0. Acesta a fost
    redenumit pur și simplu "PHP", semnificând un acronim recursiv - PHP:
    Hypertext Preprocessor.
   </para>
   <para>
    Unul dintre cele mai mari avantaje ale PHP 3.0 au fost facilitățile puternice
    de extindere. Adițional la oferirea utilizatorilor finali a unei interfețe
    mature pentru multiple baze de date, protocoale și API-uri, ușurința de a
    extinde însuși limbajul a atras zeci de dezvoltatori care au creat o
    varietate de module. Probabil aceasta a fost cheia PHP 3.0 către un succes
    imens. Alte facilități-cheie introduse în PHP 3.0 au inclus susținerea
    programării orientate pe obiecte și o mult mai puternică și consistentă
    sintaxă a limbajului.
   </para>
   <para>
    În iunie 1998, cu mulți dezvoltatori noi din întreaga lume aderând la efort,
    PHP 3.0 a fost anunțat de către noua Echipă de Dezvoltare PHP ca succesor
    oficial al PHP/FI 2.0. Dezvoltarea activă a PHP/FI 2.0, care practic încetase
    în noiembrie a anului precedent, a fost acum încheiată oficial. După
    aproximativ nouă luni de testare publică deschisă, când s-a dat anunțul
    despre lansarea oficială a PHP 3.0, el deja era instalat pe mai mult de
    70.000 domenii din întreaga lume, și nu mai era limitat la sisteme de operare
    POSIX compatibile. O pondere relativ mică de domenii, care raportau instalarea
    PHP, erau găzduite pe servere ce rulau Windows 95, 98, și NT, și Macintosh.
    La momentul de vârf, PHP 3.0 a fost instalat pe aproximativ 10% din serverele
    web din Internet.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    Către iarna anului 1998, la scurt timp după ce PHP 3.0 a fost lansat oficial,
    Andi Gutmans și Zeev Suraski au început lucrul asupra rescrierii nucleului
    PHP. Scopurile reproiectării erau de a îmbunătăți performanța aplicațiilor
    complexe și de a îmbunătăți modularitatea bazei de coduri-sursă ale PHP.
    Astfel de aplicații puteau fi realizate datorită noilor facilități din PHP
    3.0, precum și a susținerii unei game largi de baze de date și interfețe API
    ale terților producători, însă PHP 3.0 nu fusese proiectat să lucreze cu
    astfel de aplicații complexe în mod eficient.
   </para>
   <para>
    Noul nucleu, denumit 'Zend Engine' (compus din numele autorilor, Zeev și
    Andi), a făcut față cerințelor de proiect cu succes, și a fost prezentat
    pentru prima dată la mijlocul anului 1999. PHP 4.0, bazat pe acest nucleu și
    în cuplu cu o gamă largă de facilități noi a fost lansat oficial în mai 2000,
    aproape doi ani după predecesorul său. Suplimentar la performanța
    îmbunătățită substanțial în această versiune, PHP 4.0 a inclus alte
    facilități de bază, cum ar fi susținerea mult mai multor servere Web,
    sesiunilor HTTP, buferizarea ieșirii, metode mai securizate de gestionare a
    datelor introduse de utilizatori și câteva construcții noi ale limbajului.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 a fost lansat în iulie 2004 după o lungă perioadă de dezvoltare
    și câteva lansări preliminare. El este condus de nucleul său,
    <literal>Zend Engine 2.0</literal> cu un nou model de obiecte și o duzină
    de alte noi facilități.
   </para>
   <para>
    Echipa de dezvoltare a PHP include zeci de programatori, precum și alte zeci
    de persoane care lucrează la proiecte PHP conexe și de suport, cum ar fi
    PEAR, PECL și documentare, precum și o infrastructură de rețea cu peste
    o sută servere web individuale pe șase din cele șapte continente ale lumii.
    Deși este numai o estimare bazată pe statistici din anii anteriori, putem cu
    siguranță să presupunem că PHP este acum instalat pe zeci sau poate chiar
    sute de milioane de domenii din întreaga lume.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.related">
  <title>Istoria proiectelor asociate cu PHP</title>

  <!-- Hope Stig and/or Egon can do this

  <sect2 xml:id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>

  -->

  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, <literal>Repozitoriul de
    Extensii și Aplicații PHP</literal> (original, Repozitoriul de Extensii
    și Suplimente PHP) este versiunea PHP a claselor fundamentale, care în
    viitor poate deveni una din modalitățile cheie de distribuire a extensiilor
    PHP între programatori.
   </para>
   <para>
    PEAR s-a născut din discuțiile purtate la Întrunirea Programatorilor PHP
    (PHP Developers' Meeting (PDM)), care a avut loc în ianuarie 2000 în Tel Aviv.
    PEAR a fost creat de către Stig S. Bakken și este dedicat fiicei sale întâi
    născute, Malin Bakken.
   </para>
   <para>
    De la începutul anului 2000, PEAR a ajuns să devină un proiect mare,
    semnificativ, cu un număr mare de programatori lucrând asupra implementării
    unor funcționalități standarde, reutilizabile, pentru beneficiul întregii
    comunități PHP. În prezent PEAR include o largă varietate de clase fundamentale
    de infrastructură pentru acces la baze de date, memorizarea conținutului,
    calcule matematice, comerț electronic și multe altele.
   </para>
   <para>
    Mai multe informații despre PEAR pot fi găsite în <link
    xlink:href="&url.php.pear.manual;">manual</link>.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>Inițiativa de Asigurare a Calității în PHP</title>
   <para>
    <link xlink:href="&url.php.prerelease;">Inițiativa de Asigurare a Calității
    în PHP</link> a fost inaugurată în vara anului 2000 ca răspuns la
    criticile, precum că versiunile PHP nu erau suficient testate pentru
    a putea fi puse în medii de producere. Acum echipa constă dintr-un
    grup de programatori de bază care posedă o bună înțelegere a
    codurilor-sursă PHP. Acești programatori își petrec o bună parte din
    timp localizând și corectând greșelile din PHP. În plus, există mulți
    alți membri ai echipei, care testează și își expun părerea asupra
    acestor corectări, folosind o largă varietate de platforme.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> este soluția PHP pentru
    scrierea aplicațiilor GUI de partea clientului. Andrei Zmievski își
    amintește planificarea și procesul de creare a PHP-GTK:
   </para>
   <blockquote>
    <para>
     Programarea GUI întotdeauna îmi trezea interes, și am aflat că
     Gtk+ este un instrumentar foarte frumos, cu excepția că programarea
     sa în C este un pic anevoioasă. După ce am fost martor la implementările
     PyGtk și GTK-Perl, am decis să văd dacă PHP ar putea să conlucreze
     cu Gtk+, chiar la nivel minim. Începând cu august 2000, eu am început
     să am un pic mai mult timp liber și deci atunci am început să experimentez.
     Orientarea mea de bază a fost implementarea PyGtk deoarece avea un set
     mai mult sau mai puțin deplin de facilități și avea o interfață bună
     obiect-orientată. James Henstridge, autorul PyGtk, mi-a acordat multe
     sfaturi utile în decursul acelor etape inițiale.
    </para>
    <para>
     Scrierea manuală a interfețelor pentru toate funcțiile Gtk+ era în
     afara oricăror discuții, de aceea am precăutat ideea unui generator
     de cod similar celui realizat în PyGtk. Generatorul de cod este un
     program PHP care citește un set de fișiere <filename>.defs</filename>
     conținând informații despre clasele, constantele și metodele Gtk+ și
     generează cod C care face posibilă interfața PHP cu ele. Ceea ce nu poate
     fi generat în mod automat, poate fi scris cu mâna în fișiere
     <filename>.overrides</filename>.
    </para>
    <para>
     Lucrul asupra generatorului de cod și asupra infrastructurii a durat
     destul de mult din cauza că în toamna anului 2000 am avut puțin timp
     să lucrez asupra PHP-GTK. După ce am demonstrat PHP-GTK lui Frank Kromann,
     el a manifestat interes și a început să-mi ofere ajutor la generatorul
     de cod și la implementarea pentru Win32. Când am scris primul program
     'Hello World' și l-am lansat, a fost foarte palpitant. A durat încă vre-o
     două luni până ce am adus proiectul la o stare prezentabilă și versiunea
     inițială a fost lansată la 1 martie 2001. Noutatea a apărut rapid pe
     SlashDot.
    </para>
    <para>
     Simțind că PHP-GTK poate fi costisitor, am pregătit o listă poștală
     de distribuție și CVS separate pentru el, precum și web site-ul
     gtk.php.net cu ajutorul lui Colin Viebrock. Trebuia creată și
     documentația și James Moore a venit în ajutor în această privință.
    </para>
    <para>
     PHP-GTK a început să câștige popularitate chiar din momentul lansării
     sale. Noi avem propria echipă de documentare, manualul continuă să se
     îmbunătățească, oamenii încep să scrie extensii pentru PHP-GTK și tot
     mai multe aplicații interesante cu ajutorul său.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Cărți despre PHP</title>
  <para>
   Odată cu dezvoltarea sa, PHP a început să fie recunoscut pe plan
   mondial drept o platformă de dezvoltare foarte populară. Una din cele
   mai interesante modalități de urmărire a acestei tendințe a fost
   observarea cărților despre PHP, care au apărut pe parcursul anilor.
  </para>
  <para>
   Din câte cunoaștem, prima carte dedicată PHP a fost "PHP - tvorba aplikací
   internetových interaktivních" (<emphasis>PHP - Crearea de aplicatii Internet
   interactive</emphasis>) - o carte cehă publicată în aprilie 1999, scrisă de
   Jirka Kosek. În luna următoare a urmat o carte germană scrisă de Egon Schmid,
   Christian Cartus și Richard Blume. Prima carte în limba engleză despre PHP a
   fost publicată la scurt timp după aceea, și a fost întitulată "Core PHP
   Programming" de Leon Atkinson. Aceste cărți au abordat PHP 3.0.
  </para>
  <para>
   În timp ce aceste cărți erau primele de acest gen, ele au fost urmate de un
   număr mare de cărți de la o serie de autori și editori. Exista peste 400 de
   cărți în limba engleză, peste 100 de cărți în Germană, și peste 50 de cărți
   în limba franceză sau spaniolă! În plus, puteți găsi cărți despre PHP în
   multe alte limbi, inclusiv coreeană, japoneză și ebraică.
  </para>
  <para>
   În mod cert, acest mare număr de cărți scrise de diferiți autori,
   publicate de mulți editori și disponibilitatea lor în atâtea limbi -
   sunt o mărturie incontestabilă a succesului PHP la scară mondială.
  </para>
 </sect1>

 <sect1 xml:id="history.php.publications">
  <title>Publicații despre PHP</title>
  <para>
   Din câte cunoaștem, primul articol despre PHP într-o revistă tipărită
   a fost publicat într-o modificare cehă a revistei Computerworld în
   primăvara anului 1998, și cuprindea PHP 3.0. Ca și în cazul cărților,
   acesta a fost primul dintr-o serie de articole despre PHP publicate
   în diverse reviste proeminente.
  </para>
  <para>
   Articole despre PHP au apărut în Dr. Dobbs, Linux Enterprise,
   Linux Magazine și în multe altele. Articole despre migrarea aplicațiilor
   bazate pe ASP în PHP pentru Windows apar chiar și la
   <productname>Microsoft</productname> în propriul lor
   <acronym>MSDN</acronym>!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
