<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 1.10 Maintainer: darvina Status: ready -->
<refentry xml:id='function.dom-domnode-replacechild' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode->replaceChild()</refname>
  <refpurpose>
   Sostituisce un nodo figlio
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMNode</classname></ooclass>
   <methodsynopsis>
    <type>DOMNode</type><methodname>replaceChild</methodname>
    <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
    <methodparam><type>DOMNode</type><parameter>oldnode</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Questa funzione sostituisce il nodo figlio <parameter>oldnode</parameter> 
   con il nuovo nodo fornito. Se il nuovo nodo è già un nodo figlio, questo
   non verrà inserito una seconda volta. Se la sostituzione ha avuto successo,
   la funzione restituisce il vecchio nodo.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       Il nuovo nodo. Deve essere membro del docuemnto di destinazione, ad esempio
       creato da uno dei metodi DOMDocument->createXXX() oppure importato
       nel documento con <xref linkend='function.dom-domdocument-importnode' />.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>oldnode</parameter></term>
     <listitem>
      <para>
       Il vecchio nodo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Il vecchio nodo oppure &false; in caso di errore.
  </para>
 </refsect1>
 <refsect1 role="exceptions">
  &reftitle.exceptions;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Generato se questo nodo è in sola lettura oppure se il precdente padre del nodo da 
       inserire è in sola lettura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Generato se il nodo è di un tipo che non ammette nodi figli del
       tipo di <parameter>newnode</parameter>, oppure se il nodo da inserire
       è uno dei padri del nodo, oppure se è il nodo stesso.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Generato se <parameter>newnode</parameter> è stato creato in un 
       docuemnto differente rispetto al documento in cui è stato creato il nodo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_NOT_FOUND</constant></term>
     <listitem>
      <para>
       Generato se <parameter>oldnode</parameter> non è figlio del nodo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.dom-domnode-appendchild" /></member>
    <member><xref linkend="function.dom-domnode-removechild" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
