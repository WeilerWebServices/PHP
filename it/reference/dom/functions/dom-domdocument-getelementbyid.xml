<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 1.8 Maintainer: darvina Status: ready -->
<refentry xml:id="function.dom-domdocument-getelementbyid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument->getElementById()</refname>
  <refpurpose>Cerca un elemento con un certo id</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>DOMDocument</classname></ooclass>
   <methodsynopsis>
    <type>DOMElement</type><methodname>getElementById</methodname>
    <methodparam><type>string</type><parameter>elementId</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Questa funzione è simile a 
   <xref linkend="function.dom-domdocument-getelementsbytagname" />, ma cerca
   un elemento per il dato id.
  </para>
  <para>
   In base allo standard DOM, questa funzione riochiede la presenza di una DTD che definisca
   l'attributo ID di tipo ID. Occorre validare il documento con 
   <xref linkend="function.dom-domdocument-validate" /> 
   oppure <literal>DOMDocument->validateOnParse</literal> prima di utilizzare questa funzione.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>elementId</parameter></term>
     <listitem>
      <para>
       Il valore dell'id univoco per le'elemento.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Restituisce <classname>DOMElement</classname> oppure &null; se l'elemento non
   è trovato.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Esempio di uso di DOMDocument->getElementById()</title>
   <programlisting role="php">
<![CDATA[
<?php

$doc = new DomDocument;

// Occorre validare il documento prima di puntare all'id
$doc->validateOnParse = true;
$doc->Load('book.xml');

echo "The element whose id is books is: " . $doc->getElementById('books')->tagName . "\n";

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
The element whose id is books is: chapter
]]>
   </screen>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.dom-domdocument-getelementsbytagname" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
