<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/pcre.xml, last change in rev 1.1 -->
<!-- last change to 'preg-match' in en/ tree in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.78/EN.1.2 -->
  <refentry xml:id="function.preg-match" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>preg_match</refname>
    <refpurpose>Riconoscimento con espressioni regolari</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>mixed</type><methodname>preg_match</methodname> 
      <methodparam><type>string </type><parameter>criterio</parameter></methodparam>
      <methodparam><type>string </type><parameter>testo</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>&amp;testi_riconosciuti</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Esegue un riconoscimento nel parametro <parameter>testo</parameter> utilizzando 
     l'espressione regolare indicata in <parameter>criterio</parameter>.
    </para>
    <para>
     Se viene fornito il terzo parametro, <parameter>testi_riconosciuti</parameter>, questo verrà valorizzato 
     con i risultati della ricerca. In dettaglio <varname>$testi_riconosciuti[0]</varname> conterrà il testo che 
     si incrocia con l'intero criterio di ricerca, <varname>$testi_riconosciuti[1]</varname> conterrà il testo che soddisfa 
     il primo criterio posto tra parentesi, <varname>$testi_riconosciuti[2]</varname> il secondo e così via.
    </para>
    <para> 
     Il parametro <parameter>flags</parameter> può assumere i seguenti valori: 
     <variablelist> 
      <varlistentry> 
       <term>PREG_OFFSET_CAPTURE</term> 
       <listitem> 
        <simpara> 
         Se viene impostato questo flag, per ogni testo riconosciuto viene restituito
         l'offset della stringa. Occorre notare che questo cambia il tipo di valore
         restituito nell'array, infatti ogni elemento è, a sua volta, un'array composto dalla
         stringa riconosciuta, all'indice <literal>0</literal>, e dall'offset della stringa nell'indice
         <literal>1</literal>. Questa costante è disponibile a partire dalla
         versione 4.3.0 di PHP.
        </simpara> 
       </listitem> 
      </varlistentry> 
     </variablelist> 
     Il parametro <parameter>flags</parameter> è disponibile a partire dalla versione 4.3.0
     di PHP. 
    </para> 
    <para> 
     Normalemente la ricerca parte dall'inizio della stringa oggetto di ricerca. Con il parametro
     opzionale <parameter>offset</parameter> si può specificare da dove cominciare
     la ricerca. Equivale a passare <function>substr</function>($testo, $offset) alla funzione 
     <function>preg_match</function> al posto del parametro testo.
     Il parametro <parameter>offset</parameter> è disponibile a partire dalla versione 4.3.3 di
     PHP.
    </para> 
    <para>
     La funzione <function>preg_match</function> restituisce il numero di volte in cui è avvenuto
     il riconoscimento del <parameter>criterio</parameter>. Questo può essere 0
     (nessun riconoscimento) oppure 1 se <function>preg_match</function> si ferma dopo
     il primo riconoscimento. In condizioni normali, <function>preg_match_all</function>
     continua il riconoscimento fino alla fine del parametro 
     <parameter>testo</parameter>.
     <function>preg_match</function> restituirà &false; se si verifica un errore.
    </para>
    <tip>
     <para>
      Non utilizzare la funzione <function>preg_match</function> se si desidera controllare
      se una stringa è contenuta in un'altra. Piuttosto utilizzare
      <function>strpos</function> oppure <function>strstr</function>
      che sono più veloci.
     </para>
    </tip>
    <para>
     <example>
      <title>Ricerca del testo "php"</title>
      <programlisting role="php">
<![CDATA[
<?php
// La lettera "i" dopo i delimitatori indica una ricerca case-insensitive
if (preg_match("/php/i", "PHP è il linguaggio scelto.")) {
    echo "Il riconoscimento è avvenuto.";
} else {
    echo "Testo non riconosciuto.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Cerca la parola "web"</title>
      <programlisting role="php">
<![CDATA[
<?php
// La lettera \b nel criterio indica i limiti della parola. Così verrà riconosciuta solo
// la parola "web" e non parte di una parola più lunga come "webbing" oppure "cobweb"
if (preg_match("/\bweb\b/i", "PHP è un linguaggio di programmazione per il web scelto da molti.")) {
    echo "Il riconoscimento è avvenuto.";
} else {
    echo "Testo non riconosciuto.";
}
if (preg_match("/\bweb\b/i", "PHP è un linguaggio di programmazione installato su molti website")) {
    echo "Il riconoscimento è avvenuto.";
} else {
    echo "Testo non riconosciuto.";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Estrapolazione del dominio da un URL</title>
      <programlisting role="php">
<![CDATA[
<?php
// come ottenere il nome dell'host da un URL
preg_match("/^(http:\/\/)?([^\/]+)/i",
"http://www.php.net/index.html", $matches);
$NomeHost = $matches[2];
// come ottenere gli ultimi due segmenti del nome dell'host
preg_match("/[^\.\/]+\.[^\.\/]+$/",$NomeHost,$matches);
echo "Nome del dominio:  {$matches[0]}\n";
?>
]]>
      </programlisting>
      <para>
       L'esempio visualizzerà:
      </para>
      <screen>
<![CDATA[
Nome del dominio: php.net
]]>
      </screen>      
     </example>
    </para>
    <para>
     Vedere anche <function>preg_match_all</function>, 
     <function>preg_replace</function> e
     <function>preg_split</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
