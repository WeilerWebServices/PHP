<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernando Status: ready -->
<!-- CREDITS: cortesi -->
<!-- splitted from ./it/functions/dir.xml, last change in rev 1.1 -->
  <refentry xml:id="function.readdir" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>readdir</refname>
    <refpurpose>Legge una voce dall'handle della directory</refpurpose>
   </refnamediv>
   <refsect1>
    &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>readdir</methodname>
      <methodparam><type>resource</type><parameter>dir_handle</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce il nomefile del file successivo della directory. I nomi
     dei file vengono restituiti secondo l'ordine in cui sono memorizzati
     nel filesystem.
    </para>
    <para>
     Si faccia caso al modo in cui il valore restituito da <function>readdir</function>
     viene controllato negli esempi successivi. Viene controllato esplicitamente
     che il valore restituito sia identico a (uguale a e dello
     stesso tipo di (vedere <link
     linkend="language.operators.comparison">Comparison
     Operators</link> per maggiori informazioni) &false; altrimenti avverrebbe che
     ogni nome di directory il cui nome fosse valutato &false; interromperebbe il
     loop (per esempio una directory chiamata "0").
    </para>
    <para>
     <example>
      <title>Elenca tutti i file presenti in una directory</title>
      <programlisting role="php">
<![CDATA[
<?php
// Nota che l'operatore !== non è esistito fino alla versione 4.0.0-RC2
if ($handle = opendir('/percorso/ai/file')) {
    echo "Handle della directory: $handle\n";
    echo "File:\n";

   /* Questa è la maniera corretta di eseguire un loop all'interno di una directory. */
   while (false !== ($file = readdir($handle))) { 
       echo "$file\n";
   }

   /* Questa è la maniera SCORRETTA di eseguire un loop all'interno di una directory. */
   while ($file = readdir($handle)) { 
       echo "$file\n";
   }

   closedir($handle); 
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Nota che <function>readdir</function> restituirà le voci <literal>.</literal> 
     e 
     <literal>..</literal>. Se non si vogliono ottenere queste, si possono semplicemente 
     eliminare:
     <example>
      <title>
       Elenca tutti i file della directory in uso ed elimina <literal>.</literal> 
       e <literal>..</literal>
      </title>
      <programlisting role="php">
<![CDATA[
<?php 
if ($handle = opendir('.')) {
    while (false !== ($file = readdir($handle))) { 
        if ($file != "." && $file != "..") { 
            echo "$file\n"; 
        } 
    }
    closedir($handle); 
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vedere anche: <function>is_dir</function> e
     <function>glob</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
