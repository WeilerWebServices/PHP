<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry xml:id="function.stripslashes" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stripslashes</refname>
    <refpurpose>
     Rimuove gli slash aggiunti con <function>addslashes</function>
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>stripslashes</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     Rimuove i backslash da una stringa.
     (<literal>\'</literal> diventa <literal>'</literal> e così via.)
     I doppi backslash (<literal>\\</literal>) sono ridotti ad un singolo
     backslash (<literal>\</literal>). 
    </para>
    <para>
     Un esempio di uso di <function>stripslashes</function> è dato dall'opzione PHP
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>
     che, quando è impostata a <literal>on</literal> (come è per default), e non siinseriscono
     questi dati in una procedura (tipo in un database) che richiede il carattere di escape.
     Ad esempio, se si visualizza dati da un form 
     HTML.
    </para>
    <para>
     <example>
      <title>Esempio di uso di <function>stripslashes</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$str = "Is your name O\'reilly?";

// Outputs: Is your name O'reilly?
echo stripslashes($str);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      La funzione <function>stripslashes</function> non è ricorsiva Se si desidera utilizzare
      questa funzione su una matrice multi-dimensionale, occorre utilizzare una funzione ricorsiva.
     </para>
    </note>
    <para>
     <example>
      <title>Esempio di utilizzo di <function>stripslashes</function> su una matrice</title>
      <programlisting role="php">
<![CDATA[
<?php
function stripslashes_deep($value)
{
    $value = is_array($value) ?
                array_map('stripslashes_deep', $value) :
                stripslashes($value);
 
    return $value;
}
 
// Example
$array = array("f\\'oo", "b\\'ar", array("fo\\'o", "b\\'ar"));
$array = stripslashes_deep($array);
 
// Output
print_r($array);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Array
(
    [0] => f'oo
    [1] => b'ar
    [2] => Array
        (
            [0] => fo'o
            [1] => b'ar
        )
 
)
]]>
      </screen>
     </example>
    </para>
    <para>
     Per maggiori dettagli su "magic quotes", vedere <function>get_magic_quotes_gpc</function>.
    </para>
    <simpara>
     Vedere anche <function>addslashes</function> e
     <function>get_magic_quotes_gpc</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
