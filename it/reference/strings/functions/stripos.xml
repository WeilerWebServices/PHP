<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
  <refentry xml:id="function.stripos" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stripos</refname>
    <refpurpose>
     Trova la prima occorrenza in una stringa senza distinzione tra maiuscole e minuscole    
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>stripos</methodname>
      <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
      <methodparam><type>string</type><parameter>needle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce la posizione numerica della prima occorrenza di
     <parameter>needle</parameter> nella <type>stringa</type> <parameter>haystack</parameter>.
     Differentemente da <function> strpos</function>, 
     <function>stripos</function> non distingue tra maiuscole e minuscole.
    </para>
    <para>
     Occorre rilevare che <parameter>needle</parameter> può essere una stringa di uno o 
     più caratteri.
    </para>
    <para>
     Se <parameter>needle</parameter> non viene trovato,
     <function>stripos</function> restituirà <type>boolean</type> &false;.
    </para>

    &return.falseproblem;

    <para>
     <example>
     <title>Esempi di uso di <function>stripos</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$findme    = 'a';
$mystring1 = 'xyz';
$mystring2 = 'ABC';

$pos1 = stripos($mystring1, $findme);
$pos2 = stripos($mystring2, $findme);

// No, 'a' non è certamente in 'xyz'
if ($pos1 === false) {
    echo "The string '$findme' was not found in the string '$mystring1'";
}

// Notate l'uso di ===.  Semplicemente == non avrebbe funzionato come atteso
// perché la posizione di  'a' è nel carattere 0 (il primo).
if ($pos2 !== false) {
    echo "We found '$findme' in '$mystring2' at position $pos2";
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Se <parameter>needle</parameter> non è una stringa, sarà convertito
     in un intero e utilizzato come valore ordinale di un carattere.
    </para>
    <para>
     Il parametro opzionale <parameter>offset</parameter> permette di
     indicare da quale carattere di <parameter>haystack</parameter> iniziare
     la ricerca. La posizione restituita sarà relativa all'inizio di
     <parameter>haystack</parameter>.
    </para>

    &note.bin-safe;

    <para>
     Vedere anche <function>strpos</function>, <function>strrpos</function>,
     <function>strrchr</function>, <function>substr</function>,
     <function>stristr</function>, <function>strstr</function>,
     <function>strripos</function> e <function>str_ireplace</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
