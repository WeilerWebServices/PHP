<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- $Revision$ -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.33 -->
  <refentry xml:id="function.sscanf" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>sscanf</refname>
    <refpurpose>
     Analizza l'input da una string in base al formato
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>mixed</type><methodname>sscanf</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
     </methodsynopsis>
    <para>
     La funzione <function>sscanf</function> è la versione di input di
     <function>printf</function>. <function>sscanf</function> legge
     dalla stringa <parameter>str</parameter> e ne interpreta il contenuto
     basandosi sul parametro <parameter>format</parameter>, che viene descritto
     nella documentazione di <function>sprintf</function>. Se vengono passati soltanto
     due parametri, i valori ricavati sono restituiti
     in una matrice. Altrimenti, se viene fornito il terzo parametro,
     la funzione restituire il numero dei valori assegnati. Il terzo parametro
     deve essere passato per riferimento.
    </para>
    <para>
     Qualsiasi tipo di spazio nella stringa di formato identifica il corrispondente spazio
     nella stringa di input. Ciò significa che anche i tab \t nella stringa di formato possono
     identificare un carattere di spazio nella stringa di input.
    </para>
    <para>
     <example>
      <title>Esempio di uso di <function>sscanf</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// getting the serial number
$serial = sscanf("SN/2350001", "SN/%d");
// and the date of manufacturing
$mandate = "January 01 2000";
list($month, $day, $year) = sscanf($mandate, "%s %d %d");
echo "Item $serial was manufactured on: $year-" . substr($month, 0, 3) . "-$day\n";
?>
]]>
      </programlisting>
     </example>
     Se viene fornito il terzo parametro,
     la funzione restituire il numero dei valori assegnati.
     <example>
      <title><function>sscanf</function> - utilizzo del parametro opzionale</title>
      <programlisting role="php">
<![CDATA[
<?php
// get author info and generate DocBook entry
$auth = "24\tLewis Carroll";
$n = sscanf($auth, "%d\t%s %s", $id, $first, $last);
echo "<author xml:id='$id'>
    <firstname>$first</firstname>
    <surname>$last</surname>
</author>\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Vedere anche <function>fscanf</function>, <function>printf</function>
     e <function>sprintf</function>. 
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
