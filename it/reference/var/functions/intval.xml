<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 331179 Maintainer: pastore Status: ready -->
<!-- CREDITS: darvina -->
<refentry xml:id="function.intval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>intval</refname>
  <refpurpose>Estrae il valore intero da una variabile</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>intval</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>base</parameter><initializer>10</initializer></methodparam>
  </methodsynopsis>
  <para>
   Estrae il valore <type>intero</type> di <parameter>var</parameter>,
   utilizzando la <parameter>base</parameter> definita a parametro per la conversione
   (la base vale 10 di default). <function>intval</function> non dovrebbe essere usata
   sugli oggetti, poichè facendolo emetterà un errore di livello
   <constant>E_NOTICE</constant> e restituirà 1.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Valore scalare da convertire in intero
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base</parameter></term>
     <listitem>
      <para>
       Base per la conversione
      </para>
      <note>
       <para>
        Se <parameter>base</parameter> è 0, la base usata è determinata
        dal formato di <parameter>var</parameter>:
        <itemizedlist>
         <listitem>
          <simpara>
           se la stringa include un prefisso "0x" (o "0X"), la base è considerata
           16 (esadecimale); altrimenti,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           se la stringa inizia con "0", la base è considerata 8 (ottale);
           altrimenti,
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           la base è considerata 10 (decimale).
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Il valore intero di <parameter>var</parameter> se riesce, oppure 0 in caso
   di errore. Gli array vuoti restituiscono 0, gli array non vuoti restituiscono 1.
  </para>
  <para>
   Il valore massimo dipende dal sistema. Nei sistemi a 32 bit si ha come
   valore per il caso di intero con segno il range da  -2147483648 a 2147483647. Così, ad esempio,
   su tali sistemi, la riga <literal>intval('1000000000000')</literal> restituirà
   2147483647. Il massimo valore per un intero con segno sui sistemi a 64 bit è
   9223372036854775807.
  </para>
  <para>
   Le stringhe probabilmente restituiranno 0, sebbene il valore restituito dipenda
   dal primo carattere a sinistra della stringa. Si utilizzano le 
   comuni di
   <link linkend="language.types.integer.casting">integer casting</link> .
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Esempi di uso di <function>intval</function></title>
    <para>
     I seguenti esempi sono basati su un sistema a 32 bit.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
echo intval(42);                      // 42
echo intval(4.2);                     // 4
echo intval('42');                    // 42
echo intval('+42');                   // 42
echo intval('-42');                   // -42
echo intval(042);                     // 34
echo intval('042');                   // 42
echo intval(1e10);                    // 1410065408
echo intval('1e10');                  // 1
echo intval(0x1A);                    // 26
echo intval(42000000);                // 42000000
echo intval(420000000000000000000);   // 0
echo intval('420000000000000000000'); // 2147483647
echo intval(42, 8);                   // 42
echo intval('42', 8);                 // 34
echo intval(array());                 // 0
echo intval(array('foo', 'bar'));     // 1
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Il parametro <parameter>base</parameter> non ha influenza a meno che il parametro
    <parameter>var</parameter> non sia una stringa.
   </para>
  </note>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Genera <constant>E_NOTICE</constant> e
        restituisce 1, quando un oggetto è passato a 
        <parameter>var</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>boolval</function></member>
    <member><function>floatval</function></member>
    <member><function>strval</function></member>
    <member><function>settype</function></member>
    <member><function>is_numeric</function></member>
    <member><link linkend="language.types.type-juggling">Manipolazione del tipo</link></member>
    <member><link linkend="ref.bc">Funzioni Matematiche con Precisione Arbitraria BCMath</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
