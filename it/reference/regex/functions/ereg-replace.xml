<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/regex.xml, last change in rev 1.1 -->
<!-- last change to 'ereg-replace' in en/ tree in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.42/EN.1.2 -->
  <refentry xml:id="function.ereg-replace" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ereg_replace</refname>
    <refpurpose>Sostituzioni con espressioni regolari</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>ereg_replace</methodname>
      <methodparam><type>string</type><parameter>espressione_regolare</parameter></methodparam>
      <methodparam><type>string</type><parameter>testo_sostitutivo</parameter></methodparam>
      <methodparam><type>string</type><parameter>stringa</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     La funzione ricerca all'interno del parametro <parameter>stringa</parameter>
     sottostringhe che incrocino con le condizioni specificate in <parameter>
     espressione_regolare</parameter>. Quando sono trovate, queste vengono sostituite
     con il testo specificato in <parameter>testo_sostitutivo</parameter>.
    </simpara>
    <simpara>
     La funzione restituisce la stringa modificata. (Ciò implica
     che se non ci sono sottostringhe che soddisfino l' espressione
     regolare, la funzione restituisce la stringa originaria).
    </simpara>
    <simpara>
     Se in <parameter>espressione_regolare</parameter> si specificano
     delle sottostringhe utilizzando le parentesi, anche nel campo
     <parameter>testo_sostitutivo</parameter> si possono specificare delle
     sottostringhe di formato <literal>\\<replaceable>digit</replaceable>
     </literal>, che saranno sostituite dalle stringhe soddisfacenti
     la digit'esima condizione posta tra parentesi; <literal>\\0</literal>
     indica l'intera stringa. La funzione prevede che si possano utlizzare
     fino a nove sottostringhe. E' previsto che le parentesi siano 
     nidificate, in questo caso il conteggio si basa sulle parentesi aperte.
    </simpara>  
    <simpara>
     Se nessuna parte di <parameter>stringa</parameter> viene riconosciuta,
     il parametro viene restituito invariato.
    </simpara>
    <para>
     Come esempio il seguente frammento di codice visualizzerà la frase
     "Questo fu un test" tre volte:
    </para>
    <para>
     <example>
      <title><function>ereg_replace</function> esempio</title>
       <programlisting role="php">
<![CDATA[
<?php
$stringa = "Questo è un test";
echo ereg_replace(" è", " fu", $stringa);
echo ereg_replace("( )è", "\\1fu", $stringa);
echo ereg_replace("(( )è)", "\\2fu", $stringa);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Un aspetto a cui occorre prestare attenzione riguarda l'uso di 
     numero intero per il parametro <parameter>testo_sostitutivo</parameter>,
     si potrebbero ottenere risultati diversi da quanto atteso.
     Questo accade perché la funzione <function>ereg_replace</function> 
     interpreta il numero come posizione ordinale di un carattere 
     comportandosi di conseguenza. Ad esempio:
    </para>
    <para>
     <example>
      <title><function>ereg_replace</function> esempio</title>
       <programlisting role="php">
<![CDATA[
<?php
/* Questo non si comporta come atteso. */
$num = 4;
$stringa = "Questa stringa ha quattro parole.";
$stringa = ereg_replace('quattro', $num, $stringa);
echo $stringa;   /* Risultato: 'Questa stringa ha   parole.' */

/* Questo funziona. */
$num = '4';
$stringa = "Questa stringa ha quattro parole.";
$stringa = ereg_replace('quattro', $num, $stringa);
echo $stringa;   /* Risultato: 'Questa stringa ha 4 parole' */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Sostituzione di URL</title>
      <programlisting role="php">
<![CDATA[
<?php
$testo = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\\0\">\\0</a>", $testo);
?>
]]>
      </programlisting>
     </example>
    </para>
    <tip>
     <para>
      Poiché utilizza espressioni regolari con sintassi compatibile 
      con Perl, <function>preg_replace</function>, è spesso una alternativa
      più veloce a <function>ereg_replace</function>.
     </para>
    </tip>
    <para>
     Vedere anche 
     <function>ereg</function>, 
     <function>eregi</function>,
     <function>eregi_replace</function>, 
     <function>str_replace</function>
     e <function>preg_match</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
