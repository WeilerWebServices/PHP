<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/regex.xml, last change in rev 1.3 -->
<!-- last change to 'split' in en/ tree in rev 1.7 -->
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- OLD-Revision: 1.42/EN.1.7 -->
  <refentry xml:id="function.split" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>split</refname>
    <refpurpose>Suddivide una stringa in una matrice utilizzando le espressioni regolari</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>split</methodname>
      <methodparam><type>string</type><parameter>espressione_regolare</parameter></methodparam>
      <methodparam><type>string</type><parameter>stringa</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>limite</parameter></methodparam>
     </methodsynopsis>
    <tip>
     <para>
      Poiché utilizza espressioni regolari con sintassi compatibile 
      con Perl, <function>preg_split</function>, è spesso una alternativa
      più veloce a <function>split</function>. Se non si ha necessità delle capacità
      delle espressioni regolari, è più veloce l'utilizzo di <function>explode</function>, che non
      richiede l'overhead del motore delle espressioni regolari.
     </para>
    </tip>
    <para>
     La funzione restituisce una matrice di stringhe che sono delle
     sottostringhe del parametro <parameter>stringa</parameter>. Queste
     sono ottenute suddividendo il parametro secondo i limiti indicati
     dal parametro sensibile alle maiuscole <parameter>espressione_regolare</parameter>. Se viene
     specificato il parametro <parameter>limite</parameter>, la funzione 
     restituisce una matrice con un numero di elementi al massimo pari 
     a <parameter>limite</parameter>. L'ultimo elemento della matrice contiene
     la parte restante del parametro <parameter>stringa</parameter> fornito.
     Se si verificano errori la funzione <function>split</function> 
     restituisce &false;.
    </para>
    <para>
     Esempio di come estrapolare i primi 4 campi da una linea del file
     <filename>/etc/passwd</filename>:
    </para>
    <para>
     <example>
      <title>Esempio di <function>split</function></title>
      <programlisting role="php">
<![CDATA[
<?php
list($user, $pass, $uid, $gid, $extra) = split(":", $passwd_line, 5); 
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Se nella stringa passata vi sono <replaceable>n</replaceable> occorrenze
     del parametro <parameter>espressione_regolare</parameter>, la matrice restituita
     conterrà <literal><replaceable>n</replaceable>+1</literal> elementi.
     Invece, nel caso in cui non vi siano occorrenze della 
     <parameter>espressione_regolare</parameter>, la matrice restituita conterrà
     un solo elemento. Ovviamente questo è valido anche nel caso in cui il 
     parametro <parameter>stringa</parameter> è vuoto.
    </simpara>
    <para>
     Nell'esempio che segue, si vedrà come analizzare una data il cui testo 
     può contenere barre, punti o trattini:
    </para>
    <para>
     <example>
      <title><function>split</function> esempio</title>
      <programlisting role="php">
<![CDATA[
// Delimitatori di testo: barre, punti, trattini
$data = "04/30/1973"; 
list ($mese, $giorno, $anno) = split ('[/.-]', $data);
echo "Mese: $mese; Giorno: $giorno; Anno: $anno<br>\n";
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     Gli utenti che cercano un modo di emulare il comportamento di
     Perl <command>@chars = split('', $str)</command>, sono rimandati 
     agli esempi di  <function>preg_split</function>.
    </para>

    <para>
     Occorre fare attenzione al fatto che il parametro <parameter>
     espressione_regolare</parameter> è una espressione regolare e,
     pertanto, se si devono riconoscere caratteri che sono considerati 
     speciali per le espressioni regolari, occorre codificarli con i
     caratteri di escape. Se si ritiene che la funzione <function>split
     </function> ( o anche le altre funzioni derivate da regex ) si
     comportino in modo anomalo, è opportuno leggere il file
     <filename>regex.7</filename>, incluso nella cartella <filename>
     regex/</filename> della distribuzione di PHP. Questo file è
     nel formato del manuale di unix (man), pertanto per visualizzarlo
     occorre eseguire il comando <command>man 
      /usr/local/src/regex/regex.7</command>.
    </para>

    <para>
     Vedere anche: 
     <function>preg_split</function>,
      <function>spliti</function>,
     <function>explode</function>, 
     <function>implode</function>,
     <function>chunk_split</function> e 
     <function>wordwrap</function>.
    </para>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
