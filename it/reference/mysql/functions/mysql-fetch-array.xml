<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: geppo Status: ready -->
<!-- splitted from ./en/functions/mysql.xml, last change in rev 1.27 -->
  <refentry xml:id="function.mysql-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_fetch_array</refname>
    <refpurpose>
     Carica una riga del risultato come un array associativo, un array numerico o entrambi.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>risultato</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        tipo_risultato
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce un array che corrisponde alla riga caricata o &false;
     se non ci sono più righe.</para>
    <para>
     <function>mysql_fetch_array</function> è una versione estesa di
     <function>mysql_fetch_row</function>. Oltre a memorizzare i
     dati del risultato in array con indice numerico, questa li memorizza
     anche con indici associativi usando i nomi dei campi come chiavi.
    </para>
    <para>
     Se due o più colonne del risultato hanno gli stessi nomi di campo,
     l'ultima colonna avrà la precedenza. Per accedere alle altre colonne
     con lo stesso nome, si deve usare l'indice numerico della colonna o
     farne un alias. Per le colonne-alias, non si può
     accedere al contenuto con il nome della colonna originale (in questo esempio
     si usa <literal>'campo'</literal>).
     <example>
      <title>Query con nomi di campo duplicati</title>
      <programlisting role="sql">
<![CDATA[
SELECT tabella1.campo as foo tabella2.campo as bar from tabella1, tabella2
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Una cosa importante da notare è che l'uso di
     <function>mysql_fetch_array</function> <emphasis>non è
     significativamente</emphasis> più lento dell'uso di
     <function>mysql_fetch_row</function>; questo fornisce
     un significativo valore aggiunto.
    </para>
    <para>
     Il secondo argomento opzionale <parameter>tipo_risultato</parameter>
     in <function>mysql_fetch_array</function> è una costante e può
     assumere i seguenti valori: MYSQL_ASSOC, MYSQL_NUM e
     MYSQL_BOTH. Questa caratteristica è stata aggiunta nel PHP 3.0.7. MYSQL_BOTH
     è il valore predefinito per questo argomento.
    </para>
    <para>
     Usando MYSQL_BOTH, si ottiene un array con entrambe gli indici (associativo
     e numerico). Usando MYSQL_ASSOC, si ottengono solo gli indici associativi
     (stesso funzionamento di <function>mysql_fetch_assoc</function>),
     usando MYSQL_NUM, si ottengono solo gli indici numerici (stesso
     funzionamento di <function>mysql_fetch_row</function>).
    </para>
    &database.field-case;
    <para>
     <example>
      <title><function>mysql_fetch_array</function> con MYSQL_NUM</title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "utente_mysql", "password_mysql") or
    die("Connessione non riuscita: " . mysql_error());
mysql_select_db("mio_db");

$risultato = mysql_query("SELECT id, nome FROM mia_tabella");

while ($riga = mysql_fetch_array($risultato, MYSQL_NUM)) {
    printf ("ID: %s  Nome: %s", $riga[0], $riga[1]);
}

mysql_free_result($risultato);
?>
]]>
      </programlisting>
     </example>
     <example>
      <title><function>mysql_fetch_array</function> con MYSQL_ASSOC</title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "utente_mysql", "password_mysql") or
    die("Connessione non riuscita: " . mysql_error());
mysql_select_db("mio_db");

$risultato = mysql_query("SELECT id, nome FROM mia_tabella");

while ($riga = mysql_fetch_array($risultato, MYSQL_ASSOC)) {
    printf ("ID: %s  Nome: %s", $riga["id"], $riga["name"]);
}

mysql_free_result($risultato);
?>
]]>
     </programlisting>
    </example>
    <example>
      <title><function>mysql_fetch_array</function> con MYSQL_BOTH</title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "utente_mysql", "password_mysql") or
    die("Connessione non riuscita: " . mysql_error());
mysql_select_db("mio_db");

$risultato = mysql_query("SELECT id, nome FROM mia_tabella");

while ($riga = mysql_fetch_array($risultato, MYSQL_BOTH)) {
    printf ("ID: %s  Nome: %s", $riga[0], $riga["nome"]);
}

mysql_free_result($risultato);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Per maggiori dettagli, vedere anche
     <function>mysql_fetch_row</function> e
     <function>mysql_fetch_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
