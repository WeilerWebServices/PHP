<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: pulici Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.error-reporting">
 <refnamediv>
  <refname>error_reporting</refname>
  <refpurpose>definisce quali errori di PHP vengono restituiti</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>error_reporting</methodname>
   <methodparam choice="opt"><type>int</type><parameter>livello</parameter></methodparam>
  </methodsynopsis>
  <para>
   La funzione <function>error_reporting</function> imposta la direttiva
   <link linkend="ini.error-reporting">error_reporting</link>
   a runtime. PHP ha parecchi livelli d'errore, usando
   questa funzione si imposta il livello per la durata (runtime) dello
   script.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>livello</parameter></term>
     <listitem>
      <para>
       Il nuovo livello di <link linkend="ini.error-reporting">error_reporting</link>.
       Accetta una maschera di bit o una costante named. L'utilizzo delle
       costanti named è caldamente consigliato per assicurare la compatibilità con
       versioni future. All'aggiungere di livelli di errore, la gamma degli interi viene incrementata,
       perciò vecchi livelli di errore basati sull'intero non si comporteranno sempre come ci si aspetta.
      </para>
      <para>
       Le costanti disponibili sono elencate qui sotto. Il significato
       di questi livelli d'errore è descritto nelle
       <link linkend="errorfunc.constants">costanti predefinite</link>.
       <table>
        <title><function>error_reporting</function> valori dei bit</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>valore</entry>
           <entry>costante</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>1</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-error">E_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>2</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-warning">E_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>4</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-parse">E_PARSE</link>
           </entry>
          </row>
          <row>
           <entry>8</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-notice">E_NOTICE</link>
           </entry>
          </row>
          <row>
           <entry>16</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-core-error">E_CORE_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>32</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-core-warning">E_CORE_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>64</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-compile-error">E_COMPILE_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>128</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-compile-warning">E_COMPILE_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>256</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_ERROR</link>
           </entry>
          </row>
          <row>
           <entry>512</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-warning">E_USER_WARNING</link>
           </entry>
          </row>
          <row>
           <entry>1024</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-user-error">E_USER_NOTICE</link>
           </entry>
          </row>
          <row>
           <entry>6143</entry>
           <entry>
           <link linkend="errorfunc.constants.errorlevels.e-all">E_ALL</link>
           </entry>
         </row>
          <row>
           <entry>2048</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-strict">E_STRICT</link>
           </entry>
          </row>
          <row>
           <entry>4096</entry>
           <entry>
            <link linkend="errorfunc.constants.errorlevels.e-recoverable-error">E_RECOVERABLE_ERROR</link>
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Restituisce il precedente livello di <link linkend="ini.error-reporting">error_reporting</link>
   .
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.0</entry>
       <entry>Inserita <constant>E_STRICT</constant> (non fa parte di <constant>E_ALL</constant>).</entry>
      </row>
      <row>
       <entry>5.2.0</entry>
       <entry>Inserita <constant>E_RECOVERABLE_ERROR</constant>.</entry>
      </row>
      <row>
       <entry>6</entry>
       <entry><constant>E_STRICT</constant> è diventata parte di <constant>E_ALL</constant>.</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>esempi <function>error_reporting</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Spegni tutte le segnalazioni d'errore
error_reporting(0);

// Comunica gli errori semplici di esecuzione
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Anche la comunicazone di E_NOTICE può essere utile (per avvisare di
// variabili non inizializzate od intercettare nomi di variabili errati...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Comunica tutti gli errori eccetto E_NOTICE
// questo è il valore di default in php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Comunica tutti gli errori PHP (il valore 63 puÃ² essere usato in PHP 3)
error_reporting(E_ALL);

// Stesso effetto di error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <simpara>
    La maggior parte degli errori <constant>E_STRICT</constant> sono valutati
    al momento della compilazione, quindi questi errori non sono riportati nello script in cui
    <link linkend="ini.error-reporting">error_reporting</link> è modificato
    per includere gli errori <constant>E_STRICT</constant> (e viceversa).
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>La direttiva <link linkend="ini.display-errors">display_errors</link></member>
    <member><function>ini_set</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
