<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/filesystem.xml, last change in rev 1.15 -->
<!-- EN-Revision: n/a Maintainer: cortesi Status: working -->
  <refentry xml:id="function.dirname" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>dirname</refname>
    <refpurpose>Restituisce il nome della directory dal percorso indicato</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>string</type><methodname>dirname</methodname>
      <methodparam><type>string</type><parameter>path</parameter></methodparam>
     </methodsynopsis>
    <para>
     Data una stringa contenente il percorso di un file, questa funzione
     restituirà il nome della directory.
    </para>
    <para>
     Su windows sia gli slash (<literal>/</literal>) che i backslash
     (<literal>\</literal>) vengono utilizzati come caratteri di separazione nei
     percorsi. In altri ambienti, c'è solo lo slash in avanti
     (<literal>/</literal>).
    </para>
    <para>
     <example>
      <title><function>dirname</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$path = "/etc/passwd";
$file = dirname($path); // $file contiene "/etc"
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      In PHP 4.0.3, la funzione <function>dirname</function> è stata modificata per essere conforme alle specifiche
      POSIX. Essenzialmente ciò significa che non ci sono slash
      nel parametro <parameter>path</parameter> , viene restituito un punto
      ('<literal>.</literal>') per indicare la directory
      corrente. In altro modo, la stringa restituita è
      <parameter>path</parameter> senza alcun
      <literal>/component</literal>. Occorre notare che ciò implica che spesso
      dalla funzione <function>dirname</function> si ottiene uno slash od un punto nei casi
      in cui la vecchia versione avrebbe restituito una
      stringa vuota.
     </para>
    </note>
    <para>
     <function>dirname</function> ha modificato il suo comportamento dal PHP 4.3.0.
     Controllare l'esempio:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
 
//prima del PHP 4.3.0
dirname('c:/'); // restituisce '.'
 
//dopo il PHP 4.3.0
dirname('c:/'); // restituisce 'c:'
 
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     <function>dirname</function> è sicura con i dati binari dal PHP 5.0.0
    </para>
    <para>
     Vedere anche: <function>basename</function>, <function>pathinfo</function> e
     <function>realpath</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
