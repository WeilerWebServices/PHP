<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: fernando Status: working -->
  <!-- CREDITS: cortesi -->
<refentry xml:id="function.is-uploaded-file" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>is_uploaded_file</refname>
    <refpurpose>Dice se un file fù caricato via HTTP POST.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>bool</type><methodname>is_uploaded_file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
     </methodsynopsis>
    <para>
     Restituisce &true; se il file chiamato per <parameter>filename</parameter> è stato spedito in upload col metodo HTTP POST. Ciò è utile per rendere sicuro il fatto da un utente malizioso non abbia cercato di forzare uno script ad agire sul file sul quale non dovrebbe essere svolto alcun lavoro--ad esempio,
     <filename>/etc/passwd</filename>.
    </para>
    <para>
     Questo controllo è particolarmente importante in caso esista una qualunque possibilità che una qualunque cosa che viaggia durante l'upload del file, possa rivelarne il contenuto all'utente, o anche ad altri utenti che operano sullo stesso sistema.
    </para>
    <para>
     <function>is_uploaded_file</function> è disponibile solo nella versione PHP 3, dopo la 3.0.16, e nella versione 4
     dopo la 4.0.2. Se hai delle perplessità nell'usare una versione più recente, puoi utilizzare una delle seguenti funzioni per proteggere te stesso:
     <note>
      <para>
       L'esempio seguente <emphasis>not</emphasis> lavorerà con
       le versioni PHP 4 dopo la 4.0.2. Ciò dipende da funzionalità interne        a PHP che sono variate dopo tale versione.
      </para>
     </note>
    </para>
     <example>
      <title><function>is_uploaded_file</function> example</title>
     <programlisting role="php">
<![CDATA[
<?php
/* Userland test for uploaded file. */
function is_uploaded_file($filename) 
{
    if (!$tmp_file = get_cfg_var('upload_tmp_dir')) {
        $tmp_file = dirname(tempnam('', ''));
    }
    $tmp_file .= '/' . basename($filename);
    /* User might have trailing slash in php.ini... */
    return (ereg_replace('/+', '/', $tmp_file) == $filename);
}

/* This is how to use it, since you also don't have
 * move_uploaded_file() in these older versions: */
if (is_uploaded_file($HTTP_POST_FILES['userfile'])) {
    copy($HTTP_POST_FILES['userfile'], "/place/to/put/uploaded/file");
} else {
    echo "Possibile attacco su file in uploading: filename '$HTTP_POST_FILES[userfile]'.";
}
?>
]]>
     </programlisting>
    </example>
    <para>
     Vedi anche <function>move_uploaded_file</function>, e la sezione
     <link linkend="features.file-upload">Handling file uploads</link>
     per un semplice esempio di utilizzo.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
