<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 350855 Maintainer: pastore Status: ready -->
<!-- CREDITS: darvina -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.parse-ini-file">
 <refnamediv>
  <refname>parse_ini_file</refname>
  <refpurpose>Legge un file di configurazione</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>parse_ini_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>process_sections</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scanner_mode</parameter><initializer>INI_SCANNER_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>parse_ini_file</function> carica il
   file ini specificato da <parameter>filename</parameter>,
   e restituisce le impostazioni in esso in un array associativo.
  </para>
  <para>
   La struttura del file ini è la stessa del &php.ini;.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Il nome del file ini da processare. Se viene utilizzato un percorso relativo,
       viene valutato rispetto alla directory di lavoro corrente, quindi l'
       <link linkend="ini.include-path">include_path</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>process_sections</parameter></term>
     <listitem>
      <para>
       Impostando il parametro <parameter>process_sections</parameter>
       a &true;, si ottiene un array multi-dimensionale con
       i nomi delle sezioni e le impostazioni incluse. Per default
       <parameter>process_sections</parameter> è impostato a &false;      
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>scanner_mode</parameter></term>
     <listitem>
      <para>
       Può essere <constant>INI_SCANNER_NORMAL</constant> (default) o 
       <constant>INI_SCANNER_RAW</constant>. Se viene fornito 
       <constant>INI_SCANNER_RAW</constant>, i valori delle opzioni non verranno analizzati.
      </para>
      &ini.scanner.typed;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Le impostazioni vengono restituite come un <type>array</type> associativo in caso di successo
   e &false; in caso di fallimento.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Contenuto di <filename>sample.ini</filename></title>
    <programlisting>
<![CDATA[
; Questo è un esempio di file di configurazione
; I commenti cominciano con ';', come in php.ini

[first_section]
one = 1
five = 5
animal = BIRD

[second_section]
path = "/usr/local/bin"
URL = "http://www.example.com/~username"

[third_section]
phpversion[] = "5.0"
phpversion[] = "5.1"
phpversion[] = "5.2"
phpversion[] = "5.3"

urls[svn] = "http://svn.php.net"
urls[git] = "http://git.php.net"
]]>
    </programlisting>
   </example>
   <example>
    <title>Esempio di <function>parse_ini_file</function></title>
    <para>
     Le <link linkend="language.constants">costanti</link> (ma non le "costanti magiche" come <constant>__FILE__</constant>)
     possono anche essere lette
     in un file ini, quindi se si definisce una costante come un valore di file ini prima di
     eseguire <function>parse_ini_file</function>, essa verrà integrata nei
     risultati.  Vengono valutati solo i valori ini e il valore deve essere solo la costante. Per esempio:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

define('BIRD', 'Dodo bird');

// Lettura senza sezioni
$ini_array = parse_ini_file("sample.ini");
print_r($ini_array);

// Lettura con sezioni
$ini_array = parse_ini_file("sample.ini", true);
print_r($ini_array);

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [one] => 1
    [five] => 5
    [animal] => Dodo bird
    [path] => /usr/local/bin
    [URL] => http://www.example.com/~username
    [phpversion] => Array
        (
            [0] => 5.0
            [1] => 5.1
            [2] => 5.2
            [3] => 5.3
        )

    [urls] => Array
        (
            [svn] => http://svn.php.net
            [git] => http://git.php.net
        )

)
Array
(
    [first_section] => Array
        (
            [one] => 1
            [five] => 5
            [animal] => Dodo bird
        )

    [second_section] => Array
        (
            [path] => /usr/local/bin
            [URL] => http://www.example.com/~username
        )

    [third_section] => Array
        (
            [phpversion] => Array
                (
                    [0] => 5.0
                    [1] => 5.1
                    [2] => 5.2
                    [3] => 5.3
                )

            [urls] => Array
                (
                    [svn] => http://svn.php.net
                    [git] => http://git.php.net
                )

        )

)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Leggere un file php.ini con <function>parse_ini_file</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Una semplice funzione utilizzata per confrontare i risultati di seguito
function yesno($expression)
{
    return($expression ? 'Yes' : 'No');
}

// Ottieni il percorso per php.ini usando la funzione
// php_ini_loaded_file() disponibile da PHP 5.2.4
$ini_path = php_ini_loaded_file();

// Legge il file php.ini
$ini = parse_ini_file($ini_path);

// Stampa e confronta i valori, nota che l'uso di get_cfg_var()
// darà gli stessi risultati per la lettura ed il caricamento qui
echo '(parsed) magic_quotes_gpc = ' . yesno($ini['magic_quotes_gpc']) . PHP_EOL;
echo '(loaded) magic_quotes_gpc = ' . yesno(get_cfg_var('magic_quotes_gpc')) . PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
(parsed) magic_quotes_gpc = Yes
(loaded) magic_quotes_gpc = Yes
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>interpolazione di valori</title>
    <para>
     Oltre a valutare le costanti, alcuni caratteri hanno un significato speciale in un valore ini.
     Inoltre, le variabili di ambiente e i valori definiti in precedenza possono essere letti utilizzando
     la sintassi <code>${}</code>.
    </para>
    <programlisting>
<![CDATA[
; | viene utilizzato per l'OR bit a bit
three = 2|3

; & viene utilizzato per l'AND bit a bit
four = 6&5

; ^ viene utilizzato per lo XOR bit a bit
five = 3^6

; ~ viene utilizzato per la negazione bit a bit
negative_two = ~1

; () viene utilizzato per il raggruppamento
seven = (8|7)&(6|5)

; \ viene utilizzato per effettuare l'escape di un valore.
newline_is = "\\n" ; Restituisce la stringa "\n", non un carattere di nuova riga.
with quotes = "She said \"Exactly my point\"." ; Restituisce una stringa con virgolette.

path = ${PATH}
also_five = ${five}

]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
(parsed) magic_quotes_gpc = Yes
(loaded) magic_quotes_gpc = Yes
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Questa funzione non è collegata con il file
    &php.ini;. Esso è già elaborato
    al momento in cui gira lo script. Questa funzione può essere utilizzata
    per leggere i file di configurazione propri dell'applicazione.
   </para>
  </note>
  <note>
   <para>
    Se un valore nel file ini contiene caratteri non alfanumerici,
    esso deve essere delimitato dai doppi apici (").
   </para>
  </note>
  <note>
   <simpara>
    Ci sono parole riservate che non devono essere usate come chiavi per i
    file ini.  Queste includono: <literal>null</literal>, <literal>yes</literal>,
    <literal>no</literal>, <literal>true</literal>, <literal>false</literal>,
    <literal>on</literal>, <literal>off</literal>, <literal>none</literal>.
    I valori <literal>null</literal>, <literal>off</literal>, <literal>no</literal> e
    <literal>false</literal> producono <literal>""</literal>, e i valori
    <literal>on</literal>, <literal>yes</literal> e <literal>true</literal> producono
    <literal>"1"</literal>, salvo che non venga usata la modalità <constant>INI_SCANNER_TYPED</constant> (a partire da PHP 5.6.1).
    I caratteri <literal>?{}|&amp;~!()^"</literal> non devono essere utilizzati da nessuna parte
    nella chiave e hanno un significato speciale nel valore.
   </simpara>
  </note>
  <note>
   <para>
    Le voci senza segno di uguale vengono ignorate. Ad esempio, "foo"
    viene ignorato mentre "bar =" viene caricato e aggiunto con un valore
    vuoto. Ad esempio, MySQL ha un'impostazione "no-auto-rehash" 
    nel file <filename>my.cnf</filename> che non accetta un valore, quindi
    viene ignorato.
   </para>
  </note>
  <note>
   <para>
    I file ini sono generalmente trattati come testo normale dai server web e quindi forniti ai browser se richiesto.
    Ciò significa che per sicurezza bisogna mantenere i propri file ini fuori dalla propria docroot o riconfigurare il proprio
    server web per non servirli.  La mancata esecuzione di uno di questi può introdurre un rischio per la sicurezza.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>parse_ini_string</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
