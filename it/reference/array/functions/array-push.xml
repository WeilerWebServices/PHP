<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'array-push' in en/ tree in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: cucinato Status: ready -->
<!-- OLD-Revision: 1.173/EN.1.2 -->
  <refentry xml:id="function.array-push" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_push</refname>
    <refpurpose>
     Accoda uno o più elementi ad un array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>array_push</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_push</function> tratta
     <parameter>array</parameter> come una pila, e accoda le
     variabili date alla fine di <parameter>array</parameter>. La
     lunghezza di <parameter>array</parameter> aumenta del numero di
     variabili accodate. Ha lo stesso effetto di:
     <programlisting role="php">
<![CDATA[
<?php
$array[] = $var;
?>
]]>
     </programlisting>
     ripetuto per ogni <parameter>var</parameter>.
    </para>
    <para>
     Restituisce il nuovo numero di elementi nell'array.
    </para>
    <para>
     <example>
      <title>esempio di <function>array_push</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$pila = array("arancia", "banana");
array_push($pila, "mela", "lampone");
print_r($pila);
?>
]]>
      </programlisting>
      <para>
       In questo esempio <varname>$pila</varname> avrà
       i seguenti elementi:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => arancia
    [1] => banana
    [2] => mela
    [3] => lampone
)
]]>
      </screen>
     </example>
    </para>
    <note>
     <simpara>
      Se si utilizza <function>array_push</function> per aggiungere un elemento
      all'array, è preferibile piuttosto utilizzare <literal>$array[] = </literal> poiché in questo
      modo non c'è il tempo d'attesa per la chiamata di funzione.
     </simpara>
    </note>
    <para>
     Vedere anche <function>array_pop</function>,
     <function>array_shift</function> e
     <function>array_unshift</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
