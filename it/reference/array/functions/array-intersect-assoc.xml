<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: cucinato Status: ready -->
  <refentry xml:id="function.array-intersect-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_intersect_assoc</refname>
    <refpurpose>Calcola l'intersezione degli array con un ulteriore controllo sugli indici</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>array_intersect_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>array_intersect_assoc</function> restituisce un array
     contenente tutti i valori di <parameter>array1</parameter>
     che siano presenti in tutti gli array passati come argomento. Si noti che le chiavi sono utilizzate nel
     confronto, diversamente da <function>array_intersect</function>.
    </simpara>
    <para>
     <example>
      <title>esempio di <function>array_intersect_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "verde", "b" => "marrone", "c" => "blu", "rosso");
$array2 = array("a" => "verde", "giallo", "rosso");
$result_array = array_intersect_assoc($array1, $array2);
?>
]]>
      </programlisting>
      <para>
       $result_array sarà:
      </para>
      <screen>
<![CDATA[
Array
(
    [a] => verde
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Nell'esempio si vede che solo la coppia <literal>"a" =&gt;
     "verde"</literal> è presente in entrambi gli array e quindi viene restituita. 
     Il valore <literal>"rosso"</literal> non viene restituito perché in 
     <varname>$array1</varname> la sua chiave è <literal>0</literal> mentre
     la chiave di "rosso" in <varname>$array2</varname> è 
     <literal>1</literal>.
    </simpara>
    <simpara>
     I due valori delle coppie <literal>chiave =&gt; valore</literal> sono
     considerati uguali solo se
     <literal>(string) $elem1 === (string) $elem2 </literal>. In altre parole
     viene eseguito un controllo stringente che si accerta che le rappresentazioni sotto forma di stringa 
     siano uguali.
     <!-- TODO: example of it... -->
    </simpara>
    <simpara>
     Vedere anche <function>array_intersect</function>,
     <function>array_uintersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_uintersect_uassoc</function>,
     <function>array_diff</function> e
     <function>array_diff_assoc</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
