<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: cucinato Status: ready -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
  <refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_assoc</refname>
    <refpurpose>Calcola la differenza tra due o più array con un ulteriore controllo sull'indice</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_assoc</function> restituisce un <type>array</type>
     contenente tutti i valori di <parameter>array1</parameter>
     che non sono presenti in alcuno degli altri array.
     Si noti che le chiavi sono utilizzate nel confronto, diversamente da
     <function>array_diff</function>.
    </para>
    <para>
     <example>
      <title>esempio di <function>array_diff_assoc</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "verde", "b" => "marrone", "c" => "blu", "rosso");
$array2 = array("a" => "verde", "giallo", "rosso");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      <para>
       Il risultato è:
      </para>
      <screen>
<![CDATA[
Array
(
    [b] => marrone
    [c] => blu
    [0] => rosso
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Nell'esempio si vede che la coppia <literal>"a" =&gt; "verde"</literal>
     è presente in entrambi gli array e quindi non è nel risultato della
     funzione. Invece, la coppia <literal>0 =&gt; "rosso"</literal> 
     è nel risultato perché nel secondo argomento <literal>"red"</literal>
     cha come chiave <literal>1</literal>. 
    </simpara>
    <simpara>
     Due valori delle coppie <emphasis>chiave =&gt; valore</emphasis> sono
     considerati uguali solo se <literal>(string) $elem1 === (string)
     $elem2 </literal>. In altre parole c'è un controllo stringente che si accerta
     che le rappresentazioni sotto forma di stringa siano uguali.
     <!-- TODO: example of it... -->
    </simpara>
    <note>
     <simpara>
      Si noti che questa funzione controlla solo una dimensione di un array
      n-dimensionale. Ovviamente è possibile controllare le altre dimensioni usando 
      <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
     </simpara>
    </note>
    <para>
     Vedere anche <function>array_diff</function>, 
     <function>array_intersect</function>,
     and <function>array_intersect_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
