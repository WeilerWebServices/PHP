<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/array.xml, last change in rev 1.6 -->
<!-- last change to 'array-merge' in en/ tree in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: cucinato Status: ready -->
<!-- OLD-Revision: 1.173/EN.1.2 -->
  <refentry xml:id="function.array-merge" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_merge</refname>
    <refpurpose>Fonde uno o più array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>array</type><methodname>array_merge</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_merge</function> fonde gli elementi di uno o
     più array in modo che  i valori di un array siano accodati 
     a quelli dell'array precedente.  Restituisce l'array risultante.
    </para>
    <para>
     Se gli array in input hanno le stesse chiavi stringa, l'ultimo 
     valore di quella chiave sovrascriverà i precedenti.  Comunque, se gli array
     hanno le stesse chiavi numeriche, l'ultimo valore <emphasis
      role="strong">non</emphasis> sovrascriverà quello originale, bensì sarà
     accodato.
    </para>
    <para>
     Se viene fornito un solo array, e questo è indicizzato numericamente, le
     chiavi vengono reindicizzate in una sequenza continua. Nel caso di array associativi, delle
     chiavi duplicate rimane solo l'ultima. Vedere l'esempio tre per ulteriori dettagli.
    </para>
    <para>
     <example>
      <title>Esempio di <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("colore" => "rosso", 2, 4);
$array2 = array("a", "b", "colore" => "verde", "forma" => "trapezio", 4);
$risultato = array_merge($array1, $array2);
print_r($risultato);
?>
]]>
      </programlisting>
      <para>
       La variabile <varname>$risultato</varname> sarà:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [colore] => verde
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [forma] => trapezio
    [4] => 4
)
]]>
       </screen>
     </example>
    </para>
    <para>
     <example>
      <title>Esempio di <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "dati");
$result = array_merge($array1, $array2);
?>
]]>
      </programlisting>
      <para>
       Non dimenticarsi che le chiavi numeriche saranno rinumerate!
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => data
)
]]>
      </screen>
      <para>
       Se si vogliono preservare gli array e li si vuole solo
       concatenare, usare l'operatore <literal>+</literal>:
      </para>
      <programlisting role="php">
       <![CDATA[
<?php
$array1 = array();
$array2 = array(1 => "dati");
$result = $array1 + $array2;
?>
]]>
      </programlisting>
      <para>
       La chiave numerica sarà preservata e così pure l'associazione.
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [1] => data
)
]]>
      </screen>
     </example>
     <example>
      <title>esempio di <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$array_uno = array(0 => "mario", 1 => "roberto", 2 => "andrea", 3 => "dante");
$array_due = array("mario => "roberto", "andrea" => "dante", "mario" => "giacomo");

unset($array_uno[2]);

$risultato_uno = array_merge($array_uno);
$risultato_due = array_merge($array_due);

print_r($risultato_uno);
print_r($risultato_due);
?>
]]>
      </programlisting>
      <para>
        Il risultato sarà:
      </para>
      <screen role="php">
<![CDATA[
Array
(
    [0] => mario
    [1] => roberto
    [2] => dante
)
Array
(
    [mario] => giacomo
    [andrea] => dante
)
]]>
      </screen>
     </example>
    </para>
    <note>
     <para>
      Le chiavi condivise verranno sovrascritte dalla prima chiave processata.
     </para>
    </note>
    <para>
     Vedere anche <function>array_merge_recursive</function> e
     <function>array_combine</function> e
     <link linkend="language.operators.array">operatori sugli array</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
