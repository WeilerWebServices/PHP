<?xml version="1.0" encoding="UTF-8"?>
<!-- splitted from ./it/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'extract' in en/ tree in rev 1.2 -->
<!-- EN-Revision: n/a Maintainer: cucinato Status: ready -->
<!-- OLD-Revision: 1.173/EN.1.2 -->
  <refentry xml:id="function.extract" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>extract</refname>
    <refpurpose>
     Importa le variabili nella tabella dei simboli
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>extract</methodname>
      <methodparam><type>array</type><parameter>var_array</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>extract_type</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
     </methodsynopsis>
    <para>
     Questa funzione viene usata per importare delle variabili da un array nella
     tabella dei simbloi corrente. Riceve un array associativo
     <parameter>var_array</parameter> e interpreta le chiavi come nomi di
     variabile e i valori come valori di variabile. Per ogni coppia chiave/valore
     verrà creata una variabile nella tabella dei simboli corrente, coerentemente con
     i parametri <parameter>extract_type</parameter> e
     <parameter>prefix</parameter>.
    </para>
    <note>
     <para>
      Dalla versione 4.0.5 questa funzione restituisce il numero di
      variabili estratte.
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_IF_EXISTS</constant> e <constant>EXTR_PREFIX_IF_EXISTS</constant> sono stati introdotti nella versione 4.2.0.
     </para>
    </note>
    <note>
     <para>
      <constant>EXTR_REFS</constant> è stata introdotta nella versione 4.3.0.
     </para>
    </note>
    <para>
     <function>extract</function> controlla ogni chiave per stabilire se 
     costituisce un nome valido di variabile e se ci sono collisioni con
     variabili già esistenti nella tabella dei simboli. Il modo in cui vengono trattate le
     chiavi invalide/numeriche e le collisioni è determinato da
     <parameter>extract_type</parameter>. Può essere uno dei
     seguenti valori:
     <variablelist>
      <varlistentry>
       <term><constant>EXTR_OVERWRITE</constant></term>
       <listitem>
        <simpara>
         Se avviene una collisione, sovrascrive la variabile esistente.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_SKIP</constant></term>
       <listitem>
        <simpara>
         Se avviene una collisione, non sovrascrive la variabile
         esistente.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_SAME</constant></term>
       <listitem>
        <simpara>Se avviene una collisione, mette come prefisso al nome della variabile il
        parametro <parameter>prefix</parameter>.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_ALL</constant></term>
       <listitem>
        <simpara>
         Mette come prefisso di tutte le variabili il parametro 
         <parameter>prefix</parameter>. Dal PHP 4.0.5 questo avviene
         anche per i valori numerici.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_INVALID</constant></term>
       <listitem>
        <simpara>
         Mette come prefisso, solo per i nomi di variabili invalidi/numerici, 
         il parametro <parameter>prefix</parameter>. Questa opzione è stata aggiunta in 
         PHP 4.0.5.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         Sovrascrive la variabile solo se già esiste nella
         tabella dei simboli, altrimenti non fa nulla. Questo è utile
         per definire una lista di variabili valide e quindi estrarre
         solo quelle variabili definite in $_REQUEST, per
         esempio. Questa opzione è stata aggiunta in PHP 4.2.0.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_PREFIX_IF_EXISTS</constant></term>
       <listitem>
        <simpara>
         Crea nomi di variabili con il prefisso solo se la versione senza prefisso
         della stessa variable esiste nella tabella dei simboli. Questa
         opzione è stata aggiunta in PHP 4.2.0.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><constant>EXTR_REFS</constant></term>
       <listitem>
        <simpara>
         Estrae le variabili come riferimenti. Questo in effetti significa che i
         valori delle variabili importate referenziano i valori del
         parametro <parameter>var_array</parameter>. Si può usare questo flag
         da solo o combinarlo con gli altri mediante un OR nel parametro
         <parameter>extract_type</parameter>. Questo flag è stato aggiunto nel PHP
         4.3.0.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Se <parameter>extract_type</parameter> non è specificato, si
     assume che sia <constant>EXTR_OVERWRITE</constant>.
    </para>
    <para>
     Si noti che <parameter>prefix</parameter> è richiesto solo se
     <parameter>extract_type</parameter> è <constant>EXTR_PREFIX_SAME</constant>,
     <constant>EXTR_PREFIX_ALL</constant>, <constant>EXTR_PREFIX_INVALID</constant> 
     o <constant>EXTR_PREFIX_IF_EXISTS</constant>. Se
     il risultato non è un nome di variabile valido, non
     viene importato nella tabella dei simboli.
    </para>
    <para>
     <function>extract</function> restituisce il numero di variabili importate
     con successo nella tabella dei simboli.
    </para>
    <warning>
     <para>
      Non utilizzare <function>extract</function> su dati non convalidati, come
      gli input degli utenti ($_GET, ...). Se lo si deve fare, ad esempio per eseguire temporaneamente
      vecchio codice basato su
      <link linkend="security.globals">register_globals</link>,
      sincerarsi di utilizzare uno dei valori di
      <parameter>extract_type</parameter> come
      <constant>EXTR_SKIP</constant> e ricordarsi che occorre estrarre
      <varname>$_SERVER</varname>, <varname>$_SESSION</varname>,
      <varname>$_COOKIE</varname>, <varname>$_POST</varname> e
      <varname>$_GET</varname> in questo ordine.
     </para>
    </warning>
    <para>
     Un possibile uso di <function>extract</function> è quello di importare nella tabella dei simboli
     variabili contenute in un array associativo restituito da
     <function>wddx_deserialize</function>.
    </para>
    <para>
     <example>
      <title>esempio di<function>extract</function></title>
      <programlisting role="php">
<![CDATA[
<?php

/* Si supponga che $array_variabili sia un array restituito da
   wddx_deserialize */

$dimensione = "grande";
$array_variabili = array("colore" => "blu",
                         "dimensione"  => "media",
                         "forma" => "sfera");
extract($array_variabili, EXTR_PREFIX_SAME, "wddx");

echo "$colore, $dimensione, $forma, $wddx_dimensione\n";

?>
]]>
      </programlisting>
      <para>
       L'esempio mostrerà:
      </para>
      <screen>
<![CDATA[
blu, grande, sfera, media
]]>
      </screen>
     </example>
    </para>
    <para>
     La variabile <varname>$dimensione</varname> non è stata sovrascritta, in quanto è
     specificato <constant>EXTR_PREFIX_SAME</constant>, che ha portato alla
     creazione di <varname>$wddx_dimensione</varname>.  Se fosse stato specificato <constant>EXTR_SKIP</constant>,
     $wddx_dimensione non sarebbe stata creata.
     <constant>EXTR_OVERWRITE</constant> avrebbe portato <varname>$dimensione</varname> ad assumere
     il valore "medio", e <constant>EXTR_PREFIX_ALL</constant> avrebbe fatto creare nuove variabili
     chiamate <varname>$wddx_colore</varname>,
     <varname>$wddx_dimensione</varname> e
     <varname>$wddx_forma</varname>.
    </para>
    <para>
     Si deve usare un array associativo, un array indicizzato numericamente
     non produce risultati a meno di non usare
     <constant>EXTR_PREFIX_ALL</constant> o <constant>EXTR_PREFIX_INVALID</constant>.
    </para>
    <para>
     Vedere anche <function>compact</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
