<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: darvina Status: ready -->
<!-- splitted from ./en/functions/info.xml, last change in rev 1.2 -->
  <refentry xml:id="function.version-compare" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>version_compare</refname>
    <refpurpose>
     Confronta due stringhe contenenti il numero di versione di "PHP-standardized" 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Descrizione</title>
     <methodsynopsis>
      <type>int</type><methodname>version_compare</methodname>
      <methodparam><type>string</type><parameter>version1</parameter></methodparam>
      <methodparam><type>string</type><parameter>version2</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>
        operator
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>version_compare</function> confronta due numeri di versione
     "PHP-standardized" . Questa funzione è utile quando si desideri
     che funzioni solo con alcune versioni di PHP.
    </para>
    <para>
     La funzione <function>version_compare</function> restituisce -1 se la prima verisone
     è minore della seconda, 0 se sono uguali, +1 se la sceonda è
     inferiore.
    </para>
    <para>
     Per prima cosa la funzione sostituisce nella strina di versione le lettere 
     <literal>_</literal>, <literal>-</literal>
     e <literal>+</literal> con un puntot <literal>.</literal> ed inserisce un punto <literal>.</literal> prima e dopo ogni carattere
     non numerico, in modo che, ad esempio, '4.3.2RC1' diventi ''4.3.2.RC.1'. Quindi
     divite il testo come se usasse explode('.', $ver). Poi confronta le parti cominciando da sinistra verso destra
     Se una parte contiene versioni speciali queste sono gestite nel seguente modo:
     <literal>dev</literal> &lt; <literal>alpha</literal> = 
     <literal>a</literal> &lt; <literal>beta</literal> = 
     <literal>b</literal> &lt; <literal>RC</literal> &lt; 
     <literal>pl</literal>. In quest modo possono essere confrontati non solo
     differenti livelli di versioni quali '4.1' e '4.1.2', ma anche versioni di PHP 
     in fase di sviluppo.
    </para>
    <para>
     Specificando il terzo parametro opzionale <parameter>operator</parameter>
     si possono testare particolari relazioni. I possibili operatori sono:
     <literal>&lt;</literal>,
     <literal>lt</literal>, <literal>&lt;=</literal>,
     <literal>le</literal>, <literal>&gt;</literal>,
     <literal>gt</literal>, <literal>&gt;=</literal>,
     <literal>ge</literal>, <literal>==</literal>,
     <literal>=</literal>, <literal>eq</literal>,
     <literal>!=</literal>, <literal>&lt;&gt;</literal>,
     <literal>ne</literal>. Utilizzando questi parametri, la funzione restituirà
     1 se la relazione è una di quelle specificate dall'operatore, 
     altrimenti 0.
    </para>
    <para>
     <example>
      <title>Esempio di uso di <function>version_compare</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// prints -1
echo version_compare("4.0.4", "4.0.6");

// queste stampano 1
echo version_compare("4.0.4", "4.0.6", "<");
echo version_compare("4.0.6", "4.0.6", "eq");
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
