<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 322134 Maintainer: pastore Status: ready -->
<appendix xml:id="userlandnaming" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Guida Denominazione Spazio Utente</title>
 <para>
  La seguente è una guida per come scegliere meglio i nomi per gli identificatori
  nel codice PHP dello spazio utente. Quando si scelgono i nomi per ogni codice che crea i simboli
  nel namespace globale, è importante prendere in considerazione le seguenti linee guida
  per evitare che le future versioni di PHP possano scontrarsi con i propri
  simboli.
 </para>

 <section xml:id="userlandnaming.globalnamespace">
  <title>Namespace globali</title>
  <para>
   Ecco una panoramica di costrutti di codice che vanno nel namespace globale:
  </para>

  <itemizedlist>
   <listitem><para>funzioni</para></listitem>
   <listitem><para>classi</para></listitem>
   <listitem><para>interfacce</para></listitem>
   <listitem><para>costanti (non costanti di classe)</para></listitem>
   <listitem>
    <para>le variabili definite al di fuori delle/dei funzioni/metodi</para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.rules">
  <title>Regole</title>
  <para>
   L'elenco seguente fornisce una panoramica dei diritti che il progetto PHP
   riserva per sé, per la scelta di nomi per nuovi identificatori interni.
   La guida definitiva è l'ufficiale
   <link xlink:href="&url.userlandnaming.cs;">STANDARD DEL CODING</link>:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     PHP possiede lo spazio dei nomi di primo livello, ma cerca di trovare nomi descrittivi
     decenti ed evitare scontri evidenti.
    </para>
   </listitem>
   <listitem>
    <para>
     I nomi delle funzioni utilizzano sottolineature tra le parole,
     mentre i nomi delle classi usano sia la regola <literal>camelCase</literal> che quella
     <literal>PascalCase</literal>.
    </para>
   </listitem>
   <listitem>
    <para>
     PHP prefisserà eventuali simboli globali di un'estensione con il nome
     dell'estensione. (In passato, ci sono state numerose
     eccezioni a questa regola.) Esempi:
    </para>

    <itemizedlist>
     <listitem><para><function>curl_close</function></para></listitem>
     <listitem><para><function>mysql_query</function></para></listitem>
     <listitem><para>PREG_SPLIT_DELIM_CAPTURE</para></listitem>
     <listitem><para>new DOMDocument()</para></listitem>
     <listitem>
      <para>
       <function>strpos</function> (esempio di un errore passato)
      </para>
     </listitem>
     <listitem><para>new SplFileObject()</para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     Iteratori ed eccezioni sono tuttavia semplicemente postfissati con
     "<literal>Iterator</literal>" e "<literal>Exception</literal>."
     Esempi:
    </para>
    <itemizedlist>
     <listitem><para><classname>ArrayIterator</classname></para></listitem>
     <listitem><para><classname>LogicException</classname></para></listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     PHP riserva tutti i simboli che iniziano con <literal>__</literal>
     come magici. Si consiglia di non creare simboli che iniziano
     con <literal>__</literal> in PHP a meno che
     non si desideri utilizzare la funzionalità magica documentata. Esempi:
    </para>
    <itemizedlist>
     <listitem><para><link linkend="object.get">__get()</link></para></listitem>
     <listitem><para><function>__autoload</function></para></listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="userlandnaming.tips">
  <title>Suggerimenti</title>
  <para>
   Per scrivere codice che non invecchia mai, è raccomandato aggiungere il prefisso
   (o il suffisso) a tutto ciò che va nel namespace globale con un infrequente
   prefisso (o suffisso) di 3-4 lettere separato con una sottolineatura. Si
   raccomanda che al fine di evitare collisioni dei namespace con altro codice dello 
   spazio utente che i progetti ricerchino prefissi (o suffissi) esistenti utilizzati in altri
   progetti e pubblicizzare il loro prefisso scelto (o suffisso) in modo appropriato.
   Esempio:
  </para>

  <itemizedlist>
   <listitem><para>MyPx_someFunc()</para></listitem>
   <listitem><para>Foo_Date</para></listitem>
   <listitem><para>$asdf_dbh</para></listitem>
  </itemizedlist>
 </section>

</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
