<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 328095 Maintainer: cucinato Status: ready -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP e gli altri linguaggi di programmazione</title>
  <titleabbrev>PHP e gli altri linguaggi di programmazione</titleabbrev>

  <para>
   PHP è il miglior linguaggio di programmazione per la programmazione web, ma cosa si può dire
   sugli altri linguaggi?
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP, acronimo di Active Server Pages, non è un vero è proprio linguaggio 
      di programmazione, ma l'attuale linguaggio di programmazione per programmare 
      con ASP è il Visual Basic Script o JScript. Il più grande svantaggio 
      di questo linguaggio è il fatto che l'ASP è un linguaggio nato per 
      essere usato solo con Microsoft Internet Information Server (IIS), 
      cioè può essere usato solo su server Win32. Attualmente ci sono alcuni 
      progetti in fase di sviluppo per consentire ad 
      ASP di girare anche sotto altri sistemi operativi e webserver: 
      <link xlink:href="&url.instantasp;">InstantASP</link>
      di <link xlink:href="&url.halcyon;">Halcyon</link> (commerciale),
      Chili!Soft ASP di
      <link xlink:href="&url.chilisoft;">Chili!Soft</link> (commerciale), e
      <link xlink:href="&url.mono;">Mono</link> (open-source).
      Molti sostengono che ASP sia più lento e pesante di PHP, e 
      anche meno stabile,  ma un pregio di ASP è il fatto che, usando VBScript, 
      è relativamente semplice avvicinarsi a questo linguaggio se si conosce 
      già il Visual Basic. Il supporto ASP è inizialmente abilitato sui server 
      IIS per consentire una rapida configurazione ed esecuzione del linguaggio 
      stesso. I componenti forniti con ASP sono davvero limitati: se per 
      esempio avessi bisogno di interagire con server FTP, dovresti comprare 
      dei componenti aggiuntivi.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>PHP o ColdFusion?</para>
    </question>
    <answer>
     <para>
      Generalmente PHP è considerato più efficente per script complessi e 
      per sperimentare nuove idee; molti dicono inoltre che PHP sia più 
      stabile e che usi meno risorse di sistema. Cold Fusion ha un miglior 
      sistema per la gestione degli errori e per l'astrazione del database, e la gestione delle date,
      tuttavia in PHP 4 è stata imigliorata l'astrazione del database. Un
      altro punto di forza di Cold Fusion è il 
      potente motore di ricerca di cui dispone, anche se il motore di ricerca non è
      qualcosa che possa essere incluso in un linguaggio di scripting dedicato al web. 
      Inoltre, PHP gira su ogni tipo di piattaformai
      esistente, Cold Fusion solo su server Windows, Solaris, 
      Linux, MacOS e AIX. Cold Fusion ha un ottimo IDE e generalmente
      rende più veloce, per gli sviluppatori principianti, la produzione di
      applicazioni semplici, mentre PHP richiede qualche conoscenza iniziale
      prima di cominciare a programmare. Cold Fusion é progettato non preminentemente per i programmatori, 
      mentre PHP è un linguaggio sviluppato proprio per i programmatori.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>PHP o Perl?</para>
    </question>
    <answer>
     <para>
      Il più grande vantaggio che PHP ha su Perl è il fatto che PHP fu progettato solo 
      per lo scripting web, mentre Perl fu progettato per fare molte altre cose.
      Per questo motivo, Perl può risultare molto più complicato. La flessibilità /
      complessità di Perl può rendere difficile la collaborazione tra sviluppatori con skill
      di livello differente. PHP ha un codice più ordinato e preciso, senza però 
      perdere in flessibilità. PHP è anche più facile da integrare all'interno
      di HTML esistente. Grossomodo, PHP ha a disposizione tutte le funzionalità
      'buone' di Perl - costrutti, sintassi, ecc. - senza però avere un codice
      altrettanto complicato. Comunque, l'interprete a linea di comando di PHP
      (CLI) è abbastanza potente da eseguire compiti di alto livello in modo
      molto simile a come Perl è normalmente utilizzato.  Perl è un linguaggio di
      programmazione vero e proprio molto testato, dato che il suo sviluppo iniziò negli
      anni ottanta, ma PHP sta maturando ed evolvendo molto rapidamente.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
