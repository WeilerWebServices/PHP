<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347420 Maintainer: nobody Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.msg-receive">
 <refnamediv>
  <refname>msg_receive</refname>
  <refpurpose>Eine Nachricht aus einer Message Queue auslesen</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>msg_receive</methodname>
   <methodparam><type>resource</type><parameter>queue</parameter></methodparam>
   <methodparam><type>int</type><parameter>desiredmsgtype</parameter></methodparam>
   <methodparam><type>int</type><parameter role="reference">msgtype</parameter></methodparam>
   <methodparam><type>int</type><parameter>maxsize</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">message</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>unserialize</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">errorcode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>msg_receive</function> liest die erste Nachricht der Message Queue gegeben durch <parameter>queue</parameter> vom Typ
   <parameter>desiredmsgtype</parameter> aus.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>queue</parameter></term>
     <listitem>
      <para>
       Message Queue Ressourcen-Handle
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>desiredmsgtype</parameter></term>
     <listitem>
      <para>
       Wenn <parameter>desiredmsgtype</parameter> gleich 0 ist, wird die erste 
       Nachricht aus der Queue zurückgegeben. Wenn <parameter>desiredmsgtype</parameter> 
       größer als 0 ist, wird die erste Nachricht genau diesen Typs zurückgegeben.
       Wenn <parameter>desiredmsgtype</parameter> kleiner als 0 ist, 
       wird die erste Nachricht kleiner oder gleich dem absoluten Wert von
       <parameter>desiredmsgtype</parameter> zurückgegeben.
       Wenn keine passende Nachricht existiert, blockiert diese Funktion solange, bis eine 
       passende Nachricht verfügbar ist.  Durch das Setzen des Flags <constant>MSG_IPC_NOWAIT</constant> 
       im <parameter>flags</parameter> Parameter kann das blockierende Verhalten verhindert werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>msgtype</parameter></term>
     <listitem>
      <para>
       In diesem Parameter wird der Typ der empfangenen Nachricht gespeichert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxsize</parameter></term>
     <listitem>
      <para>
       Die maximale Größe der zu akzeptierenden Nachricht wird durch
       <parameter>maxsize</parameter> angegeben; Wenn die Nachricht in der Message Queue größer 
       ist als dieser Wert schlägt die Funktion fehl (es sei denn, es wird das entsprechende 
       Flag im <parameter>flags</parameter> Parameter gesetzt).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>message</parameter></term>
     <listitem>
      <para>
       Die empfangene Nachricht wird in <parameter>message</parameter> gespeichert,
       es sei denn es tritt ein Fehler beim Empfang auf.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>unserialize</parameter></term>
     <listitem>
      <para>
       Wenn dieser Wert auf
       &true; gesetzt wird, wird die Nachricht behandelt, als wäre sie mit
       demselben Mechanismus serialisiert worden, wie das Session Modul.
       Die Nachricht wird deserialisiert und zurückgegeben. Dies erlaubt 
       einen einfachen Empfang von Array und komplexen Objektstrukturen 
       von anderen PHP Skripten. Wenn Sie den WDDX Serializer verwenden, 
       erlaubt es den Empfang von einer WDDX kompatiblen Quelle.
      </para>
      <para>
       Wenn <parameter>unserialize</parameter> &false; ist, wird die Nachricht als
       binärsicherer String zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Der optionale <parameter>flags</parameter> erlaubt die Weitergabe von Flags 
       an den low-level System Call zu msgrcv.  Der Standardwert liegt bei 0, 
       aber es können einer oder mehrere der folgenden Werte übergeben werden
       (durch binäres oder vereint).
       <table>
        <title>Flag Werte für msg_receive</title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><constant>MSG_IPC_NOWAIT</constant></entry>
           <entry>Wenn kein Wert des übergebenen 
            <parameter>desiredmsgtype</parameter> in der Queue vorhanden ist, 
            gibt die Funktion sofort zurück statt zu warten.  Die Funktion
            schlägt fehl und gibt den Integer Wert entsprechend zu
            <constant>MSG_ENOMSG</constant> zurück.
           </entry>
          </row>
          <row>
           <entry><constant>MSG_EXCEPT</constant></entry>
           <entry>Dieses Flag in Kombination mit einem
            <parameter>desiredmsgtype</parameter> größer als 0 sorgt dafür, dass
            die Funktion die erste Nachricht zurück gbit, die nicht gleich
            <parameter>desiredmsgtype</parameter> ist.</entry>
          </row>
          <row>
           <entry><constant>MSG_NOERROR</constant></entry>
           <entry>
            Wenn die Nachricht länger als <parameter>maxsize</parameter> ist,
            wird durch Setzen diese Flags die Nachricht auf 
            <parameter>maxsize</parameter> gekürzt, und die Funktion 
            signalisiert keinen Fehler.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errorcode</parameter></term>
     <listitem>
      <para>
       Wenn die Funktion fehlschlägt, wird der optionale <parameter>errorcode</parameter>
       auf den Wert der System errno Variable gesetzt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
  <para>
   Bei erfolgreicher Ausführung wird die Message Queue Datenstruktur
   folgendermaßen aktualisiert: <literal>msg_lrpid</literal> wird auf die Process-ID 
   des aufrufenden Prozesses gesetzt, <literal>msg_qnum</literal> wird um 1 dekrementiert, und
   <literal>msg_rtime</literal> wird auf die aktuelle Zeit gesetzt.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msg_remove_queue</function></member>
    <member><function>msg_send</function></member>
    <member><function>msg_stat_queue</function></member>
    <member><function>msg_set_queue</function></member>
   </simplelist>
  </para>
 </refsect1>  
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
