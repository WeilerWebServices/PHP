<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335760 Maintainer: sergey Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocommandcursor.timeout" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCommandCursor::timeout</refname>
  <refpurpose>Устанавливает время ожидания на стороне клиента для команды</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCommandCursor</type><methodname>MongoCommandCursor::timeout</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Время ожидания может быть установлено в любое время и повлияет 
   на последующий поиск данных, связанный с этим курсором, 
   включая выборку большего количества результатов из базы данных.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      Количество миллисекунд, в течение которых курсор ожидает ответа.
      Используйте <literal>-1</literal>, чтобы ждать вечно. 
      По умолчанию курсор будет ждать <varname>30000</varname> миллисекунд (30 секунд).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Возвращает курсор.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Вызывает методы, которые извлекают результаты, 
   чтобы вызвать исключение <classname>MongoCursorTimeoutException</classname>, 
   если выборка данных занимает больше времени, чем указанное количество миллисекунд.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Пример использования <function>MongoCommandCursor::timeout</function></title>
   <para>
    В следующем примере драйвер будет ждать в течение 60 секунд 
    первого ответа от команды. Кроме того, он будет ждать 60 секунд каждый раз, 
    когда сервер будет опрашиваться для получения дополнительной информации.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient;
$col = $m->database->collection;

$pipeline = [ … ];

$cursor = $col->aggregateCursor( $pipeline );
$cursor->timeout( 60000 ); // на 60 секунд

foreach ( $cursor as $result ) {
   …
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Это не заставит сервер MongoDB отменять длительные операции; 
    он только указывает драйверу прекратить ждать ответа и выдать исключение 
    <classname>MongoCursorTimeoutException</classname> по истечении заданного времени. 
    Если вам нужно указать время ожидания на стороне сервера для команды, 
    рассмотрите возможность передачи опции <literal>maxTimeMS</literal> 
    в <methodname>MongoCollection::aggregateCursor</methodname>.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::aggregateCursor</function></member>
   <member><methodname>MongoCursorInterface::timeout</methodname></member>   
   <member>Опция <literal>socketTimeoutMS</literal> для <function>MongoClient::__construct</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
