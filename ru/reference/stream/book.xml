<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 342890 Maintainer: tmn Status: ready -->
<!-- Reviewed: yes Maintainer: lex -->
<!-- $Revision$ -->

<book xml:id="book.stream" xmlns="http://docbook.org/ns/docbook">
 <?phpdoc extension-membership="core" ?>
 <title>Потоки</title>
 
 <preface xml:id="intro.stream">
  &reftitle.intro;
  <simpara>
   Потоки были введены как инструмент для
   работы с файлами, сетевого обмена, сжатия данных и выполнения
   других операций с помощью одного общего набора функций. Выражаясь
   простыми понятиями, поток (<literal>stream</literal>) - это ресурс
   (<literal>resource</literal>), который ведет себя как источник
   непрерывной последовательности данных. Это означает, что из потока можно
   последовательно читать данные, равно как и записывать в него. Также
   возможно перемещаться (<function>fseek</function>) в разные
   позиции внутри потока.
  </simpara>
  <simpara>
   Обертка (<literal>wrapper</literal>) - дополнительный код, который
   объясняет потоку особенности работы со специфичными протоколами
   или кодировками. Например, обертка <literal>http</literal> знает, как
   преобразовать URL в <literal>HTTP/1.0</literal>-запрос для файла на
   удаленном сервере. Существует множество оберток, как встроенных в PHP
   изначально (см. <xref linkend="wrappers"/>), так и дополнительных.
   Дополнительные обертки можно добавлять либо отдельным скриптом с помощью функции
   <function>stream_wrapper_register</function>, либо напрямую из расширения,
   используя API <xref linkend="internals2.streams"/>. Добавлять можно
   произвольное количество оберток, что делает возможности работы с потоками
   практически безграничными. Посмотреть список зарегистрированных на данный
   момент оберток можно с помощью функции
   <function>stream_get_wrappers</function>.
  </simpara>
  <para>
   Ссылка на поток записывается в следующем виде:
   <parameter>scheme</parameter>://<parameter>target</parameter>
   <itemizedlist>
    <listitem>
     <simpara>
      <parameter>scheme</parameter> (строка) - Название обертки.
      Например, file, http, https, ftp, ftps, compress.zlib, compress.bz2,
      php. Список встроенных оберток можно посмотреть здесь
      <xref linkend="wrappers"/>. Если название обертки не указано,
      каждая функция, работающая с потоком, использует обертку по умолчанию (обычно это
      <literal>file</literal>://).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <parameter>target</parameter> - Зависит от того, какая обертка используется.
      Для потоков, связанных с файловой системой это обычно путь и имя файла. Для
      сетевых потоков это, как правило, имя хоста (зачастую с добавлением к нему пути).
      Описания целей для встроенных оберток приведены в <xref linkend="wrappers"/>.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   <note>
    <para>
     Информация об использовании потоков внутри исходного кода PHP приведена в
     <link linkend="internals2.ze1.streams">Streams API for PHP Extension Authors reference</link>.
    </para>
   </note>
  </para>
 </preface>
 
 &reference.stream.setup;
 &reference.stream.constants;
 &reference.stream.filters;
 &reference.stream.contexts;
 &reference.stream.errors;
 &reference.stream.examples;
 &reference.stream.php-user-filter;
 &reference.stream.streamwrapper;
 &reference.stream.reference;
 
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

