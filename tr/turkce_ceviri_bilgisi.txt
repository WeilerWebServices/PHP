$Id$

PHP Belgelerini NASIL çevrilir?

Herşeyden önce bir CVS çalışma dizinine ihtiyacınız var.
Bir CVS hesabınız varsa siz zaten ne yapılacağını biliyorsunuzdur.
Aşağıdaki CVS ile çalışma bölümü şöyle bir okuyup geçin.
"Bir CVS hesabınız yoksa" dosya sisteminizin uygun bir yerinde
şu komutu verin:

cvs -d :pserver:cvsread@cvs.php.net:/repository checkout phpdoc-tr

Parola sorarsa "phpfi"yi deneyin. phpdoc-tr çalışacağımız CVS modülüdür.
Bu komut phpdoc-tr diye bir dizin açacak ve altına CVS deposundan bu modüle
ait dosyaları indirecektir. Bundan sonra phpdoc-tr dizininden bahsederken
"çalışma dizini" diyeceğiz. Bunu yaptıktan sonra yeni bir çeviriye başlamaya
karar vermeden önce çalışma dizininizde daima

cvs update -dP

komutunu vermelisiniz. Bu komut çalışma dizininizi son haline getirir.
Onun için bir çeviriyi güncelliyorsanız bu komutu vermeyin. Yoksa çevirdikleriniz
heba olabilir. tr/ dizininde sadece çevrilmiş ve çevirisi sürmekte olan
dosyalar vardır. Yani çevireceğiniz dosya tr/ altında varsa başka bir dosya
seçmeniz gerekecek. Çevireceğiniz dosyayı en/ dizini altından seçip tr/
altındaki yerine kopyalayacaksınız. Örneğin,
'phpdoc-tr/en/reference/apache/book.xml' dosyasını gözünüze kestirdiniz
diyelim. Yapacağınız, çalışma dizininizin içinde

cp en/reference/apache/book.xml tr/reference/apache/book.xml

komutunu vermeye eşdeğer bir işlem olacak.

Ama hemen çeviriye girişmeyeceksiniz. Bazı önişlemler var.
** Bundan sonrası CVS hesabı bulunanları da ilgilendiriyor. **

Dosyanın ilk satırı genelde şuna benzer bir girdi içerir:
<?xml version="1.0" encoding="utf-8"?>
Bu satıra "XML başlığı" diyelim.
Burada "utf-8", çeviri yaparken kullanacağınız karakter kodlamasıdır.
Linux kullanıyorsanız, öntanımlı ayarları değiştirmediyseniz karakter
kodlamanız UTF-8'dir. Windows kullanıyorsanız, muhtemelen CP1254'tür.
Karakter kodlaması olarak UTF-8 kullanmayanlar buraya "iso-8859-9"
yazacaklar. Ancak, dosyayı çevirirken UTF-8 kullanmamış olsanız bile
dosyanın karakter kodlamasını 'recode', 'iconv' gibi bir araçla UTF-8'e
dönüştürüp oraya "utf-8" yazmanızı öneririm. PHP ekibi bir gün XML
dosyalarda UTF-8 kodlanmamış olanlar dönüştürülmeyecek derlerse ve
o güne kadar biz 7000 dosya çevirmişsek, vay halimize... ISO-8859-9
kullanımı giderek azalıyor. Herkes dünyayla bütünleşmek adına UTF-8
kullanmaya çalışıyor. Bu, bir gün olabilir, onun için biz önlemimizi
şimdiden almalıyız.

Unix ve türevleri dışında bir işletim sistemi kullananların asıl dikkat
etmesi gereken satırsonu karakteridir. Satırsonu karakterleri
Unix türünde olmalıdır.

XML başlığının altında bulunan CVS sürüm satırına dokunmuyoruz. O satırı
CVS günceller. O satır bundan sonra yaptığınız çevirinin sürümünü içerecek.
O satırın altına şöyle bir satır ekleyin:

<!-- EN-Revision: 1.56 Maintainer: flarecaster Status: ready -->

Bu satıra "güncelleme satırı" diyelim.
'1.56' özgün belgenin sürüm numarası, 'flarecaster' çevirmenin translation.xml
dosyasında yazan kullanıcı adı (nick), sonuncusu ise dosyanın durumunu gösterecek.
Çeviriye başlarken oraya "working", tamamlandığında "ready" yazacaksınız.

Böylece özgün belgenin sürüm numarası değiştiğinde en/ dizini altındaki
dosya için

cvs diff -u -r<EN-revision> <en/dizin/dosya>

komutuyla eski ve yeni sürümler arasındaki farkı kolayca görebilecek,
tüm dosyayı yeni baştan çevirircesine elden geçirmekten kurtulacağız.
Yani, çeviriyi güncellemek kolaylaşacak. Tabii, çeviriyi yapan
güncelleyecek ;-)

Güncelleme sırasında 1.56 yerine özgün belgenin yeni sürüm numarasını
yazmayı unutmuyoruz.

Bu iki satır sayesinde çeviri istatistikleri oluşturuluyor:
http://doc.php.net/php/tr/revcheck.php?p=filesummary

Güncelleme satırının altında bazı dosyalarda

<!-- CREDITS: Cumhur Onat, Serdar Soydemir, Ekin Koç, Buğra Gökalp Okçu -->

gibi satırlar göreceksiniz. Bu kişiler o belgenin çevirisiyle evvelce
ilgilenmiş kişilerdir. Onları böyle bir satırla hatırlamış oluyoruz.
Eğer siz de bir sahipsiz kalmış bir belgeyi günceleyecek olursanız,
dosyadaki son çevirmen satırında yazan ismi böyle bir satır oluşturup oraya
yazacaksınız. Kendi isminizi ise bu satırın altına

<!-- Last translator: <adınız ve soyadınız> -->

biçeminde ekleyeceksiniz. Bu işlemler bitince çeviriye başlamadan dosyayı
CVS hesabınız varsa depoya, yoksa ekip liderine göndereceksiniz ki o sizin
yerinize dosyayı depoya göndersin. Böylece her çeviri başlangıcı öncesi
verdiğimiz update komutu ile güncellenen çalışma dizinine bakarak bu dosyayı
bir başkası çevirmeye yeltenmeyecek.

Sıra geldi çeviride dikkat edilecek hususlara...
Dosyalar '<para>This extension requires PHP 5.</para>' şeklinde HTML'ye benzer
etiketler arasında bir takım metinler içerir. Bu etiketler XML belgenin yapı
taşları olduğundan onları çevirmeyeceğiz. Bazı etiketlerin HTML
etiketlerindeki gibi öznitelikleri vardır, onlara da dokunmuyoruz. Yani,
yukarıdaki metni <para>Bu eklenti PHP 5 gerektirir.</para> şeklinde
çevireceğiz.

Ayrıca dosyalarda bazen & ile başlayıp ; ile biten bazı sözcüklere
rastlayacaksınız. Onları cümlenin bir parçası haline getireceksiniz.
Örneğin,
<para>You must enable the <literal>foo</literal> setting in &php.ini;</para>
yerine
<para><literal>foo</literal> ayarını &php.ini; içinde yapmış olmalısınız.</para>
yazacaksınız. Ancak bazı durumlarda bunu yapamayabiliriz. Değişken içindeki
metin parçası cümle içinde kulanıldığında bir yerde doğruyken başka bir
yerde imla hatasına yol açabilir. Böyle bir durumdan şüphe duyarsanız mevcut
HTML belgeye bakıp ne yapacağınıza kendiniz karar vermelisiniz. XML belgeyle
ilişkili HTML belgeye, genellikle, XML belgenin kök etiketindeki xml:id
değerinin sonuna .html veya .php getirerek ulaşabilirsiniz.

Tırnak karakteri yerine &apos; kullanılmışsa siz de onu kullanın. Sizin cümle
içinde tek tırnak imi kullanmanız gerekirse zor gelmeyecekse yine &apos; kullanın.
Böylece `' gibi farklı tırnak imleri yerine tek bir tırnak imi kullanmış oluruz.
Ayrıca XML belgelerin HTML veya PHP'ye dönüştürülmesi sırasında olası bir
tırnak ayırma hatasını da önlemiş oluruz. Bu durum belgelerin kılavuz
sayfaları üretilirken bilhassa önem kazanmaktadır. Kılavuz (man) sayfalarında
' iminden başkası (&apos; olur, kendileri) görüntülenmez. Yani &apos; yerine
başka bir tırnak imi kullanmışsanız kılavuz sayfasında o tırnağı
bulamayabilirsiniz.

Çeviri bittikten sonra güncelleme satırındaki 'working' dizgesini
'ready' yapmayı unutmayın.

Linux kullananların çeviriyi kate üzerinde yapmasını öneririm. XML
dosyaları renklendirdiğinden çeviri daha kolay olur. Ayrıca XML dosyanın
geçerliliğini de kate'e sınatabilirsiniz. Bazı etiketleri yanlışlıkla
silerseniz, depoya hatalı dosya teslim etmekten kurtulabilirsiniz.

Ama siz siz olun buna da fazla güvenmeyin. Çünkü kate DTD ile ilgili hatalara
siz zorlamadıkça bakmaz. Son olarak dosyayı teslim etmeden önce çalışma
dizininizde şu komutunu kullanın:

$ php configure.php --with-lang=tr

Belgenizde kate'in saptayamadığı bir hata varsa bu komut size bilgi verir.
Komut hata vermemişse ve bir CVS hesabınız varsa dosyayı depoya
gönderebilirsiniz, CVS hesabınız yoksa dosyayı ekip liderine göndermelisiniz.
Verdiği hatayı nasıl gidereceğinizi bilmiyorsanız listedekilere sorunuz.
(Burada artık esr'nin ünlü belgesinden söz etmeyelim.) Hatalı dosyayı bana
gönderebilirsiniz ama ASLA ve ASLA depoya teslim etmeyin. Bunu yaparsanız,
site derlenemez ve dilimizi yine desteklenmeyen diller arasında buluruz.
Unutmayın sizler bir programlama dilinin belgesini çeviriyorsunuz.
Hele CVS hesabı olanlardan böyle hatalar hiç beklenmiyor. Bu bakımdan
böyle bir durumun süreklilik kazanması halinde PHP ekibi hakkımızda
ne karar verirse haklıdır.

*********************
Aşağıda bilinen İngilizce terimlerin Türkçe karşılıkları yazılmıştır.
AMACIMIZ AYNI TERİMLERİ KULLANMAKTIR. TERİMDEN EMİN DEĞİLSENIZ BURAYA BAKIN.
BURADA OLMAYAN TERİMLERİ EN ÜSTE EKLEYİNİZ.
Mevcut terimleri değiştirmeyin. Bu terimler belgeler.org'da ve Apache
belgelerinde kullanılan terimlerdir. Önerinizi tartışmak isterseniz,
listeye yazın tartışalım.

Liste demişken,
http://lists.sourceforge.net/mailman/listinfo/belgeler-phpdoc
adresinden iletişim listemize üye olmayı ihmal etmeyin. Aksi
takdirde kim kime dum duma, bir yere varamayız.

================================================
_               Altçizgi imi
&               Ve imi
Abstract        Metin için "Özet" ifadeler için "soyut" veya "mutlak"
Argument        Değiştirge
Array           Dizi
Associative Array   İlişkisel Dizi
Attribute       Öznitelik
Authentication  Kimlik doğrulama
Authorization   Yetkilendirme
Automatically   Özdevinimli olarak
Backslash       Ters bölü
Binary          Programsa kastedilen "çalıştırılabilir", kendisi bir veri
                türü ise çevrilmez, veri türünü niteliyorsa "ikil", bir
                işleci niteliyorsa "iki terimli".
Bitwise         Bitsel
Boolean         Kendisi veri türü ise çevrilmez. Türü niteliyorsa "mantıksal"
Built-in        Yerleşik
Callback        Geriçağırım
Class           Sınıf
Compile         Derleme
Configuration   Yapılandırma
Constants       Sabitler (Değişmezler değil!)
Constructor     Kurucu
Control Structure    Denetim Yapısı
Default         Öntanımlı
Destructor      Yıkıcı
Detail          Ayrıntı (lütfen "detay" diye çevirmeyin)
Digest          Özet
Directive       Yönerge
double quote    çift tırnak "
Dynamically     Devingen olarak
Escape          Escape tuşu için çevrilmez.
Escape character  Önceleme karakteri
Exception       İstisna
Executable      Çalıştırılabilir
Extention       Eklenti
Float           Gerçek sayı, kayan noktalı sayı
Form            Form
Function        İşlev
Hashing         Karıştırma
Heredoc         Yorumlu metin
Idle            Boşakoşum
Include         dahil etme, içerme
Index          (diziler için) indis
Initialize      İlklendirmek
Instantiate     Örnekleme (sınıfın nesnel bir örneğini oluşturma)
Interpreter     Yorumlayıcı
integer         tamsayı
Label           Yafta
Matrix          Dizey
Method          Yöntem
mixed           karışık
Module          Modül
Multithread     Çok evreli
Multibyte       Çok baytlı
Nowdoc          Yorumsuz metin
Object          Nesne
Operand	        Terim
Operator        İşleç
Original        Özgün
Output          Çıktı
Override        Geçersiz kılmak
Parameter       Değiştirge
Parse error     Çözümleme hatası
Parser          Çözümleyici
Pass into       İçe aktarmak
Pointer         Fare oku sözkonusu ise "imleç", C tarzı ise "gösterici"
Precedence      Öncelik
Predefined      Öntanımlı
Procedure       Yordam
Protocol        Protokol
Ouery string    Sorgu dizgesi
Reference       Gönderim; atıf yapmak
Regular expression	Düzenli ifade
Resource        Özkaynak
root user       root kullanıcı (Linux'ta en yetkili kullanıcı root'dur).
Runtime         Çalışma anı
Scalar          Sayıl
Scope           Etki Alanı
Serialize       Dizeleştirme
Server          Sunucu
single quote    tek tırnak '
Slash           Bölü imi
Static          Duruk
Statement       Deyim
String          Dize
Script          Betik
Scripting       Kodlama, kod yazma
Ternary         Üç terimli
Thread          Evre
Tag             İmlenim dilleri (*ML) için "etiket"
Trait           Nitelik
Type            "Tür" veya "veri türü"
Type casting    Tür çarpıtma
Unary           Tek terimli
Unserialize     Nesneleştirme
Validation      Geçerlilik
Variable        Değişken
Vector          Yöney

Version-Revision-Patch		Biz bunun tamamına ve parçalarına sürüm numarası
diyoruz. Bu kılavuzun okuyucusu için sürüm numarasını oluşturan  parçaların
isimlerinin bir önemi olmayacaktır.
================================================
