<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 350647 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.odbc-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_execute</refname>
  <refpurpose>Bir hazır deyimi çalıştırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>odbc_execute</methodname>
   <methodparam><type>resource</type><parameter>sonuç_kimliği</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>değiştirgeler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>odbc_prepare</function> ile hazırlanmış bir deyimi çalıştırır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sonuç_kimliği</parameter></term>
     <listitem>
      <para>
       <function>odbc_prepare</function> işlevinden dönen bir sonuç
       tanıtıcısı.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>değiştirgeler</parameter></term>
     <listitem>
      <para>
       <parameter>değiştirgeler</parameter> dizisindeki değiştirgelerin
       hazırlanmış deyimler için birer yer tutucu olduğu varsayılır. Bu
       dizideki elemanlar bu işlev çağrılarak dizgelere dönüştürülürler.
      </para>
      <para>
       <parameter>değiştirgeler</parameter> dizisindeki isimlerden tek tırnak
       içine alınmış olanlar veritabanı sunucusuna gönderilecek veya alınacak
       verileri tutan dosya isimleri olarak ele alınır.
      </para>
      <simpara>
       Belirttiğiniz dizgenin bir dosya değil de tek tırnak içine alınmış bir
       dizge olarak ele alınmasını isterseniz tek tırnaklı dizgenin başına ve
       sonuna bir boşluk veya tek tırnak dışında bir karakter ekleyin. Bu
       uygulanabilir değilse, dizgeyi saklamak için başka bir mekanizma
       kullanmalısınız (sorguyu doğrudan <function>odbc_exec</function> ile
       çalıştırmak gibi).
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>odbc_execute</function> ve <function>odbc_prepare</function> örneği</title>
    <para>
     Aşağıdaki kodda, myproc'un üç değiştirgesi de IN değiştirgesi ise
     <varname>$success</varname> daima &true; olacaktır:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;
$c = 3;
$stmt    = odbc_prepare($conn, 'CALL myproc(?,?,?)');
$success = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Saklanmış bir yordamı INOUT veya OUT değiştirgeleri ile çağırmanız
   gerekirse bunun için veritabanınızın kendi eklentisini kullanmanızı
   öneririz (Oracle için <link linkend="ref.oci8">oci8</link> gibi).
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>odbc_prepare</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
