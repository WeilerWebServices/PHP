<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.echo">
 <refnamediv>
  <refname>echo</refname>
  <refpurpose>Bir veya daha fazla dizgeyi çıktılar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>echo</methodname>
   <methodparam><type>string</type><parameter>değ1</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Tüm değiştirgelerini çıktılar.
  </simpara>
  <para>
   <function>echo</function> aslında bir işlev değil bir dil oluşumudur, yani
   değiştirgelerini yaylı ayraçlar arasına almak gerekmez.
   <function>echo</function> (diğer dil oluşumlarından farklı olarak) bir
   işlev gibi davranmaz, bu bakımdan bir işlevin değiştirgesinde kullanılamaz.
   Ek olarak, <function>echo</function>'ya birden fazla değiştirge aktarmak
   isterseniz bu değiştirgeleri asla yaylı ayraçlar arasına almamalısınız.
  </para>
  <para>
   <function>echo</function> ayrıca kısaltılmış bir sözdizimine de sahiptir.
   Bir açan PHP etiketinin ardına bir eşit işareti koyup dizgeyi ardına
   yazmanız yeterlidir. Bu kısa kullanım sadece <link
   linkend="ini.short-open-tag">short_open_tag</link> yönergesi etkin
   kılınmışsa kullanılabilir. Örnek:
   <informalexample>
    <programlisting role="php">
<![CDATA[
I have <?=$foo?> foo.
]]>
    </programlisting>
   </informalexample>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>değ1</parameter></term>
     <listitem>
      <para>
       Çıktılanacak değiştirge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>echo</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
echo "Hello World";

echo "Bu çok satırlı bir
dizge olup satırsonu karakterleri
de çıktılanır.";

echo "Bu çok satırlı bir\ndizge olup satırsonu karakterleri\nde çıktılanır.";

echo "Karakterlerin öncelenmesi böyle yapılır: \"Tıpkı böyle\".";

// echo deyiminde değişkenleri de kullanabilirsiniz
$bu = "Bu da";

echo "$bu Buda"; // Bu da Buda

// Ayrıca dizileri de kullanabilirsiniz
$bar = array("değer" => "Buda");

echo "Bu da {$bar['değer']} !"; //  Bu da Buda !

// Tek tırnak içine alırsanız değişken basılır, değeri değil
echo '$bu Buda'; // $bu Buda

// Başka karakter kullanmazsanız sadece değişkenin değeri basılır
print $bu;          // Bu da
echo $foo,$bar;     // Bu daBuda

// Bazıları birleştirerek basılmak üzere çok sayıda değiştirgeyi böyle aktarır
echo 'Bu ', 'dizge ', 'çok ', 'değiştirgelidir.', chr(10);
echo 'Bu ' . 'dizge ' . 'çok ' . 'değiştirgelidir.' . "\n";

echo <<<END
Burada "yorumlu metin" (heredoc) sözdizimi kullanılmış
olup bu dizgenin içindeki her $değişken yorumlanır.
Yorumlu metin sonlandırıcısı son satırda yer almalı ve
ardındaki noktalı virgül dışında etrafında hiçbir karakter
(boşluklar dahil) bulunmamalıdır!
END;

// echo bir işlev gibi davranmadığından bu kod geçersizdir.
($some_var) ? echo 'true' : echo 'false';

// Ancak, bu kod çalışır:
($some_var) ? print 'true' : print 'false'; // print de bir dil oluşumudur
                                            // fakat bir işlev gibi davranır.
                                            // Dolayısıyla bu bağlamda
                                            // kullanılabilir.
echo $some_var ? 'true': 'false'; // echo kendi içeriğini yorumlayabilir
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.language-construct;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>print</function></member>
    <member><function>printf</function></member>
    <member><function>flush</function></member>
    <member><link linkend="language.types.string.syntax.heredoc">Yorumlu
    metinler</link></member>

   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
