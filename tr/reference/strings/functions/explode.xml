<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.explode">
 <refnamediv>
  <refname>explode</refname>
  <refpurpose>Bir dizgeyi bir ayraca göre bölüp bir dizi haline getirir
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>explode</methodname>
   <methodparam><type>string</type><parameter>ayraç</parameter></methodparam>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sınır</parameter></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen <parameter>dizge dizgesini</parameter> belirtilen
   <parameter>ayraç</parameter> dizgesine göre alt dizgelere ayırıp bunları
   bir diziye yerleştirir.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ayraç</parameter></term>
     <listitem>
      <para>
       Dizgeleri ayırmak için kullanılacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Alt dizgelerine ayrılacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sınır</parameter></term>
     <listitem>
      <para>
       <parameter>sınır</parameter> pozitifse dizi en çok
       <parameter>sınır</parameter> sayıda eleman içerir ve dizgenin kalanı
       son elemana yerleştirilir.
      </para>
      <para>
       <parameter>sınır</parameter> negatifse, son
       <parameter>sınır</parameter> eleman hariç tüm elemanlar döndürülür.
      </para>
      <para>
       <parameter>sınır</parameter> sıfırsa, 1 olarak ele alınır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <function>implode</function> işlevinin değiştirgeleri tarihsel sebeplerle
   yer değiştirebilse de, bu <function>explode</function> için geçerli
   değildir. <parameter>ayraç</parameter> değiştirgesi
   <parameter>dizge</parameter> değiştirgesinden önce belirtilmelidir.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>ayraç</parameter> boş ("") bir dizge ise
   <function>explode</function> &false; döndürür.  Eğer
   <parameter>ayraç</parameter> dizgesi <parameter>dizge</parameter> içinde
   bulunmayan bir karakter içeriyorsa ve negatif bir
   <parameter>sınır</parameter> belirtilmişse boş bir dizi döner. Diğer
   <parameter>sınır</parameter> değerleri için <parameter>dizge</parameter>
   dizgesini içeren bir dizi döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Negatif <parameter>sınır</parameter> desteği eklendi.
       </entry>
      </row>
      <row>
       <entry>4.0.1</entry>
       <entry>
        <parameter>sınır</parameter> değiştirgesi eklendi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>explode</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// 1. örnek
$pizza  = "dilim1 dilim2 dilim3 dilim4 dilim5 dilim6";
$dilimler = explode(" ", $pizza);
echo $dilimler[0]; // dilim1
echo $dilimler[1]; // dilim2

// 2. örnek
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
echo $user; // foo
echo $pass; // *

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <parameter>sınır</parameter> değiştirgesi örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'one|two|three|four';

// positif sınır
print_r(explode('|', $str, 2));

// negatif sınır (PHP 5.1 ve sonrası)
print_r(explode('|', $str, -1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => one
    [1] => two|three|four
)
Array
(
    [0] => one
    [1] => two
    [2] => three
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>str_split</function></member>
    <member><function>str_word_count</function></member>
    <member><function>strtok</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
