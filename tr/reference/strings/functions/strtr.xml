<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Belli karakterleri dönüştürür</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam><type>string</type><parameter>eski</parameter></methodparam>
   <methodparam><type>string</type><parameter>yeni</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam><type>array</type><parameter>eski_yeni</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bu işlev <parameter>dizge</parameter> dizgesindeki her
   <parameter>eski</parameter> dizgesinin yerine <parameter>yeni</parameter>
   dizgesini yerleştirilerek elde edilen dizgeyi döndürür.
  </para>
  <para><!-- Bu açıklama örnekle çelişiyor
   Eğer <parameter>eski</parameter> ve <parameter>yeni</parameter> dizgeleri
   farklı uzunluktaysa dizgelerden uzun olanının fazla baytları yok sayılır.
  --></para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Karakterleri dönüştürülecek dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>eski</parameter></term>
     <listitem>
      <para>
       Yerine yenisi konacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yeni</parameter></term>
     <listitem>
      <para>
       Eskisinin yerine konacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>eski_yeni</parameter></term>
     <listitem>
      <para>
       <literal>array('eski' => 'yeni', ...)</literal> çiftlerinden oluşan bir
       dizi.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>dizge</parameter> dizgesindeki her <parameter>eski</parameter>
   dizgesinin yerine <parameter>yeni</parameter> dizgesi yerleştirilerek
   elde edilen dizgeyle döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry>
        Seçimlik <parameter>eski</parameter> ve <parameter>yeni</parameter>
        değiştirgeleri eklendi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>strtr</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>strtr</function> işlevi iki değiştirge ile de çağrılabilir. Bu
   durumda birinci değiştirgede belirtilen dizge ikinci değiştirgedeki eski ->
   yeni çiftleri kullanılarak dönüştürülür. <function>strtr</function> olası
   en uzun ilk eşleşmeyi arar, ancak daha önce değişiklik yaptığı kısmı
   yeniden değerlendirmez.
  </para>
  <example>
   <title>- İki değiştirgeli <function>strtr</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$trans = array("hello" => "hi", "hi" => "hello");
echo strtr("hi all, I said hello", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
hello all, I said hi
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
