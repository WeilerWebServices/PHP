<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.mdecrypt-generic" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mdecrypt_generic</refname>
  <refpurpose>Verinin şifresini çözer</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mdecrypt_generic</methodname>
   <methodparam><type>resource</type><parameter>şt</parameter></methodparam>
   <methodparam><type>string</type><parameter>veri</parameter></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen verinin şifresini çözer. Şifresi çözülürken verinin sonuna
   eklenen baytlar yüzünden dönen dizge şifrelenmemiş dizgeden daha uzundur.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>şt</parameter></term>
     <listitem>
      <para>
       <function>mcrypt_module_open</function> tarafından döndürülmüş bir
       şifreleme tanıtıcısı.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Şifrelenmiş veri.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>mdecrypt_generic</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
    /* Veri */
    $tuz = 'Bu anahtar bu şifre için bile gereğinden uzun bir anahtar';
    $veri = 'çok önemli veri';

    /* Modülü açıp bir İV üretelim */
    $şt = mcrypt_module_open('des', '', 'ecb', '');
    $tuz = substr($tuz, 0, mcrypt_enc_get_key_size($şt));
    $iv_boyu = mcrypt_enc_get_iv_size($şt);
    $iv = mcrypt_create_iv($iv_boyu, MCRYPT_RAND);

    /* Şifreleme tanıtıcısını ilklendirelim */
    if (mcrypt_generic_init($şt, $tuz, $iv) != -1) {

        /* Veriyi şifreleyelim */
        $şifreli_veri = mcrypt_generic($şt, $veri);
        mcrypt_generic_deinit($şt);

        /* Şifreyi çözmek için tamponu ilklendirelim */
        mcrypt_generic_init($şt, $tuz, $iv);
        $sonuç = mdecrypt_generic($şt, $şifreli_veri);

        /* Temizlik */
        mcrypt_generic_deinit($şt);
        mcrypt_module_close($şt);
    }

    if (strncmp($sonuç, $veri, strlen($veri)) == 0) {
        echo "Tamam\n";
    } else {
        echo "Hata\n";
    }
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Yukarıdaki örnekte, şifreleme öncesi veri ile şifreleme sonrası şifresi
   çözülmüş verinin nasıl karşılaştırılacağı gösterilmiştir. Bir verinin
   şifresini çözmeden önce şifreleme tamponunu
   <function>mcrypt_generic_init</function> ile yeniden ilklendirmek çok
   önemlidir.
  </para>
  <para>
   Bu işlevi çağırmadan önce, <function>mcrypt_generic_init</function>
   işlevini bir tuz ve bir İV (ilklendirme vektörü) ile çağırarak şifreleme
   tanıtıcısını daima ilklendirmelisiniz. Şifreleme bittikten sonra şifreleme
   tamponlarını <function>mcrypt_generic_deinit</function> işleviyle serbest
   bırakmalısınız. Bununla ilgili bir örneği
   <function>mcrypt_module_open</function> işlevinin açıklamasında
   bulabilirsiniz.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_generic</function></member>
    <member><function>mcrypt_generic_init</function></member>
    <member><function>mcrypt_generic_deinit</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
