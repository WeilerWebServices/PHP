<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.list" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>list</refname>
  <refpurpose>Değişkenlere bir dizi gibi atama yapar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>list</methodname>
   <methodparam><type>mixed</type><parameter>değişken</parameter></methodparam>
   <methodparam rep="repeat" choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array</function> gibi bu da bir işlev değil bir dil oluşumudur.
   <function>list</function> işlevi tek deyimde birden fazla değişkene atama
   yapmak için kullanılır.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>değişken</parameter></term>
     <listitem>
      <para>
       Bir değişken.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Atanan dizi döner.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>list</function> örnekleri</title>
    <programlisting role="php">
<![CDATA[
<?php

$veri = array('kahve', 'uyku', 'kafein');

// Değişkenlerin tamamını listeleyelim
list($içecek, $neyi, $güç) = $veri;
echo "$içecek $neyi kaçırır, çünkü içinde $güç vardır.\n";

// Bir kısmını listeleyelim
list($içecek, , $güç) = $veri;
echo "$içecek $güç içerir.\n";

// Sadece üçüncü kalsın
list( , , $güç) = $veri;
echo "Bana $güç lazım!\n";

// list() dizgelerle çalışmaz
list($bar) = "abcde";
var_dump($bar); // NULL
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>list</function> kullanım örneği</title>
    <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>Çalışanın adı</th>
  <th>Ücreti</th>
 </tr>

<?php

$sonuç = mysql_query("SELECT id, ad, ucret FROM personel", $conn);
while (list($id, $ad, $ücret) = mysql_fetch_row($sonuç)) {
    echo " <tr>\n" .
          "  <td><a href=\"info.php?id=$id\">$ad</a></td>\n" .
          "  <td>$ücret</td>\n" .
          " </tr>\n";
}

?>

</table>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- İç içe <function>list</function> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php

list($a, list($b, $c)) = array(1, array(2, 3));

var_dump($a, $b, $c);

?>
]]>
    </programlisting>
    <screen>
<![CDATA[
int(1)
int(2)
int(3)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- Dizi indisleri ile <function>list</function> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php

$veri = array('kahve', 'uyku', 'kafein');

list($a[0], $a[1], $a[2]) = $veri;

var_dump($a);

?>
]]>
    </programlisting>
    <para>
     Aşağıdaki çıktıyı verir (dikkatı ederseniz, eleman sırası
     <function>list</function> ile belirtilen sıra ile aynıdır):
    </para>
    <screen>
<![CDATA[
array(3) {
  [2]=>
  string(6) "kafein"
  [1]=>
  string(4) "uyku"
  [0]=>
  string(5) "kahve"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    <function>list</function> değerleri en sağdaki değiştirgeden itibaren
    atar. Düz değişken kullanıyorsanız bundan dolayı endişelenmeniz gerekmez.
    Fakat indisli diziler kullanıyorsanız, dizi indislerinin,
    <function>list</function>'teki yazılış sırasına göre soldan sağa
    sıralanacağını düşünürsünüz. Fakat atama sağdan sola doğru  yapılır.
   </para>
  </warning>
  <note>
   <para>
    <function>list</function> sadece sayısal indisli dizilerle çalışır ve
    indislerin 0'dan başladığı varsayılır.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>each</function></member>
    <member><function>array</function></member>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
