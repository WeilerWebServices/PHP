<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 291316 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>Bir dizideki eleman sayısını veya bir nesnedeki özellik sayısını
  döndürür</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>count</methodname>
   <methodparam><type>mixed</type><parameter>girdi</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>kip</parameter><initializer>COUNT_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Bir dizideki eleman sayısını veya bir nesnedeki özellik sayısını döndürür.
  </para>
  <para>
   Nesneler için, eğer <link linkend="ref.spl">SPL</link> kuruluysa
   <literal>Countable</literal> tarafından gerçeklenen
   <function>count</function> yöntemini sonucu almak için kullanabilirsiniz.
   Nesne arayüzü sadece bir yönteme, <function>count</function> işlevinden
   dönen değeri döndüren <function>count</function> yöntemine sahiptir.
  </para>
  <para>
   PHP'de kullanılan dizilerin nasıl gerçeklendiği ile ilgili daha ayrıntılı
   bilgi edinmek için <link linkend="language.types.array">array</link>
   sayfasına bakınız.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>girdi</parameter></term>
     <listitem>
      <para>
       Dizi veya nesne.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kip</parameter></term>
     <listitem>
      <para>
       İsteğe bağlı <parameter>kip</parameter> değiştirgesine
       <constant>COUNT_RECURSIVE</constant> (veya 1) atanırsa,
       <function>count</function> işlevi diziyi ardışık olarak sayar. Böylece
       çok boyutlu bir dizinin bütün elemanları sayılabilir.
       <function>count</function> sonsuz iç içeliği algılayacak yetenekte
       değildir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir dizi dışında her şey tek elemanlı bir dizi kabul edilebileceğinden
   işlev daima <parameter>girdi</parameter>'deki eleman sayısını döndürür.
  </para>
  <para>
   Eğer <parameter>girdi</parameter> <type>array</type> veya
   <type>object</type> türünde değilse <literal>Countable</literal> arayüzü,
   <literal>1</literal> döndürür. Tek istisnası
   <parameter>girdi</parameter>'nin &null; olması durumu olup böyle bir
   durumda <literal>0</literal> döner.
  </para>
  <caution>
   <para>
    <function>count</function> işlevi atanmamış bir değişken için 0
    döndürebilir, fakat değişken boş bir dizi ile ilklendirilmişse de 0
    döndürecektir. Değişkenin tanımlı olup olmadığını
    <function>isset</function> ile sınayabilirsiniz.
   </para>
  </caution>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.2.0</entry>
       <entry>
        İsteğe bağlı <parameter>kip</parameter> değiştirgesi eklendi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>count</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$sonuç = count($a);
// $sonuç == 3

$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
$sonuç = count($b);
// $sonuç == 3

$sonuç = count(null);
// $sonuç == 0

$sonuç = count(false);
// $sonuç == 1
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- Ardışık <function>count</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$food = array('fruits' => array('orange', 'banana', 'apple'),
              'veggie' => array('carrot', 'collard', 'pea'));

// ardışık sayım
echo count($food, COUNT_RECURSIVE); // 8

// normal sayım
echo count($food); // 2

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_array</function></member>
    <member><function>isset</function></member>
    <member><function>strlen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
