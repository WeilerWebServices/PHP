<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.array-walk" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk</refname>
  <refpurpose>Bir dizinin her üyesine kullanıcı tanımlı bir işlevi uygular
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk</methodname>
   <methodparam><type>array</type><parameter role="reference">dizi</parameter></methodparam>
   <methodparam><type>callback</type><parameter>işlev</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>veri</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <parameter>dizi</parameter> dizisinin her elemanına kullanıcı tarafından
   tanımlanmış <parameter>işlev</parameter> işlevini uygular.
  </simpara>
  <para>
   <function>array_walk</function> işlevi dizinin dahili göstericisinin
   konumunda etkilenmez. Dizinin dahili göstericisini dikkate almaksızın dizi
   elemanları üzerinde sırayla işlem yapar.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizi</parameter></term>
     <listitem>
      <para>
       İşleme sokulacak dizi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>işlev</parameter></term>
     <listitem>
      <para>
       Normalde, <parameter>işlev</parameter> iki değiştirge alır. İlki
       <parameter>dizi</parameter> değiştirgesi ikincisi ise indis veya
       anahtardır.
      </para>
      <note>
       <para>
        Eğer <parameter>işlev</parameter> işlevinin doğrudan dizinin kendisi
        üzerinde işlem yapması gerekiyorsa işlevin ilk değiştirgesini bir
        <link linkend="language.references">gönderim</link> olarak belirtin.
        Böylece elemanlar üzerinde yapılan her değişiklik özgün dizide
        yapılmış olur.
       </para>
      </note>
      <para>
       Kullanıcılar ekleme/silme gibi işlemlerle geriçağırım işlevinde işlem
       görmekte olan <parameter>dizi</parameter> üzerinde değişiklik
       yapmamalıdırlar. Eğer <function>array_walk</function>  uygulaması
       sırasında dizi değişikliğe uğrarsa bu işlevin davranışı beklendiği gibi
       olmayabilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>veri</parameter></term>
     <listitem>
      <para>
       Eğer isteğe bağlı <parameter>veri</parameter> değiştirgesi
       belirtilmişse, değeri <parameter>işlev</parameter> işlevine üçüncü
       değiştirge olarak aktarılır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Eğer <parameter>işlev</parameter> belirtilenden daha fazla değiştirge
   gerektiriyorsa <function>array_walk</function> işlevinin yaptığı her
   <parameter>işlev</parameter> çağrısında <link linkend="errorfunc.constants">
   E_WARNING</link> seviyesinde bir uyarı üretilir. Bu uyarılar
   <function>array_walk</function>  işlevinin adının önüne bir <link
   linkend="language.operators.errorcontrol">@</link> işleci getirilerek veya
   <function>error_reporting</function> kullanılarak bastırılabilir
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>array_walk</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "limon", "a" => "ayva", "b" => "muz", "c" => "elma");

function test_alter(&$item1, $key, $prefix)
{
    $item1 = "$prefix: $item1";
}

function test_print($item2, $key)
{
    echo "$key. $item2<br />\n";
}

echo "Önce ...:\n";
array_walk($fruits, 'test_print');

array_walk($fruits, 'test_alter', 'fruit');
echo "... ve sonra:\n";

array_walk($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Önce ...:
d. limon
a. ayva
b. muz
c. elma
... ve sonra:
d. meyve: limon
a. meyve: ayva
b. meyve: muz
c. meyve: elma
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk_recursive</function></member>
    <member><function>iterator_apply</function></member>
    <member><function>create_function</function></member>
    <member><function>list</function></member>
    <member><function>each</function></member>
    <member><function>call_user_func_array</function></member>
    <member><function>array_map</function></member>
    <member>&seealso.callback;</member>
    <member>&foreach;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
