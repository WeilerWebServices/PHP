<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.eval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>eval</refname>
  <refpurpose>Bir dizgeyi bir PHP kodu olarak yorumlar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>eval</methodname>
   <methodparam><type>string</type><parameter>kod_dizgesi</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>kod_dizgesi</parameter> ile belirtilen dizgeyi bir PHP kodu
   olarak yorumlar. Kodları diğer her şeyin yanında, veritabanının bir metin
   alanında tutmak ve bu kodları gerektiğinde çalıştırmak için çok
   kullanışlıdır.
  </para>
  <para>
   <function>eval</function> işlevini kullanırken hatırda tutulması gereken
   bazı durumlar vardır: Aktarılan dizgenin PHP kodu olarak geçerli olması
   gerekir; deyimleri sonlandıran noktalı virgüller bu dahildir, yoksa
   <function>eval</function> işlevinden sonraki satırda yorumlayıcı devreden
   çıkmaz. Ayrıca, <parameter>kod_dizgesi</parameter> içindeki öncelemlerin
   düzgün bir biçimde yapılmış olması gerekir. HTML ve PHP kodlarını karışık
   kullanmak isterseniz PHP kipinden çıkmak için PHP'nin kapama etiketini
   kullanabilirsiniz.
  </para>
  <para>
   Ayrıca, <function>eval</function> altında kullanılan değişkenlerin
   değerleriyle birlikte ana betikte geçerli kalacağını aklınızdan çıkarmayın.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>kod_dizgesi</parameter></term>
     <listitem>
      <para>
       Yorumlanacak PHP kodlarını içeren dizge.
       <parameter>kod_dizgesi</parameter> <link
       linkend="language.basic-syntax.phpmode">PHP açılış etiketlerini</link>
       içermemelidir.
      </para>
      <para>
       Dizge içindeki bir <literal>return</literal> deyimi dizgenin
       yorumlanmasını, anında durdurur.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Kod dizgesi içinde bir <literal>return</literal>  bulunmadıkça
   <function>eval</function> daima &null; döndürür. <literal>return</literal>
   ile bir değer döndürülmesi durumunda bu değeri döndürür. Belirtilen dizgede
   bir çözümleme hatası saptanırsa <function>eval</function> &false; döndürür
   ve çalışma dosyadaki sonraki deyimden normal olarak devam eder.
   <function>eval</function> işlevinin yorumladığı kodlardaki bir hatayı
   <function>set_error_handler</function> kullanarak döndürmek mümkün değildir.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>eval</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$dizge = 'Gülhane';
$isim = 'çınar';
$metin = 'Burası $dizge parkı ve ben bir $isim ağacıyım.';
echo $metin. "\n";
eval("\$metin = \"$metin\";");
echo $metin. "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Burası $dizge parkı ve ben bir $isim ağacıyım.
Burası Gülhane parkı ve ben bir çınar ağacıyım.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  &tip.ob-capture;
  <note>
   <para>
    Yorumlanan kodda ölümcül bir hata varsa betiğin tamamı durdurulur.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
