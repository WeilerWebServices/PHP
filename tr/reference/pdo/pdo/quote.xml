<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdo.quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::quote</refname>
  <refpurpose>Bir sorguda kullanılmak üzere bir dizgeyi önceler
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>PDO::quote</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>değiştirge_türü</parameter><initializer>PDO::PARAM_STR</initializer></methodparam>
  </methodsynopsis>

  <para>
   Girdi dizgesine gerekiyorsa ilgili veritabanı sürücüsüne uygun bir önceleme
   uygular.
  </para>
  <para>
   Bu işlevi SQL deyimlerini oluştururken kullanıyorsanız, kullanıcı girdisini
   bir SQL deyimi haline getirmek için <function>PDO::quote</function>
   yerine <function>PDO::prepare</function> ile değiştirgeleri
   ilişkilendirilmiş SQL deyimleri hazırlamanızı hararetle öneririz.
   Değiştirgelerle ilişkilendirimiş hazır deyimler taşınabilir olmaktan başka
   daha kullanışlı ve SQL zerkine bağışık olmanın yanında sorgunun derlenmiş
   hali hem sunucuda hem de istemcide bulunduğundan yorumlanan sorgulardan çok
   daha hızlıdır.
  </para>
  <para>
   PDO sürücülerinin hepsi bu yöntemi gerçeklemez. (özellikle PDO_ODBC) Bu
   bakımdan hazır deyimleri kullanmaya hazır olmalısınız.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
      <listitem>
       <para>
        Öncelenecek dizge.
       </para>
      </listitem>
     </varlistentry>
    <varlistentry>
     <term><parameter>değiştirge_türü</parameter></term>
      <listitem>
       <para>
        İkincil bir önceleme tarzına sahip sürücüler için ipucu olarak bir
        veri türü belirtilir. <constant>PDO::PARAM_STR</constant>
        öntanımlıdır.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir SQL deyiminde aktarılmak üzere teorik olarak güvenli kabul edilen bir
   öncelenmiş dizge döndürür. Eğer sürücü bu tarz öncelemeyi desteklemiyorsa
   &false; döner.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Normal bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/*Basit dizge */
$string = 'Basit';
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge: " . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Basit
Öncelenmiş dizge: 'Basit'
]]>
    </screen>
   </example>
   <example>
    <title>- Tehlikeli bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* Tehlikeli dizge */
$string = 'Münasebetsiz \' dizge';
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge:" . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Münasebetsiz ' dizge
Öncelenmiş dizge: 'Münasebetsiz '' dizge'
]]>
    </screen>
   </example>
   <example>
    <title>- Karmaşık bir dizgeyi öncelemek</title>
    <programlisting role="php">
<![CDATA[
<?php
$conn = new PDO('sqlite:/home/lynn/music.sql3');

/* Karmaşık dizge */
$string = "Co'mpl''ex \"st'\"ring";
print "Öncelenmemiş dizge: $string\n";
print "Öncelenmiş dizge:" . $conn->quote($string) . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Öncelenmemiş dizge: Co'mpl''ex "st'"ring
Öncelenmiş dizge: 'Co''mpl''''ex "st''"ring'
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
