<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 290027 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>Bir SQL deyimini çalıştırıp sonucu bir
  <classname>PDOStatement</classname> nesnesi olarak döndürür</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>deyim</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>deyim</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_COLUMN</parameter></methodparam>
   <methodparam><type>int</type><parameter>sütunnum</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>deyim</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_CLASS</parameter></methodparam>
   <methodparam><type>string</type><parameter>sınıfadı</parameter></methodparam>
   <methodparam><type>array</type><parameter>kurucu_değiştirgeleri</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>deyim</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_INTO</parameter></methodparam>
   <methodparam><type>object</type><parameter>nesne</parameter></methodparam>
  </methodsynopsis>

  <para>
   Bir SQL deyimini tek bir işlev çağrısında çalıştırır ve sorgu sonucunu (bir
   sonuç varsa) bir <classname>PDOStatement</classname> nesnesi olarak
   döndürür.
  </para>
  <para>
   Defalarca yineleyeceğiniz bir sorguyu <function>PDO::prepare</function>
   yöntemini kullanarak bir <classname>PDOStatement</classname> nesnesi haline
   getirip bunu <function>PDOStatement::execute</function> ile defalarca
   çalıştırmak başarımı arttıracaktır.
  </para>
  <para>
   Tekrar bir <function>PDO::query</function> çağrısı yapmadan önce sonuç
   kümesindeki veriyi almazsanız çağrınız başarısızlıkla sonuçlanabilir. Yeni
   bir <function>PDO::query</function> çağrısını yapmadan önce
   <classname>PDOStatement</classname> nesnesi ile ilişkilendirilmiş
   kaynakları serbest bırakmak için
   <function>PDOStatement::closeCursor</function> çağrısı yapmalısınız.
  </para>

  <note>
   <para>
    Bu işlev, tek bir değiştirgeye sahipmiş gibi belgelendirilmesine rağmen
    işleve başka değiştirgeler de aktarabilirsiniz. Bunlar, sonuç nesnesi
    üzerinde <function>PDOStatement::setFetchMode</function> çağrısı yapılmış
    gibi ele alınırlar.
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>deyim</parameter></term>
      <listitem>
       <para>
        Hazırlanacak ve çalıştırılacak SQL deyimi.
       </para>
       <para>
        Sorguda kullanılacak verilerin düzgün olarak <link
        linkend="pdo.quote">öncelenmesi gerekir</link>.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    Başarısızlık durumunda &false;, aksi takdirde bir
    <classname>PDOStatement</classname> nesnesi.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>PDO::query</function> örneği</title>
    <para>
     <function>PDO::query</function> yönteminin tek özelliği başarıyla
     çalıştırılmış bir SELECT deyiminden dönen sonuç kümesi üzerinde satır
     satır verilere erişilebilmesini mümkün kılmasıdır.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function getFruit($conn) {
    $sql = 'SELECT name, colour, calories FROM fruit ORDER BY name';
    foreach ($conn->query($sql) as $row) {
        print $row['NAME'] . "\t";
        print $row['COLOUR'] . "\t";
        print $row['CALORIES'] . "\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
