<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: nilgun Status: ready -->
<refentry xml:id="pdo.prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::prepare</refname>
  <refpurpose>Çalıştırılmak üzere bir deyimi hazırlar ve bir deyim nesnesi olarak döndürür</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>PDOStatement</type><methodname>PDO::prepare</methodname>
   <methodparam><type>string</type><parameter>deyim</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>seçenekler</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>

  <para>
   <function>PDOStatement::execute</function> yöntemi ile çalıştırılmak üzere
   bir SQL deyimi hazırlar. SQL deyimi sıfır veya daha fazla sayıda birer
   isimle (:isim) veya birer soru imi (?) ile ifade edilen değiştirge
   içerebilir. Deyimin çalıştırılması sırasında bu değiştirgelere farklı
   değerler atanarak aynı deyim defalarca kullanılabilir. Aynı SQL deyiminde
   hem isimli hem de soru imli değiştirgeleri kullanamazsınız. İkisinden
   birini seçmek zorundasınız.
  </para>
  <para>
   <function>PDOStatement::execute</function> işlevinde aktaracağınız her
   değer için eşsiz bir değiştirge imleyici belirtmelisiniz. İsimli
   değiştirgeler eşsiz olmak zorundadır, aynı ismi birden fazla değiştirgede
   kullanamazsınız. Çok sayıda değeri, örneğin bir SQL deyiminin IN
   cümleciğinde tek bir isimli değiştirgeyle ilişkilendiremezsiniz.
  </para>
  <para>
   Bir SQL deyiminin farklı değerlerle defalarca çalıştırılmak üzere
   <function>PDO::prepare</function> ve
   <function>PDOStatement::execute</function> yöntemlerine aktarılması, bu SQL
   deyimiyle ilgili sorgu planının ve temel verilerin müzakere edilmek üzere
   sürücü tarafından istemci ve/veya sunucu tarafında önbelleklemesiyle
   uygulamanızın başarımını yükseltecek en iyilemelerin yapılması mümkün olur
   ve değiştirgelerin elle öncelenmesi gereğini ortadan kaldırarak SQL zerk
   saldırılarını engellemeye yardımcı olur.
  </para>
  <para>
   Değiştirgeli hazır deyimlerin değerlerle ilişkilendirilmesi işlemini
   desteklemeyen sürücüler için PDO bu işlemi taklit eder. Ayrıca sürücü
   isimli ve soru imli değiştirge aktarım tarzlarından yalnız birini
   destekliyorsa PDO diğer tarzı da taklit eder.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>deyim</parameter></term>
     <listitem>
      <para>
       Hedef veritabanı sunucusu için geçerli bir SQL deyimi olmalıdır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler</parameter></term>
     <listitem>
      <para>
       Bu yöntemden döndürülen <classname>PDOStatement</classname> nesnesi
       için atanacak öznitelik değerlerini isim=&gt;değer çiftleri halinde
       içeren bir dizi. Çoğunlukla kaydırılabilen bir gösterici isteği için
       <literal>PDO::CURSOR_SCROLL</literal> özniteliğine
       <literal>PDO::ATTR_CURSOR</literal> değerini atamakta kullanılır. Bazı
       sürücülerin deyimin hazırlanması aşamasında atanabilen sürücüye özgü
       öznitelikleri vardır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Veritabanı sunucusu deyimi başarıyla hazırlayabilmişse
   <function>PDO::prepare</function> bir
   <classname>PDOStatement</classname> nesnesi döndürür; aksi takdirde bir
   <classname>PDOException</classname> istisnası oluşur.
  </para>
  <note>
   <para>
    Taklit hazır deyimler için veritabanı sunucusuyla müzakere yapılmadığından
    <function>PDO::prepare</function> deyim üzerinde bir sınama yapmaz.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- İsimli değiştirgelerle bir SQL deyiminin hazırlanması</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Değerleri bir dizi olarak aktaracağımız bir deyim hazırlayalım */
$sql = 'SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour';
$sth = $dbh->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
$sth->execute(array(':calories' => 150, ':colour' => 'red'));
$red = $sth->fetchAll();
$sth->execute(array('calories' => 175, 'colour' => 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- Soru imli değiştirgelerle bir SQL deyiminin hazırlanması</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Değerleri bir dizi olarak aktaracağımız bir deyim hazırlayalım */
$sth = $dbh->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$sth->execute(array(150, 'red'));
$red = $sth->fetchAll();
$sth->execute(array(175, 'yellow'));
$yellow = $sth->fetchAll();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::query</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
