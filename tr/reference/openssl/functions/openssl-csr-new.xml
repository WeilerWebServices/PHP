<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-csr-new">
 <refnamediv>
  <refname>openssl_csr_new</refname>
  <refpurpose>Bir sertifika imzalama isteği (CSR) üretir</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>openssl_csr_new</methodname>
   <methodparam><type>array</type><parameter>dn</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">gizanh</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>ayarlar</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>ek_seçenekler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>dn</parameter> ile belirtilen, sertifika için kullanılacak
   ayırt edilebilir isim ile sağlanan bilgiye dayanarak yeni bir sertifika
   imzalama isteği (CSR) üretir.
  </para>
  &note.openssl.cnf;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dn</parameter></term>
     <listitem>
      <para>
       Sertifika için kullanılacak ayırt edilebilir isim.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>gizanh</parameter></term>
     <listitem>
      <para>
       <function>openssl_pkey_new</function> (veya başka bir openssl_pkey
       işlevi) ile üretilmiş bir gizli anahtar. Anahtar çiftinin genel
       anahtar parçası CSR'yi imzalamakta kullanılır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ayarlar</parameter></term>
     <listitem>
      <para>
       İsteği ilklendirmek için öntanımlı olarak sisteminizdeki
       <literal>openssl.conf</literal> kullanılır.
       <parameter>ayarlar</parameter> dizisinin
       <literal>config_section_section</literal> anahtarında başka bir
       yapılandırma dosyası bölümü belirtebileceğiniz gibi
       <literal>config</literal> anahtarında başka bir openssl yapılandırma
       dosyasının yolunu da belirtebilirsiniz. <parameter>ayarlar</parameter>
       dizisi aşağıdaki anahtarları içerebilir. Bu anahtarlar
       <literal>openssl.conf</literal> dosyasındaki eşdeğerleri gibi
       davranırlar.
       <table>
        <title>Yapılandırma Geçersizleştiricileri</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry><parameter>ayarlar</parameter> anahtarı</entry>
           <entry>Türü</entry>
           <entry><literal>openssl.conf</literal> eşdeğeri</entry>
           <entry>Açıklama</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>digest_alg</entry>
           <entry><type>string</type></entry>
           <entry>default_md</entry>
           <entry>Kullanılacak özet yöntemini belirler.</entry>
          </row>
          <row>
           <entry>x509_extensions</entry>
           <entry><type>string</type></entry>
           <entry>x509_extensions</entry>
           <entry>Bir x509 sertifikası üretilirken kullanılacak eklentileri
           belirler.</entry>
          </row>
          <row>
           <entry>req_extensions</entry>
           <entry><type>string</type></entry>
           <entry>req_extensions</entry>
           <entry>Bir CSR üretilirken kullanılacak eklentileri belirler.
           </entry>
          </row>
          <row>
           <entry>private_key_bits</entry>
           <entry><type>integer</type></entry>
           <entry>default_bits</entry>
           <entry>Bir gizli anahtarın kaç bitlik olacağını belirler.</entry>
          </row>
          <row>
           <entry>private_key_type</entry>
           <entry><type>integer</type></entry>
           <entry>none</entry>
           <entry>Üretilecek gizli anahtarın türünü belirler. Şu sabitlerden
            biri olabilir: <constant>OPENSSL_KEYTYPE_DSA</constant>,
            <constant>OPENSSL_KEYTYPE_DH</constant>,
            <constant>OPENSSL_KEYTYPE_RSA</constant>.
            Öntanımlı değer <constant>OPENSSL_KEYTYPE_RSA</constant> olup
            şimdilik desteklenen tek anahtar türüdür.
           </entry>
          </row>
          <row>
           <entry>encrypt_key</entry>
           <entry><type>boolean</type></entry>
           <entry>encrypt_key</entry>
           <entry>İhraç edilecek anahtar (bir parola ile) şifrelenececek mi?
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ek_seçenekler</parameter></term>
     <listitem>
      <para>
       CSR için kullanılacak ek seçenekleri belirtmek için kullanılır.
       <parameter>dn</parameter> ve  <parameter>ek_seçenekler</parameter>
       birer ilişkisel dizi olup anahtarları nesne kimliklerine (OID)
       dönüştürülerek isteğin ilgili parçasına uygulanır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Üretilen CSR'yi döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Öz-imzalı sertifika üretimi</title>
    <programlisting role="php">
<![CDATA[
<?php
// Sertifikada ayırt edilebilir isim için kullanılacak veriyi oluşturalım.
// Bu anahtar değerlerinde, isminiz, şirketiniz ve hatta sertifikanın adına
// üretildiği şirketin veya şahsın isminin bulunmasını sağlayın.
// SSL sertifikaları için commonName genellikle sertifikayı kullanacak
// alan ismidir. Fakat S/MIME sertifikalar için commonName, sertifikayı
// kullanacak şahsın ismidir.
$dn = array(
    "countryName" => "UK",
    "stateOrProvinceName" => "Somerset",
    "localityName" => "Glastonbury",
    "organizationName" => "The Brain Room Limited",
    "organizationalUnitName" => "PHP Documentation Team",
    "commonName" => "Wez Furlong",
    "emailAddress" => "wez@example.com"
);

// Yeni bir gizli/genel anahtar çifti üretelim
$privkey = openssl_pkey_new();

// Bir sertifika imzalama isteği üretelim
$csr = openssl_csr_new($dn, $privkey);

// CA'nız isteği yerine getirene kadar bir öz-imzalı sertifika üretelim.
// Bu sertifika 365 günlük olsun.
$sscert = openssl_csr_sign($csr, null, $privkey, 365);

// (Sertifikanın kullanılacağı yere bağlı olarak) posta istemcisine,
// posta sunucusuna veya HTTP sunucusuna kurulacak öz-imzali sertifikayı,
// CSR'yi ve gizli anahtarı alalım. Örnekte bunlar değişkenlere atanmıştır.
// Fakat siz bunları doğrudan dosyalarına kaydedebilirsiniz.
// CSR genellikle "gerçek" sertifikayı üretecek CA'ya gönderilir.
openssl_csr_export($csr, $csrout); var_dump($csrout);
openssl_x509_export($sscert, $certout); var_dump($certout);
openssl_pkey_export($privkey, $pkeyout, "mypassword"); var_dump($pkeyout);

// Oluşan hatalar varsa gösterelim
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
