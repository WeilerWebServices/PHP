<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338425 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.split">
 <refnamediv>
  <refname>split</refname>
  <refpurpose>Belirtilen dizgeyi düzenli ifadeye göre dizi elemanlarına böler
  </refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member><function>preg_split</function></member>
    <member><function>explode</function></member>
    <member><function>str_split</function></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>split</methodname>
   <methodparam><type>string</type><parameter>şablon</parameter></methodparam>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sınır</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Belirtilen dizgeyi düzenli ifadeye göre dizi elemanlarına böler.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>şablon</parameter></term>
     <listitem>
      <para>
       Harf büyüklüğüne duyarlı düzenli ifade.
      </para>
      <para>
       Düzenli ifadelere özgü karakterlerden birine göre bölme yapmak
       isterseniz o karakteri öncelemeniz gerekir. Eğer
       <function>split</function> işlevinin (veya bu konu ile ilgili diğer
       düzenli ifade işlevlerinin) tuhaf şeyler yaptığını düşünüyorsanız, PHP
       dağıtımının <filename>regex/</filename> alt dizininde bulunan
       <filename>regex.7</filename> kılavuz sayfasını okuyunuz.  Bir kılavuz
       sayfası olması nedeniyle kabukta <command>man
       /usr/local/src/regex/regex.7</command> komutunu vererek dosyayı
       okuyabilirsiniz.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Girdi dizgesi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sınır</parameter></term>
     <listitem>
      <para>
       Bu değiştirge belirtilmişse, son elemanında
       <parameter>dizge</parameter>'nin kalanını içermek üzere en fazla
       <parameter>sınır</parameter> sayıda eleman içeren bir dizi dönecektir.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Her elemanında, <parameter>dizge</parameter> dizgesinin, sınırları harf
   büyüklüğüne duyarlı <parameter>şablon</parameter> düzenli ifadesine göre
   belirlenen, alt dizgelerini içeren bir dizi döner.
  </para>
  <para>
   <parameter>şablon</parameter> ile eşleşen <replaceable>n</replaceable> alt
   dizge varsa dönen dizi <literal><replaceable>n</replaceable>+1</literal>
   eleman içerecektir. Örneğin, <parameter>şablon</parameter> ile eşleşen
   hiçbir alt dizge yoksa, işlev tek elemanlı bir dizi döndürecektir. Bu durum
   <parameter>dizge</parameter> dizgesinin boş olduğu durumda da geçerlidir.
   Bir hata oluşursa işlev &false; döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>split</function> örneği - 1</title>
    <para>
     <filename>/etc/passwd</filename> dosyasının her satırındaki ilk dört
     alanı seçmek için:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
list($kullanıcı, $parola, $uid, $gid, $ek) =
    split(":", $passwd_line, 5);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- <function>split</function> örneği - 2</title>
    <para>
     Bölü çizgisi, nokta ve tire ile ayrılan tarih alanlarını ayrıştırmak için:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Ayraçları bölü çizgisi, nokta veya tire olabilir
$tarih = "04/30/1973";
list($ay, $gün, $yıl) = split('[/.-]', $tarih);
echo "Ay: $ay; Gün: $gün; Yıl: $yıl<br />\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    <function>split</function> işlevinin kullanımı PHP 5.3.0 itibariyle 
    önerilmemektedir. Yerine <function>preg_split</function> kullanın.
    Bir düzenli ifadenin çok da gerekmediği yerlerde düzenli ifade motorunu 
    yormayan <function>explode</function> işlevi çok daha hızlıdır.
   </para>
  </tip>
  <tip>
   <para>
    Perl'in <command>@chars = split('', $str)</command> davranışını taklit
    etmek için bir yol arayışında olanların <function>preg_split</function>
    veya <function>str_split</function> işlevlerinin örneklerine bakmaları
    önerilir.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>spliti</function></member>
    <member><function>str_split</function></member>
    <member><function>explode</function></member>
    <member><function>implode</function></member>
    <member><function>chunk_split</function></member>
    <member><function>wordwrap</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
