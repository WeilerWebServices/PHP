<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<appendix xml:id="session.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <section xml:id="session.examples.basic">
  <note>
   <para>
    PHP 4.1.0'dan itibaren, <varname>$_SESSION</varname> değişkeni,
    <varname>$_POST</varname>, <varname>$_GET</varname>,
    <varname>$_REQUEST</varname> ve benzerleri gibi bir küresel değişken
    olarak kullanılabilmektedir. <varname>$HTTP_SESSION_VARS</varname>
    değişkeninin aksine <varname>$_SESSION</varname> daima küreseldir.
    Bu bakımdan, <varname>$_SESSION</varname> için <link
    linkend="language.variables.scope"><command>global</command></link>
    anahtar sözcüğünü kullanmanız gerekmez. Bu belgenin her yerde
    <varname>$_SESSION</varname> kullanılacak biçimde değiştirilmiş oluşuna
    dikkat ediniz. <varname>$HTTP_SESSION_VARS</varname> değişkenini tercih
    ederseniz <varname>$_SESSION</varname> yerine ikame edebilirsiniz. Ayrıca
    şuna dikkat edin: <varname>$_SESSION</varname> değişkenini kullanmaya
    başlamadan önce <function>session_start</function> ile oturumunuzu
    başlatmanız gerekir.
   </para>
   <para>
    <varname>$_SESSION</varname> ilişkisel dizisindeki anahtarlar için PHP'de
    değişken isimlerine uygulanan sınırlamalar geçerlidir. Yani, bunları bir
    rakam ile başlatamazsınız, bir harf veya altçizgi karakteri ile
    başlamalıdırlar. Bu konuda daha ayrıntılı bilgi edinmek için bu kılavuzun
    <link linkend="language.variables">Değişkenler</link> bölümüne bakınız.
   </para>
  </note>

  <para>
   Eğer <link linkend="ini.register-globals">register_globals</link> etkin
   değilse, sadece <varname>$_SESSION</varname> küresel ilişkisel dizisinin
   üyeleri oturum değişkeni olarak kayıt altına alınabilir. Sağlanan oturum
   değişkenleri sadece <varname>$_SESSION</varname> dizisinin üyeleri olarak
   kullanılabilir.
  </para>
  <para>
    Güvenliği ve kodun okunabilirliğini arttırmak için
    <varname>$_SESSION</varname> (veya PHP 4.0.6 ve öncesi ile
    <varname>$HTTP_SESSION_VARS</varname>) kullanımı önerilir.
    <varname>$_SESSION</varname> kullanıldığı takdirde,
    <function>session_register</function>,
    <function>session_unregister</function>,
    <function>session_is_registered</function> işlevlerine ihtiyaç kalmaz.
    Oturum değişkenlerine diğer değişkenler gibi erişilir.
   <example>
    <title>-
     Bir değişkeni <varname>$_SESSION</varname> ile kayıt altına almak
    </title>
    <programlisting role="php">
<![CDATA[
<?php
session_start();
// PHP 4.0.6 ve öncesi ile $HTTP_SESSION_VARS kullanın
if (!isset($_SESSION['count'])) {
  $_SESSION['count'] = 0;
} else {
  $_SESSION['count']++;
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>- <link linkend="ini.register-globals">register_globals</link> etkin
    değilken <varname>$_SESSION</varname> ile bir değişkeni tanımsız yapmak
    </title>
    <programlisting role="php">
<![CDATA[
<?php
session_start();
// PHP 4.0.6 ve öncesi ile $HTTP_SESSION_VARS kullanın
unset($_SESSION['count']);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <caution>
    <para>
     <varname>$_SESSION</varname> dizisinin tamamını
     <literal>unset($_SESSION)</literal> ile tanımsız YAPMAYIN. Bu işlem,
     oturum değişkenlerinin <varname>$_SESSION</varname> süper küreseli
     üzerinden kayıt altına alınmamasına sebep olacaktır.
    </para>
   </caution>
  </para>
  <warning>
   <para>
    Başka bir değişkene gönderimi tekrar tanımlı kılmanın bir yolu
    olmadığından oturum değişkenlerinde gönderimleri kullanamazsınız.
   </para>
  </warning>
  <para>
   Eğer <link linkend="ini.register-globals">register_globals</link> etkinse,
   her küresel değişken bir oturum değişkeni olarak kayıt altına alınabilir.
   Bir oturumun yeniden başlatılması ile bu değişkenler ilgili küresel
   değişkenlere geri yerleştirilecektir. PHP'nin hangi değişkenlerin oturum
   değişkeni olarak kaydedildiğini bilmesi gerektiğinden değişkenlerin
   <function>session_register</function> işlevi ile kayıt altına alınması
   gerekir. Bundan kaçınmak için girdilere <varname>$_SESSION</varname> içinde
   değer atamanız yeterlidir.
   <caution>
    <para>
     PHP 4.3.0 öncesinde, <varname>$_SESSION</varname> kullanıyorsanız ve
     <link linkend="ini.register-globals">register_globals</link> etkin
     değilse, <function>session_register</function>,
     <function>session_is_registered</function> ve
     <function>session_unregister</function> işlevlerini kullanmayın.
     Güvenliği ve başarımı arttırmak için
     <link linkend="ini.register-globals">register_globals</link> yönergesine
     daima <literal>Off</literal> değerini atayın.
    </para>
   </caution>
  </para>
  <para>
   <link linkend="ini.register-globals">register_globals</link> etkinse,
   küresel değişkenler ve <varname>$_SESSION</varname> girdileri, özdevinimli
   olarak önceki oturumda kayıt altına alınmış değerlere gönderimli olurlar.
   Ancak, <link linkend="ini.register-globals">register_globals</link> iptal
   edilip, değişken sadece <varname>$_SESSION</varname> tarafından kayıt
   altına alınmışsa küresel değişken sadece bir sonraki isteğe kadar geçerli
   kalacaktır.
  </para>
  <para>
   PHP 4.2.3 ve öncesinde bir kusur vardır. Eğer yeni bir oturum değişkenini
   <function>session_register</function> kullanarak kayıt altına alırsanız,
   küresel etki alanındaki girdi ve <varname>$_SESSION</varname> girdisi
   sonraki <function>session_start</function> çağrısına kadar aynı değere
   gönderimli olmayacaklardır. Yani, <function>session_register</function> ile
   kayıt altına alınmış küresel değişkende bir değişiklik yaparsanız
   <varname>$_SESSION</varname> girdisi bu değişikliği yansıtmayacaktır. Bu
   durum PHP 4.3.0'da da geçerlidir.
  </para>
 </section>

 <section xml:id="session.idpassing">
  <title>Oturum Kimliğinin Aktarımı</title>
  <para>
   Bir oturum kimliğini yaymanın iki yolu vardır:
   <itemizedlist>
    <listitem>
     <simpara>
      Çerezler
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      URL değiştirgesi
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
  <para>
   Oturum modülü her ikisini de destekler. Çerezler en uygunudur, fakat her
   zaman kullanmak mümkün olmadığından ikinci bir yöntem sağlıyoruz. İkinci
   yöntem, oturum kimliğini doğrudan URL'nin içine gömer.
  </para>
  <para>
   PHP bağlantıları şeffaf olarak dönüştürme yeteneğine sahiptir. PHP 4.2.0 ve
   sonrasını kullanmıyorsanız, bunu PHP'yi derlerken kendinizin etkin kılması
   gerekir. Unix altında, <filename>configure</filename> betiğine
   <link linkend="ini.session.use-trans-sid">--enable-trans-sid</link>
   seçeneğini vermeniz gerekir. PHP bu seçenekle derlenmiş ve çalışma anında
   <link linkend="ini.session.use-trans-sid">
   <literal>session.use_trans_sid</literal></link> yönergesi etkin kılınmışsa,
   göreli URI'ler özdevinimli olarak oturum kimliğini içerecek şekilde
   değiştirilirler.
   <note>
    <para>
    <link linkend="ini.arg-separator.output">arg_separator.output</link>
    &php.ini; yönergesi değiştirge ayracının değiştirilebilmesini sağlar. Tam
    XHTML uyumluluğu için yönergeye değer olarak &amp;amp; belirtin.
    </para>
   </note>
  </para>
  <para>
   Ayrıca, oturum başlatıldığında tanımlanan <constant>SID</constant> sabitini
   de kullanabilirsiniz. Eğer istemci uygun bir oturum çerezi göndermezse,
   <constant>SID</constant> sabiti
   <replaceable>oturum_ismi=oturum_kimliği</replaceable> değerini içerecektir.
   Aksi takdirde sabitin değeri bir boş dizge olur. Bu durumda, oturum
   kimliğini koşulsuz olarak URL'lerin içine gömebilirsiniz.
  </para>
  <para>
   Aşağıdaki örnekte bir değişkenin nasıl oturum değişkeni haline getirildiği
   ve <constant>SID</constant> sabitiyle başka bir sayfaya nasıl bağlantı
   kurulduğu gösterilmiştir.
   <example>
    <title>- Tek bir kullanıcının sayfa erişimlerinin sayılması</title>
    <programlisting role="php">
<![CDATA[
<?php

session_start();

if (empty($_SESSION['count'])) {
 $_SESSION['count'] = 1;
} else {
 $_SESSION['count']++;
}
?>

<p>
Merhaba sayın ziyaretçi, bu sayfayı <?php echo $_SESSION['count']; ?>
kere ziyaret ettiniz.
</p>

<p>
Devam etmek için, <a href="nextpage.php?<?php echo htmlspecialchars(SID);
?>">buraya tıklayınız</a>.
</p>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   XSS saldırılarından kaçınmak için URL'ye <constant>SID</constant>
   yerleştirilirken <function>htmlspecialchars</function> kullanılabilir.
  </para>
  <para>
   <constant>SID</constant> sabitini URL'ye yukarıdaki gibi
   yerleştirecekseniz, PHP'yi <link linkend="ini.session.use-trans-sid">
   --enable-trans-sid</link> seçeneğiyle derlemeniz gerekmez.
  </para>
  <note>
   <para>
    Göreli olmayan URL'lerin harici siteleri işaret ettikleri varsayılır ve
    oturum kimliğinin başka bir sunucuya ifşa edilme riskine karşı
    <constant>SID</constant> bunlara yerleştirilmez.
   </para>
  </note>
 </section>

 <section xml:id="session.customhandler">
  <title>Özel Oturum Eylemcisi</title>
  <para>
   Veritabanlarını saklama alanı olarak kullanmak için veya başka bir saklama
   yöntemi kullanmak için <function>session_set_save_handler</function>
   işleviyle kullanıcı seviyesinde bir saklama işlevleri kümesi tanımlamanız
   gerekir.
  </para>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

