<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-set-save-handler">
 <refnamediv>
  <refname>session_set_save_handler</refname>
  <refpurpose>Kullanıcı seviyesi oturum saklama işlevlerini bildirir
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_set_save_handler</methodname>
   <methodparam><type>callback</type><parameter>aç</parameter></methodparam>
   <methodparam><type>callback</type><parameter>kapa</parameter></methodparam>
   <methodparam><type>callback</type><parameter>oku</parameter></methodparam>
   <methodparam><type>callback</type><parameter>yaz</parameter></methodparam>
   <methodparam><type>callback</type><parameter>yoket</parameter></methodparam>
   <methodparam><type>callback</type><parameter>çöpçü</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_set_save_handler</function> işlevi, bir oturumla ilişkili
   verileri almak ve saklamak için kullanılan kullanıcı seviyesi oturum
   saklama işlevlerini bildirir. PHP oturumlarında başka kaynaklardan
   sağlanmış bir saklama yöntemi (oturum verilerini bir yerel veritabanıda
   saklamak gibi) kullanılacaksa bu işlev çok işe yarar.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>aç</parameter></term>
     <listitem>
      <para>
       Bu işlev, sınıflardaki kurucular gibi çalışır ve oturum açıldığında
       çalıştırılır. Açma işlevinin iki değiştirge kabul edeceği varsayılır.
       İlkinde dosyaların kaydedileceği yerin yolu, ikincisinde oturum ismi
       verilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kapa</parameter></term>
     <listitem>
      <para>
       Bu işlev, sınıflardaki yıkıcılar gibi çalışır ve oturum işlemleri
       bittiğinde çalıştırılır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>oku</parameter></term>
     <listitem>
      <para>
       Oturum bilgilerinin kayıt eylemcisinin beklendiği gibi çalışması için
       bu işlevin daima dizge değer döndürmesi gerekir. Okunacak veri yoksa
       işlev boş dizge döndürmelidir. Diğer eylemcilerden dönen değerler
       başarı durumunda &true; başarısızlık durumunda &false; döndüren
       mantıksal ifadelere dönüştürülür.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yaz</parameter></term>
     <listitem>
      <para>
       <note>
        <para>
         Bu işlev çıktı akımı kapanana kadar çalıştırılmaz. Bu bakımdan bu
         işlevdeki hata ayıklama deyimlerinin çıktıları tarayıcıda hiçbir
         zaman görünmez. Eğer hata ayıklama çıktısı gerekliyse, bu çıktının
         bir dosyaya yazılması önerilir.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yoket</parameter></term>
     <listitem>
      <para>
       Bu işlev, oturum kimliğini tek değiştirge olarak alır ve
       <function>session_destroy</function> işlevi ile bir oturum
       yok edildiğinde çalıştırılır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>çöpçü</parameter></term>
     <listitem>
      <para>
       Çöp toplayıcı işlev. Oturumun azami ömrünü tek değiştirge olarak alır
       ve oturumun çöp toplayıcısı çalıştırıldığı zaman çalıştırılır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>session_set_save_handler</function> örneği</title>
    <para>
     Aşağıdaki örnekte, PHP'nin öntanımlı kayıt ortamı olan dosyalara
     (<parameter>files</parameter>) benzer dosya temelli bir oturum kayıt
     ortamı oluşturulmaktadır. Bu örnek, PHP destekli veritabanı mekanizmanızı
     kapsayacak şekilde kolayca genişletilebilir.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function aç($saklama_yeri, $oturum_ismi)
{
  global $oturum_kayıt_yeri;

  $oturum_kayıt_yeri = $saklama_yeri;
  return(true);
}

function kapat()
{
  return(true);
}

function oku($id)
{
  global $oturum_kayıt_yeri;

  $saklama_dosyası = "$oturum_kayıt_yeri/oturum_$id";
  return (string) @file_get_contents($saklama_dosyası);
}

function yaz($id, $saklama_verisi)
{
  global $oturum_kayıt_yeri;

  $saklama_dosyası = "$oturum_kayıt_yeri/oturum_$id";
  if ($fp = @fopen($saklama_dosyası, "w")) {
    $return = fwrite($fp, $saklama_verisi);
    fclose($fp);
    return $return;
  } else {
    return(false);
  }

}

function yoket($id)
{
  global $oturum_kayıt_yeri;

  $saklama_dosyası = "$oturum_kayıt_yeri/oturum_$id";
  return(@unlink($saklama_dosyası));
}

function çöpçü($azami_ömür)
{
  global $oturum_kayıt_yeri;

  foreach (glob("$oturum_kayıt_yeri/oturum_*") as $dosya) {
    if (filemtime($dosya) + $azami_ömür < time()) {
      @unlink($dosya);
    }
  }
  return true;
}

session_set_save_handler("aç", "kapat", "oku", "yaz", "yoket", "çöpçü");

session_start();

// Oturum ile ilgili diğer işlemler

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    PHP 5.0.5'ten itibaren <parameter>yaz</parameter> ve
    <parameter>kapat</parameter> eylemcileri nesne yokedildikten sonra
    çağrılmaktadır. Bu bakımdan nesneler ve oluşturulan istisnalar
    kullanılamaz. Ancak nesne yıkıcılar oturumları kullanabilir.
   </para>
   <para>
    Bu yumurta/tavuk sorununu çözümlemek için bir yıkıcıdan
    <function>session_write_close</function> çağrısı yapmak mümkündür.
   </para>
  </warning>
  <warning>
   <para>
    Eğer oturum, betiğin sonlanmasıyla kapanmışsa bazı SAPI'lerde geçirli
    çalışma dizini değiştirilir. Böyle durumlarda oturumu önceden
    <function>session_write_close</function> ile kapatmak mümkündür.
   </para>
  </warning>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="ini.session.save-handler">session.save_handler</link>
     yapılandırma yönergesi
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
