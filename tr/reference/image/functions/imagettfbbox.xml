<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: nilgun Status: ready -->
<refentry xml:id="function.imagettfbbox" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettfbbox</refname>
  <refpurpose>TrueType yazıtipi kullanılan bir metnin çerçevesini döndürür
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>imagettfbbox</methodname>
   <methodparam><type>float</type><parameter>boyut</parameter></methodparam>
   <methodparam><type>float</type><parameter>açı</parameter></methodparam>
   <methodparam><type>string</type><parameter>yazıtipi</parameter></methodparam>
   <methodparam><type>string</type><parameter>metin</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bir TrueType metin için yazıyı çevreleyen kutunun sınırlarını piksel
   cinsinden hesaplar ve sonucu bir dizi içinde döndürür.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>boyut</parameter></term>
     <listitem>
      <para>
       Yazıtipi yüksekliği. Kullandığınız GD sürümüne bağlı olarak piksel
       (GD1) veya punto (GD2) olarak belirtilmelidir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>açı</parameter></term>
     <listitem>
      <para>
       Belirtilen metnin yazım açısı.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>yazıtipi</parameter></term>
     <listitem>
      <para>
       Kullanılacak TrueType yazıtipinin dosya yolu (URL olabilir).
      </para>
      <para>
       PHP'nin kullandığı GD kütüphanesi sürümüne bağlı olarak,
       <emphasis><literal>/</literal> ile başlamayan bir dosya ismine
       <literal>.ttf</literal> uzantısı eklenir</emphasis> ve kütüphane bu
       dosya ismini kütüphanede tanımlı dizinlerde arar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>metin</parameter></term>
     <listitem>
      <para>
       Çerçevesi hesaplanacak metin.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bir hata durumunda &false; yoksa metin çerçevesinin dört köşesinin
   koordinatlarını içeren 8 elemanlı bir dizi döner:
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>anahtar</entry>
       <entry>içeriği</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>0</entry>
       <entry>Sol alt köşenin X konumu</entry>
      </row>
      <row>
       <entry>1</entry>
       <entry>Sol alt köşenin Y konumu</entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>Sağ alt köşenin X konumu</entry>
      </row>
      <row>
       <entry>3</entry>
       <entry>Sağ alt köşenin Y konumu</entry>
      </row>
      <row>
       <entry>4</entry>
       <entry>Sağ üst köşenin X konumu</entry>
      </row>
      <row>
       <entry>5</entry>
       <entry>Sağ üst köşenin Y konumu</entry>
      </row>
      <row>
       <entry>6</entry>
       <entry>Sol üst köşenin X konumu</entry>
      </row>
      <row>
       <entry>7</entry>
       <entry>Sol üst köşenin Y konumu</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
  <para>
   Noktalar açıdan bağımsız olarak metne görelidir.
   Yani, "sol üst" denince metne yatay olarak bakarkenki sol üst köşe
   kastedilmektedir.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>imagettfbbox</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
// 300x150'lik bir resim oluşturalım
$im = imagecreatetruecolor(300, 150);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);

// Artalan rengi beyaz olsun
imagefilledrectangle($im, 0, 0, 299, 299, $white);

// Bu yazı tipi dosyamız olsun
$font = './arial.ttf';

// İlk metnimizin çerçevesini oluşturalım
$bbox = imagettfbbox(10, 45, $font, 'Powered by PHP ' . phpversion());

// Bunlar bizim X ve Y koordinatlarımız olsun
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) - 25;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;

// Metni yazalım
imagettftext($im, 10, 45, $x, $y, $black, $font, 'Powered by PHP ' . phpversion());

// Şimdi ikinci metnin çerçevesini oluşturalım
$bbox = imagettfbbox(10, 45, $font, 'and Zend Engine ' . zend_version());

// Bu metin ilkinin altında olsun
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) + 10;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;

// Metni yazalım
imagettftext($im, 10, 45, $x, $y, $black, $font, 'and Zend Engine ' . zend_version());

// Tarayıcıya çıktılayalım
header('Content-type: image/png');

imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Bu işlev hem GD kütüphanesini hem de
    <link xlink:href="&url.freetype;">FreeType</link> kütüphanesini gerektirir.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagettftext</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
