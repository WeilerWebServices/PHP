<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341620 Maintainer: lehmer Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.mcrypt-generic" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mcrypt_generic</refname>
  <refpurpose>Esta función encripta datos</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0;
 </refsynopsisdiv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mcrypt_generic</methodname>
   <methodparam><type>resource</type><parameter>td</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función encripta datos. Estos datos son rellenados con "<literal>\0</literal>"
   para asegurarse de que la longitud de los datos sea n * blocksize. Esta
   función devuelve los datos cifrados. Note que la longitud de la
   cadena devuelta puede ser más larga que la de entrada, debido
   al relleno de la información.
  </para>
  <para>
   Si se desea almacenar los datos en una base de datos se debe asegurar que
   la cadena completa retornada por mcrypt_generic se almacene, o la cadena no
   será desencriptada apropiadamente. Si la cadena original tiene una longitud de
   10 caracteres, y el tamaño del bloque es 8 (utilice <function>mcrypt_enc_get_block_size</function>
   para determinar el tamaño del bloque), serán necerarios al menos 16 caracteres
   en el campo de su base de datos. Tenga en cuenta que la cadena devuelta por
   <function>mdecrypt_generic</function> será también de 16 caracteres. Utilice
   rtrim($str, "\0") para remover el relleno.
  </para>
  <para>
   Si se está, por ejemplo, almacenando los datos en una base de datos MySQL,
   se debe tener en cuenta que durante la inserción en campos varchar, los espacios
   finales son removidos. Ya que la información cifrada puede finalizar con un espacio
   (ASCII 32), los datos serán dañados por esta remoción. En cambio, almacene los datos
   en un campo tinyblob/tinytext (o mayor).
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>td</parameter></term>
     <listitem>
      <para>
       El descriptor de cifrado.
      </para>
      <para>
       El gestor de cifrado debería siempre ser inicializado con
       <function>mcrypt_generic_init</function> con una clave y un IV antes
       de invocar a esta función. Cuando el cifrado haya terminado, se debería
       liberar los buffers de cifrado al invocar a <function>mcrypt_generic_deinit</function>
       Véase <function>mcrypt_module_open</function> para un ejemplo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Los datos a encriptar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la información cifrada.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mdecrypt_generic</function></member>
    <member><function>mcrypt_generic_init</function></member>
    <member><function>mcrypt_generic_deinit</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
