<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331842 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.oci-define-by-name" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_define_by_name</refname>
  <refpurpose>Asocia una variable de PHP con una columna para la obtención de consultas</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_define_by_name</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>string</type><parameter>column_name</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>SQLT_CHR</initializer></methodparam>
  </methodsynopsis>
  <para>
   Asocia una variable de PHP con una columna para la obtención de consultas usando <function>oci_fetch</function>.
  </para>
  <para>
   La llamada a <function>oci_define_by_name</function> debe ocurrir antes que
   la ejecución de <function>oci_execute</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>column_name</parameter></term>
     <listitem>
      <para>
       El nombre de la columna usada en la consulta.
      </para>
      <para>
       Use los nombres de columnas predeterminados de Oracle, en mayúsculas e insensibles al uso
       de mayúsculas/minúsculas. Use los nombres de columna exactos para nombres de columnas
       sensibles al uso de mayúsculas/minúsculas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>variable</parameter></term>
     <listitem>
      <para>
       La variable de PHP que contendrá el valor de la columna devuelta.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       El tipo de dato a devolver. Generalmente no es necesario. Observe que
       no se lleva a cabo la conversión de datos estilo Oracle. Por ejemplo,
       <literal>SQLT_INT</literal> será ignorado, y el tipo de dato
       devuelto continuará siendo <literal>SQLT_CHR</literal>.
      </para>
      <para>
       Opcionalmente se puede usar <function>oci_new_descriptor</function>
       para asignar descriptores LOB/ROWID/BFILE.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>oci_define_by_name</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$sql = 'SELECT location_id, city FROM locations WHERE location_id < 1200';
$stid = oci_parse($conn, $sql);

// Las definiciones DEBEN hacerse antes de la ejecución
oci_define_by_name($stid, 'LOCATION_ID', $locid);
oci_define_by_name($stid, 'CITY', $city);

oci_execute($stid);

// Cada obtención rellena las variables anteriormente definidas con los datos de la siguiente fila
while (oci_fetch($stid)) {
    echo "La ubicación del id $locid es $city<br>\n";
}

// Se muestra:
//   La ubicación del id 1000 es Roma
//   La ubicación del id 1100 es Venice

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>oci_define_by_name</function> con nombres de columna sensibles al uso de mayúsculas/minúsculas</title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de ejecutarlo, cree la tabla con un nombre de columna sensible al uso de mayúsculas/minúsculas
    CREATE TABLE mytab (id NUMBER, "MyDescription" VARCHAR2(30));
    INSERT INTO mytab (id, "MyDescription") values (1, 'Iced Coffee');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT * FROM mytab');

// Use mayúsculas para nombres de columnas insensible al uso de mayúsculas/minúsculas
oci_define_by_name($stid, 'ID', $id);

// Use el nombre exacto para nombres de columnas sensible al uso de mayúsculas/minúsculas
oci_define_by_name($stid, 'MyDescription', $mydesc);

oci_execute($stid);

while (oci_fetch($stid)) {
    echo "El id $id es $mydesc<br>\n";
}

// Se muestra:
//   El id 1 es Iced Coffee

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>oci_define_by_name</function> con columnas de tipo LOB</title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de ejecutarlo, cree la tabla:
    CREATE TABLE mytab (id NUMBER, fruit CLOB);
    INSERT INTO mytab (id, fruit) values (1, 'manzana');
    INSERT INTO mytab (id, fruit) values (2, 'naranaja');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT * FROM mytab');

// Las definiciones DEBEN hacerse antes de la ejecución
oci_define_by_name($stid, 'ID', $id);
oci_define_by_name($stid, 'FRUIT', $fruta);  // $fruta será un descriptor LOB

oci_execute($stid);

while (oci_fetch($stid)) {
    echo $id . " es " . $fruta->load(100) . "<br>\n";
}

// Se muestra:
//   1 es manzana
//   2 es naranaja

$fruta->free();
oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>oci_define_by_name</function> con un tipo explícito</title>
    <programlisting role="php">
<![CDATA[
<?php

/*
  Antes de ejecutarlo, cree la tabla:
    CREATE TABLE mytab (id NUMBER, fruit CLOB);
    INSERT INTO mytab (id, fruit) values (1, 'manzana');
    INSERT INTO mytab (id, fruit) values (2, 'naranaja');
    COMMIT;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}

$stid = oci_parse($conn, 'SELECT * FROM mytab');

// Las definiciones DEBEN hacerse antes de la ejecución
oci_define_by_name($stid, 'ID', $id);

$fruta = oci_new_descriptor($conn, OCI_D_LOB);
oci_define_by_name($stid, 'FRUIT', $fruta, OCI_D_CLOB);

oci_execute($stid);

while (oci_fetch($stid)) {
    echo $id . " es " . $fruta->load(100) . "<br>\n";
}

// Se muestra:
//   1 es manzana
//   2 es naranaja

$fruta->free();
oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>oci_fetch</function></member>
    <member><function>oci_new_descriptor</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

