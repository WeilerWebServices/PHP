<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333039 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.oci-field-type-raw" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>oci_field_type_raw</refname>
  <refpurpose>Indica el tipo de datos sin tratar de Oracle de un campo</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>oci_field_type_raw</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>field</parameter></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el tipo de datos "SQLT" sin tratar de Oracle del campo dado por <parameter>field</parameter>.
  </para>
  <para>
   Si se quiere obtener el nombre de tipo del campo, es mejor usar <function>oci_field_type</function>. 
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Un identificador de sentencia de OCI válido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>field</parameter></term>
     <listitem>
      <para>
       Puede ser un índice de campo (basado en 1) o un nombre.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devueleve el tipo de datos sin tratar de Oracle como un número, o &false; en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>oci_field_type_raw</function> Example</title>
    <programlisting role="php">
<![CDATA[
<?php

// Crear la tabla con:
//   CREATE TABLE mytab (number_col NUMBER, varchar2_col varchar2(1), clob_col CLOB, date_col DATE);

$conn = oci_connect("hr", "hrpwd", "localhost/XE");
if (!$conn) {
    $m = oci_error();
    trigger_error(htmlentities($m['message']), E_USER_ERROR);
}

$stid = oci_parse($conn, 'select * from mytab');
oci_execute($stid, OCI_DESCRIBE_ONLY);  // Use OCI_DESCRIBE_ONLY if not fetching rows
$n = oci_num_fields($stid);
for ($i = 1; $i <= $n; ++$i) {
    echo oci_field_name($stid, $i) . " is raw type: " . oci_field_type_raw($stid, $i) . "<br>\n";
}

// La salida es:
//    NUMBER_COL is raw type: 2
//    VARCHAR2_COL is raw type: 1
//    CLOB_COL is raw type: 112
//    DATE_COL is raw type: 12

oci_free_statement($stid);
oci_close($conn);

?>]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    En versiones de PHP anteriores a la 5.0.0 se debe usar <function>ocicolumntyperaw</function> en su lugar.
    Este nombre aún se puede usar; se dejó como un alias de
    <function>oci_field_type_raw</function> por razones de retrocompatibilidad.
    Sin embargo, este nombre es obsoleto y no se recomienda.
   </para>
  </note>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
