<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="zmqsocket.connect" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ZMQSocket::connect</refname>
  <refpurpose>Contectar el socket</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>ZMQSocket</type><methodname>ZMQSocket::connect</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>force</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Contecta el socket a un extremo remoto. El extremo está definido en formato <literal>transporte://dirección</literal> donde
   transporte es uno de los siguientes: inproc, ipc, tcp, pgm o epgm.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dsn</parameter></term>
     <listitem>
      <para>
       El DSN de la conexión, por ejemplo <literal>transporte://dirección</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>force</parameter></term>
     <listitem>
      <para>
       Intenta la conexión incluso si elm socket ya ha sido conectado al extremo dado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
 &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>ZMQContext</function></title>
    <para>
     Construir un nuevo contexto y asignar un socket de petición
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Nombre de host del servidor */
$dsn = "tcp://127.0.0.1:5555";

/* Crear un socket */
$socket = new ZMQSocket(new ZMQContext(), ZMQ::SOCKET_REQ, 'my socket');

/* Obtener una lista de los extremos conectados */
$endpoints = $socket->getEndpoints();

/* Comprobar si el socket está conectado */
if (!in_array($dsn, $endpoints['connect'])) {
    echo "<p>Conectando a $dsn</p>";
    $socket->connect($dsn);
} else {
    echo "<p>Ya se ha contectado a $dsn</p>";
}

/* Enviar y recibir */
$socket->send("¡Hola!");
$message = $socket->recv();

echo "<p>El servidor dice: {$message}</p>";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el objeto actual. Lanza una ZMQSocketException en caso de error.
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
