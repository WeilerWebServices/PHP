<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338425 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.spliti">
 <refnamediv>
  <refname>spliti</refname>
  <refpurpose>Divide una cadena en una matriz mediante una expresión regular insensible a mayúsculas-minúsculas</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member>
     <function>preg_split</function>
     (con el modificador <literal>i</literal>
     (<constant>PCRE_CASELESS</constant>))
    </member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>spliti</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Divide un <parameter>string</parameter> en una matriz mediante una expresión regular.
  </para>
  <para>
   Esta función es idéntica a <function>split</function> excepto que ignora
   la distinción de mayúsculas-minúsculas cuando se comparan caracteres alfanuméricos.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Expresión regular insensible a mayúsculas-minúsculas.
      </para>
      <para>
       Si quiere dividir cualesquiera caracteres que están considerados
       especiales por las expresiones regulares, necesitará escaparlos primero. Si
       piensa que <function>spliti</function> (o, de hecho, cualquier otra función de
       expresión regular) está haciendo algo extraño, por favor, lea el archivo
       <filename>regex.7</filename>, incluido en el subdirectorio
       <filename>regex/</filename> de la distribución de PHP. Estas páginas de ayuda
       están en formato "man", por lo que será necesaria una orden como
       <command>man /usr/local/src/regex/regex.7</command> para poder leerlo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Si se establece <parameter>limit</parameter>, la matriz devuelta
       contendrá un máximo de <parameter>limit</parameter> elementos con el
       último elemento conteniendo el resto completo de
       <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz de cadenas, siendo cada una de ellas una sub-cadena de
   <parameter>string</parameter> formada al dividir éste con los límites establecidos
   mediante la expresión regular insensible a mayúsculas-minúsculas <parameter>pattern</parameter>.
  </para>
  <para>
   Si hay <replaceable>n</replaceable> incidencias de
   <parameter>pattern</parameter>, la matriz devuelta contentrá
   <literal><replaceable>n</replaceable>+1</literal> elementos. Por ejemplo, si
   no hay incidencias de <parameter>pattern</parameter>, será devuelta
   una matriz con sólo un elemento. Por supuesto, esto también es verdadero si
   <parameter>string</parameter> está vacío. Si se produce un error,
   <function>spliti</function> devuelve &false;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Este ejemplo divide una cadena usando 'a' como separador :
   <example>
    <title>Ejemplo de <function>spliti</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$cadena = "aBBBaCCCADDDaEEEaGGGA";
$trozos = spliti ("a", $cadena, 5);
print_r($trozos);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
  [0] =>
  [1] => BBB
  [2] => CCC
  [3] => DDD
  [4] => EEEaGGGA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>split</function></member>
    <member><function>explode</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
