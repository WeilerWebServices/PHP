<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338425 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ereg-replace">
 <refnamediv>
  <refname>ereg_replace</refname>
  <refpurpose>Sustituye una expresión regular</refpurpose>
 </refnamediv>
 
 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member><function>preg_replace</function></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ereg_replace</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>replacement</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Esta función busca en <parameter>string</parameter> coincidencias de
   <parameter>pattern</parameter>, después reemplaza el texto coincidido
   con <parameter>replacement</parameter>.
  </simpara>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Una expresión regular POSIX extendido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacement</parameter></term>
     <listitem>
      <para>
       Si <parameter>pattern</parameter> contiene sub-cadenas entre paréntesis,
       <parameter>replacement</parameter> puede contener sub-cadenas de la forma
       <literal>\<replaceable>dígito</replaceable></literal>, las cuales serán
       sustituidas por el texto que coincida con la sub-cadena entre paréntesis que coincida con el número marcado por dígito;
       <literal>\0</literal> producirá el contenido completo de la cadena.
       Se pueden usar hasta nueve sub-cadenas. Los paréntesis se pueden anidar, en cuyo
       caso son contados por los paréntesis de apertura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Se devuelve la cadena modificada. Si no se encontraron coincidencias en
   <parameter>string</parameter>, éste será devuelto sin cambios.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Por ejemplo, el siguiente trozo de código imprime "Esto era una prueba"
   tres veces:
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>ereg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$cadena = "Esto es una prueba";
echo str_replace(" es", " era", $cadena);
echo ereg_replace("( )es", "\\1era", $cadena);
echo ereg_replace("(( )es)", "\\2era", $cadena);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Una cosa a tener en cuenta es que si se usa un valor entero como
   el parámetro <parameter>replacement</parameter>, puede no obtenerse
   los resultados que se esperaban. Esto es a causa de que
   <function>ereg_replace</function> interpretará el número como
   el valor ordinal de un carácter, y lo aplica. Por ejemplo:
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>ereg_replace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Esto no funcionará como se esperaba. */
$número = 4;
$cadena = "Esta cadena tiene cuatro palabras.";
$cadena = ereg_replace('cuatro', $número, $cadena);
echo $cadena;   /* Salida: 'Esta cadena tiene   palabras.' */

/* Estó funcionará. */
$número = '4';
$cadena = "Esta cadena tiene cuatro palabras.";
$cadena = ereg_replace('cuatro', $número, $cadena);
echo $cadena;   /* Salida: 'Esta cadena tiene 4 palabras.' */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Sustituye URLs por vínculos</title>
    <programlisting role="php">
<![CDATA[
<?php
$texto = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\0\">\0</a>", $texto);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ereg</function></member>
    <member><function>eregi</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
