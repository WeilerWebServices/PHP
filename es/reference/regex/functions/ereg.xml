<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338425 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.ereg">
 <refnamediv>
  <refname>ereg</refname>
  <refpurpose>Comparación de una expresión regular</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &warn.deprecated.function.5-3-0.removed.7-0-0.alternatives;
   <simplelist role="alternatives">
    <member><function>preg_match</function></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ereg</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">regs</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Busca en <parameter>string</parameter> coincidencias con la expresión
   regular dada en <parameter>pattern</parameter> de una forma sensible a
   mayúsculas-minúsculas.
  </simpara>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Expresión regular sensible a mayúsculas-minúsculas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>regs</parameter></term>
     <listitem>
      <para>
       Si se encontraron coincidencias con las sub-cadenas entre paréntesis de
       <parameter>pattern</parameter> y la función es llamada con el
       tercer argumento <parameter>regs</parameter>, las coincidencias serán almacenadas
       en los elementos de la matriz <parameter>regs</parameter>.
      </para>
      <para>
       <varname>$registros[1]</varname> contendrá la sub-cadena que comienza con
       el primer paréntesis de la izquierda; <varname>$registros[2]</varname> contendrá
       la segunda sub-cadena, y así sucesivamente.
       <varname>$registros[0]</varname> contendrá una copia de la cadena coincidente
       completa.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la longitud de la cadena coincidente si una coincidencia de
   <parameter>pattern</parameter> se encontró en <parameter>string</parameter>,
   o &false; si no se encontraron coincidencias o se produjo un error.
  </para>
  <para>
   Si el parámetro opcional <parameter>regs</parameter> no fue pasado o
   la longitud de la cadena coincidente es 0, esta función devuelve 1.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Hasta PHP 4.1.0 (inclusive) <varname>$registros</varname> será
        rellenado con exactamente diez elementos, incluso si en realidad
        se pueden haber comparado más o menos de diez sub-cadenas entre paréntesis. Esto no
        tiene efecto en la capacidad que tiene <function>ereg</function> de comparar más
        sub-cadenas. Si no se encontraron coincidencias, <literal>$registros</literal>
        no será modificado por <function>ereg</function>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>ereg</function></title>
    <para>
     El siguiente trozo de código toma una fecha en formato ISO (AAAA-MM-DD) y
     la imprime en formato DD.MM.AAAA:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $fecha, $registros)) {
    echo "$registros[3].$registros[2].$registros[1]";
} else {
    echo "Formato de fecha no válido: $fecha";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>eregi</function></member>
    <member><function>ereg_replace</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>strpos</function></member>
    <member><function>strstr</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
