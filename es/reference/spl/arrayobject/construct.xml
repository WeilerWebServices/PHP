<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344127 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id="arrayobject.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ArrayObject::__construct</refname>
  <refpurpose>Construir un nuevo objeto Array</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>ArrayObject::__construct</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>input</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>iterator_class</parameter><initializer>"ArrayIterator"</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Esto crea un nuevo <type>objeto</type> array. 
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>input</parameter></term>
     <listitem>
      <para>
       Este parámetro de <parameter>input</parameter> (entrada) acepta un 
       <type>array</type> o un <type>objeto</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Flags para controlar el comportamiento del objeto <classname>ArrayObject</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iterator_class</parameter></term>
     <listitem>
      <para>
       Especifica la clase que va a ser usada para la iteración del objeto <classname>ArrayObject</classname>.
       <classname>ArrayIterator</classname> es la clase usada por omisión.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto ArrayObject en caso de éxito.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>InvalidArgumentException</classname> cuando:
   <itemizedlist>
    <listitem>
     <simpara>
      <parameter>input</parameter> no es un array u objeto
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <parameter>flags</parameter> no es un integer
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <parameter>iterator_class</parameter> no es un objeto que implementa
      <classname>Iterator</classname>
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>ArrayObject::__construct</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array('1' => 'uno',
               '2' => 'dos',
               '3' => 'tres');

$arrayobject = new ArrayObject($array);

var_dump($arrayobject);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
object(ArrayObject)#1 (3) {
  [1]=>
  string(3) "uno"
  [2]=>
  string(3) "dos"
  [3]=>
  string(5) "tres"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ArrayObject::setflags</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
