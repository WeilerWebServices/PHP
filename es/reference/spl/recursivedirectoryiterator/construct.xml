<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333155 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="recursivedirectoryiterator.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RecursiveDirectoryIterator::__construct</refname>
  <refpurpose>Construye un RecursiveDirectoryIterator</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>RecursiveDirectoryIterator::__construct</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO</initializer></methodparam>
  </methodsynopsis>
  <para>
   Construye un <methodname>RecursiveDirectoryIterator</methodname>
   para el <parameter>path</parameter> proporcionado.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       La ruta de el directorio a ser iterado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Se pueden proporcionar flags para afectar el comportamiento de algunos métodos. 
       Una lista de flags puede encontrarse en
       <link linkend="filesystemiterator.constants">Constantes predefinidas FilesystemIterator</link>.
       También se pueden establecer más tarde con <methodname>FilesystemIterator::setFlags</methodname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el <classname>RecursiveDirectoryIterator</classname> recién creado.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>UnexpectedValueException</classname>
   si el <parameter>path</parameter> no puede ser encontrado o este no es un directorio.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <classname>RecursiveDirectoryIterator</classname></title>
    <programlisting role="php">
<![CDATA[
<?php

$directorio = '/tmp';

$it = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($directorio));

$it->rewind();
while($it->valid()) {

    if (!$it->isDot()) {
        echo 'SubPathName: ' . $it->getSubPathName() . "\n";
        echo 'SubPath:     ' . $it->getSubPath() . "\n";
        echo 'Key:         ' . $it->key() . "\n\n";
    }

    $it->next();
}

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
SubPathName: fruta/manzana.xml
SubPath:     fruta
Key:         /tmp/fruta/manzana.xml

SubPathName: stuff.xml
SubPath:     
Key:         /tmp/stuff.xml

SubPathName: vegetales/zanahoria.xml
SubPath:     vegetales
Key:         /tmp/vegetales/zanahoria.xml

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>FilesystemIterator::__construct</methodname></member>
    <member><methodname>RecursiveIteratorIterator::__construct</methodname></member>
    <member><link linkend="filesystemiterator.constants">Constantes predefinidas FilesystemIterator</link></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
