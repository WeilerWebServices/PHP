<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335811 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-ms-xa-gc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_ms_xa_gc</refname>
  <refpurpose>Recolecta basura de transacciones XA no finalizadas después de algún error del servidor</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type>
   <methodname>mysqlnd_ms_xa_gc</methodname>
   <methodparam><type>mixed</type><parameter>connection</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>gtrid</parameter></methodparam>
   <methodparam choice="opt"><type>boolean</type><parameter>ignore_max_retries</parameter></methodparam>
   
   
  </methodsynopsis>
  <para>
   Recolecta basura de transacciones XA no finalizadas.
  </para>
  <para>
   El protoclo XA es un protocolo de bloqueo. Hay casos en los que los servidores
   participantes en una transacción global no pueden progresar cuando el coodinador de
   transacciones falla o se desconecta. En tal caso, los servidores de MySQL
   se mantienen esperando instrucciones para finalizar la transacción XA en cuestión.
   Ya que las transacciones ocupan recursos, estas deberían siempre finalizarse
   de la manera apropiada.
  </para>
  <para>
   La recolección de basura requiere configurar un almacén de estados para rastrear transacicones
   globales. Si un cliente de PHP se cae en mitad de una transacción
   y se inicia un nuevo cliente de PHP, el recolector de basura interno
   podrá enterarse de la transacción global abortada y finalizarla. Si no
   se configura un almacén de estado, el recolector de basura no podrá realizar
   ningunta tarea de limpieza.
  </para>
  <para>
   El almacén de estados debería ser seguro ante caídas y ser de alta disponibilidad para sobrevivir
   a su propia caída. Actualmente, solamente se admite MySQL como almacén de estados.
  </para>
  <para>
   La recolección de basura también se puede realizar de forma automática en segundo plano.
   Ver la directiva de configuración <literal>garbage_collection</literal> del complemento
   para más detalles.
  </para>
  <note>
   <title>Experimental</title>
   <para>
    Esta característica está actualmente en desarrollo. Podrían existir problemas y/o
    limitaciones. No la use en entornos de producción. 
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>connection</parameter></term>
    <listitem>
     <para>
      Un gestor de conexión de MySQL obtenido de cualesquiera de las extensiones
      connect functions of the <link linkend="ref.mysqli">mysqli</link>,
      <link linkend="ref.mysql">mysql</link> o
      <link linkend="ref.pdo-mysql">PDO_MYSQL</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>gtrid</parameter></term>
    <listitem>
     <para>
      Un identificador de transacción global (gtrid). Si se proporciona, el recolector
      de basura considerará únicamente la transacción. De lo contrario,
      se explorará el almacén de datos para cualquier transacción no finalizada.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>ignore_max_retries</parameter></term>
    <listitem>
     <para>
      Indica si ignorar el ajuste de configuración <literal>max_retries</literal> del complemento.
      Si la recolección de basura falla de forma continuada y se alcanza el límite <literal>max_retries</literal>
      antes de finalizar la transacción global fallida,
      se pueden intentar más ejecuciones antes de investigar la causa
      y resolver el probelma manualmente enviando sentencias SQL
      a los participantes. Esteblecer el parámetro tiene el mismo efecto
      que establecer <literal>max_retries = 0</literal> temporalmente.
     </para>
    </listitem>
   </varlistentry>
   
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; si la transacción global ha sido revertida. De lo contrario, devuelve &false;.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-ms.quickstart.xa_transactions">Guía rápida de transacciones XA/distribuidas</link>
    </member>
    <member>
     <link linkend="mysqlnd-ms.configuration">Configuración en tiempo de ejecución</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-ms-plugin-config-v2.xa">Configuración del almacén de estados</link>
    </member>
    <member>
     <function>mysqlnd_ms_get_stats</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
