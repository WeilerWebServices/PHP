<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334879 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-ms-set-user-pick-server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_ms_set_user_pick_server</refname>
  <refpurpose>Establece una llamada de retorno para la división de lectura/escritura definida por el usuario</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type>
   <methodname>mysqlnd_ms_set_user_pick_server</methodname>
   <methodparam><type>string</type><parameter>function</parameter></methodparam>
  </methodsynopsis>
  <para>
   Establece una llamada de retorno para la división de lectura/escritura definida por el usuario.
   El complemento invocará a la llamada de retorno solamente si <literal>pick[]=user</literal>
   el la regla predeterminada para elegir servidores en la sección relevante del fichero de
   configuración del complemento.
  </para>
  <para>
   Las decisiones del mecanismo interno de división de consultas de lecura-escritura pueden ser
   sobrescritas de dos maneras. La más sencilla es anteponer a una consulta
   las sugerentecias SQL <constant>MYSQLND_MS_MASTER_SWITCH</constant>,
   <constant>MYSQLND_MS_SLAVE_SWITCH</constant> o
   <constant>MYSQLND_MS_LAST_USED_SWITCH</constant>. Al utilizar sugerencias SQL se puede
   controlar, por ejemplo, si una consulta debería ser enviada al servidor maestro de replicación
   MySQL o a uno de los servidores esclavos. Mediante la ayuda de sugenrencias SQL no es
   posible elegir un esclavo en particular para que ejecute una consulta.
  </para>
  <para>
   Se puede obtener control total en la selección del servidor usando una función de llamada de retorno.
   Solamente se recomienda el uso de una llamada de retorno para usuarios expertos, ya que ésta
   ha de cubrir todos los casos que de otro modo manejaría el complemento.
  </para>
  <para>
   El complemento invorcará a la función de llamada de retorno para seleccionar un servidor de las
   listas de servidores maestros y esclavos configurados. La función de llamada de retorno
   inspeccionará la consulta a ejecutar y eligirá un servidor para que ejecute dicha consulta, devolviendo
   el URI del equipo anfitrión, tal como lo encontró en la lista de maestros y esclavos.
  </para>
  <para>
   Si las conexiones retardadas están habilitadas y la llamada de retorno elige un servidor esclavo para
   el que hasta ahora no se ha establecido una conexión, y el establecimiento de la conexión
   al esclavo falla, el complemento devolverá un error sobre la siguiente acción
   en la conexión fallida, por ejemplo, al ejecutar una consulta. Es
   responsabilidad del desarrollador de la aplicación manejar el error. Por ejemplo,
   la aplicación podría re-ejecutar la consulta para desencadenar una nueva selección de un servidor y una nueva
   invocación a la llamada de retorno. Si lo hace, la llamada de retorno debe asegurarse de seleccionar
   un esclavo diferente, o comprobar la disponibilidad del esclavo, antes de devolver el resultado al
   complemento para evitar un bucle infinito.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>function</parameter></term>
    <listitem>
     <para>
      La función a llamar. Se pueden invocar también métodos de clases
      de forma estática usando esta función pasando
      <literal>array($nombre_clase, $nombre_método)</literal> a este parámetro.
      Además, los métodos de clases de una instancia de objeto se pueden llamar pasando
      <literal>array($instancia_objeto, $nombre_método)</literal> a este parámetro.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El equipo anfitrión donde ejecutar la consulta. El URI del equipo anfigrión se toma
   de las listas de maestros y esclavos configurados pasadas a la función de llamada de retorno.
   Si la llamada de retorno devuelve un valor que no se encuentra ni en las listas de conexión a
   maestros ni en la de esclavos, el complemento usará el segundo método de elección configurado
   mediante el ajuste <literal>pick[]</literal> del fichero de configuración del complemento.
   Si no se proporciona un segundo método de elección, el complemento usará el método interno
   predeterminado de seleccionar un servidor.
  </para>
 </refsect1>
 
 <refsect1>
  &reftitle.notes;
  <note>
   <para>
    <function>mysqlnd_ms_set_user_pick_server</function> está disponible
    con PECL mysqlnd_ms &lt; 1.1.0. Ha sido reemplazado por el
    filtro <literal>user</literal>. Por favor, revise el
    <link linkend="mysqlnd-ms.changes-one-one">Historial de cambios</link>
    para las notas sobre actualizaciones.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>mysqlnd_ms_set_user_pick_server</function></title>
    <programlisting role="ini">
<![CDATA[
[myapp]
master[] = localhost
slave[] = 192.168.2.27:3306
slave[] = 192.168.78.136:3306
pick[] = user
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php

function pick_server($connected, $query, $master, $slaves, $last_used)
{
 static $slave_idx = 0;
 static $num_slaves = NULL;
 if (is_null($num_slaves))
  $num_slaves = count($slaves);

 /* predeterminado: volver a la lógica interna del comlemento */
 $ret = NULL;

 printf("El usuario se ha conectado a '%s'...\n", $connected);
 printf("... decidiendo dónde ejecutar '%s'\n", $query);

 $where = mysqlnd_ms_query_is_select($query);
 switch ($where)
 {
  case MYSQLND_MS_QUERY_USE_MASTER:
   printf("... usando el maestro\n");
   $ret = $masters[0];
   break;
  case MYSQLND_MS_QUERY_USE_SLAVE:
   /* SELECT or SQL hint for using slave */
   if (stristr($query, "FROM table_on_slave_a_only"))
   {
    /* una tabla que está únicamente en el primer esclavo configurado  */
    printf("... detectado un acceso a la tabla únicamente disponible en el esclavo A\n");
    $ret = $slaves[0];
   }
   else
   {
    /* rotativo */
    printf("... alguna consulta de solo lectura para un esclavo\n");
    $ret = $slaves[$slave_idx++ % $num_slaves];
   }
   break;
  case MYSQLND_MS_QUERY_LAST_USED:
   printf("... usando el último esclavo utilizado\n");
   $ret = $last_used;
   break;
 }

 printf("... ret = '%s'\n", $ret);
 return $ret;
}

mysqlnd_ms_set_user_pick_server("pick_server");

$mysqli = new mysqli("myapp", "root", "", "test");

if (!($res = $mysqli->query("SELECT 1 FROM DUAL")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();

if (!($res = $mysqli->query("SELECT 2 FROM DUAL")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();


if (!($res = $mysqli->query("SELECT * FROM table_on_slave_a_only")))
 printf("[%d] %s\n", $mysqli->errno, $mysqli->error);
else
 $res->close();

$mysqli->close();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
User has connected to 'myapp'...
... deciding where to run 'SELECT 1 FROM DUAL'
... some read-only query for a slave
... ret = 'tcp://192.168.2.27:3306'
User has connected to 'myapp'...
... deciding where to run 'SELECT 2 FROM DUAL'
... some read-only query for a slave
... ret = 'tcp://192.168.78.136:3306'
User has connected to 'myapp'...
... deciding where to run 'SELECT * FROM table_on_slave_a_only'
... access to table available only on slave A detected
... ret = 'tcp://192.168.2.27:3306'
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>mysqlnd_ms_query_is_select</function>
    </member>
    <member>
     <link linkend="mysqlnd-ms.filter">Concepto de filtro</link>
    </member>
    <member>
     El filtro <link linkend="ini.mysqlnd-ms-plugin-config-v2.filter-user"><literal>user</literal></link>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
