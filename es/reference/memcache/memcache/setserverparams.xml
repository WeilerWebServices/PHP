<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333096 Maintainer: yago Status: ready -->
<!-- Reviewed: no Maintainer: yago -->
<refentry xml:id="memcache.setserverparams" xmlns="http://docbook.org/ns/docbook"> 
 <refnamediv>
  <refname>Memcache::setServerParams</refname>
  <refpurpose>Cambia parámetros del servidor y estado en tiempo de ejecucción</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::setServerParams</methodname>
   <methodparam><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>11211</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retry_interval</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>status</parameter></methodparam>
   <methodparam choice="opt"><type>callable</type><parameter>failure_callback</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   <function>Memcache::setServerParams</function> cambia parámetros del servidor en tiempo de ejecucción.
   También se puede usar la función <function>memcache_set_server_params</function>.
  </para>
  
  <note>
   <para>
    Esta función fue añadida en la versión 2.1.0. de Memcache.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Apunta al host donde memcached está esperando conexiones. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Apunta al puerto donde memcached está esperando conexiones.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Valor en segundos que se utilizarán para conectarse al demonio. Piensa dos
       veces antes de cambiar el valor por defecto de 1 segundo, puedes perder
       todas la ventajas del caché si tus conexiones son muy lentas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retry_interval</parameter></term>
     <listitem>
      <para>
       Controla la frecuencia de reintentos cuando falla la conexión, el valor por defecto es 
       15 segundos. Si establece este parámetro a -1 desactivará el reintento automático.
       Ni esta opción ni el parámetro <parameter>persistent</parameter> tienen ningún efecto
       cuando la extensión se carga dinámicamente a través de <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       Controla si el servidor debe ser marcado como online. Estableciendo este parámetro
       a &false; y <parameter>retry_interval</parameter> a -1 permite a un servidor que falle
       a ser mantenido en el grupo para no afectar el algoritmo de distribución de llaves.
       Las peticiones a este servidor fallarán inmediatamente dependiendo en la opción
       <parameter>memcache.allow_failover</parameter>. Por defecto to &true;, que significa
       que el servidor se considera online.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>failure_callback</parameter></term>
     <listitem>
      <para>
       Permite al usuario a especificar la llamada a una función de retorno a ejectuar cuando
       se encuentre un error. La llamada de retorno se ejecuta antes de que se produzca la 
       caída en la conexión. La función toma dos parámetros, el hostname y el puerto del puerto
       que ha fallado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>Memcache::setServerParams</function></title>
    <programlisting role="php">
<![CDATA[
<?php

function _callback_memcache_failure($host, $port) {
    print "memcache '$host:$port' failed";
}

/* API OO */

$memcache = new Memcache;

// Añadir servidor en modo offline.
$memcache->addServer('memcache_host', 11211, false, 1, 1, -1, false);

// Establecer el servidor de offline a online.
$memcache->setServerParams('memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

/* API por procedimientos */

$memcache_obj = memcache_connect('memcache_host', 11211);
memcache_set_server_params($memcache_obj, 'memcache_host', 11211, 1, 15, true, '_callback_memcache_failure');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::addServer</function></member>
    <member><function>Memcache::getServerStatus</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
