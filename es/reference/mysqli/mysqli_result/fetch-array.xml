<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335586 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="mysqli-result.fetch-array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_array</refname>
  <refname>mysqli_fetch_array</refname>
  <refpurpose>Obtiene una fila de resultados como un array asociativo, numérico, o ambos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>mixed</type><methodname>mysqli_result::fetch_array</methodname>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mixed</type><methodname>mysqli_fetch_array</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resulttype</parameter><initializer>MYSQLI_BOTH</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retorna un array que corresponde a la fila obtenida o &null; si es que
   no hay más filas en el resultset representado por el
   parámetro <parameter>result</parameter>.
  </para>
  <para>
   <function>mysqli_fetch_array</function> es una versión extendida de
   la función <function>mysqli_fetch_row</function>. Además de guardar la
   información en los índices numéricos del array resultante, la función 
   <function>mysqli_fetch_array</function> también puede guardar la información
   en índices asociativos, utilizando los nombres de los campos del resultado como claves.
  </para>
  &database.field-case;
  &database.fetch-null;
  <para>
   Si dos o más columnas del resultado tienen el mismo nombre de campo, la última
   columna tomará precedencia y sobrescribirá la información anterior. Para
   acceder a múltiples columnas con el mismo nombre, hay que usar la versión
   numéricamente indexada de la fila.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
    <varlistentry>
     <term><parameter>resulttype</parameter></term>
     <listitem>
      <para>
       Este parámetro opcional es una constante que indica qué tipo de array
       debiera generarse con la información de la fila actual. Los valores posibles para
       este parámetro son las constantes <constant>MYSQLI_ASSOC</constant>,
       <constant>MYSQLI_NUM</constant>, o <constant>MYSQLI_BOTH</constant>.
      </para>
      <para>
       Al emplear la constante <constant>MYSQLI_ASSOC</constant> esta función
       se comportará de manera idéntica a <function>mysqli_fetch_assoc</function>,
       mientras que con <constant>MYSQLI_NUM</constant> se comportará exactamente igual que
       la función <function>mysqli_fetch_row</function>. La última opción 
       <constant>MYSQLI_BOTH</constant> creará un único array con los atributos de ambas dos.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un array de strings que corresponde a la fila obtenida o &null; si
   no hay más filas en el resultset.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");

/* verificar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión failed: %s\n", $mysqli->connect_error);
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = $mysqli->query($query);

/* array numérico */
$row = $result->fetch_array(MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);

/* array asociativo */
$row = $result->fetch_array(MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* array numérico y asociativo */
$row = $result->fetch_array(MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);

/* liberar la serie de resultados */
$result->free();

/* cerrar la conexión */
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$link = mysqli_connect("localhost", "my_user", "my_password", "world");

/* verificar la conexión */
if (mysqli_connect_errno()) {
    printf("Conexión fallida: %s\n", mysqli_connect_error());
    exit();
}

$query = "SELECT Name, CountryCode FROM City ORDER by ID LIMIT 3";
$result = mysqli_query($link, $query);

/* array numérico */
$row = mysqli_fetch_array($result, MYSQLI_NUM);
printf ("%s (%s)\n", $row[0], $row[1]);

/* array asociativo */
$row = mysqli_fetch_array($result, MYSQLI_ASSOC);
printf ("%s (%s)\n", $row["Name"], $row["CountryCode"]);

/* array numérico y asociativo */
$row = mysqli_fetch_array($result, MYSQLI_BOTH);
printf ("%s (%s)\n", $row[0], $row["CountryCode"]);

/* liberar la serie de resultados */
mysqli_free_result($result);

/* cerrar la conexión */
mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Kabul (AFG)
Qandahar (AFG)
Herat (AFG)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_fetch_assoc</function></member>
    <member><function>mysqli_fetch_row</function></member>
    <member><function>mysqli_fetch_object</function></member>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_data_seek</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
