<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337742 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli-result.fetch-fields" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli_result::fetch_fields</refname>
  <refname>mysqli_fetch_fields</refname>
  <refpurpose>Devuelve un array de objetos que representan los campos de un conjunto de resultados</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>array</type><methodname>mysqli_result::fetch_fields</methodname>
   <void/>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>array</type><methodname>mysqli_fetch_fields</methodname>
   <methodparam><type>mysqli_result</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Esta función sirve de propósito idéntico a la
   función <function>mysqli_fetch_field</function> con la única
   diferencia de que, en lugar de devolver un objeto por cada campo,
   las columnas son devueltas en un array de objetos.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.result.description;
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array de objetos que contiene la información de definición de los campos o
   &false; si no hay información de campo disponible.
  </para>
  <para>
   <table>
    <title>Propiedades del objeto</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Propiedad</entry>
       <entry>Descripción</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>name</entry>
       <entry>El nombre de la columna</entry>
      </row>
      <row>
       <entry>orgname</entry>
       <entry>El nombre original de la columna si se especificó un alias</entry>
      </row>
      <row>
       <entry>table</entry>
       <entry>El nombre de la tabla al que pertenece el campo (si no es calculado)</entry>
      </row>
      <row>
       <entry>orgtable</entry>
       <entry>El nombre original de la tabla si se especificó un alias</entry>
      </row>
      <row>
       <entry>max_length</entry>
       <entry>El ancho máximo del campo del conjunto de resultados.</entry>
      </row>
      <row>
       <entry>length</entry>
       <entry>
        El ancho del campo, en bytes, como se especificó en la definición de la tabla. Observe que
        este número (bytes) podría diferir del valor de la definición de la tabla (caracteres), dependiendo
        del conjunto de caracteres que se emplee. Por ejemplo, el conjunto de caracteres utf8 tiene 3 bytes por carácter, 
        por lo que varchar(10) devolverá una longitud de 30 para utf8 (10*3), aunque devuelve 10 para latin1 (10*1).
       </entry>
      </row>
      <row>
       <entry>charsetnr</entry>
       <entry>El número del conjunto de caracteres (id) del campo.</entry>
      </row>
      <row>
       <entry>flags</entry>
       <entry>Un entero que representa las banderas de bits del campo.</entry>
      </row>
      <row>
       <entry>type</entry>
       <entry>El tipo de datos usado por el campo</entry>
      </row>
      <row>
       <entry>decimals</entry>
       <entry>El número de decimales usado (para campos integer)</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&style.oop;</title>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("127.0.0.1", "root", "foofoo", "sakila");

/* comprobar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", $mysqli->connect_error);
    exit();
}

foreach (array('latin1', 'utf8') as $conj_caract) {

    // Establecer el conjunto de caracteres para mostrar su impacto en algunos valores (p.ej., longitud en bytes)
    $mysqli->set_charset($conj_caract);

    $consulta = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "======================\n";
    echo "Conjunto de caracteres: $conj_caract\n";
    echo "======================\n";
    
    if ($resultado = $mysqli->query($consulta)) {

        /* Obtener la información del campo para todas las columnas */
        $info_campo = $resultado->fetch_fields();

        foreach ($info_campo as $valor) {
            printf("Nombre:           %s\n",   $valor->name);
            printf("Tabla:            %s\n",   $valor->table);
            printf("Longitud máx.:    %d\n",   $valor->max_length);
            printf("Longitud:         %d\n",   $valor->length);
            printf("Nº conj. caract.: %d\n",   $valor->charsetnr);
            printf("Banderas:         %d\n",   $valor->flags);
            printf("Tipo:             %d\n\n", $valor->type);
        }
        $resultado->free();
    }
}
$mysqli->close();
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>&style.procedural;</title>
   <programlisting role="php">
<![CDATA[
<?php
$enlace = mysqli_connect("127.0.0.1", "mi_usuario", "mi_contraseña", "sakila");

/* comprobar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", mysqli_connect_error());
    exit();
}

foreach (array('latin1', 'utf8') as $conj_caract) {

    // Establecer el conjunto de caracteres para mostrar su impacto en algunos valores (p.ej., longitud en bytes)
    mysqli_set_charset($enlace, $conj_caract);

    $consulta = "SELECT actor_id, last_name from actor ORDER BY actor_id";

    echo "===============================\n";
    echo "Conjunto de caracteres: $conj_caract\n";
    echo "===============================\n";

    if ($resultado = mysqli_query($enlace, $consulta)) {

        /* Obtener la información del campo para todas las columnas */
        $info_campo = mysqli_fetch_fields($resultado);

        foreach ($info_campo as $valor) {
            printf("Nombre:           %s\n",   $valor->name);
            printf("Tabla:            %s\n",   $valor->table);
            printf("Longitud máx.:    %d\n",   $valor->max_length);
            printf("Longitud:         %d\n",   $valor->length);
            printf("Nº conj. caract.: %d\n",   $valor->charsetnr);
            printf("Banderas:         %d\n",   $valor->flags);
            printf("Tipo:             %d\n\n", $valor->type);
        }
        mysqli_free_result($resultado);
    }
}

mysqli_close($enlace);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
===============================
Conjunto de caracteres: latin1
===============================
Nombre:           actor_id
Tabla:            actor
Longitud máx.:    3
Longitud:         5
Nº conj. caract.: 63
Banderas:         49699
Tipo:             2

Nombre:           last_name
Tabla:            actor
Longitud máx.:    12
Longitud:         45
Nº conj. caract.: 8
Banderas:         20489
Tipo:             253

===============================
Conjunto de caracteres: utf8
===============================
Nombre:           actor_id
Tabla:            actor
Longitud máx.:    3
Longitud:         5
Nº conj. caract.: 63
Banderas:         49699
Tipo:             2

Nombre:           last_name
Tabla:            actor
Longitud máx.:    12
Longitud:         135
Nº conj. caract.: 33
Banderas:         20489
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_num_fields</function></member>
    <member><function>mysqli_fetch_field_direct</function></member>
    <member><function>mysqli_fetch_field</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
