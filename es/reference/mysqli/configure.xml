<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339132 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<section xml:id="mysqli.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 
 &reftitle.install;
 
 <para>
  La extensión <literal>mysqli</literal> se introdujo en la versión 5.0.0
  de PHP. El Controlador Nativo de MySQL se introdujo en la versión 5.3.0 de PHP.
 </para>
 
 <section xml:id="mysqli.installation.linux">
  
  <title>Instalación en Linux</title>
  
  <para>
   Las distribuciones comunes de Unix incluyen versiones binarias de PHP que
   se pueden instalar. Aunque estas versiones binarias son típicamente construidas
   con soporte para las extensiones de MySQL, podría ser necesario instarlar las
   bibliotecas de extensiones en sí utilizando un paquete adicional. Compruebe
   el gestor de paquetes que viene con la distribución elegida para su
   disponibilidad.
  </para>
  
  <para>
   Por ejemplo, en Ubuntu el paquete <literal>php5-mysql</literal> instala
   las extensiones de PHP ext/mysql, ext/mysqli, y pdo_mysql. En CentOS, 
   el paquete <literal>php-mysql</literal> también instala estas tres
   extensiones de PHP.
  </para>
  
  <para>
   De forma alternativa, esta extensión la puede compilar uno mismo. Construir PHP desde
   la fuente permite especificar las extensiones de MySQL que se quieren usar, así como
   elegir la biblioteca cliente para cada extensión.
  </para>
  
  <para>
   La opción de la biblioteca cliente recomendada es el Controlador Nativio de MySQL, ya que sus
   resultados mejoran el rendimiento y dan acceso a características no
   disponibles cuando se utiliza la Biblioteca Cliente de MySQL. Consúlte
   <link linkend="mysqli.overview.mysqlnd">¿Qué es el Controlador Nativo de MySQL
    para PHP?</link>, que contiene un breve resumen de las ventajas del Controlador Nativo
   de MySQL.
  </para>
  
  <para>
   <literal>ruta/a/mysql_config</literal> representa la ubicación del
   programa <literal>mysql_config</literal> que viene con el Servidor de
   MySQL.
  </para>
  
  <table>
   <title>Matriz de soporte en tiempo de compilación de mysqli</title>
   <tgroup cols="5">
    <thead>
     <row>
      <entry>PHP &Version;</entry>
      <entry>&Default;</entry>
      <entry>&ConfigureOptions;: <link linkend="mysqlnd.overview">mysqlnd</link></entry>
      <entry>&ConfigureOptions;: <literal>libmysqlclient</literal></entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.4.x</entry>
      <entry>mysqlnd</entry>
      <entry><option role="configure">--with-mysqli</option></entry>
      <entry><option role="configure">--with-mysqli=ruta/a/mysql_config</option></entry>
      <entry>mysqlnd ahora es el predeterminado</entry>
     </row>
     <row>
      <entry>5.3.x</entry>
      <entry>libmysqlclient</entry>
      <entry><option role="configure">--with-mysqli=mysqlnd</option></entry>
      <entry><option role="configure">--with-mysqli=ruta/a/mysql_config</option></entry>
      <entry>mysqlnd tiene soporte</entry>
     </row>
     <row>
      <entry>5.0.x, 5.1.x, 5.2.x</entry>
      <entry>libmysqlclient</entry>
      <entry>&NotAvailable;</entry>
      <entry><option role="configure">--with-mysqli=ruta/a/mysql_config</option></entry>
      <entry>mysqlnd no tiene soporte</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  
  <para>
   Observe que es posible mezclar libremente extensiones de MySQL y bibliotecas
   cliente. Por ejemplo, es posible habilitar la extensión de MySQL
   para que emplee la Biblioteca Cliente de MySQL (libmysqlclient), mientras se configura la
   extensión <literal>mysqli</literal> para que utilice el Controlador Nativo de MySQL.
   No obstante, son posibles todas las permutaciones de extensiones y bibliotecas
   cliente.
  </para>
  
 </section>
 
 <section xml:id="mysqli.installation.windows">
  
  <title>Instalación en sistemas Windows</title>
  
  <para>
   En Windows es más común instalar PHP con el instalador
   binario.
  </para>
  
  <section xml:id="mysqli.installation.windows.php53">
   
   <title>PHP 5.3.0 y posterior</title>
   
   <para>
    En Windows, con las versiones 5.3 o superiores de PHP, la 
    extensión <literal>mysqli</literal> viene habilitada y utiliza por
    omisión el Controlador Nativo de MySQL, lo que significa que no es
    necesario configurar el acceso a
    <filename>libmysql.dll</filename>.
   </para>
   
  </section>
  
  <section xml:id="mysqli.installation.windows.php52">
   
   <title>PHP 5.0, 5.1, 5.2</title>
   
   <para>
    En estas versiones antiguas de PHP sin soporte (PHP 5.2 alcanzó su final de vida útil el 6 de enero de 2011),
    son necesarios procedimientos adicionales de configuración
    para habilitar <literal>mysqli</literal> y especificar la biblioteca
    cliente que se va a utilizar.
   </para>
   
   <para>
    La extensión <literal>mysqli</literal> no está
    habilitada por defecto, por lo que la DLL <filename>php_mysqli.dll</filename>
    debe habilitarse en &php.ini;. Para esto, es necesario
    encontrar el fichero &php.ini; (normalmente se encuentra en
    <filename>c:\php</filename>), y asegurarse de eliminar el comentario
    (punto y coma) al inicio de la línea
    <literal>extension=php_mysqli.dll</literal>, en la sección marcada como
    <literal>[PHP_MYSQLI]</literal>.
   </para>
   
   <para>
    Además, para utilizar la biblioteca cliente de MySQL con
    <literal>mysqli</literal>, debe asegurarse de que PHP puede acceder al
    fichero de la biblioteca cliente. La biblioteca cliente MySQL se
    incluye como un fichero de nombre <filename>libmysql.dll</filename> en la
    distribución de PHP en Windows. Este fichero debe estar disponible en la
    variable de entorno de sistema de Windows <envar>PATH</envar>, de modo que
    puede ser cargado con éxito. Véase la FAQ titulada
    "<link linkend="faq.installation.addtopath">Cómo agrego mi directorio PHP a
    la variable PATH en Windows</link>" para obtener información sobre cómo hacer
    esto. Copiar <filename>libmysql.dll</filename> al directorio de sistema de
    Windows (normalmente <filename>C:\Windows\System</filename>) funciona,
    pues el directorio de sistema esta por defecto en el <envar>PATH</envar> del sistema.
    Sin embargo, esta práctica está totalmente desaconsejada.
   </para>
   
   <para>
    Al igual que con cualquier otra extensión de PHP (como
    <filename>php_mysqli.dll</filename>), la directiva de PHP
    <link linkend="ini.extension-dir">extension_dir</link> se debe establecer
    en el directorio donde están ubicadas las extensiones de PHP. Consulte
    tambien el <link linkend="install.windows.manual">Manual de instalación de
    Windows</link>. Un ejemplo de valor de <literal>extension_dir</literal> para
    PHP 5 es <filename>c:\php\ext</filename>.
   </para>
   
   <note>
    <para>
     Si al iniciar el servidor web un error similar al siguiente ocurre:
     <literal>"Unable to load dynamic library './php_mysqli.dll'"</literal>,
     esto es porque <filename>php_mysqli.dll</filename> y/o
     <filename>libmysql.dll</filename> no pudo ser encontrado por el sistema.
    </para>
   </note>
   
  </section>
  
 </section>
 
</section>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
