<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331718 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.poll" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqli::poll</refname>
  <refname>mysqli_poll</refname>
  <refpurpose>Almacena en caché conexiones</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <modifier>static</modifier> <type>int</type><methodname>mysqli::poll</methodname>
   <methodparam><type>array</type><parameter role="reference">read</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">error</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">reject</parameter></methodparam>
   <methodparam><type>int</type><parameter>sec</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>usec</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>int</type><methodname>mysqli_poll</methodname>
   <methodparam><type>array</type><parameter role="reference">read</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">error</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">reject</parameter></methodparam>
   <methodparam><type>int</type><parameter>sec</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>usec</parameter></methodparam>
  </methodsynopsis>
  <para>
   Almacena en caché conexiones.
   &mysqli.available.mysqlnd;
   Este método puede usarse como
   <link linkend="language.oop5.static">estático</link>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>read</parameter></term>
     <listitem>
      <para>
       Lista de conexiones a comprobar para resultados pendientes que se pueden leer.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error</parameter></term>
     <listitem>
      <para>
       Lista de conexiones en las que ocurrió un error, por ejemplo, fallo de
       consulta o conexión perdida.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>reject</parameter></term>
     <listitem>
      <para>
       Lista de conexiones rechazadas debido a que no se ha ejecutado ninguna
       consulta asíncrona para la que la función podría almacenar en caché resultados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sec</parameter></term>
     <listitem>
      <para>
       El número de segundos a esperar, debe ser no negativo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>usec</parameter></term>
     <listitem>
      <para>
       El número de microsegundos a esperar, debe ser no negativo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el número de conexiones si tiene éxito, &false; de otro modo.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>mysqli_poll</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$enlace1 = mysqli_connect();
$enlace1->query("SELECT 'test'", MYSQLI_ASYNC);
$todos_los_enlaces = array($enlace1);
$procesado = 0;
do {
    $enlaces = $errores = $rechazados = array();
    foreach ($todos_los_enlaces as $enlace) {
        $enlaces[] = $errores[] = $rechazados[] = $enlace;
    }
    if (!mysqli_poll($enlaces, $errores, $rechazados, 1)) {
        continue;
    }
    foreach ($enlaces as $enlace) {
        if ($resultado = $enlace->reap_async_query()) {
            print_r($resultado->fetch_row());
            if (is_object($resultado))
                mysqli_free_result($resultado);
        } else die(sprintf("MySQLi Error: %s", mysqli_error($enlace1)));
        $procesado++;
    }
} while ($procesado < count($todos_los_enlaces));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => test
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_query</function></member>
    <member><function>mysqli_reap_async_query</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
