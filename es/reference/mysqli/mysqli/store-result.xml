<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338306 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.store-result" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::store_result</refname>
  <refname>mysqli_store_result</refname>
  <refpurpose>Transfiere un conjunto de resultados de la última consulta</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>mysqli_result</type><methodname>mysqli::store_result</methodname>
   <methodparam choice="opt"><type>int</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mysqli_result</type><methodname>mysqli_store_result</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>option</parameter></methodparam>
  </methodsynopsis>
  <para>
   Transfiere el conjunto de resultados de la última consulta de la conexión a la base de datos
   representada por el parámetro <parameter>link</parameter> a ser usado con
   la función <function>mysqli_data_seek</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       La opción a establecer. Puede ser uno de los siguientes valores:
       <table>
        <title>Opciones válidas</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Nombre</entry>
           <entry>Descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>MYSQLI_STORE_RESULT_COPY_DATA</constant></entry>
           <entry>Copiar los resultados desde el búfer interno de mysqlnd a variables de PHP. Por defecto,
            mysqlnd usará un lógica de referencia para evitar copiar y duplicar resultados contenidos en memoria.
            Para ciertos conjuntos de resultados con filas muy pequeñas, por ejemplo, la estrategia de copia puede
            reducir el uso total de memoria debido a que las variables de PHP de contienen resultados podrían ser
            liberadas antes (disponible con mysqlnd solamente, desde PHP 5.6.0)</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto de resultados almacenado en buffer o &false; si ocurrió un error.
  </para>
  <note>
   <para>
    <function>mysqli_store_result</function> devuelve &false; en caso de que la consulta
    no devuelve un conjunto de resultados (si la consulta era, por ejemplo, una sentencia
    INSERT). Esta función también devuelve &false; si la lectura del
    conjunto de resultados falla. Se puede comprobar si se ha obtenido un error comprobando
    si <function>mysqli_error</function> no devuelve una cadena vacía, si
    <function>mysqli_errno</function> devuelve un valor distinto de cero, o si
    <function>mysqli_field_count</function> devuelve un valor distinto de cero.
    Otra posible razón para que esta función devuelva &false; después
    de una llamada con éxito a <function>mysqli_query</function> puede ser un conjunto de
    resultados demasiado grande (no es posible asignarle memoria). Si
    <function>mysqli_field_count</function> devuelve un valor distinto de cero, la
    sentencia debería haber producido un conjunto de resultados no vacío.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Aunque es una buena práctica liberar la memoria usada por los resultados
    de una consulta usando la función <function>mysqli_free_result</function>,
    al transferir conjuntos de resultados grandes usando la función
    <function>mysqli_store_result</function> esto se convierte en particularmente
    importante.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Véase <function>mysqli_multi_query</function>.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_query</function></member>
    <member><function>mysqli_use_result</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
