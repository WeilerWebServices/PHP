<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322383 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysqli.thread-id" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::$thread_id</refname>
  <refname>mysqli_thread_id</refname>
  <refpurpose>Deveulve el ID del hilo de la conexión actual</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <fieldsynopsis><type>int</type><varname linkend="mysqli.thread-id">mysqli->thread_id</varname></fieldsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>int</type><methodname>mysqli_thread_id</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
  </methodsynopsis>
  <para>
   La función <function>mysqli_thread_id</function> devuelve el ID del
   hilo de la conexión actual, el cual puede ser destruido usando la
   función <function>mysqli_kill</function>. Si se pierde la conexión
   y se reconecta con <function>mysqli_ping</function>, el ID del hilo
   será otro. Por lo tanto se debería obtener el ID del hilo únicamente cuando se necesite.
  </para>
  <note>
   <para>
    El ID del hilo es asignado basándose en una conexión-por-conexión. Por lo tanto,
    si la conexión se pierde y se restablece se asignará un nuevo
    ID de hio.
   </para>
   <para>
    Para destruir una consulta en ejecución se puede usar el comando SQL
    <literal>KILL QUERY id_proceso</literal>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el ID del hilo de la conexión actual.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo <varname>$mysqli->thread_id</varname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "mi_usuario", "mi_contraseña", "world");

/* comprobar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", mysqli_connect_error());
    exit();
}

/* determinar el id del hilo */
$id_hilo = $mysqli->thread_id;

/* Destruir la conexión */
$mysqli->kill($id_hilo);

/* Esto debería producir un error */
if (!$mysqli->query("CREATE TABLE myCity LIKE City")) {
    printf("Error: %s\n", $mysqli->error);
    exit;
}

/* cerrar la conexión */
$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$enlace = mysqli_connect("localhost", "mi_usuario", "mi_contraseña", "world");

/* comprobar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", mysqli_connect_error());
    exit();
}

/* determinar el id del hilo */
$id_hilo = mysqli_thread_id($enlace);

/* Destruir la conexión */
mysqli_kill($enlace, $id_hilo);

/* Esto debería producir un error */
if (!mysqli_query($enlace, "CREATE TABLE myCity LIKE City")) {
    printf("Error: %s\n", mysqli_error($enlace));
    exit;
}

/* cerrar la conexión */
mysqli_close($enlace);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Error: MySQL server has gone away
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_kill</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
