<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332359 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::__construct</refname>
  <refname>mysqli_connect</refname>
  <refpurpose>Abre una nueva conexión al servidor de MySQL</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <constructorsynopsis>
   <methodname>mysqli::__construct</methodname>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter><initializer>ini_get("mysqli.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysqli.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter><initializer>ini_get("mysqli.default_pw")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>ini_get("mysqli.default_port")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter><initializer>ini_get("mysqli.default_socket")</initializer></methodparam>
  </constructorsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>mysqli</type><methodname>mysqli_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter><initializer>ini_get("mysqli.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysqli.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter><initializer>ini_get("mysqli.default_pw")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter><initializer>ini_get("mysqli.default_port")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter><initializer>ini_get("mysqli.default_socket")</initializer></methodparam>
  </methodsynopsis>
  <para>
   Abre una conexión al Servidor de MySQL que está en ejecución.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Puede ser o un nombre de host o una dirección IP. Pasando el valor &null;
       o la cadena "localhost" a este parámetro, se asumirá el host
       local. Cuando es posible, se usarán tuberías en lugar del protocolo
       TCP/IP.
      </para>
      <para>
       Anteponer <literal>p:</literal> al host, abre una conexión persistente.
       <function>mysqli_change_user</function> es automáticamente llamado en
       conexiones abiertas desde la caché de conexiones.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       El nombre de usuario de MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>passwd</parameter></term>
     <listitem>
      <para>
       Si no se proporciona o es &null;, el servidor MySQL intentará autentificar 
       el usuario solo con aquellos registros de usuarios que no tienen contraseña. Esto
       permite que un nombre de usuario ser usado con diferentes permisos (dependiendo de
       si se proporciona una contraseña o no).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dbname</parameter></term>
     <listitem>
      <para>
       Si se proporcioina, especificará la base de datos prederminada a usar cuando
       se realizan consultas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Especifica el número al que intentar conectar al servidor de MySQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Especifica el socket o la tubería con nombre que debería usarse.
      </para>
      <note>
       <para>
        Especificar el parámetro <parameter>socket</parameter> no
        determinará explicitamente el tipo de conexión a utilizar cuando
        se conecte al servidor MySQL. El modo de realizar la conexión a la
        base de datos MySQL es determinado por el parámetro
        <parameter>host</parameter>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto que representa la conexión al servidor MySQL.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Se añadió la capacidad de conexiones persistentes.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>mysqli::__construct</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli('localhost', 'mi_usuario', 'mi_contraseña', 'mi_bd');

/*
 * Esta es la forma OO "oficial" de hacerlo,
 * AUNQUE $connect_error estaba averiado hasta PHP 5.2.9 y 5.3.0.
 */
if ($mysqli->connect_error) {
    die('Error de Conexión (' . $mysqli->connect_errno . ') '
            . $mysqli->connect_error);
}

/*
 * Use esto en lugar de $connect_error si necesita asegurarse
 * de la compatibilidad con versiones de PHP anteriores a 5.2.9 y 5.3.0.
 */
if (mysqli_connect_error()) {
    die('Error de Conexión (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Éxito... ' . $mysqli->host_info . "\n";

$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.oop; cuando se extiende la clase mysqli</para>
   <programlisting role="php">
<![CDATA[
<?php

class foo_mysqli extends mysqli {
    public function __construct($host, $usuario, $contraseña, $bd) {
        parent::__construct($host, $usuario, $contraseña, $bd);

        if (mysqli_connect_error()) {
            die('Error de Conexión (' . mysqli_connect_errno() . ') '
                    . mysqli_connect_error());
        }
    }
}

$bd = new foo_mysqli('localhost', 'mi_usuario', 'mi_contraseña', 'mi_bd');

echo 'Éxito... ' . $bd->host_info . "\n";

$bd->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$enlace = mysqli_connect('localhost', 'mi_usuario', 'mi_contraseña', 'mi_bd');

if (!$enlace) {
    die('Error de Conexión (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Éxito... ' . mysqli_get_host_info($enlace) . "\n";

mysqli_close($enlace);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Éxito... MySQL host info: localhost via TCP/IP
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &mysqli.charset.note;
  <note>
   <para>
    Sólo para la sintaxis OO: Si una conexión falla se devuelve un objeto. Para comprobar 
    si la conexión falló, use la función
    <function>mysqli_connect_error</function> o la propiedad <link 
    linkend="mysqli.connect-error">mysqli->connect_error</link> como en 
    los ejemplos anteriores.
   </para>
  </note>
  <note>
   <para>
    Si es necesario establecer las opciones, tales como el tiempo de espera de conexión,
    se debe utilizar <function>mysqli_real_connect</function> en su lugar.
   </para>
  </note>
  <note>
   <para>
    Llamar al constructor sin parámetros es lo mismo que llamar a
    la función <function>mysqli_init</function>.
   </para>
  </note>
  <note>
   <para>
    El error "Can't create TCP/IP socket (10106)" normalmente significa que la
    directiva de configuración <link linkend="ini.variables-order">variables_order</link>
    no contiene el carácter <literal>E</literal>. En Windows, si el 
    entorno no es copiado, la variable de entorno <literal>SYSTEMROOT</literal>
    no estará disponible y PHP tendrá problemas al cargar Winsock.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_connect</function></member>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_connect_errno</function></member>
    <member><function>mysqli_connect_error</function></member>
    <member><function>mysqli_close</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
