<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 326024 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mysqli.real-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::real_escape_string</refname>
  <refname>mysqli_real_escape_string</refname>
  <refpurpose>Escapa los caracteres especiales de una cadena para usarla en una sentencia SQL, tomando en cuenta el conjunto de caracteres actual de la conexión</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <type>string</type><methodname>mysqli::escape_string</methodname>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>mysqli::real_escape_string</methodname>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>string</type><methodname>mysqli_real_escape_string</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>escapestr</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función se usa para crear una cadena SQL legal que se puede usar en una
   sentencia SQL. La cadena dada es codificada a una cadena SQL escapada,
   tomando en cuenta el conjunto de caracteres actual de la conexión.
  </para>
  <caution>
   <title>Seguridad: el conjunto de caracteres predeterminado</title>
   <para>
    El conjunto de caracteres debe ser establecido a nivel del servidor, o con
    la función <function>mysqli_set_charset</function> de la API para que afecte a
    <function>mysqli_real_escape_string</function>. Véase la sección de conceptos
    sobre <link linkend="mysqlinfo.concepts.charset">conjuntos de caracteres</link> para
    más información.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>escapestr</parameter></term>
     <listitem>
      <para>
       La cadena a escapar.
      </para>
      <para>
       Los caracteres codificados son <literal>NUL (ASCII 0), \n, \r, \, ', ", y
       Control-Z</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una cadena escapada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>mysqli::real_escape_string</methodname></title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("localhost", "mi_usuario", "mi_contraseña", "world");

/* verificar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", mysqli_connect_error());
    exit();
}

$mysqli->query("CREATE TEMPORARY TABLE miCiudad LIKE City");

$ciudad = "'s Hertogenbosch";

/* esta consulta fallará debido a que no escapa $ciudad */
if (!$mysqli->query("INSERT into miCiudad (Name) VALUES ('$ciudad')")) {
    printf("Error: %s\n", $mysqli->sqlstate);
}

$ciudad = $mysqli->real_escape_string($ciudad);

/* esta consulta con $ciudad escapada funcionará */
if ($mysqli->query("INSERT into miCiudad (Name) VALUES ('$ciudad')")) {
    printf("%d fila insertada.\n", $mysqli->affected_rows);
}

$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php
$enlace = mysqli_connect("localhost", "mi_usuario", "mi_contraseña", "world");

/* verificar la conexión */
if (mysqli_connect_errno()) {
    printf("Falló la conexión: %s\n", mysqli_connect_error());
    exit();
}

mysqli_query($enlace, "CREATE TEMPORARY TABLE miCiudad LIKE City");

$ciudad = "'s Hertogenbosch";

/* esta consulta fallará debido a que no escapa $ciudad */
if (!mysqli_query($enlace, "INSERT into miCiudad (Name) VALUES ('$ciudad')")) {
    printf("Error: %s\n", mysqli_sqlstate($enlace));
}

$ciudad = mysqli_real_escape_string($enlace, $ciudad);

/* esta consulta con $ciudad escapada funcionará */
if (mysqli_query($enlace, "INSERT into miCiudad (Name) VALUES ('$ciudad')")) {
    printf("%d fila insertada.\n", mysqli_affected_rows($enlace));
}

mysqli_close($enlace);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Error: 42000
1 fila insertada.
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Para quienes estén acostumbrados a usar <function>mysql_real_escape_string</function>,
    se ha de observar que el argumento de <function>mysqli_real_escape_string</function>
    difiere de lo que espera <function>mysql_real_escape_string</function>.
    El identificador <parameter>enlace</parameter> va primero en
    <function>mysqli_real_escape_string</function>, mientras que la cadena a escapar
    va primero en <function>mysql_real_escape_string</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_set_charset</function></member>
    <member><function>mysqli_character_set_name</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
