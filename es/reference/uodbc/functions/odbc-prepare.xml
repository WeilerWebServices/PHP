<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317502 Maintainer: seros Status: ready -->
<refentry xml:id="function.odbc-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>odbc_prepare</refname>
  <refpurpose>Prepara una declaración para su ejecución</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>odbc_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>query_string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Prepara una declaración para su ejecución. El identificador de resultado se puede usar
   después para ejecutar la declaración con <function>odbc_execute</function>.
  </para>
  <para>
   Algunas bases de datos (como IBM DB2, MS SQL Server, y Oracle) soportan
   procedimientos almacenados que aceptan parámetros de tipo IN, INOUT, y OUT como
   están definidos por la especificación ODBC. Sin embargo, el controlador ODBC Unificado
   actualmente sólo soporta parámetros de tipo IN para procedimientos almacenados.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection_id</parameter></term>
     <listitem>
      &odbc.connection.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query_string</parameter></term>
     <listitem>
      <para>
       La declaración de cadena de consulta que va a ser preparada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un identificador de resultado ODBC  si el comando SQL se preparó
   con éxito. Devuleve &false; si se produjo un error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>odbc_execute</function> y <function>odbc_prepare</function></title>
    <para>
     En el siguiente código, <varname>$éxito</varname> sólo será
     &true; si todos los parámetros de miproc son parámetros IN:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = 2;
$c = 3;
$stmt    = odbc_prepare($conn, 'CALL miproc(?,?,?)');
$éxito = odbc_execute($stmt, array($a, $b, $c));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Si se necesita llamar a un procedimiento almacenado usando parámetros INOUT o OUT,
   la solución recomendada es usar una extensión nativa para la base de datos
   (por ejemplo, <link linkend="ref.mssql">mssql</link> para MS SQL Server,
   o <link linkend="ref.mssql">oci8</link> para Oracle).
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>odbc_execute</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
