<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: jpberdejo Status: ready -->

<refentry xml:id="gearmanclient.jobstatus" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanClient::jobStatus</refname>
  <refname>gearman_job_status</refname>
  <refpurpose>Obtiene el estado de un trabajo en segundo plano</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (método):</para>
   <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>GearmanClient::jobStatus</methodname>
   <methodparam><type>string</type><parameter>job_handle</parameter></methodparam>
   </methodsynopsis>
   <para>
    Obtiene el estado de un trabajo en segundo plano para un manejador de trabajo
    dado. La información de estado estecifica si el trabajo es conocido, si está
    ejecutandose actualmente y el porcentaje completado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>job_handle</parameter></term>
     <listitem>
      <para>
       &gearman.parameter.jobhandle;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un array que contiene la información del estado para el trabajo correspondiente
   al manejador de trabajo indicado. El primer elemento del array es un boolean
   indicando si el trabajo es conocido, el segundo es un boolean indicando si
   el trabajo se está ejecutando y el tercer y cuarto elemento corresponden al
   numerador y denonimador del porcenaje de trabajo completado, respectivamente.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Monitorización del estado de un trabajo ejecutandose en segundo plano</title>
    <programlisting role="php">
<![CDATA[
<?php

/* Creamos el objeto */
$gmclient= new GearmanClient();

/* Añadimos el servidor por defecto */
$gmclient->addServer();

/* Ejecutamos el cliente "reverse" */
$job_handle = $gmclient->doBackground("reverse", "this is a test");

if ($gmclient->returnCode() != GEARMAN_SUCCESS)
{
  echo "bad return code\n";
  exit;
}

$done = false;
do
{
   sleep(3);
   $stat = $gmclient->jobStatus($job_handle);
   if (!$stat[0]) // the job is known so it is not done
      $done = true;
   echo "Running: " . ($stat[1] ? "true" : "false") . ", numerator: " . $stat[2] . ", denomintor: " . $stat[3] . "\n";
}
while(!$done);

echo "done!\n";

?>
]]>
     </programlisting>
     &example.outputs.similar;
     <screen>
<![CDATA[
Running: true, numerator: 3, denomintor: 14
Running: true, numerator: 6, denomintor: 14
Running: true, numerator: 9, denomintor: 14
Running: true, numerator: 12, denomintor: 14
Running: false, numerator: 0, denomintor: 0
done!
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::doStatus</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
