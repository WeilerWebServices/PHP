<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336760 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="weakref.acquire" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Weakref::acquire</refname>
  <refpurpose>Adquiere una referencia fuerte de un objeto</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Weakref::acquire</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Adquiere una referencia fuerte de un objeto, convirtiendo virtualmente la referencia
   débil en una fuerte.
  </para>
  <para>
   La instancia de <classname>Weakref</classname> guarda un contador de adquiridas
   interno para el seguimiento de referencias fuertes pendientes. Si la llamada a
   <methodname>Weakref::acquire</methodname> tiene éxito, este contador
   se incrementará en uno.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &true; si la referencia era válida y pudo ser convertida a una referencia
   fuerte, de lo contrario &false;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>Weakref::acquire</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
class MiClase {
    public function __destruct() {
        echo "¡Destruyendo el objeto!\n";
    }
}

$o1 = new MiClase;

$r1 = new Weakref($o1);

$r1->acquire();

echo "Destruyendo o1...\n";
unset($o1);

$o2 = $r1->get();

$r1->release();

echo "Destruyendo o2...\n";
unset($o2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Destruyendo  o1...
Destruyendo  o2...
¡Destruyendo el objeto!
]]>
    </screen>
   </example>
  </para>
  
  <para>
   <example>
    <title>Ejemplo de acquire/release anidados</title>
    <programlisting role="php">
<![CDATA[
<?php
class MiClase {
    public function __destruct() {
        echo "¡Destruyendo el objeto!\n";
    }
}

$o1 = new MiClase;

$r1 = new Weakref($o1);

echo "Adquiriendo...\n";
$r1->acquire();

echo "  Destruyendo...\n";
unset($o1);

echo "  Adquiriendo...\n";
$r1->acquire();

echo "    Adquiriendo...\n";
$r1->acquire();

echo "    Liberando...\n";
$r1->release();

echo "  Liberando...\n";
$r1->release();

echo "Liberando...\n";
$r1->release();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Adquiriendo...
  Destruyendo...
  Adquiriendo...
    Adquiriendo...
    Liberando...
  Liberando...
Liberando...
¡Destruyendo el objeto!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Weakref::release</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
