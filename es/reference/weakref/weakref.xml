<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347473 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<phpdoc:classref xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="class.weakref" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 <title>La clase WeakRef</title>
 <titleabbrev>WeakRef</titleabbrev>
 
 <partintro>
  
  <!-- {{{ weakref intro -->
  <section xml:id="weakref.intro">
   &reftitle.intro;
   <para>
    La clase WeakRef proporciona una vía para objetos sin evitar que el recolector de basura libere tales objetos.
    También proporciona una manera de convertir una referencia débil en una fuerte.
   </para>
    <note>
    <para>
     La clase <classname>WeakRef</classname> no debe confundirse con la clase
     <classname>WeakReference</classname>.
    </para>
   </note>
  </section>
  <!-- }}} -->
  
  <section xml:id="weakref.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>WeakRef</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    
    <classsynopsisinfo>
     <ooclass>
      <classname>WeakRef</classname>
     </ooclass>
     
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.weakref')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[1])" />
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.weakref')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   
  </section>
  <!-- {{{ weakref examples -->
  <section xml:id="weakref.examples">
   &reftitle.examples;
   <para>
    <example>
     <title>Ejemplo de uso de <classname>WeakRef</classname></title>
     <programlisting role="php">
<![CDATA[
<?php
class MiClase {
    public function __destruct() {
        echo "¡Destruyendo el objeto!\n";
    }
}

$o1 = new MiClase;

$r1 = new Weakref($o1);

if ($r1->valid()) {
    echo "¡El objeto aún existe!\n";
    var_dump($r1->get());
} else {
    echo "¡El objeto está muerto!\n";
}

unset($o1);

if ($r1->valid()) {
    echo "¡El objeto aún existe!\n";
    var_dump($r1->get());
} else {
    echo "¡El objeto está muerto!\n";
}
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
¡El objeto aún existe!
object(MiClase)#1 (0) {
}
¡Destruyendo el objeto!
¡El objeto está muerto!
]]>
     </screen>
    </example>
   </para>
  </section>
  <!-- }}} -->
  
 </partintro>
 
 &reference.weakref.entities.weakref;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

