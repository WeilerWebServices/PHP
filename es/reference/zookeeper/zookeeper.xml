<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346034 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.zookeeper"
 xmlns:phpdoc="http://php.net/ns/phpdoc"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns="http://docbook.org/ns/docbook">
 <title>La clase Zookeeper</title>
 <titleabbrev>Zookeeper</titleabbrev>
 
 <partintro>
 
<!-- {{{ Zookeeper intro -->
  <section xml:id="zookeeper.intro">
   &reftitle.intro;
   <para>
    Representa la sesi√≥n de ZooKeeper.
   </para>
  </section>
<!-- }}} -->
 
  <section xml:id="zookeeper.synopsis">
   &reftitle.classsynopsis;
 
<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Zookeeper</classname></ooclass>
 
<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Zookeeper</classname>
     </ooclass>
 
    </classsynopsisinfo>
<!-- }}} -->
 
<!-- {{{ Class methods -->
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.zookeeper')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.zookeeper')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback />
    </xi:include>
<!-- }}} -->

<!-- {{{ Class constants -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-read">PERM_READ</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-write">PERM_WRITE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-create">PERM_CREATE</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-delete">PERM_DELETE</varname>
     <initializer>8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-admin">PERM_ADMIN</varname>
     <initializer>16</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.perm-all">PERM_ALL</varname>
     <initializer>31</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.ephemeral">EPHEMERAL</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.sequence">SEQUENCE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.log-level-error">LOG_LEVEL_ERROR</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.log-level-warn">LOG_LEVEL_WARN</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.log-level-info">LOG_LEVEL_INFO</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.log-level-debug">LOG_LEVEL_DEBUG</varname>
     <initializer>4</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.expired-session-state">EXPIRED_SESSION_STATE</varname>
     <initializer>-112</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.auth-failed-state">AUTH_FAILED_STATE</varname>
     <initializer>-113</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.connecting-state">CONNECTING_STATE</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.associating-state">ASSOCIATING_STATE</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.connected-state">CONNECTED_STATE</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.readonly-state">READONLY_STATE</varname>
     <initializer>5</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.notconnected-state">NOTCONNECTED_STATE</varname>
     <initializer>999</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.created-event">CREATED_EVENT</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.deleted-event">DELETED_EVENT</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.changed-event">CHANGED_EVENT</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.child-event">CHILD_EVENT</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.session-event">SESSION_EVENT</varname>
     <initializer>-1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.notwatching-event">NOTWATCHING_EVENT</varname>
     <initializer>-2</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.systemerror">SYSTEMERROR</varname>
     <initializer>-1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.runtimeinconsistency">RUNTIMEINCONSISTENCY</varname>
     <initializer>-2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.datainconsistency">DATAINCONSISTENCY</varname>
     <initializer>-3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.connectionloss">CONNECTIONLOSS</varname>
     <initializer>-4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.marshallingerror">MARSHALLINGERROR</varname>
     <initializer>-5</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.unimplemented">UNIMPLEMENTED</varname>
     <initializer>-6</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.operationtimeout">OPERATIONTIMEOUT</varname>
     <initializer>-7</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.badarguments">BADARGUMENTS</varname>
     <initializer>-8</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.invalidstate">INVALIDSTATE</varname>
     <initializer>-9</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.newconfignoquorum">NEWCONFIGNOQUORUM</varname>
     <initializer>-13</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.reconfiginprogress">RECONFIGINPROGRESS</varname>
     <initializer>-14</initializer>
    </fieldsynopsis>

    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.ok">OK</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.apierror">APIERROR</varname>
     <initializer>-100</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.nonode">NONODE</varname>
     <initializer>-101</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.noauth">NOAUTH</varname>
     <initializer>-102</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.badversion">BADVERSION</varname>
     <initializer>-103</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.nochildrenforephemerals">NOCHILDRENFOREPHEMERALS</varname>
     <initializer>-108</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.nodeexists">NODEEXISTS</varname>
     <initializer>-110</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.notempty">NOTEMPTY</varname>
     <initializer>-111</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.sessionexpired">SESSIONEXPIRED</varname>
     <initializer>-112</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.invalidcallback">INVALIDCALLBACK</varname>
     <initializer>-113</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.invalidacl">INVALIDACL</varname>
     <initializer>-114</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.authfailed">AUTHFAILED</varname>
     <initializer>-115</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.closing">CLOSING</varname>
     <initializer>-116</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.nothing">NOTHING</varname>
     <initializer>-117</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.sessionmoved">SESSIONMOVED</varname>
     <initializer>-118</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.notreadonly">NOTREADONLY</varname>
     <initializer>-119</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.ephemeralonlocalsession">EPHEMERALONLOCALSESSION</varname>
     <initializer>-120</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.nowatcher">NOWATCHER</varname>
     <initializer>-121</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>integer</type>
     <varname linkend="zookeeper.class.constants.reconfigdisabled">RECONFIGDISABLED</varname>
     <initializer>-122</initializer>
    </fieldsynopsis>
<!-- }}} -->

   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ Constants -->
  <section xml:id="zookeeper.class.constants">
   &reftitle.constants;

<!-- {{{ Constants Permissions -->
   <section xml:id="zookeeper.class.constants.perms">
    <title>Permisos <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.class.constants.perm-read">
      <term><constant>Zookeeper::PERM_READ</constant></term>
      <listitem>
       <para>Puede leer el valor de los nodos y enumerar sus hijos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.perm-write">
      <term><constant>Zookeeper::PERM_WRITE</constant></term>
      <listitem>
       <para>Puede establecer el valor de los nodos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.perm-create">
      <term><constant>Zookeeper::PERM_CREATE</constant></term>
      <listitem>
       <para>Puede crear hijos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.perm-delete">
      <term><constant>Zookeeper::PERM_DELETE</constant></term>
      <listitem>
       <para>Puede eliminar hijos</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.perm-admin">
      <term><constant>Zookeeper::PERM_ADMIN</constant></term>
      <listitem>
       <para>Puede ejecutar set_acl()</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.perm-all">
      <term><constant>Zookeeper::PERM_ALL</constant></term>
      <listitem>
       <para>Todas las flags anteriores ORd together</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Create Flags -->
   <section xml:id="zookeeper.class.constants.create-flags">
    <title><acronym>ZooKeeper</acronym> Create Flags</title>
    <variablelist>

     <varlistentry xml:id="zookeeper.class.constants.ephemeral">
      <term><constant>Zookeeper::EPHEMERAL</constant></term>
      <listitem>
       <para>Si la flag Zookeeper::EPHEMERAL es establecida, el nodo se eliminar√° autom√°ticamente si la sesi√≥n del cliente desaparece.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.sequence">
      <term><constant>Zookeeper::SEQUENCE</constant></term>
      <listitem>
       <para>Si la flag Zookeeper::SEQUENCE flag es establecida, un n√∫mero de secuencia ascendente √∫nico se a√±ade al nombre de la ruta. El n√∫mero de secuencia es siempre de longitud fija de 10 d√≠gitos, 0 relleno.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Log Levels -->
   <section xml:id="zookeeper.class.constants.log-levels">
    <title><acronym>ZooKeeper</acronym> Log Levels</title>
    <variablelist>

     <varlistentry xml:id="zookeeper.class.constants.log-level-error">
      <term><constant>Zookeeper::LOG_LEVEL_ERROR</constant></term>
      <listitem>
       <para>Emite s√≥lo mensajes de error</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.log-level-warn">
      <term><constant>Zookeeper::LOG_LEVEL_WARN</constant></term>
      <listitem>
       <para>Emite errores/advertencias</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.log-level-info">
      <term><constant>Zookeeper::LOG_LEVEL_INFO</constant></term>
      <listitem>
       <para>Emite grandes mensajes de acci√≥n adem√°s de errores/advertencias</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.log-level-debug">
      <term><constant>Zookeeper::LOG_LEVEL_DEBUG</constant></term>
      <listitem>
       <para>Emite todo</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants States -->
   <section xml:id="zookeeper.class.constants.states">
    <title><acronym>ZooKeeper</acronym> States</title>
    <variablelist>

     <varlistentry xml:id="zookeeper.class.constants.expired-session-state">
      <term><constant>Zookeeper::EXPIRED_SESSION_STATE</constant></term>
      <listitem>
       <para>Conectado pero la sesi√≥n expir√≥</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.auth-failed-state">
      <term><constant>Zookeeper::AUTH_FAILED_STATE</constant></term>
      <listitem>
       <para>Conectado pero la autentificaci√≥n fall√≥</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.connecting-state">
      <term><constant>Zookeeper::CONNECTING_STATE</constant></term>
      <listitem>
       <para>Conectando</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.associating-state">
      <term><constant>Zookeeper::ASSOCIATING_STATE</constant></term>
      <listitem>
       <para>Asociando</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.connected-state">
      <term><constant>Zookeeper::CONNECTED_STATE</constant></term>
      <listitem>
       <para>Conectado</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.readonly-state">
      <term><constant>Zookeeper::READONLY_STATE</constant></term>
      <listitem>
       <para>TODO: Ay√∫danos a mejorar esta extensi√≥n.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.notconnected-state">
      <term><constant>Zookeeper::NOTCONNECTED_STATE</constant></term>
      <listitem>
       <para>La conexi√≥n fall√≥</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants Watch Types -->
   <section xml:id="zookeeper.class.constants.watch-types">
    <title>Tipos de relojes <acronym>ZooKeeper</acronym></title>
    <variablelist>

     <varlistentry xml:id="zookeeper.class.constants.created-event">
      <term><constant>Zookeeper::CREATED_EVENT</constant></term>
      <listitem>
       <para>Se ha creado un nodo</para>
       <para>Esto s√≥lo se genera por los relojes en nodos inexistentes. Estos relojes se ajustan usando Zookeeper::exists.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.deleted-event">
      <term><constant>Zookeeper::DELETED_EVENT</constant></term>
      <listitem>
       <para>Se ha eliminado un nodo</para>
       <para>Esto s√≥lo se genera por los relojes de los nodos. Estos relojes se ajustan usando Zookeeper::exists and Zookeeper::get.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.changed-event">
      <term><constant>Zookeeper::CHANGED_EVENT</constant></term>
      <listitem>
       <para>Un nodo ha cambiado</para>
       <para>Esto s√≥lo lo generan los relojes de los nodos. Estos relojes se ajustan usando Zookeeper::exists and Zookeeper::get.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.child-event">
      <term><constant>Zookeeper::CHILD_EVENT</constant></term>
      <listitem>
       <para>Un cambio como el ocurrido en la lista de hijos</para>
       <para>Esto s√≥lo se genera por los relojes en la lista de hijos de un nodo. Estos relojes se ajustan usando Zookeeper::getChildren.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.session-event">
      <term><constant>Zookeeper::SESSION_EVENT</constant></term>
      <listitem>
       <para>Se ha perdido una sesi√≥n</para>
       <para>Esto se genera cuando un cliente pierde el contacto o se reconecta con un servidor.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.notwatching-event">
      <term><constant>Zookeeper::NOTWATCHING_EVENT</constant></term>
      <listitem>
       <para>Se ha quitado un reloj</para>
       <para>Esto se genera cuando el servidor, por alguna raz√≥n, probablemente una limitaci√≥n de recursos, ya no vigila un nodo para un cliente.</para>
      </listitem>
     </varlistentry>

    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants System and Server-side Errors -->
   <section xml:id="zookeeper.class.constants.system-n-server-side-errors">
    <title>Errores del sistema y del servidor <acronym>ZooKeeper</acronym></title>
    <variablelist>
     <varlistentry xml:id="zookeeper.class.constants.systemerror">
      <term><constant>Zookeeper::SYSTEMERROR</constant></term>
      <listitem>
       <para>Esto nunca es lanzado por el servidor, no debe ser usado m√°s que para indicar un rango. Espec√≠ficamente c√≥digos de error mayores que este valor, pero menores que Zookeeper::APIERROR, son errores del sistema.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.runtimeinconsistency">
      <term><constant>Zookeeper::RUNTIMEINCONSISTENCY</constant></term>
      <listitem>
       <para>Se encontr√≥ una inconsistencia en el tiempo de ejecuci√≥n.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.datainconsistency">
      <term><constant>Zookeeper::DATAINCONSISTENCY</constant></term>
      <listitem>
       <para>Se encontr√≥ una inconsistencia en los datos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.connectionloss">
      <term><constant>Zookeeper::CONNECTIONLOSS</constant></term>
      <listitem>
       <para>Se ha perdido la conexi√≥n con el servidor.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.marshallingerror">
      <term><constant>Zookeeper::MARSHALLINGERROR</constant></term>
      <listitem>
       <para>Error al ordenar o desordenar los datos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.unimplemented">
      <term><constant>Zookeeper::UNIMPLEMENTED</constant></term>
      <listitem>
       <para>La operaci√≥n no se ha llevado a cabo.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.operationtimeout">
      <term><constant>Zookeeper::OPERATIONTIMEOUT</constant></term>
      <listitem>
       <para>Tiempo de espera de la operaci√≥n.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.badarguments">
      <term><constant>Zookeeper::BADARGUMENTS</constant></term>
      <listitem>
       <para>Argumentos inv√°lidos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.invalidstate">
      <term><constant>Zookeeper::INVALIDSTATE</constant></term>
      <listitem>
       <para>Estado de zhandle inv√°lido.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.newconfignoquorum">
      <term><constant>Zookeeper::NEWCONFIGNOQUORUM</constant></term>
      <listitem>
       <para>Ning√∫n grupo de nueva configuraci√≥n est√° conectado y actualizado con el l√≠der de la √∫ltima configuraci√≥n realizada. - intente invocar la reconfiguraci√≥n despu√©s de que los nuevos servidores est√©n conectados y sincronizados.</para>
       <para>Disponible a partir de ZooKeeper 3.5.0</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.reconfiginprogress">
      <term><constant>Zookeeper::RECONFIGINPROGRESS</constant></term>
      <listitem>
       <para>Se solicita una reconfiguraci√≥n mientras se est√° llevando a cabo otra reconfiguraci√≥n. Esto no se soporta actualmente. Por favor, vuelva a intentarlo..</para>
       <para>Disponible a partir de ZooKeeper 3.5.0</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

<!-- {{{ Constants API Errors -->
   <section xml:id="zookeeper.class.constants.api-errors">
    <title>Errores de la API <acronym>ZooKeeper</acronym></title>
    <variablelist>
     <varlistentry xml:id="zookeeper.class.constants.ok">
      <term><constant>Zookeeper::OK</constant></term>
      <listitem>
       <para>Todo est√° bien.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.apierror">
      <term><constant>Zookeeper::APIERROR</constant></term>
      <listitem>
       <para>Esto nunca es lanzado por el servidor, no debe usarse m√°s que para indicar un rango. Espec√≠ficamente los c√≥digos de error mayores que este valor son errores de la API (mientras que los valores inferiores a √©ste indican una Zookeeper::SYSTEMERROR).</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.nonode">
      <term><constant>Zookeeper::NONODE</constant></term>
      <listitem>
       <para>El nodo no existe.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.noauth">
      <term><constant>Zookeeper::NOAUTH</constant></term>
      <listitem>
       <para>No est√° autentificado.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.badversion">
      <term><constant>Zookeeper::BADVERSION</constant></term>
      <listitem>
       <para>Conflicto de versiones.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.nochildrenforephemerals">
      <term><constant>Zookeeper::NOCHILDRENFOREPHEMERALS</constant></term>
      <listitem>
       <para>Los nodos ef√≠meros pueden no tener hijos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.nodeexists">
      <term><constant>Zookeeper::NODEEXISTS</constant></term>
      <listitem>
       <para>El nodo ya existe.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.notempty">
      <term><constant>Zookeeper::NOTEMPTY</constant></term>
      <listitem>
       <para>El nodo tiene hijos.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.sessionexpired">
      <term><constant>Zookeeper::SESSIONEXPIRED</constant></term>
      <listitem>
       <para>La sesi√≥n ha expirado por el servidor.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.invalidcallback">
      <term><constant>Zookeeper::INVALIDCALLBACK</constant></term>
      <listitem>
       <para>Se especific√≥ una devoluci√≥n de llamada inv√°lida.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.invalidacl">
      <term><constant>Zookeeper::INVALIDACL</constant></term>
      <listitem>
       <para>Se especific√≥ un LCA inv√°lido.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.authfailed">
      <term><constant>Zookeeper::AUTHFAILED</constant></term>
      <listitem>
       <para>La autentificaci√≥n del cliente fall√≥.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.closing">
      <term><constant>Zookeeper::CLOSING</constant></term>
      <listitem>
       <para>ZooKeeper est√° cerrando.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.nothing">
      <term><constant>Zookeeper::NOTHING</constant></term>
      <listitem>
       <para>(no error) No hay respuestas del servidor al proceso.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.sessionmoved">
      <term><constant>Zookeeper::SESSIONMOVED</constant></term>
      <listitem>
       <para>La sesi√≥n se movi√≥ a otro servidor, as√≠ que la operaci√≥n es ignorada.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.notreadonly">
      <term><constant>Zookeeper::NOTREADONLY</constant></term>
      <listitem>
       <para>La solicitud de cambio de estado se pasa al servidor de s√≥lo lectura.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.ephemeralonlocalsession">
      <term><constant>Zookeeper::EPHEMERALONLOCALSESSION</constant></term>
      <listitem>
       <para>Intentar crear un nodo ef√≠mero en una sesi√≥n local.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.nowatcher">
      <term><constant>Zookeeper::NOWATCHER</constant></term>
      <listitem>
       <para>El observador no pudo ser encontrado.</para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="zookeeper.class.constants.reconfigdisabled">
      <term><constant>Zookeeper::RECONFIGDISABLED</constant></term>
      <listitem>
       <para>Intentar realizar una operaci√≥n de reconfiguraci√≥n cuando la funci√≥n de reconfiguraci√≥n est√° desactivada.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
<!-- }}} -->

  </section>

<!-- }}} -->
 
 </partintro>
 
 &reference.zookeeper.entities.zookeeper;
 
</phpdoc:classref>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

