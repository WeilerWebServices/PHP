<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324190 Maintainer: yago Status: ready -->
<!-- Reviewed: no Maintainer: yago -->
 
<refentry xml:id="function.yaml-parse-url" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>yaml_parse_url</refname>
  <refpurpose>Analiza una secuencia de texto Yaml desde una URL</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>yaml_parse_url</methodname>
   <methodparam><type>string</type><parameter>url</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>pos</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">ndocs</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>callbacks</parameter></methodparam>
  </methodsynopsis>
  <para>
   Convierte toda o parte de una secuencia de texto en YAML a una variable en PHP.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>url</parameter></term>
     <listitem>
      <para>
       La dirección <parameter>url</parameter> debe tener el formato "scheme://...". PHP
       buscará el controlador de protocolos (también conocido como wrapper) para el
       esquema especificado. Si no hay wrappers registrados para este protocolo, PHP lanzará
       un aviso para ayudar a indentificar posibles problemas con el script y
       continuar como si el nombre del fichero hiciera referencia a un fichero normal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pos</parameter></term>
     <listitem>
      <para>
       Documento YAML a extraer desde la secuencia de texto (<literal>-1</literal> para analizar todos
       los documentos, <literal>0</literal> solo para el primer documento, etc).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ndocs</parameter></term>
     <listitem>
      <para>
       Si se facilita <parameter>ndocs</parameter>, se completará con el
       número de documentos encontrados en la secuencia de texto.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callbacks</parameter></term>
     <listitem>
      <para>
       Controlador de contenido para los nodos YAML. Es un <type>array</type> associativo de 
       etiquetas YAML =&gt; asociando sus <type>callback</type> correspondientes. Ver
       <link linkend="yaml.callbacks.parse">Analizar callbacks</link> para más información
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el valor codificado de <parameter>input</parameter> en el formato
   apropiado de PHP&return.falseforfailure;. Si el valor de <parameter>pos</parameter> es <literal>-1</literal> devolverá un
   <type>array</type> con una entrada por cada documento encontrado en el texto.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>yaml_parse</function></member>
    <member><function>yaml_parse_file</function></member>
    <member><function>yaml_emit</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
