<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="sdo-das-relational.applychanges" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_Relational::applyChanges</refname>
  <refpurpose>
   Aplicar los cambios hechos a un grafo de datos en la base de datos
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type>
   <methodname>SDO_DAS_Relational::applyChanges</methodname>
   <methodparam>
    <type>PDO</type>
    <parameter>database_handle</parameter>
   </methodparam>
   <methodparam>
    <type>SDODataObject</type>
    <parameter>root_data_object</parameter>
   </methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Dado un gestor de bases de datos PDO y el objeto especial raíz de un grafo de datos,
   examina el resumen de cambios del grafo de datos y aplica los cambios
   a la base de datos.
   Los cambios que puede aplicar pueden ser creaciones de objetos de datos,
   eliminación de objetos de datos, y modificaciones de propiedades de objetos de datos.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>PDO_database_handle</term>
     <listitem>
      <para>
       Construido usando la extensión PDO. 
       Una línea típica para construir un gestor de bases de datos PDO podría parecerse a esta:
       <programlisting role="php" xml:id="sdodasrel.ac.examples.pdo">
<![CDATA[
$dbh = new PDO("mysql:dbname=COMPANYDB;host=localhost",DATABASE_USER,DATABASE_PASSWORD);
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>root_data_object</term>
     <listitem>
      <para>
       El objeto especial raíz que está en el nivel más alto del grafo de datos SDO.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Ninguno.
   Observe, sin embargo, que el grafo de datos que fue pasado aún está intacto y utilizable.
   Además, si los objetos de datos fueron creados y vueltos a escribir en una
   tabla con claves primarias autogeneradas,
   esas claves primarias serán ahora establecidas en los objetos de datos.
   Si los cambios fueron escritos con éxito,
   el resumen de cambios asiciado con el grafo de datos
   tendrá que ser limpiado,
   por lo que es posible ahora hacer más cambios al
   grafo de datos y aplicar esos cambios por turno.
   De esta manera es posible trabajar con el mismo grafo de datos
   y aplicar los cambios repetidamente.
  </para>
 </refsect1>



 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>SDO_DAS_Relational::applyChanges</function>
   puede lanzar una excepción <classname>SDO_DAS_Relational_Exception</classname> si no es
   capaz de aplicar todos los cambios correctamente.
  </para>
  <para>
   El DAS Relacional inicia una transacción de base de datos antes
   de empezar a aplicar los cambios, y consignará
   la transacción solamente si todos tienen éxito.
   El DAS Relacional genera actualización cualificada y las sentencias delete
   que contienen una cláusula where que especifica que la fila que va a ser
   actualizada o eliminada debe contener los mismos valores que tenía
   cuando los datos fueron recuperados por primera vez.
   Así es como la concurrencia optimista está implementada.
   Si cualquiera de las sentencias de actualización o eliminación cualificadas falla al actualizar o
   al eliminar su fila objetivo, pueder ser a causa de que los datos han sido alterados
   en la base de datos en el transcurso.
   En cualquier evento, si cualquier actualización falla por cualquier razón,
   la transacción se retrotrae y se lanza una excepción.
   La excepción contendrá la sentencia SQL generada que falló.
  </para>
  
  <para>
   El DAS Relacional también captura cualquier excepción de PDO y obtiene información
   de diagnóstico de PSO que se incluye en una
   <classname>SDO_DAS_Relational_Exception</classname>, la cual luego es lanzada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Por favor, véase la sección
   <link linkend="sdodasrel.examples">Ejemplos</link>
   en la información general sobre los DAS Relacionales
   para más ejemplos de llamar a este método.
   Véase tambíen la sección sobre
   <link linkend="sdodasrel.tracing">Rastreo</link>
   para ver qué sentencias SQL son
   generadas por el DAS Relacional.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
