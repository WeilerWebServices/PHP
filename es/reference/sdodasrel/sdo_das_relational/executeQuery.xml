<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="sdo-das-relational.executequery" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_Relational::executeQuery</refname>
  <refpurpose>
   Ejecutar una consulta SQL dada en una base de datos relacional
   y devolver los resultados como un grafo de datos normalizado
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDODataObject</type>
   <methodname>SDO_DAS_Relational::executeQuery</methodname>
   <methodparam>
    <type>PDO</type>
    <parameter>database_handle</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>SQL_statement</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>array</type>
    <parameter>column_specifier</parameter>
   </methodparam>
  </methodsynopsis>

  &warn.experimental.func;

  <para>
   Ejecuta una consulta dada en una base de datos relacional,
   utilizando el gestor de bases de datos PDO proporcionado.
   Usa el modelo que construye desde los metadatos
   para interpretar el conjunto de resultados.
   Devuelve un grafo de datos.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>PDO_database_handle</term>
     <listitem>
      <para>
       Construido utilizando la extensión PDO.
       Una línea típica para construir un gestor de bases de datos PDO puede
       ser así:
       <programlisting role="php" xml:id="sdodasrel.eq.examples.pdo">
<![CDATA[
$dbh = new PDO("mysql:dbname=COMPANYDB;host=localhost",DATABASE_USER,DATABASE_PASSWORD);
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>SQL_statement</term>
     <listitem>
      <para>
       La sentencia SQL a ejecutar en la base de datos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>column_specifier</term>
     <listitem>
      <para>
       El DAS Relacional para examinar el conjunto de resultados y
       para cada columna, conocer de qué tabla y de qué columna de
       esa tabla proviene.
       En algunas circunstancias puede encontrar esta información por sí mismo,
       pero en otras no puede.
       En estos casos es necesario una especificador de columna,
       el cual es un array que identifica las columnas.
       Cada entrada del array es simplemente una cadena en la forma
       <varname>nombre-tabla.nombre_columna</varname>.
      </para>
          

      <para>
       El especificador de columna es necesario cuando existen nombre
       de columnas duplicados en los metadatos de la base de datos.
       Por ejemplo, en la base de datos usada en los ejemplos,
       todas las tablas tienen una
       columna
       <varname>id</varname>
       y una
       <varname>name</varname>.
       Cuando el DAS Relacional recupera el conjunto de resultados desde PDO,
       éste puede hacerlo con el atributo PDO_FETCH_ASSOC, 
       lo que causará que las columnas del conjunto de resultados
       sean etiquetadas con el nombre de columna, pero no distinguitá
       duplicados.
       Por lo tanto, esto solamente funcionará cuando no haya posibles
       duplicados en el conjunto de resultados.
      </para>
          
      <para>
       Para resumir, se ha de especificar un especificador de columna siempre que
       exista cualquier duda sobre cuales columnas pertenecen a cual tabla y
       solamente omitirlo cuando cada nombre de columna de los metadatos de la base de datos sea único.
      </para>
          
      <para>
       Todos los ejemplo en la sección
       <link linkend="sdodasrel.examples">Ejemplos</link>
       usan un especificador de columna.
       Existe un ejemplo en el directorio
       <filename>Escenarios</filename>
       de la instalación que no lo hace:
       aquél que trabajo simplemente con la tabla empleado,
       y ya que trabaja con sólo una tabla,
       no pueden existir nombres de columnas duplicados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un grafo de datos.
   Especialmente, devuelve un objeto raíz de un tipo especial.
   Bajo este objeto raíz estarán los datos del conjunto de resultados.
   El objeto raíz tendrá una propiedad de contención polievaluada
   con el mismo nombre que el tipo raíz de la aplicación
   especificado en el constructor,
   y esa propiedad contendrá uno o más objetos de datos
   del tipo raíz de la aplicación.
  </para>
  <para>
   En el caso en que la consulta no devuelva datos,
   aún se devolverá el objeto raíz especial pero
   la propiedad de contención del tipo raíz de la aplicación estará vacía.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>SDO_DAS_Relational::executeQuery</function>
   puede lanzar una excepción <classname>SDO_DAS_Relational_Exception</classname> si no es capaz
   de construir el grafo de datos correctamente.
   Esto puede suceder por varias razones:
   por ejemplo, si encuentra que no tiene claves primarias
   en el conjunto de resultados para todos los objetos.
   También atrapa cualquer excepción de PDO y obtiene información
   de diagnóstico de PDO, la cual incluye en una excepción
   <classname>SDO_DAS_Relational_Exception</classname> que entoces lanza.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Véase la sección
   <link linkend="sdodasrel.examples">Ejemplos</link>
   de la información general sobre el
   DAS Relacional para muchos ejemplos de invocar a este método.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
