<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341285 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<chapter xml:id="sdo.setup" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.setup;
 
 <!-- {{{ Requirements -->
 <section xml:id="sdo.requirements">
  &reftitle.required;
  <para>
   La extensión SDO requiere la versión 5.1.0 o superior de PHP. También requiere la
   biblioteca libxml2. Normalmente libxml2 ya estará instalada, pero si no lo
   está, se puede descargar desde
   <link xlink:href="&url.libxml;">&url.libxml;</link>.
  </para>
 </section>
 <!-- }}} -->
 
 <!-- {{{ Installation -->
 <section xml:id="sdo.installation">
  &reftitle.install;
  <para>
   &pecl.info;
   <link xlink:href="&url.pecl.package;sca_sdo">&url.pecl.package;sca_sdo</link>.
  </para>
  <note>
   <para>
    Las versiones antiguas de la extensión SDO necesitaban una biblioteca compartida
    aparte para el DAS de XML. Esto ahora está obsoleto y cualquier referencia a
    <filename>php_sdo_das_xml.dll</filename> o
    <filename>sdo_das_xml.so</filename> debería ser eliminada de fichero &php.ini;.
   </para>
  </note>
  <procedure xml:id="sdo.install.unix">
   <title>Sistemas Unix</title>
   <step>
    <para>
     Los tres componentes de SDO -el núcleo de SDO, el DAS de XML y el
     DAS Relacional- están empaquetados juntos con la <literal>Arquitectura de Componentes
     de Servicio (en inglés Service Component Architecture - SCA)</literal> dentro de un proyecto de PECL, SCA_SDO, por lo que se puede
     descargar SCA y las tres partes del SDO con el comando:
     <screen>
<![CDATA[
pecl install SCA_SDO
]]>
     </screen>
    </para>
    <para>
     Este comando construirá la biblioteca compartida SDO además de
     instalar los ficheros de PHP que componen SCA y el DAS Relacional
     de SDO.
    </para>
    <para>
     Si se quiere usar la última versión beta, ejecute en su lugar:
     <screen>
<![CDATA[
pecl install SCA_SDO-beta
]]>
     </screen>
    </para>
   </step>
   <step>
    <para>
     El comando <command>pecl</command> instala automáticamente el módulo
     SDO dentro del directorio de extensiones de PHP. Para habilitar la extensión SDO
     se debe añadir la siguiente línea al fichero &php.ini;:
     <screen>
<![CDATA[
extension=sdo.so
]]>
     </screen>
    </para>
    <para>
     Para más información sobre la construcción de paquetes PECL, consulte la sección
     <link linkend="install.pecl">Instalación de PECL</link>
     del manual.
    </para>
   </step>
  </procedure>
  
  <procedure xml:id="sdo.build.linux.steps">
   <title>Construir SDO bajo Linux</title>
   <para>
    Esta sección describe cómo construir el núcleo de SDO y el DAS de XML bajo
    Linux. Solamente sería necesario saber hacer esto si se desea
    contruir una versión reciente que se haya verificado en SVN.
   </para>
   <step>
    <para>
     Cambie al directorio de extensiones principal:
     <command>cd &lt; donde está el código de sdo &gt;</command>
    </para>
   </step>
   <step>
    <para>
     Ejecute <command>phpize</command>, que configurará el entorno
     para compilar SDO.
    </para>
   </step>
   <step>
    <para>
     Lo siguiente es ejecutar <command>./configure; make; make install</command>.
     Observe que podría ser necesario identificarse como root para instalar la extensión.
    </para>
   </step>
   <step>
    <para>
     Asegúrese de que el módulo es cargado por PHP, añadiendo
     <filename>extension=sdo.so</filename>
     al fichero &php.ini;.
    </para>
   </step>
  </procedure>
 </section>
 <!-- }}} -->
 
 <!-- {{{ Configuration -->
 <section xml:id="sdo.configuration">
  &reftitle.runtime;
  &no.config;
 </section>
 <!-- }}} -->
 
 <!-- {{{ Resources -->
 <section xml:id="sdo.resources">
  &reftitle.resources;
  &no.resource;
 </section>
 <!-- }}} -->
 
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

