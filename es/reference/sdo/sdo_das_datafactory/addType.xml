<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321873 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sdo-das-datafactory.addtype" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_DataFactory::addType</refname>
  <refpurpose>
   Añadir un nuevo tipo a un modelo
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>SDO_DAS_DataFactory::addType</methodname>
   <methodparam><type>string</type><parameter>type_namespace_uri</parameter></methodparam>
   <methodparam><type>string</type><parameter>type_name</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  
  &warn.experimental.func;
  
  <para>
   Añade un nuevo tipo al SDO_DAS_DataFactory, 
   definido por su espacio de nombres y nombre de tipo.
   El tipo se convierte en parte del modelo de los objetos de datos
   que la fábriva de datos puede crear.
  </para>
  
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>type_namespace_uri</parameter>
     </term>
     <listitem>
      <para>
       El espacio de nombres del tipo
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>type_name</parameter>
     </term>
     <listitem>
      <para>
       El nombre del tipo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem><para> Este array contiene un o más pares clave=&gt;valor para establecer valores de
      atributos del tipo. Las palabras clave opcionales son:</para>
      <variablelist>
       <varlistentry>
        <term><parameter>open</parameter></term>
        <listitem>
         <para>Una bandera para indicar si el tipo es abierto.
          Un objeto SDO_DataObject cuyo tipo es abierto puede tener propiedades añadidas a
          ellas que no están descritas por el tipo. Este capacidad se usa para
          el soporte para trabajar con documentos XML documents cuyo esquema soporta contenido abierto
          como el descrito por un elemento &lt;xsd:any&gt;.
          El valor por defecto es 'false'.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <parameter>sequenced</parameter>
        </term>
        <listitem>
         <para> Una bandera para indicar si el tipo es secuenciado.
          Los tipos secuenciados tienen el orden de las propiedades preservado
          y pueden contener texto no estructurado.
          El valor por defecto es 'false'.
          Para más información sobre tipos secuenciados véase la sección sobre
          <link linkend="sdo.sample.sequence">Trabajar con Objetos de Datos
           Secuenciados</link>.
         </para>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <parameter>basetype</parameter>
        </term>
        <listitem>
         <para> Si se especifica, un array de URIs de espacios de nombres y cadenas de nombres de tipo del
          tipo desde el cual deriva este tipo.
          Un ejemplo del uso de tipos básicos es cuando un tipo deriva de un esquema
          XML que hereda de otro tipo usando &lt;extension base="..."&gt;.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   None.
  </para>
 </refsect1>
 
 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->
 
 
 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de
     <function>SDO_DAS_DataFactory::addType</function>
    </title>
    <para>
     Lo siguiente añade un nuevo tipo de objeto de datos 'CompanyType'
     donde ese tipo pertenece al espacio de nombres 'CompanyNS'.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
  $df->addType('CompanyNS', 'CompanyType');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 
 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
