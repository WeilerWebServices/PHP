<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sdo-das-xml.createdocument" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SDO_DAS_XML::createDocument</refname>
  <refpurpose>
   Crea un objeto Documento XML desde cero, sin la necesidad de cargar un documento desde un fichero o un string
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDO_DAS_XML_Document</type><methodname>SDO_DAS_XML::createDocument</methodname>
   <methodparam choice="opt"><type>string</type><parameter>document_element_name</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>SDO_DAS_XML_Document</type><methodname>SDO_DAS_XML::createDocument</methodname>
   <methodparam><type>string</type><parameter>document_element_namespace_URI</parameter></methodparam>
   <methodparam><type>string</type><parameter>document_element_name</parameter></methodparam>
   <methodparam choice="opt"><type>SDO_DataObject</type><parameter>dataobject</parameter></methodparam>
  </methodsynopsis>

  <para>
   Crea un objeto Documento XML. Contrendrá un único elemento raíz vacío
   en el que no se han establecido ninguna de las propiedades.
   El propósito de esta llamada es permitir a una aplicación crear
   un documento XML desde cero sin la necesidad de cargar un
   documento desde un fichero o un string. El documento que se crea
   será como si un documento que ha sido cargado contuviera un único
   elemento documento vacío sin atributos establecidos o elementos dentro de él.
  </para>
  <para>
   Puede ser necesario indicarle a <function>createDocument</function> 
   cuál es el elemento documento.
   Esto no será necesario en casos sencillos.
   Cuando no exista ambigüedad no será necesario pasar ningún parámetro al
   método.
   Sin embargo, es posible cargar más un fichero de esquema en el mismo DAS XML,
   y en este caso puede haber más de un elemento documento posible definido:
   además, incluso es posible que hayan dos elementos documentos posibles que
   difieran únicamente en el espacio de nombres.
   Para lidiar con estos casos es posible especificar al médoto el nombre
   del elemento documento, o éste y el espacio de nombres.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>document_element_name</parameter>
     </term>
     <listitem>
      <para>
       El nombre del elemento documento. Sólo es necesario si
       existe más de una posibilidad.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>document_element_namespace_URI</parameter>
     </term>
     <listitem>
      <para>
       La parte del espacio de nombre del nombre del elemento documento. Sólo es necesario si existe
       más de un elemento documento posible con el mismo nombre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>dataobject</parameter>
     </term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto SDO_XML_DAS_Document en caso de éxito.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>SDO_UnsupportedOperationException</parameter>
     </term>
     <listitem>
      <para>
       Lanzada si se pasa un nombre de elemento, o éste y un URI de espacio de nombres,
       pero no se encuentra en el modelo subyacente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here
       <entry>Description of change
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->


 <!-- Use when examples exist
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A <function>SDO_DAS_XML::createDataObject</function> example</title>
    <para>
     Any text that describes the purpose of the example, or
     what goes on in the example should go here (inside the
     <example> tag, not out
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if ($anexample === true) {
    echo 'Use the PEAR Coding Standards';
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Use the PEAR Coding Standards
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 -->


 <!-- Use when adding See Also links
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function></function></member>
    <member>Or <link linkend="somethingelse">something else</link></member>
   </simplelist>
  </para>
 </refsect1>
 -->


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
