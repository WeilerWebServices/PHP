<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321906 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="ref.sdo-das-xml" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&Functions; del DAS XML de SDO</title>

 <partintro>
  <!-- FIXME: Upgrade to the new-oo-markup -->
  <!-- class definition section -->
  <section xml:id="sdo-das-xml.classes"><!-- {{{ -->
  &reftitle.classes;
   <para>
    El DAS XML proporciona dos clases principales.
    La primera es SDO_DAS_XML, la cual es la clase principal usada para obtener los
    datos de la fuente XML y para volver a escribir los datos.
    La segunda es la clase SDO_DAS_XML_Document,
    que representa los datos del documento XML.
   </para>
   <para>
    También hay algunas clases de excepciones que pueden ser lanzadas
    si se encuentran errores al buscar o analizar los ficheros
    xsd o xml. 
   </para>

   <section xml:id="class.sdo-das-xml"><!-- {{{ -->
    <title>
     <classname>SDO_DAS_XML</classname>
    </title>
    <para>
     Esta es la clase principal del DAS XML,
     que se utiliza para obtener los datos de la fuente xml
     así como para volver a escribir los datos.
     Y sus métodos para cargar y guardar ficheros xml:
    </para>
    <section><!-- {{{ -->
     &reftitle.methods;

     <itemizedlist>

      <listitem>
       <para>
        <link linkend="sdo-das-xml.create">create</link>
        Este es un método estático disponible en la clase SDO_DAS_XML.
        Usado para construir un objeto SDO_DAS_XML.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.addtypes">addTypes</link>
        Funciona casi de la misma manera que <function>create</function> pero se usa
        para añadir el contenido de un segundo o subsiguiente fichero de esquema a
        un DAS XML que ya ha sido creado.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.createdataobject">createDataObject</link>
        Se puede usar para construir un objeto de datos SDO de un tipo dado.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.createdocument">createDocument</link>
        Se puede usar para construir un objeto Documento XML desde cero.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.loadfile">loadFile</link>
        Carga el documento de instancia de xml desde un fichero.
        Este fichero puede estar en el sistema de ficheros local o en un host remoto.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.loadstring">loadString</link>
        Lo mismo que el método de arriba.
        Carga la instancia xml que está disponible como cadena.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.savefile">saveFile</link>
        Guarda un objeto SDO_DAS_XML_Document como un fichero xml.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml.savestring">saveString</link>
        Guarda un objeto SDO_DAS_XML_Document como una cadena xml.
       </para>
      </listitem>

     </itemizedlist>

    </section><!-- }}} -->
   </section><!-- }}} -->


   <section xml:id="class.sdo-das-xml-document"><!-- {{{ -->
    <title>
     <classname>SDO_DAS_XML_Document</classname>
    </title>
    <para>
     Esta clase se usa para obtener el nombre y el espacio de nombres del elemento documento,
     y para obtener el objeto de datos raíz del documento.
     Por último, también se usa para establecer la versión de XML y la codificación
     de un documento en la salida.
    </para>
    <section><!-- {{{ -->
     &reftitle.methods;
     <itemizedlist>
      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.getrootdataobject">getRootDataObject</link>
        Obtiene el DataObject raíz.
       </para>
      </listitem>
      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.getrootelementname">getRootElementName</link>
        Obtiene el nombre del DataObject raíz.
       </para>
      </listitem>

      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.getrootelementuri">getRootElementURI</link>
        Obtiene el URI del DataObject raíz.
       </para>
      </listitem>

      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.setencoding">setEncoding</link>
        Establece la cadena de codificaicon con el valor dado.
       </para>
      </listitem>

      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.setxmldeclaration">setXMLDeclaraion</link>
        Para establecer/desestablecer la declaración xml.
       </para>
      </listitem>

      <listitem>
       <para>
        <link linkend="sdo-das-xml-document.setxmlversion">setXMLVersion</link>
        Establece la versión de cml con el valor dado.
       </para>
      </listitem>
     </itemizedlist>
    </section><!-- }}} -->
   </section><!-- }}} -->

   <section xml:id="class.sdo-das-xml-parserexception">
    <title>
     <classname>SDO_DAS_XML_ParserException</classname>
    </title>
    <para>
     Es una subclase de
     <classname>SDO_Exception</classname>.
     Lanzada por cualquier error de análisis al cargar el fichero xsd/xml.
    </para>
   </section>

   <section xml:id="class.sdo-das-xml-fileexception">
    <title>
     <classname>SDO_DAS_XML_FileException</classname>
    </title>
    <para>
     Es una subclase de
     <classname>SDO_Exception</classname>.
     Lanzada por cualquier método que carga datos desde un fichero, cuando no se
     puede encontrar el fichero.
    </para>
   </section>

  </section>

  <section xml:id="sdo-das-xml.limitations">
   <title>Limitaciones en comparación con la especificación 2.0 de SDO</title>
   <para>
    La 
    <link xlink:href="&url.ibm.sdo;">especificación 2.0 de SDO</link>
    define la referenciación entre los tipos XML y los tipos SDO.
    Con SDO de Java, esta referenciación es implementada por XMLHelper.
    Con SDO para PHP, esta referenciación es implementada por el
    Servicio de Acceso a Datos XML.
    El DAS XML implementa la referenciación descrita en la
    especificación 2.0 de SDO con algunas restricciones.
    Una lista detallada de las limitaciones es:
   </para>

   <procedure xml:id="sdo-das-xml.limitations.simpletypes">
    <title>Tipos Simpes de XML</title>
    <step>
     <para>
      Tipo Simple con sdoJava:instanceClass
      - no se proporciona un equivalente con PHP.
     </para>
    </step>
    <step>
     <para>
      Tipo Simple con sdoJava:extendedInstanceClass
      - no se proporciona un equivalente con PHP.
     </para>
    </step>
    <step>
     <para>
      Tipo Simple con lista de itemType.
     </para>
    </step>
    <step>
     <para>
      Tipo Simple con unión.
     </para>
    </step>
   </procedure>

   <procedure xml:id="sdo-das-xml.limitations.complextypes">
    <title>Tipos Complejos de XML</title>
    <step>
     <para>
      Tipo Complejo con sdo:aliasName
      - no hay soporte de PHP para alias de Tipo SDO.
     </para>
    </step>
   </procedure>

   <procedure xml:id="sdo-das-xml.limitations.attribute">
    <title>XSD Attribute</title>
    <step>
     <para>
      Atributo con sdo:aliasName
      - no hay soporte de PHP para alias de propiedades SDO.
     </para>
    </step>
    <step>
     <para>
      Atribuo con valor predeterminado
      - no hay soporte de PHP para valores predeterminados de propiedades SDO.
     </para>
    </step>
    <step>
     <para>
      Atributo con valor fijo
      - no hay soporte de PHP para propiedades de sólo lectura o valores predeterminados de SDO.
     </para>
    </step>
    <step>
     <para>
      Atributo referenciando a DataObject con
      sdo:propertyType - ho hay soporte para sdo:propertyType="...".
     </para>
    </step>
    <step>
     <para>
      Atributo con propiedad bidireccional para un DataObject con
      sdo:oppositeProperty y sdo:propertyType
      - no hay soporte de PHP para opuestos SDO.
     </para>
    </step>
   </procedure>

   <procedure xml:id="sdo-das-xml.limitations.elements">
    <title>Elementos XSD</title>
    <step>
     <para>
      Elemento con sdo:aliasName
      - no hay soporte de PHP para alias de propiedades SDO.
     </para>
    </step>
    <step>
     <para>
      Elemento con grupo de sustitución.
     </para>
    </step>
   </procedure>

   <procedure xml:id="sdo-das-xml.limitations.elementsimpletype">
    <title>Elementos XSD con Tipo Simple</title>
    <step>
     <para>
      Elemento de Tipo Simple con valor predeterminado
      - no hay soporte de PHP para valores predeterminados SDO.
     </para>
    </step>
    <step>
     <para>
      Elemento de Tipo Simple con valor fijo
      - no hay soporte de PHP para propiedades de sólo lectura o valores predeterminados de SDO.
     </para>
    </step>
    <step>
     <para>
      Elemento de Tipo Simple con sdo:string
      - no hay soporte para sdo:string="true".
     </para>
    </step>
    <step>
     <para>
      Elemento referenciando un DataObject con
      sdo:propertyType  - no hay soporte para sdo:propertyType="..."
     </para>
    </step>
    <step>
     <para>
      Elemento con referencia bidireccional a un DataObject con
      sdo:oppositeProperty and sdo:propertyType
      - no hay soporte de PHP para opuestos SDO.
     </para>
    </step>
   </procedure>
  </section>
  <!-- }}} -->

 </partintro>
 &reference.sdo-das-xml.entities.sdo-das-xml;
 &reference.sdo-das-xml.entities.sdo-das-xml-document;
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
