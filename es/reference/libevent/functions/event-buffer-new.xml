<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: regiemix Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.event-buffer-new" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>event_buffer_new</refname>
  <refpurpose>Crea un evento en el buffer</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>event_buffer_new</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>readcb</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>writecb</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>errorcb</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter></methodparam>
  </methodsynopsis>
  <para>
   Libevent proporciona una capa de abstracción por encima del API de eventos.
   La utilización de eventos en el buffer hace que no sea necesario gestionar la I/O manualmente, sinó que 
   proporciona buffers de entrada y salida que se llenan y vacían de forma
   automática.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Recurso de flujo PHP. Debe poder ser tipificado como un descriptor de fichero.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>readcb</parameter></term>
     <listitem>
      <para>
       Llamada en background para invocar donde hay datos que leer, o <type>NULL</type> si
       no se desea llamada en background.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>writecb</parameter></term>
     <listitem>
      <para>
       Llamada en background para invocar donde está listo para escribir el descripor,
       o <type>NULL</type> si no se desea llamada en background.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>errorcb</parameter></term>
     <listitem>
      <para>
       Llamada en background para invocar donde hay un error en el descriptor, no puede ser
       <type>NULL</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg</parameter></term>
     <listitem>
      <para>
       Un parámetro que se pasará para cada una de las llamadas en background (opcional).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>event_buffer_new</function> devuelve nuevos recursos de evento en el buffer en caso de 
   éxito o &false; en caso de error.
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
