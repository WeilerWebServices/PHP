<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: regiemix Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.yaz-search" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>yaz_search</refname>
  <refpurpose>Prepara una búsqueda</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>yaz_search</methodname>
   <methodparam><type>resource</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>type</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>yaz_search</function> prepara una búsqueda en la conexión  
   dada.
  </para>
  <para>
   Como <function>yaz_connect</function> esta función es no bloqueante y
   únicamente prepara una búsqueda para ser ejecutada posteriormente cuando 
   se llame a la función <function>yaz_wait</function> .
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>id</parameter></term>
     <listitem>
      <para>
       El recurso de conexión devuelto por <function>yaz_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Este parámetro representa el tipo de la consulta - únicamente <literal>"rpn"</literal>
       está soportado ahora, en cuyo caso el tercer argumento especifica una consulta de tipo  
       Type-1 en notación de prefijo de consulta. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La consulta RPN es una representación textual de la consulta Type-1 tal y como está
       definida por el estandard Z39.50 . Sin embargo, en la representación del texto
       utilizada por YAZ se necesita una notación de prefijo, es decir que el operador
       precede a los operandos. El string de la consulta es una secuencia de tokens donde
       se ignora el espacio en blanco a menos que esté rodeado de dobles comillas. Los Tokens que empiecen 
       con una arroba (<literal>@</literal>) se considerarán operadores,
       de otro modo, se tratarán como términos de búsqueda.
      </para>
      <table>
       <title>Operadores RPN</title>
       <tgroup cols="2">
        <colspec colwidth="1*" colname="construct"/>
        <colspec colwidth="2*" colname="description"/>
        <thead>
         <row>
          <entry>Sintaxis</entry>
          <entry>Descripción</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><literal>@and</literal> query1 query2</entry>
          <entry>intersección de las consultas query1 y query2</entry>
         </row>
         <row>
          <entry><literal>@or</literal> query1 query2</entry>
          <entry>unión de las consultas query1 y query2</entry>
         </row>
         <row>
          <entry><literal>@not</literal> query1 query2</entry>
          <entry>query1 y no query2</entry>
         </row>
         <row>
          <entry><literal>@set</literal> name</entry>
          <entry>conjunto resultado de referencia</entry>
         </row>
         <row>
          <entry><literal>@attrset</literal> set query</entry>
          <entry>
           especifica el conjunto de atributos para la consulta. Esta construcción sólo se permite
           una sola vez - en el inicio de la consulta
          </entry>
         </row>
         <row>
          <entry><literal>@attr</literal> [set] type=value query</entry>
          <entry>
           aplica atributos a la consulta. El tipo y valor son enteros
           especificando el tipo del atributo y valor del atributo respectivamente. 
           El conjunto, si se informa, especifica el conjunto atributo.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>     
      <para>
       Se muestra más información sobre atributos en el link 
       <link xlink:href="&url.yaz-loc-bib1;">Z39.50 Maintenance Agency</link>
       site.
      </para>
      <note>
       <para>
        Si se desea utilizar una notación más amigable, 
        utilizar el interpretador CCL - functiones <function>yaz_ccl_conf</function> y 
        <function>yaz_ccl_parse</function>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Query Examples</title>
   <para>
    Se puede buscar por términos sencillos, como en el caso siguiente:
    <screen>
<![CDATA[
computer
]]>
    </screen>
    que busca documentos donde aparece "computer" . No se han especificado 
    atributos.
   </para>
   <para>
    La consulta 
    <screen>
<![CDATA[
"knuth donald"
]]>
    </screen>
    busca documentos donde aparece "knuth donald" (suponiendo que el 
    servidor soporta búsqueda de frases).
   </para>
   <para>
    Esta consulta aplica dos atributos para la misma frase.
    <screen>@attr 1=1003 @attr 4=1 "knuth donald"</screen>
    El primer atributo es de tipo type 1 (usa Bib-1), el valor del atributo es 1003
    (Autor).
    El segundo atributo es de tipo type 4 (estructura), valor 1 (frase),
    así que debe buscar documentos donde Donald Knuth es el autor.
   </para>
   <para>
    La consulta
    <screen>
<![CDATA[
@and @or a b @not @or c d e
]]>
    </screen>
    en notación infija tendría el aspecto: <literal>(a or b) and ((c or d) not 
    e)</literal>.
   </para>
   <para>
    Otro ejemplo, más complejo:
    <screen>
<![CDATA[
@attrset gils @and @attr 1=4 art @attr 1=2000 company
]]>
    </screen>
    La consulta utiliza el conjunto de atributos GILS . La consulta busca
    documentos en los que  <literal>art</literal> aparece en el título (GILS,BIB-1)
    y en los que <literal>company</literal> aparece como Distributor (GILS).
   </para>
  </example>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
