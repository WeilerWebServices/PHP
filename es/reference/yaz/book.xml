<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330340 Maintainer: chuso Status: ready -->
<!-- Reviewed: no -->

<book xml:id="book.yaz" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>YAZ</title>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.yaz">
  &reftitle.intro;
  <para>
   Esta extensión ofrece una interface PHP a el kit de herramientas
   <productname>YAZ</productname> que implementa el
   <link xlink:href="&url.yaz-loc;">Protocolo
    Z39.50 para Recuperación de Información</link>.
   Con esta extensión se puede fácilmente implementar un origen Z39.50 (clientes)
   que busca o escanea objetivos Z39.50 (servidores) en paralelo.
  </para>
  <para>
   El modulo esconde la mayor parte de la complejidad de Z39.50 así que debería ser
   bastante fácil a usar.  Apoya de manera persistente conexiones apátridas muy similares
   a esas ofrecidas por varias APIs RDB que están disponibles
   para PHP. Significa que las sesiones son apátridas pero se comparten entre
   usuarios, por lo tanto salvando la fase de pasos para la conexión e inicialización en más 
   casos.
  </para>
  <para>
   <productname>YAZ</productname> está disponible <link
   xlink:href="&url.yaz;">&url.yaz;</link>. Se puede encontrar nuevas noticias,
   ejemplos de códigos, etc. Para esta extensión en <link
   xlink:href="&url.yaz-phpyaz;">&url.yaz-phpyaz;</link>.
  </para>
  <note>
   <para>
    &pecl.moved-ver;5.0.0.
   </para>
  </note>
 </preface>
 <!-- }}} -->
 
 &reference.yaz.setup;
 &reference.yaz.constants;
 &reference.yaz.examples;
 &reference.yaz.reference;
 
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

