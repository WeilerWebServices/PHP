<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328862 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-memcache-set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_memcache_set</refname>
  <refpurpose>Asociar una conexión de MySQL con una conexión de Memcache</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type>
   <methodname>mysqlnd_memcache_set</methodname>
   <methodparam><type>mixed</type><parameter>mysql_connection</parameter></methodparam>
   <methodparam choice="opt"><type>Memcached</type><parameter>memcache_connection</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam choice="opt"><type>callback</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Asocia <parameter>mysql_connection</parameter> con
   <parameter>memcache_connection</parameter> empleando <parameter>pattern</parameter>
   como una expresión regular PCRE, y <parameter>callback</parameter> como una retrollamada
   de notificación o para desestablecer la asociación de <parameter>mysql_connection</parameter>.
  </para>
  <para>
   Al tiempo que asocia una conexión de MySQL con una conexión de Memcache, esta función
   consultará al servidor de MySQL por su configuración. Detectará automáticamente
   si el servidor está configurado para utilizar el Complemento InnoDB Memcache Daemon
   o el soporte para Cluster NDB Memcache de MySQL. También consultará al servidor
   para identificar automáticamente tablas exportadas y otras opciones de configuración.
   El resultado de esta configuración automática se puede recuperar con
   <function>mysqlnd_memcache_get_config</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>mysql_connection</parameter></term>
    <listitem>
     <para>
      Un gestor a un Servidor de MySQL empleando una de las extensiones de la API de MySQL para PHP, las cuales son
      <link linkend="ref.pdo-mysql">PDO_MYSQL</link>, <link linkend="book.mysqli">mysqli</link> o
      <link linkend="book.mysql">ext/mysql</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>memcache_connection</parameter></term>
    <listitem>
     <para>
      Una instancia de <link linkend="book.memcached">Memcached</link> con una
      conexión al complemento Memcache Daemon de MySQL. Si se omite este
      parámetro, <parameter>mysql_connection</parameter> estará disociado
      de cualquier conexión de memcache. Y existe una asociación previa será
      reemplazada.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>pattern</parameter></term>
    <listitem>
     <para>
      Una expresión regular con la sintaxis de <link linkend="book.pcre">Expresiones
      regulares compatibles con Perl</link> empleada para identificar consultas
      de Memcache potenciales. La consulta debería tener tres subpatrones. El
      primer subpatrón contiene la lista de campos solicitados; el segundo, el nombre
      de la columna ID de la consulta; y el tercero, el valor solicitado. Si
      se omite este parámetro o se establece a &null;, se utilizará un
      patrón predeterminado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>callback</parameter></term>
    <listitem>
     <para>
      Una retrollamada que será empleada siempre que se comience el envío de una consulta
      a MySQL. La retrollamada recibirá un único parámetro de tipo &boolean;
      indicando si una consulta fue enviada mediante Memcache.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &true;  si la asociación o disociación tiene éxito, o de lo contrario &false; si
   ocurrió un error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Ejemplo de <function>mysqlnd_memcache_set</function> con
     <function>var_dump</function> como una retrollama de depuración simple.</title>
    
    <programlisting role="php">
<![CDATA[
<?php
$mysqli = new mysqli("host", "usuario", "contraseña", "base_de_datos");
$memc = new Memcached();
$memc->addServer("host", 11211);
mysqlnd_memcache_set($mysqli, $memc, NULL, 'var_dump');

/* Esta consulta será interceptada y ejecutada por el protocolo Memcache */
echo "Enviando la consulta para id mediante Memcache: ";
$mysqli->query("SELECT f1, f2, f3 FROM test WHERE id = 1");

/* f1 no está configurado como un campo de clave válido, por lo que esta no se enviará a Memcache */
echo "Enviando la consulta para f1 mediante Memcache: ";
$mysqli->query("SELECT id FROM test WHERE f1 = 1");

mysqlnd_memcache_set($mysqli);

/* Ahora se empleará el protocolo regular de MySQL */
echo "var_dump no será invocado: ";
$mysqli->query("SELECT f1, f2, f3 WHERE id = 1");

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Enviando la consulta para id mediante Memcache: bool(true)
Enviando la consulta para f1 mediante Memcache: bool(false)
var_dump no será invocado: 
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>mysqlnd_memcache_get_config</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
