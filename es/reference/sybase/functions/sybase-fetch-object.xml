<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334605 Maintainer: regiemix Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.sybase-fetch-object">
 <refnamediv>
  <refname>sybase_fetch_object</refname>
  <refpurpose>Devuelve una fila Sybase como un objeto</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>sybase_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>object</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>sybase_fetch_object</function> es similar a
   <function>sybase_fetch_assoc</function>, con la diferencia de que devuelve 
   un objeto, en vez de un array.
  </para>
  <para>
   En cuando a la velocidad, la función es idéntica a
   <function>sybase_fetch_array</function>, y casi tan rápida como
   <function>sybase_fetch_row</function> (la diferencia es insignificante).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       Utilizar el segundo parámetro <parameter>object</parameter> para especificar el tipo del objeto
       que se quiere devolver. Si se omite este parámetros, el objeto será de 
       tipo stdClass.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto que contiene la fila devuelta, o
   &false; si no hay más filas.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo con <function>sybase_fetch_object</function> que devuelve Foo</title>
    <programlisting role="php">
<![CDATA[
<?php
    class Foo {
        var $foo, $bar, $baz;
    }

    // {...]
    $qrh= sybase_query('SELECT foo, bar, baz FROM example');
    $foo= sybase_fetch_object($qrh, 'Foo');
    $bar= sybase_fetch_object($qrh, new Foo());
    // {...]
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sybase_fetch_array</function></member>
    <member><function>sybase_fetch_row</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
