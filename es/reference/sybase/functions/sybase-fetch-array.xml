<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: regiemix Status: ready -->
<!-- Reviewed: no -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.sybase-fetch-array">
 <refnamediv>
  <refname>sybase_fetch_array</refname>
  <refpurpose>Devuelve una fila de Sybase como un array</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>sybase_fetch_array</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>sybase_fetch_array</function> es una versión extendida de 
   <function>sybase_fetch_row</function>.  Además de almacenar los
   datos en un array resultante con índices numéricos, también puede almacenar 
   los datos en una tabla asociativa, utilizando los nombres de campos como claves.
  </para>
  <para>
   Es importante notar que utilizar la función 
   <function>sybase_fetch_array</function> NO es significativamente
   más lento que utilizar <function>sybase_fetch_row</function>, y por el contrario
   aporta un significativo valor añadido.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array que corresponde a la fila cargada, o &false; si no hay
   más filas.
  </para>
  <note>
   <para>
    Cuando se seleccionan campos con el mismo nombre (por ejemplo, en una join), los 
    índices asociativos tendrán un número secuencial asociado. Ver el 
    ejemplo para más detalle.
   </para>
  </note>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Nombres de campos idénticos</title>
    <programlisting role="php">
<![CDATA[
<?php

$dbh = sybase_connect('SYBASE', '', '');
$q = sybase_query('SELECT * FROM p, a WHERE p.person_id= a.person_id');
var_dump(sybase_fetch_array($q));
sybase_close($dbh);
?>
]]>
    </programlisting>
    <para>
     El ejemplo anterior produciría la siguiente salida (asumiendo que las dos tablas únicamente
     tienen cada una una columna llamada "person_id"):
    </para>
    <screen>
<![CDATA[
array(4) {
  [0]=>
  int(1)
  ["person_id"]=>
  int(1)
  [1]=>
  int(1)
  ["person_id1"]=>
  int(1)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sybase_fetch_row</function></member>
    <member><function>sybase_fetch_assoc</function></member>
    <member><function>sybase_fetch_object</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
