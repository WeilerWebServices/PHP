<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.mb-convert-variables" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_convert_variables</refname>
  <refpurpose>Convierte códigos de caracteres a variable/s</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mb_convert_variables</methodname>
   <methodparam><type>string</type><parameter>to_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>from_encoding</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">vars</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter role="reference">...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Convierta 
   codificaciones de caracteresa de <parameter>vars</parameter> variables de
   la codificación <parameter>from_encoding</parameter> a la codificación
   <parameter>to_encoding</parameter>. 
  </para>
  <para>
   <function>mb_convert_variables</function> une cadenas de caracteres en un Array
   u Object para detectar la codificación, ya que la detección de codificaciones tiene a
   falla si las cadenas de caracteres son cortas. Por lo tanto, es imposible mezclar
   codificaciones en un único array u objeto.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>to_encoding</parameter></term>
     <listitem>
      <para>
       La codificación a la que se va a convertir <type>string</type>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from_encoding</parameter></term>
     <listitem>
      <para>
       <parameter>from_encoding</parameter> se especifica mediante un <type>array</type> 
       o <type>string</type> separado por comas, e intenta detectar la codificación desde
       <parameter>from-coding</parameter>. Cuando <parameter>from_encoding</parameter> 
       se omite, se utiliza <literal>detect_order</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>vars</parameter></term>
     <listitem>
      <para>
       <parameter>vars</parameter> es la referencia a la
       variable que va a ser convertida. Se aceptan String, Array y Object.
       <function>mb_convert_variables</function> asume que todos los parámetros
       tienen la misma codificación.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       <parameter>vars</parameter> adicionales.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   La codificación de caracteres antes de la conversión en caso de éxito,
   o &false; en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>mb_convert_variables</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Convertir las variables $post1, $post2 a la codificación interna */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
