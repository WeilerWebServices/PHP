<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337268 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.mb-strcut" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mb_strcut</refname>
  <refpurpose>Obtener parte de un string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mb_strcut</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>int</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>encoding</parameter><initializer>mb_internal_encoding()</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>mb_strcut</function> extrae un substring de un string de forma similar a
   <function>mb_substr</function>, pero opera sobre bytes en lugar de caracteres. Si la
   posición de corte ocurre entre dos bytes de un carácter multibyte, dicho corte se
   realiza empezando desde el primer byte del carácter. Esta es también la diferencia con
   la función <function>substr</function>, la cual simplemente cortaría el string entre
   los bytes, resultando así una secuencia de bytes malformada.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       El <type>string</type> a cortar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Si <parameter>start</parameter> no es negativo, el string devuelto
       comenzará en la posición del <emphasis>byte</emphasis> <parameter>start</parameter>-ésima de
       <parameter>string</parameter>, empezando desde cero. Por ejemplo,
       en el string '<literal>abcdef</literal>', el byte en la
       posición <literal>0</literal> es '<literal>a</literal>', el
       byte en la posición <literal>2</literal> es
       '<literal>c</literal>', etc.
      </para>
      <para>
       Si <parameter>start</parameter> es negative, el string devuelto
       comenzará en el byte <parameter>start</parameter>-ésimo
       desde el final de <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud en <emphasis>bytes</emphasis>. Si se omite o se pasa <literal>NULL</literal>,
       extrae todos los bytes hasta el final del string.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encoding</parameter></term>
     <listitem>
      &mbstring.encoding.parameter;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>mb_strcut</function> devuelve la porción de
   <parameter>str</parameter> especificada por los parámetros
   <parameter>start</parameter> y
   <parameter>length</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.8</entry>
       <entry>
        Pasar <literal>NULL</literal> al parámetro <parameter>length</parameter>
        extrae todos los bytes hasta el final de string. Antes de esta versión,
        <literal>NULL</literal> era tratado de igual modo que <literal>0</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mb_substr</function></member>
    <member><function>mb_internal_encoding</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
