<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338550 Maintainer: yago Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<!-- splitted from ./en/functions/apache.xml, last change in rev 1.20 -->
<refentry xml:id="function.virtual" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>virtual</refname>
  <refpurpose>Realiza una sub-petición de Apache</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>virtual</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>virtual</function> es una función específica de Apache que es
   similar a <literal>&lt;!--#include virtual...--&gt;</literal> en
   <literal>mod_include</literal>. Realiza una sub-petición de Apache. Es útil para incluir
   scripts CGI o archivos <filename>.shtml</filename>, o cualquier otra cosa que quisiera
   procesar a través de Apache. Note que para un script CGI, el script debe
   generar cabeceras CGI válidas. Esto quiere decir que, por lo menos, debe
   generar una cabecera <literal>Content-Type</literal>.
  </para>
  <para>
   Para ejecutar la sub-petición, todos los búferes son terminados y
   volcados al navegador, y las cabeceras pendientes son enviadas también.
  </para>
  &apache.req.module;
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       El archivo sobre el que se efectuará el comando virtual.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Ejecuta el comando virtual en caso de éxito, o devuelve &false; si ocurre un error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Vea <function>apache_note</function> para un ejemplo.
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    La cadena de petición puede ser pasada al archivo incluido pero la
    variable <varname>$_GET</varname> es copiada desde el script padre, y
    solo <varname>$_SERVER['QUERY_STRING']</varname> se llena con la cadena
    de query pasada. Puede que la cadena query sólo pueda ser pasada cuando
    se usa Apache 2. El archivo solicitado no será listado en el archivo de
    registro (log) access de Apache.
   </para>
  </warning>
  <note>
   <para>
    Las variables de entorno definidas en el archivo solicitado no están
    disponibles desde el script que hace el llamado.
   </para>
  </note>
  <note>
   <para>
    Esta función puede utilizarse con ficheros de PHP. Sin embargo, normalmente es mejor
    emplear <function>include</function> o <function>require</function> para
    ficheros de PHP.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>apache_note</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
