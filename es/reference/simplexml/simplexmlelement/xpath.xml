<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 311775 Maintainer: yago Status: ready -->
<refentry xml:id="simplexmlelement.xpath" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::xpath</refname>
  <refpurpose>Ejecuta una petición XPath sobre los datos XML</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>SimpleXMLElement::xpath</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
  </methodsynopsis>
  <para>
   El método <literal>xpath</literal> busca el nodo SimpleXML para los hijos
   que cumplan la <parameter>path</parameter> <acronym>XPath</acronym>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Una ruta XPath
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna un <type>array</type> de objetos SimpleXMLElement o &false; en caso
   de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Xpath</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<a>
 <b>
  <c>texto</c>
  <c>cosas</c>
 </b>
 <d>
  <c>código</c>
 </d>
</a>
XML;

$xml = new SimpleXMLElement($string);

/* Busca <a><b><c> */
$resultado = $xml->xpath('/a/b/c');

while(list( , $nodo) = each($resultado)) {
    echo '/a/b/c: ',$nodo,"\n";
}

/* Rutas relativas también funcionan... */
$resultado = $xml->xpath('b/c');

while(list( , $nodo) = each($resultado)) {
    echo 'b/c: ',$nodo,"\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
/a/b/c: texto
/a/b/c: cosas
b/c: texto
b/c: cosas
]]>
    </screen>
    <simpara>
     Notar que los dos resultados son iguales.
    </simpara>
   </example>
  </para>
 </refsect1>

   <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::registerXPathNamespace</methodname></member>
    <member><methodname>SimpleXMLElement::getDocNamespaces</methodname></member>
    <member><methodname>SimpleXMLElement::getNamespaces</methodname></member>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
