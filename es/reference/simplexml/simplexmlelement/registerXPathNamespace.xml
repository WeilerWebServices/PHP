<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 311775 Maintainer: yago Status: ready -->
<refentry xml:id="simplexmlelement.registerxpathnamespace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::registerXPathNamespace</refname>
  <refpurpose>
   Crea un contexto prefijo/ns para la siguiente petición XPath
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>SimpleXMLElement::registerXPathNamespace</methodname>
   <methodparam><type>string</type><parameter>prefix</parameter></methodparam>
   <methodparam><type>string</type><parameter>ns</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crea un contexto de prefijo/ns para la siguiente petición XPath. En
   particular, ésto es útil si el proveedor del documento XML proporcionado
   altera los prefijos del namespace.
   <literal>registerXPathNamespace</literal> creará un prefijo para el
   namespace asociado, permitiendo el acceso a los nodos en ese namespace sin
   necesidad de cambiar el código para tener en cuenta los nuevos prefijos dictados
   por el proveedor.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       El prefijo del namespace a usar en la petición XPath para el namespace
       dado en <parameter>ns</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
       El namespace a usar para la petición XPath. Debe coincidir con un
       namespace en uso por el documento XML o la petición XPath usando
       <parameter>prefix</parameter> no retornará ningún resultado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Estableciendo un prefijo para el namespace a usar en una petición XPath</title>
    <programlisting role="php">
<![CDATA[
<?php

$xml = <<<EOD
<book xmlns:chap="http://example.org/titulo-capitulo">
    <title>My Book</title>
    <chapter id="1">
        <chap:titulo>Chapter 1</chap:titulo>
        <para>Donec velit. Nullam eget tellus vitae tortor gravida scelerisque. 
            In orci lorem, cursus imperdiet, ultricies non, hendrerit et, orci. 
            Nulla facilisi. Nullam velit nisl, laoreet id, condimentum ut, 
            ultricies id, mauris.</para>
    </chapter>
    <chapter id="2">
        <chap:titulo>Chapter 2</chap:titulo>
        <para>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin 
            gravida. Phasellus tincidunt massa vel urna. Proin adipiscing quam 
            vitae odio. Sed dictum. Ut tincidunt lorem ac lorem. Duis eros 
            tellus, pharetra id, faucibus eu, dapibus dictum, odio.</para>
    </chapter>
</book>
EOD;

$sxe = new SimpleXMLElement($xml);

$sxe->registerXPathNamespace('c', 'http://example.org/titulo-capitulo');
$resultado = $sxe->xpath('//c:titulo');

foreach ($resultado as $titulo) {
  echo $titulo . "\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Chapter 1
Chapter 2
]]>
    </screen>
    <para>
     Notar como el documento XML mostrado en el ejemplo establece un namespace
     con un prefijo de <literal>chap</literal>. En el caso de que este
     documento (u otro como este) hubiera usado un prefijo de
     <literal>c</literal>, como este ha cambiado, la petición XPath no
     retornará los resultados adecuados y la petición requerirá modificación.
     Usando <literal>registerXPathNamespace</literal> evita futuras
     modificaciones de la petición incluso si el proveedor cambia el prefijo
     del namespace.
    </para>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::xpath</methodname></member>
    <member><methodname>SimpleXMLElement::getDocNamespaces</methodname></member>
    <member><methodname>SimpleXMLElement::getNamespaces</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
