<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347573 Maintainer: yago Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id="simplexmlelement.asxml" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::asXML</refname>
  <refpurpose>
   Retorna un string XML correcto basado en un elemento SimpleXML
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>SimpleXMLElement::asXML</methodname>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   El método <literal>asXML</literal> formatea los datos del objeto padre en
   XML versión 1.0.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Si se especifica, la función escribe los datos al fichero en vez de
       retornarlo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si no se especifica <parameter>filename</parameter>, esta función retorna
   un <type>string</type> si no hay errores y &false; si lo hay. Si se
   especifica el parámetro, retorna &true; si el fichero se escribió
   correctamente y &false; en caso contrario.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Retornar XML</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<a>
 <b>
  <c>texto</c>
  <c>cosas</c>
 </b>
 <d>
  <c>codigo</c>
 </d>
</a>
XML;

$xml = new SimpleXMLElement($string);

echo $xml->asXML();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?xml version="1.0"?>
<a>
 <b>
  <c>texto</c>
  <c>cosas</c>
 </b>
 <d>
  <c>codigo</c>
 </d>
</a>
]]>
    </screen>
    
   </example>
  </para>
  <para>
   <literal>asXML</literal> también trabaja con resultados Xpath:
   <example>
    <title>Usando asXML() en resultados <methodname>SimpleXMLElement::xpath</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
// Continuación del ejemplo XML anterior.

/* Buscar <a><b><c> */
$resultado = $xml->xpath('/a/b/c');

foreach ($result as $node) {
    echo $node->asXML();
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<c>texto</c><c>cosas</c>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::__toString</methodname></member>    
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1> 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
