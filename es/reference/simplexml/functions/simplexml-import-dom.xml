<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: yago Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id='function.simplexml-import-dom' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>simplexml_import_dom</refname>
  <refpurpose>Obtiene un objeto <literal>SimpleXMLElement</literal> de un nodo DOM</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SimpleXMLElement</type><methodname>simplexml_import_dom</methodname>
   <methodparam><type>DOMNode</type><parameter>node</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class_name</parameter><initializer>"SimpleXMLElement"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta función toma un nodo de un documento <link
   linkend="book.dom">DOM</link> y lo convierte en un nodo SimpleXML. Este
   nuevo objeto puede ser usado como un elemento SimpleXML nativo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>node</parameter></term>
     <listitem>
      <para>
       Un nodo del elemento <link linkend="book.dom">DOM</link>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       Este parámetro opcional debe usarse cuando se necesite que
       <function>simplexml_import_dom</function> retorne un objeto de la clase
       indicada. Esa clase debe extender de la clase
       <type>SimpleXMLElement</type>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un <type>SimpleXMLElement</type>&return.falseforfailure;.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Importando desde DOM</title>
    <programlisting role="php">
<![CDATA[
<?php
$dom = new DOMDocument;
$dom->loadXML('<libros><libro><titulo>blah</titulo></libro></libros>');
if (!$dom) {
    echo 'Error analizando el documento';
    exit;
}

$s = simplexml_import_dom($dom);

echo $s->libro[0]->titulo;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
blah
]]>
    </screen>

   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dom_import_simplexml</function></member>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
