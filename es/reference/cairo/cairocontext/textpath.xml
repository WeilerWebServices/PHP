<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: seros Status: ready -->

<refentry xml:id="cairocontext.textpath" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::textPath</refname>
  <refname>cairo_text_path</refname>
  <refpurpose>El propósito de textPath</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="oop">
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::textPath</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis role="procedural">
   <type>void</type><methodname>cairo_text_path</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
  </methodsynopsis>
  <para>
   Añade trazados cerrados para texto al trazado actual. El trazado generado, si se rellena,
   consigue un efecto similar al de <methodname>CairoContext::showText</methodname>.
  </para>
  <para>
   La conversión y posicionamiento de texto se hace de manera similar a
   <methodname>CairoContext::showText</methodname>.
  </para>
  <para>
   Al igual que en <methodname>CairoContext::showText</methodname>,
   después de esta llamada el punto actual se mueve al origen de donde
   sería colocado el siguiente glifo en esta misma progresión.
   Es decir, el punto actual estará en el origen del índice de
   del glifo final mediante sus valores de avance. Esto permite cambiar múltiples
   llamadas a <methodname>CairoContext::showText</methodname>
   sin tener que establecer el punto actual entre ellas.
  </para>
  <para>
   Observación: La llamada a la función <methodname>CairoContext::textPath</methodname>
   es parte de lo que los diseñadores de cairo llaman la API de texto "toy".
   Es conveniente para demos cortas y programas sencillos,
   pero no se espera que sea adecuada para aplicaciones serias que usan texto.
   Véase <methodname>CairoContext::glyphPath</methodname> para la API "real"
   de trazado de texto de cairo.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Un objeto <classname>CairoContext</classname>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       Descripción...
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Descripción...
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Descripción...
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php
/* ... */
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
...
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php
/* ... */
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Classname::Method</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
