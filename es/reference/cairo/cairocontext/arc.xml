<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: seros Status: ready -->

<refentry xml:id="cairocontext.arc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::arc</refname>
  <refname>cairo_arc</refname>
  <refpurpose>Añade un arco circular</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (método):</para>
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::arc</methodname>
    <methodparam><type>float</type><parameter>x</parameter></methodparam>
    <methodparam><type>float</type><parameter>y</parameter></methodparam>
    <methodparam><type>float</type><parameter>radius</parameter></methodparam>
    <methodparam><type>float</type><parameter>angle1</parameter></methodparam>
    <methodparam><type>float</type><parameter>angle2</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>void</type><methodname>cairo_arc</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
   <methodparam><type>float</type><parameter>x</parameter></methodparam>
   <methodparam><type>float</type><parameter>y</parameter></methodparam>
   <methodparam><type>float</type><parameter>radius</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle1</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle2</parameter></methodparam>
  </methodsynopsis>
  <para>
   Añade un arco circular del radio dado al trazado actual.
   El arco está centrado en (<parameter>x</parameter>, <parameter>y</parameter>), comenzando en
   <parameter>angle1</parameter> y procediendo en ángulos incrementados hasta el final en
   <parameter>angle2</parameter>.
   Si <parameter>angle2</parameter> es menor que <parameter>angle1</parameter> será
   incrementado progresivamente por 2*M_PI hasta que sea mayor que <parameter>angle1</parameter>.
   
   Si hay un punto actual se añadirá un segmento de línea al trazado para conectar el
   punto actual al inicio del arco. Si no se desea esta línea inicial,
   se puede evitar llamando a <methodname>CairoContext::newSubPath</methodname> o en estilo procedural 
   <function>cairo_new_sub_path</function> antes de llamar a <methodname>CairoContext::arc</methodname>
   o a <function>cairo_arc</function>.
   
   Los ángulos se miden en radianes. Un ángulo de 0.0 está en la dirección del eje X positivo
   (en espacio de usuario). Un ángulo de M_PI/2.0 radianes (90 grados) está en la dirección del eje Y
   positivo (en espacio de usuario). Los ángulos se incrementan en la dirección desde el eje X positivo hacia el
   eje Y positivo. Así, con la matriz de transformación predeterminada, los ángulos se incrementan en el sentido de las agujas del reloj.
   
   (Para convertir grados a radianes use grados * (M_PI / 180.).)
   Esta función da el arco en la dirección de los ángulos incrementados; véase
   <methodname>CairoContext::arcNegative</methodname> o <function>cairo_arc_negative</function>
   para obtener el arco el la dirección de los ángulos decrementados.
   
   <!--
    El arco es circular en espacio de usuario. Para conseguir un arco elíptico, se puede escalar la matriz
    de transformación actual mediante cantidades diferentes en las direcciones X Y.
    Por ejemplo, para dibujar una elipse en el cuadrado dado por x, y, ancho, alto:
    -->
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Un objeto CairoContext válido
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       posición x
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       posición y
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>radius</parameter></term>
     <listitem>
      <para>
       Radio del arco
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle1</parameter></term>
     <listitem>
      <para>
       ángulo de inicio
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle2</parameter></term>
     <listitem>
      <para>
       ángulo final
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = new CairoImageSurface(CairoFormat::ARGB32, 100, 100);
$c = new CairoContext($s);

$c->setSourceRgb(0, 0, 0);
$c->paint();

$c->setLineWidth(1);
$c->setSourceRgb(1, 1, 1);

for ($r = 50; $r > 0; $r -= 10) {
 $c->arc(50, 50, $r, 0, 2 * M_PI);
 $c->stroke();
 $c->fill();
}

$s->writeToPng(dirname(__FILE__) . '/CairoContext__arc.png');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$s = cairo_image_surface_create(CAIRO_SURFACE_TYPE_IMAGE, 100, 100);
$c = cairo_create($s);

cairo_set_source_rgb($c, 0, 0, 0);
cairo_paint($c);

cairo_set_source_rgb($c, 1, 1, 1);
cairo_set_line_width($c, 1);

for ($r = 50; $r > 0; $r -= 10) {
 cairo_arc($c, 50, 50, $r, 0, 2 * M_PI);
 cairo_stroke($c);
 cairo_fill($c);
}

cairo_surface_write_to_png($s, dirname(__FILE__) . '/cairo_arc.png');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::arcNegative</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
