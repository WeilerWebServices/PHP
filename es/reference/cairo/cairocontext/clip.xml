<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322055 Maintainer: seros Status: ready -->

<refentry xml:id="cairocontext.clip" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoContext::clip</refname>
  <refname>cairo_clip</refname>
  <refpurpose>Establece una nueva región de recorte</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (método):</para>
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>CairoContext::clip</methodname>
    <void />
  </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>void</type><methodname>cairo_clip</methodname>
   <methodparam><type>CairoContext</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Establece una nueva región de recorte intersectando la región de recorte actual con el trazado actual como si
   fuera rellenado con <methodname>CairoContext::fill</methodname> o <function>cairo_fill</function>
   y según la regla de relleno actual (véase <methodname>CairoContext::setFillRule</methodname>
   o <function>cairo_set_fill_rule</function>).
  </para>
  <para>
   Después de llamar a <methodname>CairoContext::clip</methodname> o a <function>cairo_clip</function>,
   el trazado actual se borrará desde el contexto de cairo.
  </para>
  <para>
   La región de recorte actual afecta a todas las operaciones de dibujo enmascarando cualquier cambio
   hecho a la superficie que esté fuera de la región de recorte actual.
  </para>
  <para>
   Llamar a <methodname>CairoContext::clip</methodname> o a <function>cairo_clip</function>
   sólo puede hacer la región de recorte más pequeña, nunca más grande. Pero el recorte actual es parte del
   estado de gráficos, por lo que se puede llevar a cabo una restricción temporal de la región de recorte llamando a
   <methodname>CairoContext::clip</methodname> o a <function>cairo_clip</function> dentro de una
   pareja <methodname>CairoContext::save</methodname>/<methodname>CairoContext::restore</methodname> o
   <function>cairo_save</function>/<function>cairo_restore</function>.
   El otro medio para incrementar el tamaño de la región de recorte es
   <methodname>CairoContext::resetClip</methodname> o en estilo procedural <function>cairo_reset_clip</function>.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Un objeto CairoContext válido
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>&style.oop;</title>
    <programlisting role="php">
<![CDATA[
<?php

$superficie = new CairoImageSurface(CairoFormat::ARGB32, 50, 50);

$contexto = new CairoContext($superficie);

$contexto->clip();

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php

$superficie = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 50, 50);

$contexto = cairo_create($superficie);

cairo_clip($contexto);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoContext::resetClip</methodname></member>
    <member><function>cairo_reset_clip</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
