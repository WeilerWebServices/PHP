<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346896 Maintainer: seros Status: ready -->

<refentry xml:id="cairosvgsurface.getversions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>CairoSvgSurface::getVersions</refname>
  <refname>cairo_svg_surface_get_versions</refname>
  <refpurpose>Usado para recuperar una lista de versiones de SVG soportadas</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop; (método):</para>
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>array</type><methodname>CairoSvgSurface::getVersions</methodname>
   <void />
  </methodsynopsis>
  <para>&style.procedural;:</para>
  <methodsynopsis>
   <type>array</type><methodname>cairo_svg_get_versions</methodname>
   <void />
  </methodsynopsis>
  <para>
   Devuelve una matriz indexada numéricamente de las constantes de
   <classname>CairoSvgVersion</classname> disponibles actualmente. Para recuperar los
   valores de cadena de cada elemento, use
   <methodname>CairoSvgSurface::versionToString</methodname>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz indexada numéricamente de valores enteros.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>CairoSvgSurface::getVersions</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
/* Traer nuestra lista de versiones */
$versiones = CairoSvgSurface::getVersions();
var_dump($versiones);

/* imprimir el nombre de la cadena de cada versión */
foreach($versiones as $id) {
    echo CairoSvgSurface::versionToString($id), PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  int(0)
  [1]=>
  int(1)
}
SVG 1.1
SVG 1.2
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>&style.procedural;</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Traer nuestra lista de versiones */
$versiones = cairo_svg_surface_get_versions();
var_dump($versiones);

/* imprimir el nombre de la cadena de cada versión */
foreach($versiones as $id) {
    echo cairo_svg_surface_version_to_string($id), PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(2) {
  [0]=>
  int(0)
  [1]=>
  int(1)
}
SVG 1.1
SVG 1.2
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>CairoSvgSurface::versionToString</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
