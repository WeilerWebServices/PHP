<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339180 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="sqlite3.open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::open</refname>
  <refpurpose>Abrir una base de datos SQLite</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>SQLite3::open</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>encryption_key</parameter><initializer>null</initializer></methodparam>
  </methodsynopsis>
  <para>
   Abre una Base de Datos SQLite 3. Si la construcción incluye encriptación,
   intentará usar la clave.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       La ruta a la base de datos de SQLite, o <literal>:memory:</literal> para usar la base de datos que está en memoria.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Banderas opcionales para determinar cómo abrir la base de datos SQLite. Por
       omisión, el método open utiliza <literal>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</literal>.
       <itemizedlist>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READONLY</literal>: Abrir la base de datos para
          sólo lectura.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READWRITE</literal>: Abrir la base de datos para
          lectura y escritura.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_CREATE</literal>: Crear la base de datos si
          no existe.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>encryption_key</parameter></term>
     <listitem>
      <para>
       Una clave de encriptación opcional usada cuando se encripta o desencripta una
       base de datos de SQLite. Si el módulo de encriptación de SQLite no está instalado,
       este parámetro no tendrá efecto.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>SQLite3::open</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/**
 * Ejemplo sencillo para extender la clase SQLite3 y cambiar los parámetros
 * de __construct, después usar el método open para inicializar la BD.
 */
class MiBD extends SQLite3
{
    function __construct()
    {
        $this->open('mibdsqlite.db');
    }
}

$bd = new MiBD();

$bd->exec('CREATE TABLE foo (bar STRING)');
$bd->exec("INSERT INTO foo (bar) VALUES ('Esto es una prueba')");

$resultado = $bd->query('SELECT bar FROM foo');
var_dump($resultado->fetchArray());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
