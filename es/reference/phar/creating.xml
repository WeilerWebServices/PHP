<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: jvenegasperu Status: ready -->
<!-- Reviewed: no -->
<chapter xml:id="phar.creating" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Creación de archivos Phar</title>
 
 <section xml:id="phar.creating.intro" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Creación de archivos Phar: Introducción</title>
  <para>
   Para ser escrita completamente en un futuro próximo. Antes de leer esto, asegúrese de leer
   <link linkend="phar.using">Como utilizar archivos PHAR</link>.
  </para>
  <para>
   Un buen lugar para empezar es leer acerca de <function>Phar::buildFromIterator</function>,
   y los detalles de la elección del <link linkend="phar.fileformat">formato de fichero</link> 
   disponible para los archivos.  Una adecuada comprensión de lo que es y hace una rutina de interoperabilidad (stub), es crucial 
   para la creación de un archivo PHAR, así <function>Phar::setStub</function> y
   <function>Phar::createDefaultStub</function> son buenos lugares para comenzar.
   Si va a distribuir una aplicación basada en web es fundamental saber qué es y cómo funciona
   <function>Phar::webPhar</function> y el método relacionado
   <function>Phar::mungServer</function>. Cualquier aplicación que tenga acceso
   a sus propios ficheros también debe considerar el uso de <function>Phar::interceptFileFuncs</function>.
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
