<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338501 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phardata.buildfromdirectory" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>PharData::buildFromDirectory</refname>
  <refpurpose>Construir un archivo tar/zip desde los ficheros de un directorio</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>Phar::buildFromDirectory</methodname>
   <methodparam><type>string</type><parameter>base_dir</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>regex</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Rellena un archivo phar con el contenido de un directorio. El segundo parámtro
   opcional es una expresión regular (pcre) que se utiliza para excluir ficheros.
   Cualquier nombre de fichero que coincida con la expresión regular será incluido, todos los demás serán
   excluidos. Para un control más exhaustivo, use <function>PharData::buildFromIterator</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>base_dir</parameter></term>
     <listitem>
      <para>
       La ruta completa o relativa al directorio que contiene todos los ficheros
       a añadir al archivo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>regex</parameter></term>
     <listitem>
      <para>
       Una expresión regular de pcre opcional que se usa para filtrar la
       lista de ficheros. Solamente las rutas de fichero que coincidan con la expresión regular
       serán incluidas en el archivo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>Phar::buildFromDirectory</function> devuelve un array asociativo que
   que mapea la ruta interna del fichero a la ruta completa del mismo en el
   sistema de ficheros.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Este método lanza una excepción de tipo <classname>BadMethodCallException</classname> cuando no puede
   instanciar los iteradores intermos del directorio,
   o una excepción de tipo <classname>PharException</classname> si hubo errores
   al guardar el archivo phar.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Un ejemplo de <function>PharData::buildFromDirectory</function></title>
   <para>
    
   </para>
   <para>
    <programlisting role="php">
<![CDATA[
<?php
$phar = new PharData('proyecto.tar');
// añadir todos los ficheros del proyecto
$phar->buildFromDirectory(dirname(__FILE__) . '/proyecto');

$phar2 = new PharData('proyecto2.zip');
// añadir todos los ficheros del, incluir solamente los ficheros php
$phar2->buildFromDirectory(dirname(__FILE__) . '/proyecto', '/\.php$/');
?>
    ]]>
    </programlisting>
   </para>
  </example>
 </refsect1>
 
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::buildFromDirectory</function></member>
    <member><function>PharData::buildFromIterator</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
