<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334002 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="phardata.construct">
 <refnamediv>
  <refname>PharData::__construct</refname>
  <refpurpose>Construir un objeto de archivo tar o zip no ejecutable</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <methodname>PharData::__construct</methodname>
   <methodparam><type>string</type><parameter>fname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>alias</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>format</parameter><initializer><constant>Phar::TAR</constant></initializer></methodparam>
  </methodsynopsis>
  
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>fname</parameter></term>
     <listitem>
      <para>
       Ruta a un archivo tar/zip existente o para ser creado
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Banderas a pasar a la clase padre
       <classname>RecursiveDirectoryIterator</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>alias</parameter></term>
     <listitem>
      <para>
       Alias con el que referirse al archivo Phar en las llamadas a funcionalidades
       de flujos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Una de las
       <link linkend="phar.constants.fileformat">constantes de formato de fichero</link>
       disponiblies dentro de la clase <classname>Phar</classname>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una excepción de tipo <classname>BadMethodCallException</classname> si se llama dos veces,
   o una excepción de tipo <classname>UnexpectedValueException</classname> si no se puede abrir el
   archivo phar.
  </para>
 </refsect1>
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>PharData::__construct</function></title>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
try {
    $p = new PharData('/ruta/a/mi.tar', Phar::CURRENT_AS_FILEINFO | Phar::KEY_AS_FILENAME);
} catch (UnexpectedValueException $e) {
    die('No se pudo abrir mi.tar');
} catch (BadMethodCallException $e) {
    echo 'Técnicamente esto no puede suceder';
}
echo file_get_contents('phar:///ruta/a/mi.tar/ejemplo.txt');
?>
      ]]>
     </programlisting>
    </para>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
