<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.offsetget">
 <refnamediv>
  <refname>Phar::offsetGet</refname>
  <refpurpose>Obtener un objeto de la clase <classname>PharFileInfo</classname> para un fichero específico</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>int</type><methodname>Phar::offsetGet</methodname>
   <methodparam><type>string</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Ésta es una implementación de la interfaz <interfacename>ArrayAccess</interfacename> que permite
   la manipulación directa del contenido de un archivo Phar utilizando
   los corchetes de acceso al array. <methodname>Phar::offsetGet</methodname> se usa
   para recuperar ficheros de un archivo Phar.
  </para>
  
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       El nombre del fichero (ruta relativa) a buscar en un Phar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto de la clase <classname>PharFileInfo</classname> que puede usarse para
   iterar sobre el contenido de un fichero o para recuperar información sobre el fichero actual.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Este método lanza una extepción de tipo <classname>BadMethodCallException</classname> si el fichero
   no existe en el archivo Phar.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>Phar::offsetGet</function></title>
    <para>
     Ya que todas las clases implementan la iterfaz <classname>ArrayAccess</classname>,
     <methodname>Phar::offsetGet</methodname> es automáticamente
     llamada a utilizar el operador <literal>[]</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar(dirname(__FILE__) . '/miphar.phar', 0, 'miphar.phar');
$p['existe.txt'] = "el fichero existe\n";
try {
    // automáticamente llama a offsetGet()
    echo $p['existe.txt'];
    echo $p['no_existe.txt'];
} catch (BadMethodCallException $e) {
    echo $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
el fichero existe
Entry no_existe.txt does not exist
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::offsetExists</function></member>
    <member><function>Phar::offsetSet</function></member>
    <member><function>Phar::offsetUnset</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
