<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.mungserver" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::mungServer</refname>
  <refpurpose>Definir una lista de hasta 4 variables $_SERVER que debería ser modificadas para la ejecución</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>Phar::mungServer</methodname>
   <methodparam><type>array</type><parameter>munglist</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Phar::mungServer</function> solamente debería ser llamado dentro de la
   rutina de interoperabilidad de un archivo phar.
  </para>
  <para>
   Define una lista de hasta 4 variables <varname>$_SERVER</varname> que deberían ser
   modificadas para la ejecución.
   Las variables que pueden ser modificadas para eliminar rastros de una ejecución de un phar son
   <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
   <literal>SCRIPT_NAME</literal> y <literal>SCRIPT_FILENAME</literal>.
  </para>
  <para>
   Por sí solo, este método no hace nada. Solamente al combinarlo con
   <function>Phar::webPhar</function> hace que tenga efecto, y sólo cuando el fichero
   solicitado es un fichero de PHP a ser procesado. Observe que las variables
   <literal>PATH_INFO</literal> y <literal>PATH_TRANSLATED</literal>
   son siempre modificadas.
  </para>
  <para>
   Los valores originales de las variables que son modificadas son almacenados en el array
   SERVER con el prefijo <literal>PHAR_</literal>, así por ejemplo
   <literal>SCRIPT_NAME</literal> sería guardado como <literal>PHAR_SCRIPT_NAME</literal>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>munglist</parameter></term>
     <listitem>
      <para>
       Un array que contiene como índices de cadenas
       <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
       <literal>SCRIPT_NAME</literal> y <literal>SCRIPT_FILENAME</literal>.
       Otros valores lanzan una excepción, y <function>Phar::mungServer</function>
       es sensible a mayúsculas-minúsculas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   No devuelve nada.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una excepción de tipo <classname>UnexpectedValueException</classname> si se encontró algún
   problema con la información pasada.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::mungServer</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// rutina de interoperabilidad de ejemplo
Phar::mungServer(array('REQUEST_URI'));
Phar::webPhar();
__HALT_COMPILER();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::webPhar</function></member>
    <member><function>Phar::setStub</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
