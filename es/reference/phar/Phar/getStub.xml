<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.getstub">
 <refnamediv>
  <refname>Phar::getStub</refname>
  <refpurpose>Devolver el cargador de PHP o la rutina de interoperabilidad de un archivo Phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>string</type><methodname>Phar::getStub</methodname>
   <void/>
  </methodsynopsis>
  
  <para>
   Los archivos Phar contienen una rutina de interoperabilidad cargadora (en inglés <literal>stub</literal>)
   escrita en PHP que se ejecuta cuando el archivo es ejecutado en el propio PHP mediante
   inclusión:
   <programlisting role="php">
<![CDATA[
<?php
include 'myphar.phar';
?>
    ]]>
   </programlisting>
   o por simple ejecución:
   <screen>
<![CDATA[
php myphar.phar
    ]]>
   </screen>
  </para>
  
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una cadena que contiene la rutina de interoperabilidad cargadora (stub)
   del archivo Phar actual.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una excepción de tipo <classname>RuntimeException</classname> si no es posible leer
   la rutina de interoperabilidad del archivo Phar.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::getStub</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/ruta/a/mi.phar', 0, 'mi.phar');
echo $p->getStub();
echo "==NEXT==\n";
$p->setStub("<?php
function __autoload($clase)
{
    include 'phar://' . str_replace('_', '/', $clase);
}
Phar::mapPhar('miphar.phar');
include 'phar://miphar.phar/arrancar.php';
__HALT_COMPILER(); ?>");
echo $p->getStub();
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<?php __HALT_COMPILER(); ?>
==NEXT==
<?php
function __autoload($clase)
{
    include 'phar://' . str_replace('_', '/', $clase);
}
Phar::mapPhar('miphar.phar');
include 'phar://miphar.phar/arrancar.php';
__HALT_COMPILER(); ?>
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::setStub</function></member>
    <member><function>Phar::createDefaultStub</function></member>
   </simplelist>
  </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
