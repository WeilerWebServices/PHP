<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.offsetunset">
 <refnamediv>
  <refname>Phar::offsetUnset</refname>
  <refpurpose>Eliminar un fichero de un phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Phar::offsetUnset</methodname>
   <methodparam><type>string</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  &phar.write;
  
  
  <para>
   Ésta es una implementación de la interfaz <interfacename>ArrayAccess</interfacename> que permite
   la manipulación directa del contenido de un archivo Phar utilizando
   los corchetes de acceso al array. offsetUnset se utiliza para borrar un
   fichero existente, y es llamado por el constructor de lenguaje
   <function>unset</function>.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       El nombre del fichero (ruta relativa) a eliminar en un Phar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si <link linkend="ini.phar.readonly">phar.readonly</link> es <literal>1</literal>,
   lanza una excepción de tipo <classname>BadMethodCallException</classname>, ya que modificar un Phar
   sólo está permitido cuando phar.readonly está establecido a <literal>0</literal>. Lanza un excepción de tipo
   <classname>PharException</classname> si existe cualquier problema volcando
   los cambios hechos al archivo Phar al disco.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::offsetUnset</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/ruta/a/mi.phar', 0, 'mi.phar');
try {
    // borra fichero.txt de mi.phar llamando a offsetUnset
    unset($p['fichero.txt']);
} catch (Exception $e) {
    echo 'No se pudo borrar fichero.txt: ', $e;
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::offsetExists</function></member>
    <member><function>Phar::offsetGet</function></member>
    <member><function>Phar::offsetSet</function></member>
    <member><function>Phar::unlinkArchive</function></member>
    <member><function>Phar::delete</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
