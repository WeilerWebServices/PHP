<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="phar.interceptfilefuncs" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::interceptFileFuncs</refname>
  <refpurpose>Ordenar a phar interceptar fopen, file_get_contents, opendir, y todas las funciones relacionadas con estadísticas</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>Phar::interceptFileFuncs</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Ordena a phar interceptar <function>fopen</function>, <function>readfile</function>,
   <function>file_get_contents</function>, <function>opendir</function>, y todas las
   funciones relacionadas con estadísticas. Si cualquiera de estas tres funciones es llamada desde dentro
   de un archivo phar con una ruta relativa, la llamada es modificada para acceder al fichero
   dentro del archivo phar. Se asume que las rutas absolutas son intentos para cargar
   ficheros externos desde el sistema de ficheros.
  </para>
  <para>
   Esta función hace posible ejecutar aplicaciones de PHP diseñadas para ejecutarse desde
   un disco duro como una aplicación phar.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   No tiene parámetros.
  </para>
  
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::interceptFileFuncs</function></title>
    <programlisting role="php">
<![CDATA[
<?php
Phar::interceptFileFuncs();
include 'phar://' . __FILE__ . '/fichero.php';
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Se asume que este phar está en <literal>/ruta/a/miphar.phar</literal> y que
   contiene <literal>fichero.php</literal> y
   <literal>fichero2.txt</literal>, si <literal>fichero.php</literal> contiene este código:
  </para>
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::interceptFileFuncs</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo file_get_contents('fichero2.txt');
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Normalmente, PHP buscará <literal>fichero2.txt</literal> en el directorio actual,
   que traducirá como el directorio del fichero.php, o el direcotorio actual de
   un usuario de la línea de comandos. En el código del ejemplo anterior,
   <function>Phar::interceptFileFuncs</function> ordena a PHP que considere
   el directorio actual como <literal>phar:///ruta/a/miphar.phar/</literal>
   y por lo tanto abra <literal>phar:///ruta/a/miphar.phar/fichero2.txt</literal>.
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
