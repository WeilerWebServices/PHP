<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="phar.setstub">
 <refnamediv>
  <refname>Phar::setStub</refname>
  <refpurpose>Establecer el cargador de PHP o la rutina de interoperabilidad de un archivo Phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Phar::setStub</methodname>
   <methodparam><type>string</type><parameter>stub</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>len</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  &phar.write;
  
  
  <para>
   Este método se utiliza para añadir una rutina de interoperabilidad cargadora a un nuevo archivo Phar, o
   reemlazar la rutina de interoperabilidad de un archivo Phar existente.
  </para>
  <para>
   La rutina de interoperabilidad cargadora de un archivo Phar se utiliza siempre que un archivo esté incluido directamente
   como en este ejemplo:
  </para>
  <programlisting role="php">
<![CDATA[
<?php
include 'miphar.phar';
?>
   ]]>
  </programlisting>
  <para>
   Al cargador no se accede cuando se incluye un archivo a través de la envoltura
   de flujos <literal>phar</literal> como aquí:
  </para>
  <programlisting role="php">
<![CDATA[
<?php
include 'phar://miphar.phar/un_fichero.php';
?>
   ]]>
  </programlisting>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stub</parameter></term>
     <listitem>
      <para>
       Una cadena o un gestor de flujo abierto para usarlo como la rutina de interoperabilidad ejecutable de este
       archivo phar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>len</parameter></term>
     <listitem>
      <para>
       
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Se lanza una excepción de tipo <classname>UnexpectedValueException</classname> si
   <link linkend="ini.phar.readonly">phar.readonly</link> está habilitado
   en php.ini.
   Se lanza una excepción de tipo <classname>PharException</classname> si se encuentra cualquier problema
   al volcar los cambios al disco.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>Phar::setStub</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $p = new Phar(dirname(__FILE__) . '/nuevo_phar.phar', 0, 'nuevo_phar.phar');
    $p['a.php'] = '<?php var_dump("Hola");';
    $p->setStub('<?php var_dump("Primero"); Phar::mapPhar("nuevo_phar.phar"); __HALT_COMPILER(); ?>');
    include 'phar://nuevo_phar.phar/a.php';
    var_dump($p->getStub());
    $p['b.php'] = '<?php var_dump("Mundo");';
    $p->setStub('<?php var_dump("Segundo"); Phar::mapPhar("nuevo_phar.phar"); __HALT_COMPILER(); ?>');
    include 'phar://nuevo_phar.phar/b.php';
    var_dump($p->getStub());
} catch (Exception $e) {
    echo 'Las operaciones de escritura sobre nuevo_phar.phar fallaron: ', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
string(4) "Hola"
string(84) "<?php var_dump("Primero"); Phar::mapPhar("nuevo_phar.phar"); __HALT_COMPILER(); ?>"
string(5) "Mundo"
string(84) "<?php var_dump("Segundo"); Phar::mapPhar("nuevo_phar.phar"); __HALT_COMPILER(); ?>"
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        Se añadió el parámetro <parameter>len</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::getStub</function></member>
    <member><function>Phar::createDefaultStub</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
