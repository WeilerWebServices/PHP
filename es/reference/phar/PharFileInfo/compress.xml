<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="pharfileinfo.compress">
 <refnamediv>
  <refname>PharFileInfo::compress</refname>
  <refpurpose>Comprimir la entrada del Phar actual con la compresión zlib o bzip2</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PharFileInfo::compress</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   Este método comprime el fichero dentro de un archivo Phar usando la compresión bzip2
   o zlib.
   Las extensiones <link linkend="ref.bzip2">bzip2</link> o <link linkend="ref.zlib">zlib</link>
   deben estar habilitadas para aprovechar
   esta característica. Además, si el fichero ya está comprimido,
   la extensión respectiva debe estar habilitada para poder
   descomprimir el fichero. Al igual que con toda la funcionalidad que modifica el contenido de
   un Phar, la variable INI <link linkend="ini.phar.readonly">phar.readonly</link>
   debe estar desactivada para poder realizar esto si el fichero está dentro de un archivo
   <classname>Phar</classname>. Los ficheros dentro de archivos <classname>PharData</classname> no tienen
   esta restricción.
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una excepción de tipo <classname>BadMethodCallException</classname> si
   la variable INI <link linkend="ini.phar.readonly">phar.readonly</link>
   está activada, la extensión <link linkend="ref.bzip2">bzip2</link>/<link
   linkend="ref.zlib">zlib</link>
   no está disponible.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>PharFileInfo::compress</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $p = new Phar('/ruta/a/mi.phar', 0, 'mi.phar');
    $p['mifichero.txt'] = 'hola';
    $fichero = $p['mifichero.txt'];
    var_dump($fichero->isCompressed(Phar::BZ2));
    $p['mifichero.txt']->compress(Phar::BZ2);
    var_dump($fichero->isCompressed(Phar::BZ2));
} catch (Exception $e) {
    echo 'Falló la operación de crear/modificar mi.phar: ', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(false)
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>Phar::compressFiles</function></member>
    <member><function>Phar::decompressFiles</function></member>
    <member><function>Phar::compress</function></member>
    <member><function>Phar::decompress</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
