<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="pharfileinfo.chmod">
 <refnamediv>
  <refname>PharFileInfo::chmod</refname>
  <refpurpose>Esteblecer los bits de permiso específicos del fichero</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>PharFileInfo::chmod</methodname>
   <methodparam><type>int</type><parameter>permissions</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   <function>PharFileInfo::chmod</function> permite el ajuste del bit de permiso
   ejecutable de un fichero, así como el bit de sólo lectura. El bit de escritura se
   ignora, y se establece en tiempo de ejecución basándose en la
   variable INI <link linkend="ini.phar.readonly">phar.readonly</link>.
   Al igual que con toda la funcionalidad que modifica el contenido de
   un Phar, la variable INI <link linkend="ini.phar.readonly">phar.readonly</link>
   debe estar desactivada para poder realizar esto si el fichero está dentro de un archivo
   <classname>Phar</classname>. Los ficheros dentro de archivos <classname>PharData</classname> no tienen
   esta restricción.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>permissions</parameter></term>
     <listitem>
      <para>
       Los permisos (véase <function>chmod</function>)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>PharFileInfo::chmod</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// asegurarse de que no existe
@unlink('nuevo_phar.phar');
try {
    $p = new Phar('nuevo_phar.phar', 0, 'nuevo_phar.phar');
    $p['fichero.sh'] = '#!/usr/local/lib/php
    <?php echo "hi"; ?>';
    // establecer el bit ejecutable
    $p['fichero.sh']->chmod(0555);
    var_dump($p['fichero.sh']->isExecutable());
} catch (Exception $e) {
    echo 'No se pudo crear/modificar el phar: ', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
