<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="pharfileinfo.setmetadata">
 <refnamediv>
  <refname>PharFileInfo::setMetadata</refname>
  <refpurpose>Establecer la metainformación específica de un fichero almacenda con un fichero</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>PharFileInfo::setMetadata</methodname>
   <methodparam><type>mixed</type><parameter>metadata</parameter></methodparam>
  </methodsynopsis>
  
  <para>
   <function>PharFileInfo::setMetadata</function> solamente debería usarse para almacenar información personalizada en un fichero
   que con pueda ser representado con la información almacenada existente con un fichero.
   La metainformación puede ralentizar significativamente la velocidad de carga de un archivo
   phar si la información es grande, o si existen muchos ficheros que contienen metainformación.
   Es importante observar que esos permisos de fichero están soportados nativamente dentro de un
   phar; es posible establecerlo con el
   método <function>PharFileInfo::chmod</function>. Al igual que con toda la funcionalidad que modifica el contenido de
   un Phar, la variable INI <link linkend="ini.phar.readonly">phar.readonly</link>
   debe estar desactivada para poder realizar esto si el fichero está dentro de un archivo
   <classname>Phar</classname>. Los ficheros dentro de archivos <classname>PharData</classname> no tienen
   esta restricción.
  </para>
  <para>
   Algunos posibles usos para la metainformación incluten pasar un usuario/grupo que debería establecerse
   al extraer el fichero desde el phar al disco. Otros usos podrían incluir
   explicitamente especificar un tipo MIME a devolver. Sin embargo, cualquier información útil que
   describa un fichero, excepto la que no debería estar contenida dentro del mismo, puede ser almacenada.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>metadata</parameter></term>
     <listitem>
      <para>
       Cualquier variable de PHP que contenga información a almacenar junto a un fichero
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un ejemplo de <function>PharFileInfo::setMetadata</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// asegurarse de que no existe
@unlink('nuevo_phar.phar');
try {
    $p = new Phar(dirname(__FILE__) . '/nuevo_phar.phar', 0, 'nuevo_phar.phar');
    $p['fichero.txt'] = 'hola';
    $p['fichero.txt']->setMetadata(array('usuario' => 'bill', 'tipo-mime' => 'text/plain'));
    var_dump($p['fichero.txt']->getMetadata());
} catch (Exception $e) {
    echo 'No se pudo crear y/o modificar el phar:', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["usuario"]=>
  string(4) "bill"
  ["tipo-mime"]=>
  string(10) "text/plain"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::hasMetadata</function></member>
    <member><function>PharFileInfo::getMetadata</function></member>
    <member><function>PharFileInfo::delMetadata</function></member>
    <member><function>Phar::setMetadata</function></member>
    <member><function>Phar::hasMetadata</function></member>
    <member><function>Phar::getMetadata</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
