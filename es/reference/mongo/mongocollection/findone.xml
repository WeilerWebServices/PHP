<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333265 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<refentry xml:id="mongocollection.findone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCollection::findOne</refname>
  <refpurpose>Realiza una consulta a esta colección, devolviendo sólo un elemento</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>MongoCollection::findOne</methodname>
   <methodparam choice="opt"><type>array</type><parameter>query</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>fields</parameter><initializer>array()</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>array()</initializer></methodparam>
  </methodsynopsis>
  <para>
   A diferencia de <function>MongoCollection::find</function>, este método
   solamente devolverá el <emphasis>primer</emphasis> resultado del conjunto de resultados,
   y no una instancia de <classname>MongoCursor</classname> que se pueda recorrer.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>query</parameter>
     </term>
     <listitem>
      <para>
       Los campos en los que buscar. El lenguaje de consultas de MongoDB es bastante
       extenso. El controlador de PHP, en la mayoría de los casos, pasará la consulta
       directamente al servidor, por lo que es una buena idea leer el manual de MongoDB sobre
       <link xlink:href="&url.mongodb.dochub.find;">find</link>.
      </para>
      <warning>
       <para>
        Asegúrese de que en todos los operadores de consulta especiales (los que empiezan
        con <literal>$</literal>) se usen comillas simples, ya que así PHP no intentará
        reemplazar <literal>"$exists"</literal> con el valor de la variable
        <literal>$exists</literal>.
       </para>
      </warning>
     </listitem>
    </varlistentry>   
    <varlistentry>
     <term>
      <parameter>fields</parameter>
     </term>
     <listitem>
      <para>
       Campos del resultado que se devolverán. El array está en el formato
       <literal>array('nombrecampo' => true, 'nombrecampo2' => true)</literal>.
       El campo <literal>_id</literal> se devuelve siempre.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>options</parameter>
     </term>
     <listitem>
      <para>
       Este parámetro es un array asociativo de la forma
       <literal>array("nombre" => &lt;valor&gt;, ...)</literal>. Las opciones
       disponibles actualmente son:
      </para>
      <itemizedlist>
       &mongo.command.parameters.maxtimems;
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el registro que coincide con la búsqueda, o &null;.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>MongoConnectionException</classname> si no se puede acceder
   a la base de datos.
  </para>
 </refsect1>
 
 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>1.5.0</entry>
      <entry>
       Se añadió el parámetro opcional <parameter>options</parameter>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1><!-- }}} -->
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>MongoCollection::findOne</methodname> buscando por id.</title>
   <para>Este ejemplo muestra cómo buscar un documento en una colección a partir de su id.</para>
   <programlisting role="php">
<![CDATA[
<?php

$artículos = $mongo->mi_bd->artículos;

$artículo = $artículos->findOne(array('_id' => new MongoId('47cc67093475061e3d9536d2')));

?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Ejemplo de <methodname>MongoCollection::findOne</methodname> a partir de una condición.</title>
   <para>Este ejemplo muestra como buscar un documento en una colección a partir de una condición, limitando los campos devueltos.</para>
   <programlisting role="php">
<![CDATA[
<?php

$usuarios = $mongo->mi_bd->usuarios;
$usuario = $usuarios->findOne(array('nombreusuario' => 'jwage'), array('contraseña'));
print_r($usuario);

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [_id] => MongoId Object
        (
        )

    [password] => test
)
]]>
   </screen>
   <para>
    Observe que, incluso si el documento no contiene el campo "nombreusuario", se limitan los resultados
    para que únicamente contengan el campo "contraseña".
   </para>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoCollection::find</function></member>
   <member><function>MongoCollection::insert</function></member>
   <member>Documentación de MongoDB sobre <link xlink:href="&url.mongodb.dochub.find;">find</link>.</member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
