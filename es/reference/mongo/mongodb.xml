<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328555 Maintainer: chuso Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongodb" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase MongoDB</title>
 <titleabbrev>MongoDB</titleabbrev>
 
 <partintro>
  
  <!-- {{{ Mongodb intro -->
  <section xml:id="mongodb.intro">
   &reftitle.intro;
   <para>
    Las instancias de esta clase se utilizan para interactuar con la base de datos. Para
    seleccionar una base de datos:
    <example>
     <title>Seleccionar una base de datos</title>
     <programlisting role="php">
<![CDATA[
<?php

$m = new MongoClient(); // conectar
$db = $m->selectDB("ejemplo");

?>
]]>
     </programlisting>
    </example>
    Los nombres de bases de datos pueden utilizar prácticamente cualquier carácter del rango ASCII.
    Sin embargo no pueden contener ni &quot; &quot;, &quot;.&quot; ni un texto vacío.
    El nombre "system" también está reservado.
   </para>
   <para>
    Hay algunos nombres poco usuales de bases de datos que sí son válidos: &quot;null&quot;, &quot;[x,y]&quot;, &quot;3&quot;, &quot;\&quot;&quot;, &quot;/&quot;.
   </para>
   <para>
    A diferencia de los nombres de colecciones, los nombres bases de datos pueden contener &quot;$&quot;.
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="mongodb.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDB</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoDB</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingoff">MongoDB::PROFILING_OFF</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingslow">MongoDB::PROFILING_SLOW</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="mongodb.constants.profilingon">MongoDB::PROFILING_ON</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">Campos</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>integer</type>
     <varname linkend="mongodb.props.w">w</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>public</modifier>
     <type>integer</type>
     <varname linkend="mongodb.props.wtimeout">wtimeout</varname>
     <initializer>10000</initializer>
    </fieldsynopsis>
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodb')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section>
   &reftitle.constants;
   <section xml:id="mongodb.constants.types">
    <title>Niveles de Logs de MongoDB</title>
    <variablelist>
     
     <varlistentry xml:id="mongodb.constants.profilingoff">
      <term><constant>MongoDB::PROFILING_OFF</constant></term>
      <term><constant>0</constant></term>
      <listitem>
       <simpara>
        Profiling deshabilitado.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongodb.constants.profilingslow">
      <term><constant>MongoDB::PROFILING_SLOW</constant></term>
      <term><constant>1</constant></term>
      <listitem>
       <simpara>
        Profiling habilitado para operaciones lentas (&gt;100 ms).
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="mongodb.constants.profilingon">
      <term><constant>MongoDB::PROFILING_ON</constant></term>
      <term><constant>2</constant></term>
      <listitem>
       <simpara>
        Profiling habilitado para todas las operaciones.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>
  
  <section>
   <title>Campos</title>
   <variablelist>
    <varlistentry xml:id="mongodb.props.w">
     <term><varname>w</varname></term>
     <term>1</term>
     <listitem>
      <para>
       Número de servidores en los que replicar los cambios antes de retornar éxito.
       Se hereda por las instancias de <classname>MongoCollection</classname> que deriven de
       este objeto. <literal>w</literal> sólo está disponible en versiones
       1.5.1+ del servidor MongoDB y 1.0.8+ del driver.
      </para>
      <para>
       <literal>w</literal> se usa cada vez que sea necesario ajustar el nivel
       de aceptación
       (<function>MongoCollection::insert</function>, 
       <function>MongoCollection::update</function>, 
       <function>MongoCollection::remove</function>, 
       <function>MongoCollection::save</function>, y
       <function>MongoCollection::ensureIndex</function> soportan esta
       opción). Con el valor predeterminado (1), una operación aceptada devolverá una vez
       que el servidor de bases de datos obtenga la operación. Si el servidor se cayera
       antes de que la operación fuera replicada a un secundario, podría perderse la operación
       de forma permanente. De esta forma, se puede especificar en <literal>w</literal> un valor
       superior a uno para garantizar que al menos un secundario ha recibido la operación antes
       de que se considere que ha habido éxito.
      </para>
      <para>
       Por ejemplo, si <literal>w</literal> fuera 2, el primario y un secundario
       tendrán un registro de la operación o el controlador lanzará una
       <classname>MongoCursorException</classname>. Puede ser tentador establecer en
       <literal>w</literal> el total de secundarios + primario, pero entonces,
       si un secundario se cayera, la operación fallaría y se lanzaría una excepción,
       por lo que suele ser más seguro establecer <literal>w=2</literal> (primario y
       un secundario).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="mongodb.props.wtimeout">
     <term><varname>wtimeout</varname></term>
     <term>10000</term>
     <listitem>
      <para>
       Número de milisegundos a esperar a que las réplicas de <literal>MongoDB::$w</literal> 
       tengan lugar. Se hereda por las instancias de <classname>MongoCollection</classname> que deriven de
       este objeto. <literal>w</literal> sólo está disponible en las versiones 1.5.1+ del
       servidor MongoDB y en las  1.0.8+ del driver.
      </para>
      <para>
       A no ser que se establezca un valor en <literal>wtimeout</literal>, el servidor esperará eternamente
       a que se replique a <literal>w</literal> servidores para finalizar. Por omisión el driver
       esperará 10 segundos. Puede modificarse este valor para alterar este
       comportamiento.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  
  <section>
   &reftitle.seealso;
   <para>
    Documentación de MongoDB de <link xlink:href="&url.mongodb.dochub.databases;">bases de datos</link>.
   </para>
  </section>
 </partintro>
 
 &reference.mongo.entities.mongodb;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
