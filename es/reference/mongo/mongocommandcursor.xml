<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 335760 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongocommandcursor" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase MongoCommandCursor</title>
 <titleabbrev>MongoCommandCursor</titleabbrev>
 
 <partintro>
  
  <!-- {{{ MongocommandCursor intro -->
  <section xml:id="mongocommandcursor.intro">
   &reftitle.intro;
   <para>
    Un cursor de comandos es similar a un <classname>MongoCursor</classname> excepto
    que se utiliza para recorrer los resultados de un comando de la base de datos
    en lugar de una consulta normal. Los cursores de comandos son útiles para recorrer
    conjuntos de resultados grandes que podrían exceder el límite del tamaño del documento (actualmente 16MB)
    de una respuesta <function>MongoDB::command</function> sencilla.
   </para>
   <para>
    Aunque se pueden crear cursores de comandos con
    <function>MongoCommandCursor::__construct</function> o el método de fábrica
    <function>MongoCommandCursor::createFromDocument</function>,
    normalmente se utilizarán ayudantes específicos de comandos como
    <function>MongoCollection::aggregateCursor</function>.
   </para>
   <para>
    Observe que el cursor no "contiene" los resultados del comando de la base de datos,
    solamente gestiona su recorrido. Por lo tanto, si se imprime un cursor (p.ej., con
    <function>var_dump</function> o <function>print_r</function>), se obtendrá
    el objeto cursor, no los documentos de resultados.
   </para>
  </section>
  
  <section>
   <title>Escenarios de un cursor</title>
   <para>
    Un <classname>MongoCommandCursor</classname> tiene dos "escenarios de vida": pre
    y pos comando. Cuando un cursor se crea, aún no ha contactado con la base
    de datos, por lo que está en un estado de precomando. Cuando el cliente primero intenta
    obtener un resultado (llamando a <function>MongoCommandCursor::rewind</function>,
    directa o indirectamente), el cursor se mueve al estado de poscomando.
   </para>
   <para>
    El tamaño del lote y el tiempo de espera del socket de cursor de comando puede configurarse tanto
    en el estado de precomando como en el de poscomando.
   </para>
   <para>
    <example xml:id="mongocommandcursor.stages.adding-options">
     <title>Añadir opciones a <classname>MongoCommandCursor</classname></title>
     <programlisting role="php">
<![CDATA[
<?php

$cursor = new MongoCommandCursor(...);

$cursor = $cursor->batchSize( 4 );

foreach ($cursor as $resultado) {
    var_dump($resultado);
}
?>
]]>
     </programlisting>
    </example>
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="mongocommandcursor.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCommandCursor</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoCommandCursor</classname>
     </ooclass>
     <oointerface>
      <interfacename>MongoCursorInterface</interfacename>
     </oointerface>
     <oointerface>
      <interfacename>Iterator</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongocommandcursor')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section role="seealso">
   &reftitle.seealso;
   <simplelist>
    <member><methodname>MongoDB::command</methodname></member>
    <member><methodname>MongoCollection::aggregateCursor</methodname></member>
   </simplelist>
  </section>
  
 </partintro>
 
 &reference.mongo.entities.mongocommandcursor;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
