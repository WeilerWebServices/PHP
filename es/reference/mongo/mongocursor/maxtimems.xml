<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334955 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongocursor.maxtimems" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoCursor::maxTimeMS</refname>
  <refpurpose>Establece un tiempo límite en el lado del cliente para esta consulta</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>MongoCursor</type><methodname>MongoCursor::maxTimeMS</methodname>
   <methodparam><type>int</type><parameter>ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Especifica el tiempo límite acumulativo en milisegundos permitido para que el sevidor
   procese operaciones en el cursor.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>ms</parameter>
    </term>
    <listitem>
     <para>
      Especifica el tiempo límite acumulativo en milisegundos permitido para que el
      sevidor procese operaciones en el cursor.
     </para>
    </listitem>
   </varlistentry>   
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Este cursor.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>MongoCursorException</classname> si este cursor ha comenzado a
   iterar.
  </para>
  <para>
   Causa que los métodos que obtengan resultados lancen una
   <classname>MongoExecutionTimeoutException</classname> si una consulta toma
   más del número de milisegundos especificado en procesarse.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <methodname>MongoCursor::maxTimeMS</methodname></title>
   <para>
    En el siguiente ejemplo, el servidor abortará la consulta si el cursor
    requiere más de dos segundos en precesarla para que devuelva los resultados.
   </para>
   <programlisting role="php">
<![CDATA[
<?php

$cursor = $collection->find();
$cursor->maxTimeMS(2000);

try {
    $results = iterator_to_array($cursor);
} catch (MongoExecutionTimeoutException $e) {
    echo "!la consulta tomó demasiado tiempo!";
}

?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    A diferencia de <methodname>MongoCursor::timeout</methodname>, el cual especifica un
    timepo límite en el cliente, <methodname>MongoCursor::maxTimeMS</methodname> puede ser
    empleado para que el servidor de MongoDB aborte consultas que tomen mucho tiempo en ejecutarse.
    Dicho tiempo es acumulativo para el tiempo de vida del cursor (es decir, cada lote
    contribuirá a este tiempo límite). El tiempo límite solamente considera el tiempo de procesamiento;
    el tiempo no efectivo no se considera.
   </para>
  </warning>
 </refsect1>
 
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
