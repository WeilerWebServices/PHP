<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334826 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongocursorexception" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase MongoCursorException</title>
 <titleabbrev>MongoCursorException</titleabbrev>
 
 <partintro>
  
  <!-- {{{ MongoCursorException intro -->
  <section xml:id="mongocursorexception.intro">
   &reftitle.intro;
   <para>
    Esta exceptción es causada por el acceso a un cursor de forma incorrecta o en un error al recibir
    una réplica. Obsérvese que esta excepción puede ser lanzada por cualquier petición a la base de
    datos que reciba una réplica, no solamente consultas. Las escrituras, comandos y cualquier otra
    operación que envie información a la base de datos y espere una respuesta, puede lanzar una
    <classname>MongoCursorException</classname>. La única excepción es
    <literal>new MongoClient()</literal> (crear una nueva conexión), la cual solamente
    lanzará <classname>MongoConnectionException</classname>s.
   </para>
   
   <para>
    Devuelve un mensaje de error específico para ayudar a diagnosticar el problema, y un
    código de error numérico asociado con la causa de la excepción.
   </para>
   
   <para>
    Por ejemplo, suponga que se intentan insertar dos documentos con el mimo _id:
    <programlisting role="php">
<![CDATA[
<?php

try {
    $collection->insert(array("_id" => 1), array("w" => 1));
    $collection->insert(array("_id" => 1), array("w" => 1));
}
catch (MongoCursorException $e) {
    echo "error message: ".$e->getMessage()."\n";
    echo "error code: ".$e->getCode()."\n";
}

?>
]]>
    </programlisting>
    This would produce output like:
    <programlisting role="txt">
<![CDATA[
mensaje de error: E11000 duplicate key error index: foo.bar.$_id_  dup key: { : 1 }
código del error: 11000
]]>
    </programlisting>
    Obsérvese que el código de error de MongoDB (11000) se usa para el código de error de PHP. El
    controlador de PHP utiliza el código de error "nativo" siempre que sea posible.
   </para>
   
   <para>
    La lista siguietne contiene errores comunes y sus causas. Los mensajes de error exactos están
    en cursiva; los errores donde el mensaje puede variar están descritos entre barras oblicuas.
   </para>
   
   <itemizedlist>
    <listitem>
     <para>
      <literal>cannot modify cursor after beginning iteration</literal> (no se puede modificar el cursor después de iniciar una iteración)
     </para>
     <para>
      Código: 0
     </para>
     <para>
      Se está invocando a un método que configura la consulta después de ejecutarla.
      Reinice el cursor y vuelva a intentarlo.
     </para>
     <para>
      Un ejemplo:
      <programlisting role="php">
<![CDATA[
<?php

try {
    $cursor = $colección->find();
    var_dump($cursor->getNext());

    // getNext() consulta a la base de datos, es demasiado tarde para establecer un límite
    $cursor->limit(1);
}
catch (MongoCursorException $e) {
    echo "mensaje de error: ".$e->getMessage()."\n";
    echo "código del error: ".$e->getCode()."\n";
}

// si bien, esto funcionará:
$cursor->getNext();
$cursor->reset();
$cursor->limit(1);

?>
]]>
      </programlisting>
     </para>
    </listitem>
    
    <listitem>
     <para>
      La obtención del siguiente lote envía errores
     </para>
     <para>
      Código: 1
     </para>
     <para>
      Podría no enviarse la consulta a la base de datos. Asegúrese de que la base de datos
      aún está activa y la red funciona bien.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>cursor not found</literal> (cursor no encontrado)
     </para>
     <para>
      Código: 2
     </para>
     <para>
      El controlador estuvo intentando obtener más resultados de la base de datos, pero
      ésta no tiene un registro de la consulta. Esto usualmente significa que el
      cursor a expirado en el lado del servidor: después de unos pocos minutos de inactividad,
      la base de datos destruirá un cursor (véase
      <function>MongoCursor::immortal</function> para información sobre cómo prevenir
      esto).
     </para>
     <para>
      Un ejemplo:
      <programlisting role="php">
<![CDATA[
<?php

try {
    $cursor = $colección->find();
    $cursor->getNext();

    // dormir durante 15 minutos
    sleep(60*15);

    while ($cursor->hasNext()) {
        $cursor->getNext();
    }
}
catch (MongoCursorException $e) {
    echo "mensaje de error: ".$e->getMessage()."\n";
    echo "código del error: ".$e->getCode()."\n";
}

?>
]]>
      </programlisting>
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>cursor->buf.pos is null</literal> (cursor->buf.pos es null)
     </para>
     <para>
      Código: 3
     </para>
     <para>
      Esto podría indicar que se ha quedado sin RAM o alguna otra circunstancia
      extraordinaria.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>couldn't get response header</literal> (no se pudo obtener la cabecera de respuesta)
     </para>
     <para>
      Código: 4
     </para>
     <para>
      Un error común si la base de datos o la red se caen. Esto significa que el
      controlador podría no obtener una respuesta de la conexión.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>no db response</literal> (sin resupesta de la base de datos)
     </para>
     <para>
      Código: 5
     </para>
     <para>
      Esto podría incluso no ser un error, por ejemplo, el comando de base de datos
      "shutdown" no devuelve respuesta alguna. Sin embargo, si se espera una
      respuesta, esto significa que la base de datos no proporcionó ninguna.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>bad response length: %d, did the db assert?</literal> (longitud de respuesta errónea: %d, ¿se declaró la bd?
     </para>
     <para>
      Código: 6
     </para>
     <para>
      Esto significa que la base de datos indica que su respuesta fue menor que 0. Este
      error probablemente indica un error de red o corrupción de la base de datos.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>incomplete header</literal> (cabecera incompleta)
     </para>
     <para>
      Código: 7
     </para>
     <para>
      Muy poco usual. Ocurre si la respuesta de la base de datos se inicia correctamente,
      pero se interrumpe a la mitad. Probablemente indica un problema de red.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>incomplete response</literal> (respuesta incompleta)
     </para>
     <para>
      Código: 8
     </para>
     <para>
      Muy poco usual. Ocurre si la respuesta de la base de datos se inicia correctamente,
      pero se interrumpe a la mitad. Probablemente indica un problema de red.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>couldn't find a response</literal> (no se pudo encontrar una respuesta)
     </para>
     <para>
      Código: 9
     </para>
     <para>
      Si la respuesta fue almacenada en caché y ahora no se puede localizar.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>error getting socket</literal> (error al obtener el socket)
     </para>
     <para>
      Código: 10
     </para>
     <para>
      El socket fue cerrado o se encontró con un error. El controlador debería
      reconectar automáticamente (si es posible) en la siguiente operación.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>couldn't find reply, please try again</literal> (no se pudo encontrar la réplica, inténtelo de nuevo)
     </para>
     <para>
      Código: 11
     </para>
     <para>
      El controlador guarda cualquier respuesta de la base de datos que no pudo hacer coincidir inmediatamente con una
      petición. Esta excepción ocurre si el controlador ya ha pasado la
      respuestta de la petición y no puede encontrarla en su caché.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>error getting database response: errstr</literal> (error al obtener una respuesta de la base de datos: errstr)
     </para>
     <para>
      <literal>WSA error getting database response: errstr</literal> (error WSA al obtener una respuesta de la base de datos: errstr)
     </para>
     <para>
      "errstr" es un error de E7S reportado directamente desde el subsistema de sockets
      de C. En Windows, el mensaje de error está prefijado con "WSA".
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>Timeout error</literal> (Error de tiempo de espera)
     </para>
     <para>
      Código: 13
     </para>
     <para>
      Si hubo un error mientras se esperaba a que se completase una consulta.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>couldn't send query: &lt;various&gt;</literal> (no se pudo enviar la consulta: &lt;variado&gt;)
     </para>
     <para>
      Código: 14
     </para>
     <para>
      Error del socket de C en el envío.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>max number of retries exhausted, couldn't send query</literal> (número máximo de reintentos agotados, no se pudo enviar la consulta)
     </para>
     <para>
      Código: 19
     </para>
     <para>
      El controlador automáticamente reintentará realizar consultas "planas" (no comandos) un
      par de veces si el primer intento falló por ciertas razones. Esto es para causar menos
      excepciones durante la tolerancia a fallos del conjunto de réplicas (aunque probablemente
      aún tendrá que tratar con alguna) y pasar por alto asuntos de red
      transitorios.
     </para>
     <para>
      Esto también puede ser causado porque el controlador no es capaz de reconectar de ningún modo a la
      base de datos (si, por ejemplo, la base de datos está ilocalizable).
     </para>
     <para>
      Versión 1.2.2+.
     </para>
    </listitem>
   </itemizedlist>
  </section>
  
  
  <section>
   <title>Errores pasados a través de la base de datos</title>
   <para>
    Los errores de la base de datos deberían siempre desencadenar
    <classname>MongoCursorExceptions</classname> en consultas.
    Los mensajes y los códigos de error son enviados directamente desde la base de datos, por lo que
    se deberían poder ver los errores coincidentes en el registro (log) de la base de datos.
   </para>
   
   <para>
    A continuación se enumeran algunos errores de base de datos comunes:
   </para>
   
   <itemizedlist>
    <listitem>
     <para>
      <literal>E11000 duplicate key error index: foo.bar.$X  dup key: { /* ... */ }</literal>
     </para>
     <para>
      Código: 11000
     </para>
     <para>
      Error de base de datos para claves duplicadas.
     </para>
    </listitem>
    
    <listitem>
     <para>
      <literal>not master</literal>
     </para>
     <para>
      Códigos: 10107, 13435, y 10058
     </para>
     <para>
      Errores de no haber maestro, conducidos a través de la base de datos. Cada uno de estos errores
      causará que el controlador se desconecte e intente encontrar un nuevo primario. El
      error real que se obtiene en la tolerancia a fallos podría no ser un error "not master",
      dependiendo de cuando ocurra el cambio en el primario.
     </para>
    </listitem>
   </itemizedlist>
   
  </section>
  <!-- }}} -->
  
  <section xml:id="mongocursorexception.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoCursorException</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoCursorException</classname>
     </ooclass>
     <ooclass>
      <modifier>extends</modifier>
      <classname>MongoException</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
 </partintro>
 
 &reference.mongo.entities.mongocursorexception;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
