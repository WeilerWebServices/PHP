<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338645 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongomaxkey" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase MongoMaxKey</title>
 <titleabbrev>MongoMaxKey</titleabbrev>
 
 <partintro>

  <warning>
   &mongo.alternative.class.note;
   <simplelist role="alternatives">
    <member><classname>MongoDB\BSON\MaxKey</classname></member>
   </simplelist>
  </warning>
  
  <!-- {{{ MongoBinData intro -->
  <section xml:id="mongomaxkey.intro">
   &reftitle.intro;
   <para>
    <classname>MongoMaxKey</classname> es un tipo especial empleado por la base de datos
    que se evalúa mayor que todos los demás valores BSON posibles. Así, si una consulta está
    ordenada ascendentemente por un campo, cualquier documento con un
    <classname>MongoMinKey</classname> como su valor será devuelto el último.
   </para>
   <para>
    <classname>MongoMaxKey</classname> no tiene campos asociados, métodos, o
    constantes. Es meramente el valor "más grande" que se puede representar en la
    base de datos.
   </para>
   <note>
    <simpara>
     <classname>MongoMaxKey</classname> se utilizar internamente en MongoDB para
     indexar y fragmentar. Generalmente, no existe razón para utilizar esta clase en
     una aplicación.
    </simpara>
   </note>
  </section>
  <!-- }}} -->
  
  <section xml:id="mongomaxkey.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoMaxKey</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoMaxKey</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section xml:id="mongomaxkey.example">
   <title>Usando <classname>MongoMaxKey</classname> como valor</title>
   <programlisting role="php">
<![CDATA[
<?php

$collection->insert(array("task" => "dishes", "doBy" => new MongoMaxKey));
$collection->insert(array("task" => "staff meeting", "doBy" => new MongoDate(strtotime("+4 days"))));

$cursor = $collection->find()->sort(array("doBy" => 1));

?>
]]>
   </programlisting>
   <para>
    El cursor devolverá el documento 'staff meeting' seguido del documento
    'dishes'. El documento 'dishes' siempre será devuelto el último, independientemente de
    lo que se añada a la colección (a menos que otros documentos se añadan con
    <classname>MongoMaxKey</classname> en su campo "doBy").
   </para>
  </section>
  
  <simplesect role="seealso">
   &reftitle.seealso;
   <simplelist>
    <member><classname>MongoMinKey</classname></member>
   </simplelist>
  </simplesect>
 </partintro>
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
