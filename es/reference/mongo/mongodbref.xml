<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338645 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.mongodbref" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase MongoDBRef</title>
 <titleabbrev>MongoDBRef</titleabbrev>
 
 <partintro>

  <warning>
   &mongo.noalternative.class.note;
   <para>
    El concepto de referencias de bases de datos, y por consiguiente esta clase, están
    obsoletos en la base de datos.
   </para>
  </warning>
  
  <!-- {{{ MongoGridfsCursor intro -->
  <section xml:id="mongodbref.intro">
   &reftitle.intro;
   <para>
    Esta clase puede usarse para crear enlaces ligeros entre objetos de
    diferencias colecciones.
   </para>
   <para>
    <emphasis>Motivación</emphasis>: Supongamos que necesitamos referirnos a un documento en
    otra colección. La forma más fácil es crear un nuevo campo en el documento actual.
    Por ejemplo, si tenemos una colección "personas" y una colección "direcciones",
    quizás queramos crear un enlace entre cada documento de persona y un documento
    de dirección:
    <example>
     <title>Vincular documentos</title>
     <programlisting role="php">
<![CDATA[
<?php

$personas = $db->personas;
$direcciones = $db->direcciones;

$miDireccion = array("linea 1" => "Calle Mayor, 123", 
    "linea 2" => null,
    "ciudad" => "Springfield",
    "estado" => "Vermont",
    "pais" => "USA");

// guardamos la direccion
$direcciones->insert($miDireccion);

// guardar una persona con una referencia a la direccion
$yo = array("nombre" => "Fred", "direccion" => $miDireccion['_id']);
$personas->insert($yo);

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Posteriormente podremos encontrar la dirección de la persona consultando la colección
    "direcciones" con el <classname>MongoId</classname> que almacenamos en la colección
    "personas".
   </para>
   <para>
    Supongamos ahora que tenemos un caso más general, donde no sabemos qué
    colección (o incluso qué base de datos) contiene el documento referenciado.
    <classname>MongoDBRef</classname> es una buena elección para estos casos, ya que
    es un formato común que todos los drivers y bases de datos podrán interpretar.
   </para>
   <para>
    Si cada persona tuviera una lista de cosas que les gusta, y éstas pudieran venir a
    partir de varias colecciones, como "hobbies", "deportes", "libros", etc., podríamos
    usar <classname>MongoDBRef</classname> para seguir la pista de con qué colección se asocia
    cada gusto:
    <example>
     <title>Crear vínculos MongoDBRef</title>
     <programlisting role="php">
<![CDATA[
<?php

$personas = $db->selectCollection("personas");

// modelismo ferroviario está en la colección "hobbies"
$ferroRef = MongoDBRef::create("hobbies", $modelismoFerroviario['_id']);
// fútbol está en la colección "deportes"
$futbolRef = MongoDBRef::create("deportes", $futbol['_id']);

// ahora, cuando consultemos el documento, sabremos a qué colección
// pertenecen cada ítem de "gustos"
$personas->insert(array("nombre" => "Fred", "gustos" => array($ferroRef, $futbolRef)));

?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Las referencias a bases de datos se pueden concebir como hipervínculos: proporcionan una dirección
    única a otro documento, pero no cargan ni redirigen automáticamente al
    enlace/referencia.  
   </para>
   <para>
    Una referencia a una base de datos es un array asociativo, no una instancia de
    <classname>MongoDBRef</classname>, de modo que esta clase es ligeramente diferente al
    resto de clases de tipos de datos. Esta clase contiene únicamente métodos estáticos
    para poder manipular las referencias a bases de datos.
   </para>
  </section>
  <!-- }}} -->
  
  <section xml:id="mongodbref.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDBRef</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>MongoDBRef</classname>
     </ooclass>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodbref')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
  <section>
   &reftitle.seealso;
   <para>
    Documentación de MongoDB sobre <link xlink:href="&url.mongodb.dochub.dbrefs;">referencias a bases de datos</link>.
   </para>
  </section>
 </partintro>
 
 &reference.mongo.entities.mongodbref;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

<!--  LocalWords:  trainRef soccerRef MongoDBRef
 -->
