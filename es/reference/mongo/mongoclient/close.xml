<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338152 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="mongoclient.close" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoClient::close</refname>
  <refpurpose>Cierra esta conexión</refpurpose>
 </refnamediv>

 <refsynopsisdiv role="soft-deprecation-notice">
  <sidebar>
   &mongo.noalternative.method.note;
  </sidebar>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>MongoClient::close</methodname>
   <methodparam choice="opt"><type>boolean|string</type><parameter>connection</parameter></methodparam>
  </methodsynopsis>
  <para>
   El método <function>MongoClient::close</function> cierra forzosamente una
   conexión a la base de datos, incluso si se están usando conexiones persistentes.
   <emphasis>Nunca</emphasis> se debería realizar esto bajo circunstancias
   normales.
  </para>
  <para>
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>connection</parameter>
     </term>
     <listitem>
      <para>
       La conexión. Si no se proporciona una, o es &false;, la conexión que fuera
       seleccionada para escrituras será cerrada. En una configuración de un solo nodo,
       esto es, la conexión completa, y si se está conectado a un
       conjunto de réplica, close() <emphasis>solamente</emphasis> cerrará la
       conexión al servidor primario.
      </para>
      <para>
       Si connection es &true;, todas las conexiones disponibles en el administrador
       de conexiones serán cerradas. Esto puede incluir conexiones a las que no hace
       referencia la cadena de conexión usada para crear el objeto que
       se usa para invocar el cierre.
      </para>
      <para>
       Si connection es un argumento de tipop string, solamente se cerrará la
       conexión identificada por este hash. Los hash son identificadores para una
       conexión que pueden obtenerse llamando a
       <function>MongoClient::getConnections</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve si la conexión fue cerrada con éxito.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>MongoClient::close</function></title>
   <para>Este ejemplo muestra cómo cerrar selectivamente todas las conexiones
    únicamente a secundarios.</para>
   <programlisting role="php">
<![CDATA[
<?php
// Conectar a un conjunto de réplica
$a = new MongoClient("mongodb://whisky:13000/?replicaset=seta");

$conexiones = $a->getConnections();

foreach ( $conexiones as $con )
{
    // Iterar sobre todas las conexiones, y cuando el tipo es "SECONDARY"
    // cerramos la conexión
    if ( $con['connection']['connection_type_desc'] == "SECONDARY" )
    {
        echo "Cerrando '{$con['hash']}': ";
        $cerrada = $a->close( $con['hash'] );
        echo $cerrada ? "ok" : "falló", "\n";
    }
}
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Closing 'whisky:13001;X;4948': ok
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>1.3.0</entry>
       <entry>
        <para>
         El parámetro <parameter>connection</parameter> de esta función fue
         añadido en la versión 1.3.0. Anteriormente, solamente se podía cerra la conexión
         de escritura mediante este método.
        </para>
       </entry>
      </row>
      <row>
       <entry>1.2.0</entry>
       <entry>
        <para>
         Antes de la versión 1.2.0, el controlador no utilizaba conexiones persistentes
         de forma predeterminada, por lo que todas las conexiones se cerraban tan pronto como una
         conexión de MongoDB estuviera fuera de ámbito. Desde la versión 1.2.0, este ya no es el
         caso, y es una mala idea invocar a close, ya que se podría terminar por
         sobrecargar el servidor con conexiones bajo una alta carga.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>MongoClient::getConnections</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
--> 
