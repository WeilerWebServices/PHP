<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330593 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<refentry xml:id="function.cubrid-fetch" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_fetch</refname>
  <refpurpose>Obtener la siguiente fila de un conjunto de resultados</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>cubrid_fetch</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>type</parameter><initializer>CUBRID_BOTH</initializer></methodparam>  
  </methodsynopsis>
  <para>
   La función <function>cubrid_fetch</function> se usa para obtener una única fila del resultado de la consulta. El cursor se mueve automáticamente a la siguiente columna después de obtener el resultado.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem><para><parameter>result</parameter> proviene de una llamada a la función <function>cubrid_execute</function>.</para></listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem><para>Tipo de array del resultado obtenido: CUBRID_NUM, CUBRID_ASSOC,
      CUBRID_BOTH, CUBRID_OBJECT. Si se operan con objetos lob, se puede
      usar CUBRID_LOB.</para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Un array de resultados u objeto, cuando el proceso tiene éxito.</para>
  <para>&false;, cuando no existen más filas; NULL, cuando el proceso no tiene éxito.</para>
  <para>El resultado se puede recibir como array o como objeto, por lo que se puede decidir qué tipo de datos usar estableciendo el argumento <parameter>type</parameter>. La variable <parameter>type</parameter> se puede establecer a uno de los siguientes valores:</para>
  <simplelist>
   <member>CUBRID_NUM : Array numérico (basado en 0)</member>
   <member>CUBRID_ASSOC : Array asociativo</member>
   <member>CUBRID_BOTH : Array numérico y asociativo (predeterminado)</member>
   <member>CUBRID_OBJECT : Objeto que tiene el nombre del atributo como el nombre de la columna del resultado de la consulta</member>
  </simplelist>  
  <para>Cuando se omite el argumento <parameter>type</parameter>, el resultado será recibido usando la opción predeterminada CUBRID_BOTH. Cuando se quiere recibir el resultado de la consulta como objeto, el nombre de la columna del resultado debe obedecer las reglas de nombres de los identificadores de PHP. Por ejemplo, un nombre de columna como "count(*)" no puede ser recibido como objeto.</para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_fetch</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$conn = cubrid_connect("localhost", 33000, "demodb");
$solicitud = cubrid_execute($conexión, "SELECT * FROM stadium WHERE nation_code='GRE' AND seats > 10000");

printf("%-40s %-10s %-6s %-20s\n", "name", "area", "seats", "address");
while ($fila = cubrid_fetch($solicitud)) {
    printf("%-40s %-10s %-6s %-20s\n", 
        $fila["name"], $fila["area"], $fila["seats"], $fila["address"]);
}

// si se operan con objetos lob, se puede usar cubrid_fetch($solicitud, CUBRID_LOB)

cubrid_close_request($solicitud);

cubrid_disconnect($conexión);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
name                                     area       seats  address             
Panathinaiko Stadium                     86300.00   50000  Athens, Greece      
Olympic Stadium                          54700.00   13000  Athens, Greece      
Olympic Indoor Hall                      34100.00   18800  Athens, Greece      
Olympic Hall                             52400.00   21000  Athens, Greece      
Olympic Aquatic Centre                   42500.00   11500  Athens, Greece      
Markopoulo Olympic Equestrian Centre     64000.00   15000  Markopoulo, Athens, Greece
Faliro Coastal Zone Olympic Complex      34650.00   12171  Faliro, Athens, Greece
Athens Olympic Stadium                   120400.00  71030  Maroussi, Athens, Greece 
Ano Liossia                              34000.00   12000  Ano Liosia, Athens, Greece
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_execute</function></member>
    <member><function>cubrid_fetch_array</function></member>
    <member><function>cubrid_fetch_row</function></member>
    <member><function>cubrid_fetch_assoc</function></member>
    <member><function>cubrid_fetch_object</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
