<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330593 Maintainer: lehmer Status: ready -->

<refentry xml:id="function.cubrid-get-db-parameter" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_get_db_parameter</refname>
  <refpurpose>Devuelve los parámetros de la base de datos CUBRID</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>cubrid_get_db_parameter</methodname>
   <methodparam><type>resource</type><parameter>conn_identifier</parameter></methodparam>  
  </methodsynopsis>
  <para>
   Esta función devuelve los parámetros de la base de datos CUBRID o FALSE en
   caso de error. Devuelve un array asociativo con los valores de los siguientes
   parámetros:
  </para>
  <para>
   <simplelist>
    <member><constant>PARAM_ISOLATION_LEVEL</constant></member>
    <member><constant>PARAM_LOCK_TIMEOUT</constant></member>
    <member><constant>PARAM_MAX_STRING_LENGTH</constant></member>
    <member><constant>PARAM_AUTO_COMMIT</constant></member>
   </simplelist>
  </para>
  <para>
   <table>
    <title>Parámetros de la base de datos</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Parámetro</entry>
       <entry>Descripción</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PARAM_ISOLATION_LEVEL</entry>
       <entry>El nivel de aislamiento de la transacción.</entry>
      </row>
      <row>
       <entry>LOCK_TIMEOUT</entry>
       <entry>CUBRID proporciona la característica de bloqueo de tiempo de espera, que establece el tiempo
        de espera (en segundos) para el bloqueo hasta que el ajuste de bloqueo de transacción se
        permite. El valor predeterminado del parámetro lock_timeout_in_secs es -1, lo que
        significa que la aplicación cliente esperará indefinidamente hasta que se
        permita el bloqueo de transacción.
       </entry>
      </row>
      <row>
       <entry>PARAM_AUTO_COMMIT</entry>
       <entry>En CUBRID PHP, el modo de auto consigna es desabilitado por omisión por
        el gestor de transacciones. Puede establecerse usando
        la función <function>cubrid_set_autocommit</function>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  <para>
   La siguiente tabla muestra los niveles de aislamiento desde 1 hasta 6. Consiste en
   esquema de tabla (fila) y nivel de aislamiento:
   <table>
    <title>Niveles de Aislamiento Soportados por CUBRID</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Nombre</entry>
       <entry>Descripción</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>SERIALIZABLE (6)</entry>
       <entry>En este nivel de aislamiento, los problemas concernientes a la concurrencia (p.ej.
        lectura basura, lectura no repetible, lectura fantasma, etc.) no
        ocurren.</entry>
      </row>
      <row>
       <entry>CLASE DE LECTURA REPETIBLE con INSTANCIAS DE LECTURA REPETIBLE (5)</entry>
       <entry>Otra transacción T2 no puede actualizar el esquema de una tabla A mientras
        la transacción T1 está viendo la tabla A.
        La transacción T1 puede experimentar lectura fantasma para el registro R que fue
        insertado por otra transacción T2 cuando está obtenido repetidamente un
        registro especificado.</entry>
      </row>
      <row>
       <entry>CLASE DE LECTURA REPETIBLE con INSTANCIAS CONSIGNADAS DE LECTURA (o ESTABILIDAD DE CURSOR) (4)</entry>
       <entry>Otra transacción T2 no puede actualizar el esquema de una tabla A mientras
        la transacción T1 está viendo la tabla A.
        La transacción T1 puede experimentar lectura R (lectura no repetible) que fue
        actualizada y consignada por otra transacción T2 cuando está obteniendo
        repetidamente el registro R.</entry>
      </row>
      <row>
       <entry>CLASE DE LECTURA REPETIBLE con INSTANCIAS NO CONSIGNADAS DE LECTURA (3)</entry>
       <entry>Nivel de aislamiento predeterminado. Otra transacción T2 no puede actualizar
        el esquema de la tabla A mientras la transacción T1 está viendo la tabla A.
        La transacción T1 puede experimentar lectura R' (lectura basura) para el registro que
        fue actualizado pero no consignado por otra transacción T2.</entry>
      </row>
      <row>
       <entry>CLASE CONSIGNADA DE LECTURA con INSTANCIAS CONSIGNADAS DE LECTURA (2)</entry>
       <entry>La transacción T1 puede experimentar lectura A' (lectura no repetible) para
        la tabla que fue actualizada y consignada por otra transacción T2
        mientras que está viendo la tabla A repetidamente. La transacción T1 puede experimentar
        lectura R' (lectura no repetible) para el registro que fue actualizado y
        consignado por otra transacción T2 mientras se está obteniendo el registro
        R repetidamente.</entry>
      </row>
      <row>
       <entry>CLASE CONSIGNADA DE LECTURA con INSTANCIAS NO CONSIGNADAS DE LECTURA (1)</entry>
       <entry>La transacción T1 puede experimentar lectura A' (lectura no repetible) para
        la tabla que fue actualizada y consignada por otra transacción T2
        mientras que se ve repetidamente la tabla A. La transacción T1 puede experimentar
        lectura R' (lectura basura) para el registro qeu fue actualizado pero no consignado
        por otra transacción T2.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>conn_identifier</parameter></term>
     <listitem><para>
      La conexión CUBRID. Si el identificador de conexión no se especifica,
      se asume el último enlace abierto por <function>cubrid_connect</function>.
      </para></listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Una matriz asociativa con los parámetros de la base de datos CUBRID; en caso de éxito.
  </para>
  <para>
   &false; en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
 <para>
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.4.0</entry>
      <entry>
       Cambia LOCK_TIMEOUT a PARAM_LOCK_TIMEOUT, y MAX_STRING_LENGTH a
       PARAM_MAX_STRING_LENGTH en el resultado.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_get_db_parameter</function></title>
   <programlisting role="php">
<![CDATA[
<?php
printf("%-30s %s\n", "CUBRID PHP Version:", cubrid_version());

printf("\n");

$conn = cubrid_connect("localhost", 33088, "demodb");

if (!$conn) {
    die('Connect Error ('. cubrid_error_code() .')' . cubrid_error_msg());
}

$db_params = cubrid_get_db_parameter($conn);

while (list($param_name, $param_value) = each($db_params)) {
    printf("%-30s %s\n", $param_name, $param_value);
}

printf("\n");

$server_info = cubrid_get_server_info($conn);
$client_info = cubrid_get_client_info();

printf("%-30s %s\n", "Server Info:", $server_info);
printf("%-30s %s\n", "Client Info:", $client_info);

printf("\n");

$charset = cubrid_get_charset($conn);

printf("%-30s %s\n", "CUBRID Charset:", $charset);

cubrid_disconnect($conn);

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
CUBRID PHP Version:            9.1.0.0001

PARAM_ISOLATION_LEVEL          3
LOCK_TIMEOUT                   -1
MAX_STRING_LENGTH              1073741823
PARAM_AUTO_COMMIT              1

Server Info:                   9.1.0.0212
Client Info:                   9.1.0

CUBRID Charset:                iso8859-1
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_set_db_parameter</function></member>
    <member><function>cubrid_get_autocommit</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
