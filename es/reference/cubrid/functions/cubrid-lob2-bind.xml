<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="function.cubrid-lob2-bind" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_bind</refname>
  <refpurpose>Vincula un objeto LOB o un string como un objeto LOB a una sentencia preparada como parámetros</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_bind</methodname>
   <methodparam><type>resource</type><parameter>req_identifier</parameter></methodparam>
   <methodparam><type>int</type><parameter>bind_index</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>bind_value</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>bind_value_type</parameter></methodparam>
  </methodsynopsis>
  <para>
   La función <function>cubrid_lob2_bind</function> se usa para vincular datos BLOB/CLOB
   a un parámetro de sustitución de signo de interrogación correspondiente en la sentencia SQL que fue pasada
   a <function>cubrid_prepare</function>. Si <parameter>bind_value_type</parameter> 
   no se proporciona, el string será "BLOB" de manera predeterminada. Pero si se usa
   antes <function>cubrid_lob2_new</function>, <parameter>bind_value_type</parameter>
   será consistente con <parameter>type</parameter> en <function>cubrid_lob2_new</function> de manera predeterminada.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>req_identifier</parameter></term>
     <listitem>
      <para>Un identificador de petición, como un resultado de <function>cubrid_prepare</function>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bind_index</parameter></term>
     <listitem>
      <para>La ubicacaión de los parámetros de vinculación. Comienza en 1.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bind_value</parameter></term>
     <listitem>
      <para>El valor real para la vinculación.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>bind_value_type</parameter></term>
     <listitem>
      <para>Debe ser "BLOB" o "CLOB" y no distingue mayúsculas/minúsculas. Si no se proporciona, el valor predeterminado es "BLOB".</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &true;, cuando el proceso tiene éxito.
  </para>
  <para>
   &false;, cuando el proceso no tiene éxito.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_lob2_bind</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// Tabla: test_lob (id INT, contents CLOB)

$conexión = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conexión,"DROP TABLE if exists test_lob");
cubrid_execute($conexión,"CREATE TABLE test_lob (id INT, contents CLOB)");

$petición = cubrid_prepare($conexión, "INSERT INTO test_lob VALUES (?, ?)");

cubrid_bind($petición,1, 3);

$lob = cubrid_lob2_new($conexión, 'CLOB');
cubrid_lob2_bind($petición, 2, $lob);

cubrid_execute($petición);

cubrid_bind($petición, 1, 4);

cubrid_lob2_bind($petición, 2, 'CUBRID LOB2 TEST', 'CLOB');

cubrid_execute($petición);

cubrid_disconnect($conexión);
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_lob2_new</function></member>
    <member><function>cubrid_lob2_close</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
