<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="function.cubrid-lob2-seek" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>cubrid_lob2_seek</refname>
  <refpurpose>Mover el cursor de un objeto LOB</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>cubrid_lob2_seek</methodname>
   <methodparam><type>resource</type><parameter>lob_identifier</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>origin</parameter><initializer>CUBRID_CURSOR_CURRENT</initializer></methodparam>
  </methodsynopsis>
  <para>
   La función <function>cubrid_lob2_seek</function> se usa para mover la posición
   del cursor de un objeto LOB mediante el valor establecido en el argumento
   <parameter>offset</parameter>, a la dirección establecida en el argumento <parameter>origin</parameter>.
  </para>
  <para>
   Para establecer el argumento <parameter>origin</parameter>, se puede usar CUBRID_CURSOR_FIRST
   para establecer la posición del cursor avanzando <parameter>offset</parameter> unidades desde
   el primer comienzo. En este caso, <parameter>offset</parameter> debe ser un valor positivo.
  </para>
  <para>
   Si se usa CUBRID_CURSOR_CURRENT para <parameter>origin</parameter>, se puede
   avanzar o retroceder, por lo que <parameter>offset</parameter> puede ser positivo o negativo.
  </para>
  <para>
   Si se usa CUBRID_CURSOR_LAST para <parameter>origin</parameter>, se puede
   retroceder <parameter>offset</parameter> unidades desde el final del objeto LOB, por lo que
   <parameter>offset</parameter> solamente puede ser positivo.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>lob_identifier</parameter></term>
     <listitem>
      <para>Un identificador de LOB, como un resultado de <function>cubrid_lob2_new</function> u obtenido de un conjunto de resultados.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>El número de unidades que se quiere mover el cursor.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>origin</parameter></term>
     <listitem>
      <para>Este parámetro admite los siguientes valores:</para>
      <para>CUBRID_CURSOR_FIRST: avanzar desde el primer comienzo.</para>
      <para>CUBRID_CURSOR_CURRENT: avanzar o retroceder desde la posición actual del cursor.</para>
      <para>CUBRID_CURSOR_LAST: retroceder desde el final del objeto LOB.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &true; si el proceso tiene éxito y &false; en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>cubrid_lob2_seek</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// test_lob (id INT, contents CLOB)
$conexión = cubrid_connect("localhost", 33000, "demodb", "dba", "");

cubrid_execute($conexión,"DROP TABLE if exists test_lob");
cubrid_execute($conexión,"CREATE TABLE test_lob (id INT, contents CLOB)");
$petición = cubrid_prepare($conexión, "INSERT INTO test_lob VALUES(2, ?)");

$lob = cubrid_lob2_new($conexión, 'CLOB');
$longitud = cubrid_lob2_write($lob, "Hello world");

cubrid_lob2_seek($lob, 0, CUBRID_CURSOR_LAST);
cubrid_lob2_write($lob, "beautiful");

cubrid_lob2_seek($lob, 15, CUBRID_CURSOR_FIRST);
$datos = cubrid_lob2_read($lob, 5);

echo $datos."\n";

cubrid_lob2_bind($petición, 1, $lob);
cubrid_execute($petición);

cubrid_disconnect($conexión);
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>cubrid_lob2_read</function></member>
    <member><function>cubrid_lob2_write</function></member>
    <member><function>cubrid_lob2_seek64</function></member>
    <member><function>cubrid_lob2_tell</function></member>
    <member><function>cubrid_lob2_tell64</function></member>
    <member><function>cubrid_lob2_size</function></member>
    <member><function>cubrid_lob2_size64</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
