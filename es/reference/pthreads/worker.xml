<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336885 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<phpdoc:classref xml:id="class.worker" xmlns:phpdoc="http://php.net/ns/phpdoc" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
 
 <title>La clase Worker</title>
 <titleabbrev>Worker</titleabbrev>
 
 <partintro>
  
  <!-- {{{ Worker intro -->
  <section xml:id="worker.intro">
   &reftitle.intro;
   <para>
    Los hilos Worker poseen un contexto persistente, por lo que, en la mayoría de los casos, deberían emplearse sobre objetos Threads.
   </para>
   <para>
    Cuando un Worker se inicia, se ejecutará el método run, pero el Thread no abandonará hasta que se dé una de las siguientes condiciones:
   </para>
   <itemizedlist>
    <listitem>
     <para>el Worker sale del ámbito (ya no quedan más referencias)</para>
    </listitem>
    <listitem>
     <para>el programador llama al apagado</para>
    </listitem>
    <listitem>
     <para>el script finaliza</para>
    </listitem>
   </itemizedlist>
   <para>
    Esto significa que el programador puede reutilizar el contexto durante toda la ejecución; la colocación de objetos en la pila del Worker ocasionará que el Worker
    ejecute los objetos apilados del método run.
   </para>
   <warning>
    <para>
     El programador debe conservar referencias a los objetos apilados hasta que hayan sido ejecutados o desapilados; la clase Pool proporciona una abstracción de más alto nivel
     de la funcionalidad del Worker, administrando las referencias para el programador.
    </para>
   </warning>
  </section>
  <!-- }}} -->
  
  <section xml:id="worker.synopsis">
   &reftitle.classsynopsis;
   
   <!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Worker</classname></ooclass>
    
    <!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Worker</classname>
     </ooclass>
     
     <ooclass>
      <modifier>extends</modifier>
      <classname>Thread</classname>
     </ooclass>
     
     <oointerface>
      <interfacename>Traversable</interfacename>
     </oointerface>
     
     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>
     
     <oointerface>
      <interfacename>ArrayAccess</interfacename>
     </oointerface>
    </classsynopsisinfo>
    <!-- }}} -->
    
    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.worker')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
    
    <classsynopsisinfo role="comment">&InheritedMethods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.thread')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
    
   </classsynopsis>
   <!-- }}} -->
   
  </section>
  
 </partintro>
 
 &reference.pthreads.entities.worker;
 
</phpdoc:classref>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
