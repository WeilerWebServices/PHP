<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 326726 Maintainer: jesusruiz Status: ready -->
<refentry xml:id="function.import-request-variables" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>import_request_variables</refname>
  <refpurpose>Importar variables GET/POST/Cookie en el ámbito global</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>import_request_variables</methodname>
   <methodparam><type>string</type><parameter>types</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter></methodparam>
  </methodsynopsis>
  <para>
   Importa las variables GET/POST/Cookie en el ámbito global. Esto es útil si
   ha deshabilitado <link linkend="ini.register-globals">register_globals</link>,
   pero le gustaría ver algunas variables en el ámbito global.
  </para>
  <para>
   Si está interesado en importar otras variables en el ámbito global,
   como <varname>$_SERVER</varname>, considere el uso de <function>extract</function>.
  </para>
  &warn.deprecated.function-5-3-0.removed-5-4-0;
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>types</parameter></term>
     <listitem>
      <para>
       Usando el parámetro <parameter>types</parameter>, puede especificar
       cuáles variables de petición deben importarse. Puede usar los caracteres 'G', 'P' y 'C' 
       respectivamente para indicar GET, POST y Cookie. Estos caracteres
       no son sensibles a mayúsculas o minúsculas, por lo que también puede utilizar cualquier combinación de 'g', 'p'
       y 'c'. POST incluye la información de archivos cargados mediante POST.
      </para>
      <note>
       <para>
        Tenga en cuenta que el orden de las letras es importante, ya que cuando se utiliza
        "<literal>GP</literal>", las variables POST sobrescribirán las variables GET con el
        mismo nombre. Cualquier otra letra diferente a GPC es descartada.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
     <listitem>
      <para>
       El nombre de variable prefijo, puede ser colocado antes de nombrar a todas las variables importadas
       en el ámbito global. De modo que si tiene un valor GET llamado
       "<literal>userid</literal>", y proporciona un prefijo
       "<literal>pref_</literal>", entonces obtendrá una variable global llamada
       <varname>$pref_userid</varname>.
      </para>
      <note>
       <para>
        Aunque el parámetro <parameter>prefix</parameter> es opcional,
        recibirá un error de nivel <link linkend="errorfunc.constants.errorlevels.e-notice"><constant>E_NOTICE</constant></link>
        si no especifica un prefijo, o especifica una cadena vacía como prefijo.
        Este es un riesgo potencial de seguridad. La notificación de aviso de errores
        no es mostrada usando el nivel predeterminado de <link 
        linkend="ini.error-reporting">reporte de errores</link>.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>import_request_variables</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Esto importará las variables GET y POST con el prefijo "rvar_"

import_request_variables("gp", "rvar_");

echo $rvar_foo;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><varname>$_REQUEST</varname></member>
    <member><link linkend="ini.register-globals">register_globals</link></member>
    <member><link linkend="language.variables.predefined">Variables Predefinidas</link></member>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
