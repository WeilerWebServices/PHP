<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ --> 
<!-- EN-Revision: 343811 Maintainer: aeoris Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.empty" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>empty</refname>
  <refpurpose>Determina si una variable está vacía</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>empty</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
  </methodsynopsis>
  <para>
   Determina si una variable es considerada vacía. Una variable se considera vacía si no existe o si su valor es igual a &false;. <function>empty</function> no genera una advertencia si la variable no existe.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       La variable que se comprueba
      </para>
      <note>
       <para>
        Antes de PHP 5.5, <function>empty</function> sólo soportaba variables;
        cualquier otra cosa provocaría un error del intérprete. En otras palabras, lo
        siguiente no funcionaría: <command>empty(trim($nombre))</command>.
        En su lugar, utilice <command>trim($nombre) == false</command>.
       </para>
      </note>
      <para>
       No se genera una advertencia si la variable no existe.
       Esto significa que <function>empty</function> es esencialmente el
       equivalente conciso de <command>!isset($var) || $var == false</command>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve &false; si <parameter>var</parameter> existe y tiene un valor no vacío, distinto de cero.
   De otro modo devuelve &true;.
  </para>
  <para>
   Los siguientes valores son considerados como vacíos:
   <simplelist>
    <member><literal>"" (una cadena vacía)</literal></member>
    <member><literal>0 (0 como un integer)</literal></member>
    <member><literal>0.0 (0 como un float)</literal></member>
    <member><literal>"0" (0 como un string)</literal></member>
    <member>&null;</member>
    <member>&false;</member>
    <member><literal>array() (un array vacío)</literal></member>
   </simplelist>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.5.0</entry>
       <entry>
        <para>
         <function>empty</function> ahora soporta expresiones, en vez de únicamente
         variables.
        </para>
       </entry>
      </row>
      <row>
       <entry>5.4.0</entry>
        <entry>
         <para>
          Verificación de índices no numéricos de strings devuelve &true;.
         </para>
        </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Una simple comparación <function>empty</function> / <function>isset</function>
    </title>  
    <programlisting role="php">
<![CDATA[
<?php
$var = 0;

// Se evalúa a true ya que $var está vacia
if (empty($var)) {
    echo '$var es o bien 0, vacía, o no se encuentra definida en absoluto';
}

// Se evalúa como true ya que $var está definida
if (isset($var)) {
    echo '$var está definida a pesar que está vacía';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title><function>empty</function> en índices de string</title>
     <para>
      PHP 5.4 cambia como <function>empty</function> se comporta 
      cuando se pasan índices de string.
     </para>
     <programlisting role="php">
<![CDATA[
<?php
$expected_array_got_string = 'somestring';
var_dump(empty($expected_array_got_string['some_key']));
var_dump(empty($expected_array_got_string[0]));
var_dump(empty($expected_array_got_string['0']));
var_dump(empty($expected_array_got_string[0.5]));
var_dump(empty($expected_array_got_string['0.5']));
var_dump(empty($expected_array_got_string['0 Mostel']));
?>
]]>
     </programlisting>
     &example.outputs.53;
     <screen>
<![CDATA[
bool(false)
bool(false)
bool(false)
bool(false)
bool(false)
bool(false)
]]>
     </screen>
     &example.outputs.54;
     <screen>
<![CDATA[
bool(true)
bool(false)
bool(false)
bool(false)
bool(true)
bool(true)
]]>
     </screen>
  </example>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.language-construct;
  <note>
   <para>
    Cuando se utiliza <function>empty</function> sobre las propiedades de objetos inaccesibles,
    el método sobrecargado <link linkend="object.isset">__isset()</link>
    será llamado, si se declara.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>isset</function></member>
    <member><link linkend="object.isset">__isset()</link></member>
    <member><function>unset</function></member>
    <member><function>array_key_exists</function></member>
    <member><function>count</function></member> 
    <member><function>strlen</function></member>
    <member><link linkend="types.comparisons">Las tablas de comparación de tipos</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
