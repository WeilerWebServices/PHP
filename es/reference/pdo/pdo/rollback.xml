<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339183 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.rollback" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::rollBack</refname>
  <refpurpose>
   Revierte una transacción
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDO::rollBack</methodname>
   <void/>
  </methodsynopsis>
  
  <para>
   Revierte la transacción actual, que fue iniciada por
   <function>PDO::beginTransaction</function>.
  </para>
  <para>
   Si la base de datos se estableció al modo 'autocommit', esta función restablecerá
   el modo 'autocommit' después de haber revertido la transacción.
  </para>
  <para>
   Algunas bases de datos, incluyendo MySQL, ejecutan un COMMIT implícito
   cuando una sentencia de lenguaje de definición de base de datos (DDL), como
   DROP TABLE o CREATE TABLE, se ejecuta dentro de una transacción. El COMMIT
   implícito pevendrá de revertir cualquier otro cambio dentro de los límites
   de la transacción.
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>PDOException</classname> si no hay ninguna transacción activa.
  </para>
  &pdo.errors.exception-not-errmode;
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Revertir una transacción</title>
    <para>
     El siguiente ejemplo comienza una transacción y ejecuta dos sentencias
     que modifican la base de datos antes de revertir los cambios. En MySQL,
     sin embargo, la sentencia DROP TABLE consigna automáticamente la
     transacción, por lo que no son revertidos ninguno de los cambios en la
     transacción.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Comenzar una transacción, desactivando el modo 'autocommit' */
$gbd->beginTransaction();

/* Cambiar el esquema y los datos de la base de datos */
$sth = $gbd->exec("DROP TABLE fruit");
$sth = $gbd->exec("UPDATE dessert
    SET name = 'hamburger'");

/* Reconocer el error y revertir los cambios */
$gbd->rollBack();

/* Ahora la conexión a la base de datos a vuelto al modo 'autocommit' */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::beginTransaction</function></member>
    <member><function>PDO::commit</function></member>
    <member><link linkend="pdo.transactions">Transacciones y 'auto-commit'</link></member>
   </simplelist>
  </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
