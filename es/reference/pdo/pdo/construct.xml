<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339618 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xml:id="pdo.construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::__construct</refname>
  <refpurpose>
   Crea una instancia de PDO que representa una conexión a una base de datos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier> <methodname>PDO::__construct</methodname>
   <methodparam><type>string</type><parameter>dsn</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </constructorsynopsis>
  <para>
   Crea una instancia de PDO para representar una conexión a la base de datos
   solicitada.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry><term>dsn</term>
     <listitem>
      <para>
       EL Nombre del Origen de Datos (DSN), contiene la información requerida para
       conectarse a la base de datos.
      </para>
      <para>
       En general, un DSN consiste en el nombre del controlador de PDO, seguido por dos puntos,
       seguido por la sintaxis específica del controlador de PDO para la conexión. Hay
       más información disponible en la <link linkend="pdo.drivers">documentación
       de controladores específicos de PDO</link>.
      </para>
      <para>
       El parámetro <parameter>dsn</parameter> admite tres
       métodos diferentes de especificar los parámetros requeridos para crear
       la conexión a la base de datos:
      </para>
      <para>
       <variablelist>
        <varlistentry><term>Invocación del controlador</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> contiene el DSN completo.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Invocación del URI</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> está formado por <userinput>uri:</userinput>
           seguido por un URI que define la ubicación de un fichero que contiene
           el string del DSN. El URI puede especificar un fichero local o un URL remoto.
          </para>
          <para><userinput>uri:file:///ruta/al/fichero_dsn</userinput></para>
         </listitem>
        </varlistentry>
        <varlistentry><term>Mediante un alias</term>
         <listitem>
          <para>
           <parameter>dsn</parameter> está formado por un nombre,
           <parameter>name</parameter>, que se corresponde con
           <code>pdo.dsn.<parameter>name</parameter></code> en &php.ini;,
           definiendo el string del DSN.
          </para>
          <note>
           <para>
            El alias debe estar definido en &php.ini;, y no en &htaccess; o &httpd.conf;
           </para>
          </note>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>username</term>
     <listitem>
      <para>
       El nombre de usuario para el string del DSN. Este parámetro es opcional
       para algunos controladores de PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>password</term>
     <listitem>
      <para>
       La contraseña para el string del DSN. Este parámetro es opcional para
       algunos controladores de PDO.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry><term>options</term>
     <listitem>
      <para>
       Un array de la forma clave=&gt;valor con opciones de conexión específicas del controlador.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto PDO en caso de éxito.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>PDO::__construct</function> lanza una <classname>PDOException</classname> si el intento
   de conexión a la base de datos requerida falla.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>Crear una instancia PDO a través de una invocación al controlador</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar a una base de datos de MySQL invocando al controlador */
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$usuario = 'usuario_bd';
$contraseña = 'contraseña_bd';

try {
    $gbd = new PDO($dsn, $usuario, $contraseña);
} catch (PDOException $e) {
    echo 'Falló la conexión: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title>Crear una instancia PDO a través de una invocación a la URI</title>
    <para>
     En el siguiente ejemplo se asume que el fichero
     <filename>/usr/local/dbconnect</filename> existe, con los permisos
     necesarios para que PHP lo lea. El fichero contiene el DSN de PDO
     necesario para conectarse a una base de datos de DB2 a través del controlador PDO_ODBC:
    </para>
    <screen>
<![CDATA[
odbc:DSN=SAMPLE;UID=john;PWD=mypass
]]>
    </screen>
    <para>
     El script de PHP puede crear una conexión a una base de datos simplemente
     pasando el parámetro <literal>uri:</literal> y apuntando al URI
     del fichero:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar a una base de datos de ODBC invocando al controlador */
$dsn = 'uri:file:///usr/local/dbconnect';
$usuario = '';
$contraseña = '';

try {
    $gbd = new PDO($dsn, $usuario, $contraseña);
} catch (PDOException $e) {
    echo 'Falló la conexión: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
   <example><title>Crear una instancia de PDO usando un alias</title>
    <para>
     En el siguiente ejemplo se asume que &php.ini; contiene la siguiente
     entrada para permitir la conexión a una base de datos de MySQL usando
     solamente el alias <literal>mydb</literal>:
    </para>
    <programlisting role="ini">
     [PDO]
     pdo.dsn.mydb="mysql:dbname=testdb;host=localhost"
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
/* Conectar auna base de datos de ODBC usando un alias */
$dsn = 'mydb';
$usuario = '';
$contraseña = '';

try {
    $gbd = new PDO($dsn, $usuario, $contraseña);
} catch (PDOException $e) {
    echo 'Falló la conexión: ' . $e->getMessage();
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <note>
   <para>
    Antes de PHP 5.3, una clase que extiende a PDO e implementa el mágico <literal>__call</literal> siempre redibe un <parameter>$method</parameter> en minúsculas.
   </para>
  </note>
  
  
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
