<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: alejandrorodas Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdo.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::query</refname>
  <refpurpose>
   Ejecuta una sentencia SQL, devolviendo un conjunto de resultados como un objeto PDOStatement
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_COLUMN</parameter></methodparam>
   <methodparam><type>int</type><parameter>colno</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_CLASS</parameter></methodparam>
   <methodparam><type>string</type><parameter>classname</parameter></methodparam>
   <methodparam><type>array</type><parameter>ctorargs</parameter></methodparam>
  </methodsynopsis>

  <methodsynopsis>
   <modifier>public</modifier> <type>PDOStatement</type><methodname>PDO::query</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>PDO::FETCH_INTO</parameter></methodparam>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>PDO::query</function> ejecuta una sentencia SQL en
   una única llamada a función, devolviendo el conjunto de resultados (si los hay) que devuelve
   la sentencia como un objeto PDOStatement.
  </para>
  <para>
   Para una consulta que se necesite ejecutar en múltiples ocasiones, se obtendrá una mejor
   rendimiento si se prepara un objeto PDOStatement usando
   <function>PDO::prepare</function> y ejecutando la sentencia con múltiple
   llamadas a <function>PDOStatement::execute</function>.
  </para>
  <para>
   Si no se buscan todos los datos del conjunto de resultados antes de ejecutar la
   siguiente llamada a <function>PDO::query</function>, ésta puede fallar. Llamando
   a <function>PDOStatement::closeCursor</function> se liberan los recursos
   de la base de datos asociados al objeto PDOStatement antes de ejecutar la
   siguiente llamada a <function>PDO::query</function>.
  </para>

  <note>
   <para>
    Aunque esta función está documentada solamente teniendo un único
    parámetro, se pueden pasar argumentos adicionales a esta función.
    Éstos serán tratados como si se llamase a
    <function>PDOStatement::setFetchMode</function> con el objeto de la sentencia
    resultante.
   </para>
  </note>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
      <listitem>
       <para>
        La sentencia SQL a preparar y ejecutar.
       </para>
       <para>
        Los datos dentro de la consulta deben ser <link
        linkend="pdo.quote">debidamente escapados</link>.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    <function>PDO::query</function> devuelve un objeto PDOStatement, o &false;
    en caso de error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Demostración de PDO::query</title>
    <para>
     Una buena característica de <function>PDO::query</function> es que
     permite iterar sobre el conjunto de filas devueltos por una
     ejecución de una sentencia SELECT con éxito.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function getFruit($conn) {
    $sql = 'SELECT name, color, calories FROM fruit ORDER BY name';
    foreach ($conn->query($sql) as $row) {
        print $row['name'] . "\t";
        print $row['color'] . "\t";
        print $row['calories'] . "\n";
    }
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
apple   red     150
banana  yellow  250
kiwi    brown   75
lemon   yellow  25
orange  orange  300
pear    green   150
watermelon      pink    90
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::exec</function></member>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
