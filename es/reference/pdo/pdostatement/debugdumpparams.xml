<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336630 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="pdostatement.debugdumpparams" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::debugDumpParams</refname>
  <refpurpose>
   Vuelca un comando preparado de SQL
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>PDOStatement::debugDumpParams</methodname>
   <void />
  </methodsynopsis>
  <para>
   Vuelca la información contenida en una sentencia preparada directamente en la
   salida. Proporcionará la consulta <literal>SQL</literal> en uso, el
   número de parámetros usados (<literal>Params</literal>), la lista
   de parámetros con su nombre de clave o posición, su nombre, su posición
   en la consulta (si lo admite el controlador de PDO, si no,
   será -1), el tipo (<literal>param_type</literal>) como entero, y un valor
   booleano <literal>is_param</literal>.
  </para>
  <para>
   Esta es una función de depuración que vuelca directamente los datos en la salida
   habitual.
   &tip.ob-capture;
  </para>
  <para>
   Solamente volcará los parámetros de la sentencia en el momento
   del vuelco. Los parámetros extra no son almacenados en la sentencia,
   y tampoco son mostrados.
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>PDOStatement::debugDumpParams</function> con parámetros con nombre</title>
   <programlisting role="php">
<![CDATA[
<?php
/* Ejecutar una sentencia preparada vinculando variables de PHP */
$calorías = 150;
$color = 'red';
$gsent = $gbd->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour');
$gsent->bindParam(':calories', $calorías, PDO::PARAM_INT);
$gsent->bindValue(':colour', $color, PDO::PARAM_STR, 12);
$gsent->execute();

$gsent->debugDumpParams();

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
SQL: [96] SELECT name, colour, calories
    FROM fruit
    WHERE calories < :calories AND colour = :colour
Params:  2
Key: Name: [9] :calories
paramno=-1
name=[9] ":calories"
is_param=1
param_type=1
Key: Name: [7] :colour
paramno=-1
name=[7] ":colour"
is_param=1
param_type=2
]]>
   </screen>
  </example>
  
  <example>
   <title>Ejemplo de <function>PDOStatement::debugDumpParams</function> con parámetros sin nombre</title>
   <programlisting role="php">
<![CDATA[
<?php

/* Ejecutar una sentencia preparada vinculando variables de PHP */
$calorías = 150;
$color = 'red';
$name = 'apple';

$gsent = $gbd->prepare('SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?');
$gsent->bindParam(1, $calorías, PDO::PARAM_INT);
$gsent->bindValue(2, $color, PDO::PARAM_STR);
$gsent->execute();

$gsent->debugDumpParams();

?>

]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
SQL: [82] SELECT name, colour, calories
    FROM fruit
    WHERE calories < ? AND colour = ?
Params:  2
Key: Position #0:
paramno=0
name=[0] ""
is_param=1
param_type=1
Key: Position #1:
paramno=1
name=[0] ""
is_param=1
param_type=2
]]>
   </screen>
  </example>
  
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::prepare</function></member>
    <member><function>PDOStatement::bindParam</function></member>
    <member><function>PDOStatement::bindValue</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
