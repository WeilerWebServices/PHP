<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.2 -->
<refentry xml:id="function.pg-send-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_prepare</refname>
  <refpurpose>Envía una solicitud para crear una instrucción preparada con los parámetros dados, sin esperar la finalización</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pg_send_prepare</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
    Envía una solicitud para crear una instrucción preparada con los parámetros dados,
    sin esperar la finalización.
  </para>
  <para>
    Esta es una versión asincrónica de <function>pg_prepare</function>: devuelve &true; si fue capaz de 
    enviar la solicitud, y &false; si no. Después de una llamada exitosa, llame al 
    <function>pg_get_result</function> Para determinar si el servidor creó correctamente la 
    instrucción preparada. Los parámetros de la función se manejan de forma idéntica a 
    <function>pg_prepare</function>. Al igual que <function>pg_prepare</function>, no funcionará 
    en versiones anteriores a 7.4 en PostgreSQL.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       Recurso de conexión a la base de datos PostgreSQL. Cuando no está 
       presente <parameter>connection</parameter>, se utiliza la conexión  
       predeterminada. La conexión predeterminada es la última conexión realizada por 
       <function>pg_connect</function> o <function>pg_pconnect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       El nombre para dar la declaración preparada.  Debe ser único por conexión.  Si se
       especifica "",  se crea una sentencia sin nombre, sobrescribiendo cualquier 
       sentencia anónima previamente definida.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       La sentencia SQL parametrizada. Debe contener sólo una sola sentencia. 
       (No se permiten declaraciones múltiples separadas por punto y coma.)  Si se
       utilizan parámetros, se les conoce como $1, $2, etc.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Devuelve &true; en caso de éxito, &false; en caso de error.  Utilice <function>pg_get_result</function>
  para determinar el resultado de la consulta.</para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Utilizando <function>pg_send_prepare</function></title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");

  // Preparar una consulta para su ejecución
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Ejecute la consulta preparada. Tenga en cuenta que no es necesario 
  // escapar la cadena "Joe's Widgets" de ninguna manera
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Ejecute la misma consulta preparada, esta vez con un parámetro diferente
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }
  
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_connect</function></member>
    <member><function>pg_pconnect</function></member>
    <member><function>pg_execute</function></member>
    <member><function>pg_send_execute</function></member>
    <member><function>pg_send_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
