<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344812 Maintainer: jvenegasperu Status: ready -->
<!-- Reviewed: no -->
<!-- splitted from ./en/functions/pgsql.xml, last change in rev 1.80 -->
<refentry xml:id='function.pg-convert' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_convert</refname>
  <refpurpose>
   Conviertir valores de un array asociativo en valores adecuados para sentencias SQL
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>pg_convert</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>table_name</parameter></methodparam>
   <methodparam><type>array</type><parameter>assoc_array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>   
   <function>pg_convert</function> evalua y convierte los valores de un
   <parameter>assoc_array</parameter> en valores adecuados para su uso en una sentencia
   SQL. La condición previa para la función <function>pg_convert</function> es la 
   existencia de una tabla con nombre igual al parametro <parameter>table_name</parameter> que tiene
   por lo menos tantas columnas como elementos tiene el <parameter>assoc_array</parameter>. Los
   nombres de campos en <parameter>table_name</parameter> deben coincidir con los índices de
   <parameter>assoc_array</parameter> y los tipos de datos correspondientes deben ser
   compatibles. Devuelve un array con los valores convertidos en caso de éxito, &false;
   de lo contrario.         
  </para>
  <note>
   <para>
    Desde PHP 5.6.0, acepta valores booleanos. Se convierten a booleanos de
    PostgreSQL. También se admiten representaciones de string de valores booleanos. &null; se
    convierte al NULL de PostgreSQL.
   </para>
   <para>
    Antes de PHP 5.6.0, si existen campos booleanos en <parameter>table_name</parameter>,
    no use la constante &true; en <parameter>assoc_array</parameter>. Será
    convertida al string 'TRUE', el cual no es una entrada válida para campos booleanos
    en PostgreSQL. Use t, true, 1, y, yes en su lugar.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       Recurso de conexión de base de datos PostgreSQL.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>table_name</parameter></term>
     <listitem>
      <para>
       Nombre de la tabla contra la que convertir los tipos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>assoc_array</parameter></term>
     <listitem>
      <para>
       Los datos que desea convertir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Cualquier número de <constant>PGSQL_CONV_IGNORE_DEFAULT</constant>,
       <constant>PGSQL_CONV_FORCE_NULL</constant> ó 
       <constant>PGSQL_CONV_IGNORE_NOT_NULL</constant>, ó una combinación de estos.            
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>   
   Un <type>array</type> de valores convertidos, o &false; en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>pg_convert</function></title>
    <programlisting role="php">
<![CDATA[
<?php 
  $dbconn = pg_connect('dbname=foo');
  
  $tmp = array(
      'author' => 'Joe Thackery',
      'year' => 2005,
      'title' => 'My Life, by Joe Thackery'
  );
  
  $vals = pg_convert($dbconn, 'authors', $tmp);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Ya no es experimental. Se admiten los tipos de datos boolean/NULL. Los tipos de datos
        desconocidos/no soportados son escapados sin validación. Se podría emplear
        <function>pg_convert</function> con cualquier tipo de dato.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_meta_data</function></member>
    <member><function>pg_insert</function></member>
    <member><function>pg_select</function></member>
    <member><function>pg_update</function></member>
    <member><function>pg_delete</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
