<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322142 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<!-- Generated by xml_proto.php v2.2. Found in /scripts directory of phpdoc. -->
<refentry xml:id="sca.createdataobject" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SCA::createDataObject</refname>
  <refpurpose>Crear un SDO</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>SDO_DataObject</type>
   <methodname>SCA::createDataObject</methodname>
   <methodparam>
    <type>string</type>
    <parameter>type_namespace_uri</parameter>
   </methodparam>
   <methodparam>
    <type>string</type>
    <parameter>type_name</parameter>
   </methodparam>
  </methodsynopsis>
  
  &warn.experimental.func;
  
  <para>Este método se usa dentro de un componente SCA que necesite crear
   un SDO que devolver. Los parámetros son la URI del espacio de nombres del SDO deseada
   y el nombre del tipo. El espacio de nombres y el tipo deben estar definidos en uno de los
   ficheros de esquemas que están especificados en la anotación @types dentro del
   componente.</para>
  
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>type_namespace_uri</parameter>
     </term>
     <listitem>
      <para>El espacio de nombres del tipo.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <parameter>type_name</parameter>
     </term>
     <listitem>
      <para>El nombre del tipo.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>Devuelve el recién creado SDO_DataObject.</para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term>
      <parameter>SDO_TypeNotFoundException</parameter>
     </term>
     <listitem>
      <para>Lanzada si namespaceURI y typeName no se corresponden
       con un tipo de ningún fichero de esquemas especificado en las anotaciones
       @types.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
 &reftitle.changelog;
 <para>
 <informaltable>
 <tgroup cols="2">
 <thead>
 <row>
 <entry>&Version;</entry>
 <entry>&Description</entry>
 </row>
 </thead>
 <tbody>
 <row>
 <entry>Enter the PHP version of change here
 <entry>Description of change
 </row>
 </tbody>
 </tgroup>
 </informaltable>
 </para>
 </refsect1>
 -->
 
 <!-- Use when examples exist
 <refsect1 role="examples">
 &reftitle.examples;
 <para>
 <example>
 <title>A <function>xxx::xxx</function> example</title>
 <para>
 Any text that describes the purpose of the example, or
 what goes on in the example should go here (inside the
 <example> tag, not out
 </para>
 <programlisting role="php">
 <![CDATA[
 <?php
 if ($anexample === true) {
 echo 'Use the PEAR Coding Standards';
 }
 ?>
 ]]>
 </programlisting>
 &example.outputs;
 <screen>
 <![CDATA[
 Use the PEAR Coding Standards
 ]]>
 </screen>
 </example>
 </para>
 </refsect1>
 -->
 
 <!-- Use when adding See Also links
 <refsect1 role="seealso">
 &reftitle.seealso;
 <para>
 <simplelist>
 <member><function></function></member>
 <member>Or <link linkend="somethingelse">something else</link></member>
 </simplelist>
 </para>
 </refsect1>
 -->
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
