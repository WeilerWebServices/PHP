<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325489 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-qc-set-cache-condition" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_set_cache_condition</refname>
  <refpurpose>Establece las condiciones para el almacenamiento en caché automático</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type>
   <methodname>mysqlnd_qc_set_cache_condition</methodname>
   <methodparam>
    <type>int</type>
    <parameter>condition_type</parameter>
   </methodparam>
   <methodparam>
    <type>mixed</type>
    <parameter>condition</parameter>
   </methodparam>
   <methodparam>
    <type>mixed</type>
    <parameter>condition_option</parameter>
   </methodparam>
  </methodsynopsis>
  <para>
   Establece una condición para el almacenamiento en caché automático de sentencias que no contienen
   las sugerencias SQL necesarias para habilitar su almacenamiento en dicha caché.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>condition_type</parameter>
    </term>
    <listitem>
     <para>
      El tipo de condición. El único valor permitido es
      <constant>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</constant>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>condition</parameter>
    </term>
    <listitem>
     <para>
      Parámetro para la condición establecida con <literal>condition_type</literal>.
      El tipo y la estructura del parámetro depende de <literal>condition_type</literal>
     </para>
     <para>
      Si <literal>condition_type</literal> es igual a
      <literal>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</literal>,
      <literal>condition</literal> debe ser una cadena. Ésta establece el patrón.
      Las setencias son almacenadas en caché si la tabla y la entrada de los metadatos de la base de datos de sus
      conjuntos de resultados coinceiden con el patrón. Dicho patrón se comprueba para ver si coincide con las
      entradas de los metadatos <literal>db</literal> y <literal>org_table</literal>
      proporcionadas por la biblioteca cliente-servidor de MySQL subyacente. Por favor, revise
      el manual de referencias de MySQL para los detalles de las dos entradas. Los valores de
      <literal>db</literal> y <literal>org_table</literal> son
      concatenados con un punto (<literal>.</literal>) antes de compararlos
      con <literal>condition</literal>. La comparación de patrones admite
      los comodines <literal>%</literal> y <literal>_</literal>.
      El comodín <literal>%</literal> coincidirá con uno o varios caracteres
      arbitrarios. <literal>_</literal> coincidirá con un carácter arbitrario.
      El símbolo de escape es la barra invertida.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>condition_option</parameter>
    </term>
    <listitem>
     <para>
      Opción para <literal>condition</literal>. El tipo y la estructura dependen
      de <literal>condition_type</literal>.
     </para>
     <para>
      Si <literal>condition_type</literal> es igual a
      <literal>MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN</literal>,
      <literal>condition_options</literal> es el TTL a usar.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>mysqlnd_qc_set_cache_condition</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/* Almacenar en caché todos los accesos a las tablas con el nombre "new%" en el esquema/base de datos "ejemplo_db" durante 1 segundo */
if (!mysqlnd_qc_set_cache_condition(MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN, "ejemplo_db.new%", 1)) {
  die("¡Fallo al establecer la condición de la caché!");
}

$mysqli = new mysqli("host", "usuario", "contraseña", "ejemplo_db", "puerto");
/* almacenada en caché aunque no se proporcione una sugerencia SQL */
$mysqli->query("SELECT id, title FROM news");

$pdo_mysql = new PDO("mysql:host=host;dbname=ejemplo_db;port=puerto", "usuario", "contraseña");
/* no almacenada en caché: sin sugerencia SQL, sin coincidencia con el patrón */
$pdo_mysql->query("SELECT id, title FROM latest_news");
/* almacenada en caché: TTL 1 segundo, coincide con el patrón */
$pdo_mysql->query("SELECT id, title FROM news");
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve TRUE en caso de éxito o FALSE en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-qc.pattern-based-caching">Guía rápida: almacenamiento en caché basado en patrones</link>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
