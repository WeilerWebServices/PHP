<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 327381 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.mysqlnd-qc-get-core-stats" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqlnd_qc_get_core_stats</refname>
  <refpurpose>Estadísticas recopiladas por el núcleo de la caché de consultas</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type>
   <methodname>mysqlnd_qc_get_core_stats</methodname>
   <void />
  </methodsynopsis>
  <para>
   Devuelve un array con las estadísticas recopiladas por el núcleo del complemento de caché.
   Se notificarán los mismos campos de datos para cualquier gestor de almacenamiento ya que los
   datos son recopilados por el núcleo.
  </para>
  <para>
   El ajuste de configuraión de
   <literal>PHP</literal>
   <literal>mysqlnd_qc.collect_statistics</literal>
   controla la recopilación de estadísticas. Dicha recopilación
   está deshabilitada de forma predeterminada por motivos de rendimiento.
   La deshabilitación de la recopilación de estadísticas también deshabilitará la recopilación
   de las estadísticas relacionadas con los tiempos.
  </para>
  <para>
   El ajuste de configuración de
   <literal>PHP</literal>
   <literal>mysqlnd_qc.collect_time_statistics</literal> controla la
   recopilación de estadísticas relacionadas con los tiempos.
  </para>
  <para>
   El ámbito de las estadísticas del núcleo es el
   proceso de <literal>PHP</literal>.
   Dependiendo del modelo de desarrollo un proceso de
   <literal>PHP</literal> podría manejar una o múltiples peticiones.
  </para>
  <para>
   Las estadísticas se acumulan para todas las entradas de la caché y para todos los gestores
   de almacenamiento. No es posible indicar cuántas consultas originadas desde
   las llamadas a las APIs de
   <literal>mysqli</literal>,
   <literal>PDO_MySQL</literal> o
   <literal>mysql</literal> han
   contribuido a los valores de los datos acumulados.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Array de estadísticas del núcleo
  </para>
  <informaltable>
   <tgroup cols="3">
    <colspec colwidth="10%"/>
    <colspec colwidth="70%"/>
    <colspec colwidth="20%"/>
    <thead>
     <row>
      <entry>Estadística</entry>
      <entry>Descripción</entry>
      <entry>Versión</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <literal>cache_hit</literal>
      </entry>
      <entry>
       La sentencia se considera almacenable en caché y los datos almacenados en caché han sido reutilizados.
       La sentencia se considera almacenable en caché y ocurrió una no coincidencia con la caché, aunque
       alguien almacenó en caché dicha sentencia mientras se procesaba y por lo tanto
       se puuede obtener el resultado desde la caché refrescada.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>cache_miss</literal>
      </entry>
      <entry>
       La sentencia es considerada almacenable en caché...
       <itemizedlist>
        <listitem>
         <para>
          ... y se ha añadido a la caché.
         </para>
        </listitem>
        <listitem>
         <para>
          ... pero la directiva de configuración de
          <literal>PHP</literal>
          <literal>mysqlnd_qc.cache_no_table = 1</literal>
          ha impedido su almacenamiento.
         </para>
        </listitem>
        <listitem>
         <para>
          ... pero se solicita un conjunto de resultados no almacenado en búfer.
         </para>
        </listitem>
        <listitem>
         <para>
          ... pero un conjunto de resultados almacenado en búfer estaba vacío.
         </para>
        </listitem>
       </itemizedlist>
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>cache_put</literal>
      </entry>
      <entry>
       La sentencia se considera almacenable en caché y ha sido añadida a la caché.
       Se ha de tener cuidado al calcular las estadísticas derivadas. Los gestores de almacenamiento
       con un tiempo de vida de almacenamiento más allá del ámbito del proceso podría notificar que
       <literal>cache_put = 0</literal> junto con
       <literal>cache_hit &gt; 0</literal>, si otro proceso ha rellenado
       la caché. Se podría usar
       <literal>num_entries</literal> desde
       <function>mysqlnd_qc_get_cache_info</function> si el gestor
       lo admite
       (<literal>default</literal>,
       <literal>APC</literal>).
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_should_cache</literal>
      </entry>
      <entry>
       La sentencia se considera almacenable en caché basándose en el análisis de la cadena de consulta.
       La sentencia podría o no añadirse a la caché. Véase también
       <literal>cache_put</literal>.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_should_not_cache</literal>
      </entry>
      <entry>
       La sentencia se considera no almacenable en caché basándose en el análisis de la cadena de consulta.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_not_cached</literal>
      </entry>
      <entry>
       La sentencia se considera no almacenable en caché o sí se
       considera pero el gestor de almacenamiento no ha devuelto una
       clave hash para ella.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_could_cache</literal>
      </entry>
      <entry>
       La sentencia se considera almacenable en caché...
       <itemizedlist>
        <listitem>
         <para>
          ... y ha sido ejecutada sin errores.
         </para>
        </listitem>
        <listitem>
         <para>
          ... y los metadatos muestras al menos una columna del conjunto de resultados.
         </para>
        </listitem>
       </itemizedlist>
       La sentencia podría o no estar ya en la caché.
       Podría ser o no añadida a la caché después.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_found_in_cache</literal>
      </entry>
      <entry>
       La sentencia se considera almacenable en caché y se ha encontrado en la misma,
       pero no se han reproducido los datos de la caché aún y no se ha enviado
       el conjunto de resultados al cliente todavía. Esto no se considera una
       coincidencia con la caché ya que el cliente no habría obtenido el resultado o
       los datos almacenados en la caché podrían ser defectuosos.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_other</literal>
      </entry>
      <entry>
       La sentencia es considerada almacenable en caché y podría o no encontrarse ya
       en la misma, pero la reproducción de los datos almacenados en caché ha fallado,
       no hay ningún conjunto de resultados disponible, u ocurrió algún otro error.
      </entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_no_table</literal>
      </entry>
      <entry>
       Statement has not been cached because the result set has at least
       one column which has no table name in its meta data. An example of
       such a query is
       <literal>SELECT SLEEP(1)</literal>. To cache those
       statements you have to change default value of the PHP configuration directive
       <literal>mysqlnd_qc.cache_no_table</literal> and set
       <literal>mysqlnd_qc.cache_no_table = 1</literal>. Often, it is not
       desired to cache such statements.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_uncached_use_result</literal>
      </entry>
      <entry>
       La sentencia habría sido almacenada en caché si se hubiera usado un conjunto
       de resultados almacenado en búfer. La situación se considera también como una no coincidencia con la caché,
       por lo que <literal>cache_miss</literal> tambén serán incrementado.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_cache_hit</literal>
      </entry>
      <entry>
       Tiempo de ejecución (ms) acumulado de todas las consultas almacenadas en caché.
       Las consultas almacenadas en caché son aquellas que han incrementado
       <literal>cache_hit</literal>.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_cache_put</literal>
      </entry>
      <entry>
       Tiempo de ejecución (ms) acumulado de todas las consultas no almacenadas en caché que
       han sido colocadas en la misma. Véase también
       <literal>cache_put</literal>.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_run_time_total</literal>
      </entry>
      <entry>
       Tiempo de ejecución (ms) acumulado de todas las consultas no almacenadas en caché
       que han sido inspeccionadas y ejecutadas por la caché de consultas.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_cache_hit</literal>
      </entry>
      <entry>
       Tiempo de almacenamiento (ms) acumulado de todas las consultas almacenadas en caché.
       Las consultas almacenadas en caché son aquellas que han incrementado
       <literal>cache_hit</literal>.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_cache_put</literal>
      </entry>
      <entry>
       Tiempo de almacenamiento
       (<literal>ms</literal>) acumulado de todas las consultas no almacenadas en caché que
       han sido colocadas en la misma. Véase también
       <literal>cache_put</literal>.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>query_aggr_store_time_total</literal>
      </entry>
      <entry>
       Tiempo de almacenamiento (ms) acumulado de todas las consultas no almacenadas en caché
       que han sido inspeccionadas y ejecutadas por la caché de consultas.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>receive_bytes_recorded</literal>
      </entry>
      <entry>
       El tráfico de red entrante registrado
       (<literal>bytes</literal>) enviado desde MySQL a PHP.
       El tráfico podría o no haber sido añadido a la caché. El
       tráfico es el total de todas las consultas sin tener en cuenta si se almacenaron o no en caché.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>receive_bytes_replayed</literal>
      </entry>
      <entry>
       El tráfico de red reproducido durante el almacenamiento de la caché. Es la cantidad total de
       tráfico entrante ahorrado debido al uso del complemento de caché de consultas.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>send_bytes_recorded</literal>
      </entry>
      <entry>
       El tráfico de red saliente registrado
       (<literal>bytes</literal>) enviado desde MySQL a PHP.
       El tráfico podría o no haber sido añadido a la caché. El
       tráfico es el total de todas las consultas sin tener en cuenta si se almacenaron o no en caché.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>send_bytes_replayed</literal>
      </entry>
      <entry>
       El tráfico de red reproducido durante el almacenamiento de la caché. Es la cantidad total de
       tráfico saliente ahorrado debido al uso del complemento de caché de consultas.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>slam_stale_refresh</literal>
      </entry>
      <entry>
       El número de no coincidencias con la caché que desencadenaron el servicio de datos antiguos hasta
       que el cliente ocasionó que la no coincidencia con la caché refrescara la entrada de la caché.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
     <row>
      <entry>
       <literal>slam_stale_hit</literal>
      </entry>
      <entry>
       El número de coincidencias con la caché mientras se refrescaba una entrada antigua de la misma.
      </entry>
      <entry>Desde 1.0.0.</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>mysqlnd_qc_get_core_stats</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/* Habilitar la recopilación de estadísticas - predeterminado: deshabilitada */
ini_set("mysqlnd_qc.collect_statistics", 1);

/* Habilitar la recopilación de todos los tiempos relacionados con estadísticas -
predeterminado: habilitado pero invalidado por mysqlnd_qc.collect_statistics = 0 */
ini_set("mysqlnd_qc.collect_time_statistics", 1);

/* Rellenar la cacé, p.ej. usando mysqli */
$mysqli = new mysqli('host', 'usuario', 'contraseña', 'esquema');

/* No coincide con la caché y se coloca en la misma */
$mysqli->query("/*qc=on*/SELECT id FROM test");
/* Coincide con la caché */
$mysqli->query("/*qc=on*/SELECT id FROM test");

/* Mostrar las estadísticas del núcleo */
var_dump(mysqlnd_qc_get_core_stats());
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
array(26) {
  ["cache_hit"]=>
  string(1) "1"
  ["cache_miss"]=>
  string(1) "1"
  ["cache_put"]=>
  string(1) "1"
  ["query_should_cache"]=>
  string(1) "2"
  ["query_should_not_cache"]=>
  string(1) "0"
  ["query_not_cached"]=>
  string(1) "0"
  ["query_could_cache"]=>
  string(1) "2"
  ["query_found_in_cache"]=>
  string(1) "1"
  ["query_uncached_other"]=>
  string(1) "0"
  ["query_uncached_no_table"]=>
  string(1) "0"
  ["query_uncached_no_result"]=>
  string(1) "0"
  ["query_uncached_use_result"]=>
  string(1) "0"
  ["query_aggr_run_time_cache_hit"]=>
  string(1) "4"
  ["query_aggr_run_time_cache_put"]=>
  string(3) "395"
  ["query_aggr_run_time_total"]=>
  string(3) "399"
  ["query_aggr_store_time_cache_hit"]=>
  string(1) "2"
  ["query_aggr_store_time_cache_put"]=>
  string(1) "8"
  ["query_aggr_store_time_total"]=>
  string(2) "10"
  ["receive_bytes_recorded"]=>
  string(2) "65"
  ["receive_bytes_replayed"]=>
  string(2) "65"
  ["send_bytes_recorded"]=>
  string(2) "29"
  ["send_bytes_replayed"]=>
  string(2) "29"
  ["slam_stale_refresh"]=>
  string(1) "0"
  ["slam_stale_hit"]=>
  string(1) "0"
  ["request_counter"]=>
  int(1)
  ["process_hash"]=>
  int(3547549858)
}

]]>
   </screen>
   
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link linkend="mysqlnd-qc.configuration">Configuración en tiempo de ejecución</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.collect-statistics">mysqlnd_qc.collect_statistics</link>
    </member>
    <member>
     <link linkend="ini.mysqlnd-qc.time-statistics">mysqlnd_qc.time_statistics</link>
    </member>
    <member>
     <function>mysqlnd_qc_get_cache_info</function>
    </member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
