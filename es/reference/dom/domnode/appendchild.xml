<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343366 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id='domnode.appendchild' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMNode::appendChild</refname>
  <refpurpose>
   Añade un nuevo hijo al final de los hijos
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>DOMNode</type><methodname>DOMNode::appendChild</methodname>
   <methodparam><type>DOMNode</type><parameter>newnode</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función agrega un hijo a una lista existente de hijos o crea una nueva lista de hijos. 
   El hijo se puede crear con, p.ej.,
   <methodname>DOMDocument::createElement</methodname>,
   <methodname>DOMDocument::createTextNode</methodname> etc. o simplemente usando
   cualquier otro nodo.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>newnode</parameter></term>
     <listitem>
      <para>
       El hijo añadido.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El nodo añadido.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <variablelist>
    <varlistentry>
     <term><constant>DOM_NO_MODIFICATION_ALLOWED_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si este nodo es de sólo lectura o si el padre previo del nodo
       a ser insertado es de sólo lectura.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_HIERARCHY_REQUEST_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si este nodo es de un tipo de no permite hijos del tipo
       del nodo <parameter>newnode</parameter>, o si el nodo a
       añadir es uno de los progenitores del nodo o si es el nodo en sí.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>DOM_WRONG_DOCUMENT_ERR</constant></term>
     <listitem>
      <para>
       Lanzado si <parameter>newnode</parameter> fue creado desde un documento
       diferente del que creó este nodo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   El siguiente ejemplo añadirá un nuevo nodo elemento a un nuevo documento.
   <example>
    <title>Añadiendo un hijo</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

$nodo = $doc->createElement("para");
$nuevo_nodo = $doc->appendChild($nodo);

echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>

    <para>
   <example>
    <title>Hijos anidados</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

$headNode = $doc->createElement("head");
$doc->appendChild($headNode);

$titleNode = $doc->createElement("title");
$headNode->appendChild($titleNode);

echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMNode::insertBefore</methodname></member>
    <member><methodname>DOMNode::removeChild</methodname></member>
    <member><methodname>DOMNode::replaceChild</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
