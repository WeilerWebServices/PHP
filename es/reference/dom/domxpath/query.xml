<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 349324 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id="domxpath.query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMXPath::query</refname>
  <refpurpose>
   Evalúa la expresión XPath dada
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>DOMNodeList</type><methodname>DOMXPath::query</methodname>
   <methodparam><type>string</type><parameter>expression</parameter></methodparam>
   <methodparam choice="opt"><type>DOMNode</type><parameter>contextnode</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>registerNodeNS</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ejecuta la expresión XPath dada por <parameter>expression</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>expression</parameter></term>
     <listitem>
      <para>
       La expresión XPath a ejecutar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>contextnode</parameter></term>
     <listitem>
      <para>
       El parámetro opcional <parameter>contextnode</parameter> se puede especificar para
       hacer consultas XPath relativas. Por omisión, las consultas son relativas al
       elemento raíz.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>registerNodeNS</parameter></term>
     <listitem>
      <para>
       El parámetro opcional <parameter>registerNodeNS</parameter> puede ser especificado para
       deshabilitar el registro automático del nodo de contexto.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto <classname>DOMNodeList</classname> que contiene todos los nodos coincidentes
   con la expresión XPath dada por <parameter>expression</parameter>. Cualquier expresión que no
   devuelva nodos devolverá un objeto <classname>DOMNodeList</classname> vacío.
  </para>
  <para>
   Si el parámetro <parameter>expression</parameter> está malformado
   o el parámetro <parameter>contextnode</parameter> es inválido,
   <methodname>DOMXPath::query</methodname> devuelve &false;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.3</entry>
       <entry>
        Se añadió el parámetro <parameter>registerNodeNS</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Obtener todos los libros en inglés</title>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;

// No queremos molestar con espacios en blanco
$doc->preserveWhiteSpace = false;

$doc->load('book.xml');

$xpath = new DOMXPath($doc);

// Empezamos desde el elemento root
$consulta = '//book/chapter/para/informaltable/tgroup/tbody/row/entry[. = "en"]';

$entradas = $xpath->query($consulta);

foreach ($entradas as $entrada) {
    echo "Se encotró {$entrada->previousSibling->previousSibling->nodeValue}," .
         " por {$entrada->previousSibling->nodeValue}\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Se encontró The Grapes of Wrath, por John Steinbeck
Se encontró The Pearl, por John Steinbeck
]]>
    </screen>
    <para>
     También podemos usar el parámetro <parameter>contextnode</parameter> para acortar
     nuestra expresión:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$doc = new DOMDocument;
$doc->preserveWhiteSpace = false;

$doc->load('book.xml');

$xpath = new DOMXPath($doc);

$tbody = $doc->getElementsByTagName('tbody')->item(0);

// nuestra consulta es relativa al nodo tbody
$consulta = 'row/entry[. = "en"]';

$entradas = $xpath->query($consulta, $tbody);

foreach ($entradas as $entrada) {
    echo "Se encontró {$entrada->previousSibling->previousSibling->nodeValue}," .
         " por {$entrada->previousSibling->nodeValue}\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMXPath::evaluate</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
