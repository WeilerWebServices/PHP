<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: agarzon Status: ready -->
<refentry xml:id="domdocument.loadxml" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>DOMDocument::loadXML</refname>
  <refpurpose>
   Cargar XML desde una cadena
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>DOMDocument::loadXML</methodname>
   <methodparam><type>string</type><parameter>source</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Carga un documento XML desde una cadena.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>source</parameter></term>
     <listitem>
      <para>
       La cadena que contiene el XML.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       <link linkend="language.operators.bitwise">Operador a nivel de bits <literal>OR</literal></link>
       de las <link linkend="libxml.constants">constantes de opciones libxml</link>.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success; Si se llama estáticamente, devuelve un
   <classname>DOMDocument</classname>&return.falseforfailure;.   
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si se pasa una cadena vacía a <parameter>source</parameter>,
   se generará una advertencia. Esta advertencia no es generada por libxml
   y no puede ser tratada usando funciones de manejo de errores de libxml.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crear un Documento</title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = new DOMDocument();
$doc->loadXML('<root><node/></root>');
echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Invocación estática de <literal>loadXML</literal></title>
    <programlisting role="php">
<![CDATA[
<?php
$doc = DOMDocument::loadXML('<root><node/></root>');
echo $doc->saveXML();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>DOMDocument::load</methodname></member>
    <member><methodname>DOMDocument::save</methodname></member>
    <member><methodname>DOMDocument::saveXML</methodname></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
