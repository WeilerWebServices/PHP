<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 338293 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.explode">
 <refnamediv>
  <refname>explode</refname>
  <refpurpose>Divide un string en varios string</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>explode</methodname>
   <methodparam><type>string</type><parameter>delimiter</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>PHP_INT_MAX</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve un array de string, siendo cada uno  un substring del
   parámetro <parameter>string</parameter> formado por la división realizada
   por los delimitadores indicados en el parámetro <parameter>delimiter</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       El string delimitador.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       El string de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Si el parámetro <parameter>limit</parameter> es positivo, el array devuelto contendrá
       el máximo de <parameter>limit</parameter> elementos, y el último elemento
       contendrá el resto del <parameter>string</parameter>.
      </para>
      <para>
       Si el parámetro <parameter>limit</parameter> es negativo, se devolverán
       todos los componentes a excepción del último -<parameter>limit</parameter>.
      </para>
      <para>
       Si el parámetro <parameter>limit</parameter> es cero,se tratará como 1.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <note>
   <para>
    Aunque <function>implode</function>, por razones históricas, puede
    aceptar los parámetros en cualquier orden,
    <function>explode</function> no. Debe asegurarse de que el 
    argumento <parameter>delimiter</parameter> vaya antes que 
    el argumento <parameter>string</parameter>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un <type>array</type> de <type>string</type>
   creados por la división del parámetro <parameter>string</parameter> usando
   los delimitadores indicados en el parámetro <parameter>delimiter</parameter>.
  </para>
  <para>
   Si <parameter>delimiter</parameter> es un <type>string</type> vacío (""),
   <function>explode</function> devolverá &false;.
   Si <parameter>delimiter</parameter> contiene un valor que no 
   forma parte del parámetro <parameter>string</parameter> y se utiliza un
   <parameter>limit</parameter> negativo, entonces devolverá un <type>array</type> vacío,
   en caso contrario se devolverá un <type>array</type> que contiene el valor de
   <parameter>string</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Se añadió soporte para <parameter>limit</parameter> negativo.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Ejemplo 1
$pizza  = "porción1 porción2 porción3 porción4 porción5 porción6";
$porciones = explode(" ", $pizza);
echo $porciones[0]; // porción1
echo $porciones[1]; // porción2

// Ejemplo 2
$datos = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $datos);
echo $user; // foo
echo $pass; // *

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplos de la devolución de <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* 
   Un string que no contiene el delimitador simplemente 
   devolverá un array de longitud uno con el string original. 
*/
$entrada1 = "hola";
$entrada2 = "hola,qué tal";
var_dump( explode( ',', $entrada1 ) );
var_dump( explode( ',', $entrada2 ) );

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1)
(
    [0] => string(4) "hola"
)
array(2)
(
    [0] => string(4) "hola"
    [1] => string(8) "qué tal"
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplos del parámetro <parameter>limit</parameter></title>
    <programlisting role="php">
<![CDATA[
<?php
$str = 'uno|dos|tres|cuatro';

// límite positivo
print_r(explode('|', $str, 2));

// líimte negativo (desde PHP 5.1)
print_r(explode('|', $str, -1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => uno
    [1] => dos|tres|cuatro
)
Array
(
    [0] => uno
    [1] => dos
    [2] => tres
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>str_split</function></member>
    <member><function>mb_split</function></member>
    <member><function>str_word_count</function></member>
    <member><function>strtok</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
