<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.str-ireplace">
 <refnamediv>
  <refname>str_ireplace</refname>
  <refpurpose>Versión insensible a mayúsculas y minúsculas de <function>str_replace</function></refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>str_ireplace</methodname>
   <methodparam><type>mixed</type><parameter>search</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replace</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función devuelve un string o un array con todas las apariciones de
   <parameter>search</parameter> en <parameter>subject</parameter>
   (ignorando mayúsculas y minúsculas) reemplazadas con el valor dado de <parameter>replace</parameter>.
   Si no se necesitan reglas complicadas de reemplazo, en general se
   puede utilizar esta función en lugar de
   <function>preg_replace</function> con el modificador <literal>i</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Si<parameter>search</parameter> y <parameter>replace</parameter> son
   matrices, entonces <function>str_ireplace</function> toma un valor de cada array
   y lo utiliza para buscar y reemplazar en
   <parameter>subject</parameter>. Si <parameter>replace</parameter> tiene menos
   valores que <parameter>search</parameter>, entonces un string vacío es usado para
   el resto de los valores de reemplazo. Si <parameter>search</parameter> es un
   array y <parameter>replace</parameter> es un string, entonces este string de reemplazo es
   usado para cada valor de <parameter>search</parameter>. Sin embargo,
   lo contrario no tendría sentido.
  </para>
  <para>
   Si <parameter>search</parameter> o <parameter>replace</parameter>
   son arrays, sus elementos son procesados del primero al último.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
       El valor a ser buscado, también conocida como la
       <emphasis>aguja</emphasis>. Un array puede ser utilizado para designar
       varias agujas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
       El valor de reemplazo que sustituye los valores encontrados de <parameter>search</parameter>.
       Un array puede ser utilizado para designar reemplazos múltiples.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       El string o array sobre el que se busca y se sustituye,
       también conocido como el <emphasis>pajar</emphasis>.
      </para>
      <para>
       Si <parameter>subject</parameter> es un array, entonces la búsqueda y
       reemplazo se realiza con cada entrada de
       <parameter>subject</parameter> y el valor devuelto también es
       un array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
       Si es pasado, con éste parámetro se establece el número de reemplazos realizados.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un string o un array de sustituciones.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>str_ireplace</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$bodytag = str_ireplace("%body%", "black", "<body text=%BODY%>");
echo $bodytag; // <body text=black>
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Trampa en que se puede caer por el orden de reemplazo</title>
   <para>
    Debido a que <function>str_ireplace</function> reemplaza de izquierda a derecha, podría
    sustituir a un valor previamente insertado cuando se hacen sustituciones múltiples.
    El ejemplo #2 en la documentación de <function>str_replace</function>
    demuestra como esto puede afectar en la práctica.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

