<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strspn">
 <refnamediv>
  <refname>strspn</refname>
  <refpurpose>
   Averigua la longitud del segmento inicial de un string que consista
   únicamente en caracteres contenidos dentro de una máscara dada
  </refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>strspn</methodname>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam><type>string</type><parameter>mask</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Encuentra la longitud del segmento inicial de <parameter>subject</parameter>
   que contiene <emphasis>solamente</emphasis> caracteres de <parameter>mask</parameter>.
  </para>
  <para>
   Si <parameter>start</parameter> y <parameter>length</parameter>
   son omitidos, entonces la totalidad de <parameter>subject</parameter> será
   examinada. Si son incluidos, entonces el efecto será el mismo que
   llamando <literal>strspn(substr($subject, $start, $length),
   $mask)</literal> (ver <xref linkend="function.substr" />
   para más información).
  </para>
  <para>
   La línea de código:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$var = strspn("42 is the answer to the 128th question.", "1234567890");
?>
]]>
    </programlisting>
   </informalexample>
   asignará <literal>2</literal> a <varname>$var</varname>,
   debido a que el string "42" es el segmento inicial
   de <parameter>subject</parameter> que consiste solamente en caracteres
   contenidos dentro de "1234567890".
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       El string a examinar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mask</parameter></term>
     <listitem>
      <para>
       La lista de caracteres permitidos.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       La posición en <parameter>subject</parameter> donde
       iniciar la búsqueda.
      </para>
      <para>
       Si <parameter>start</parameter> es dado y no es negativo,
       entonces <function>strspn</function> comenzará a
       examinar a <parameter>subject</parameter> en
       la posición <parameter>start</parameter>ésima. Por ejemplo, en
       el string '<literal>abcdef</literal>', el caracter en la
       posición <literal>0</literal> es '<literal>a</literal>', el
       caracter en la posición <literal>2</literal> es
       '<literal>c</literal>' y así sucesivamente.
      </para>
      <para>
       Si <parameter>start</parameter> es dado y es negativo,
       entonces <function>strspn</function> comenzará a
       examinar <parameter>subject</parameter> desde
       la <parameter>start</parameter>ésima posición desde el final
       de <parameter>subject</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       La longitud del segmento de <parameter>subject</parameter>
       a examinar.
      </para>
      <para>
       Si se proporciona <parameter>length</parameter> y no es negativo,
       entonces <parameter>subject</parameter> será examinado
       por el número <parameter>length</parameter> de caracteres después de la posición
       de inicio.
      </para>
      <para>
       Si se proporciona <parameter>length</parameter> y es negativo,
       entonces <parameter>subject</parameter> sera examinado desde
       la posición de inicio hasta el número <parameter>length</parameter> de caracteres
       desde el final de <parameter>subject</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la longitud del segmento inicial de <parameter>subject</parameter>
   el cual enteramente consiste en caracteres en <parameter>mask</parameter>.
  </para>
  <note>
   <para>
    Cuando se establece el parámetro <parameter>start</parameter>, la longitud devuelta
    se cuenta a partir de esta posición, no desde el comienzo de
    <parameter>subject</parameter>.
    </para>
  </note>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>strspn</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// subject no inicia con ningún caracter de mask
var_dump(strspn("foo", "o"));

// examina dos caracteres de subject iniciando en el offset 1
var_dump(strspn("foo", "o", 1, 2));

// examina un caracter de subject iniciando en el offset 1
var_dump(strspn("foo", "o", 1, 1));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(0)
int(2)
int(1)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strcspn</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

