<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328926 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="chdb.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>chdb::__construct</refname>
  <refpurpose>Crea una instancia de <classname>chdb</classname></refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>chdb::__construct</methodname>
   <methodparam><type>string</type><parameter>pathname</parameter></methodparam>
  </methodsynopsis>
  <para>
   Carga un archivo chdb mapeándolo en memoria.
   <note>
    <para>
     Aunque se realicen algunas comprobaciones de validez sobre el archivo especificado, mayormente
     están allí para evitar la posibilidad de cometer errores comunes (por ejemplo,
     cargar un archivo que no es una base de datos chdb, o que sea de algún modo
     incompatible con el sistema actual). Así, Un archivo chdb malicioso puede
     ser peligroso si se carga, por lo que los archivos chdb files deberían ser verificados y tratados
     con las mismas protecciones de seguridad usadas para las bibliotecas PHP compartidas.
    </para>
   </note>
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>pathname</parameter></term>
    <listitem>
     <para>
      el nombre del archivo a cargar.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una excepción en caso de que el archivo chdb no haya sido cargado con éxito.
  </para>
  <note>
   <para>
    Un archivo chdb válido puede fallar al cargarse en caso de que sea creado con sobre
    arquitectura con un "endianness" diferente, con una versión diferente de chdb,
    o si el archivo el demasiado grande para ser mapeado en memoria (generalmente en caso de archivos
    enormes y arquitecturas de 32-bit). En estos casos la garga fallará mediante
    el lanzamiento de una excepción, pero de otro modo no se llevará a cabo cualquier operación ilegal.
   </para>
  </note>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
