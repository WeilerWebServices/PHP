<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="solrclient.adddocuments" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SolrClient::addDocuments</refname>
  <refpurpose>Añade una colección de instancias de SolrInputDocument al índice</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>SolrClient::addDocuments</methodname>
   <methodparam><type>array</type><parameter>docs</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>overwrite</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>commitWithin</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Añade una colección de documentos al índice.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>docs</parameter></term>
     <listitem>
      <para>
       Una array que contiene la colección de instancias de SolrInputDocument. Este array debe ser una variable real.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>overwrite</parameter></term>
     <listitem>
      <para>
       Si sobrescribir el documento existente o no. Si es &false; existirán duplicados (varios documento con el mismo ID).
       
      </para>
      <warning>
       <para>
        En Solr &lt; 2.0 de PECL se usó $allowDups en lugar de $overwrite, que tiene la misma funcionalidad con la bandera booleana opuesta.
       </para>
       <para>
        $allowDups = false es lo mismo que $overwrite = true
       </para>
      </warning>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>commitWithin</parameter></term>
     <listitem>
      <para>
       Número de milisegundos dentro de los que autoconsignar este documento. Disponible desde Solr 1.4. El valor predeterminado (0) significa deshabilitado.
      </para>
      <para>
       Cuando se especifica este valor, deja el control de cúando realizar la consignación 
       al mismo Solr, optimizando el número de consignaciones a un mínimo mientras aún se cumple
       con los requisitos
       de latencia de actualizaciones, por lo que Solr realizará automáticamente una consignación
       cuando la agregación más antigua en el búfer venza.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto <type>SolrUpdateResponse</type> o lanza una excepción en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>SolrClientException</classname> si el cliente falló o hubo un problema de conexión.
  </para>
  <para>
   Lanza una <classname>SolrServerException</classname> si el Servidor de Solr falló al procesar la petición.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>SolrClient::addDocuments</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

$opciones = array
(
    'hostname' => SOLR_SERVER_HOSTNAME,
    'login'    => SOLR_SERVER_USERNAME,
    'password' => SOLR_SERVER_PASSWORD,
    'port'     => SOLR_SERVER_PORT,
);

$cliente = new SolrClient($opciones);

$doc = new SolrInputDocument();

$doc->addField('id', 334455);
$doc->addField('cat', 'Software');
$doc->addField('cat', 'Lucene');

$doc2 = clone $doc;

$doc2->deleteField('id');
$doc2->addField('id', 334456);

$docs = array($doc, $doc2);

$respuestaActualización = $cliente->addDocuments($docs);

// no se escribirán los cambios en disco hasta que se proporcione $commitWithin o se llame a SolrClient::commit

print_r($respuestaActualización->getResponse());

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
SolrObject Object
(
    [responseHeader] => SolrObject Object
        (
            [status] => 0
            [QTime] => 2
        )

)

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SolrClient::addDocument</methodname></member>
    <member><methodname>SolrClient::commit</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
