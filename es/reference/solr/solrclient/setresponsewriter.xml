<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336928 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="solrclient.setresponsewriter" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SolrClient::setResponseWriter</refname>
  <refpurpose>Establece el autor de la respuesta usado para preparar la respuesta de Solr</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>SolrClient::setResponseWriter</methodname>
   <methodparam><type>string</type><parameter>responseWriter</parameter></methodparam>
  </methodsynopsis>
  <para>
   Establece el autor de la respuesta usado para preparar la respuesta de Solr
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>responseWriter</parameter></term>
     <listitem>
      <para>Uno de los siguientes autores:</para>
      <simplelist>
       <member><literal>json</literal></member>
       <member><literal>phps</literal></member>
       <member><literal>xml</literal></member>
      </simplelist>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>SolrClient::setResponseWriter</methodname></title>
    <programlisting role="php">
<![CDATA[

<?php

// Esta es mi clase personalizada para los objetos
class SolrClass
{
   public $_propiedades = array();

   public function __get($nombre_propiedad) {
      
      if (property_exists($this, $nombre_propiedad)) {
      
          return $this->$nombre_propiedad;
      
      } else if (isset($_propiedades[$nombre_propiedad])) {
      
          return $_propiedades[$nombre_propiedad];
      }
      
      return null;
   }
}

$opciones = array
(
  'hostname' => 'localhost',
  'port' => 8983,
  'path' => '/solr/core1'
);

$cliente = new SolrClient($opciones);

$cliente->setResponseWriter("json");

//$respuesta = $cliente->ping();

$consulta = new SolrQuery();

$consulta->setQuery("*:*");

$consulta->set("objectClassName", "SolrClass");

$consulta->set("objectPropertiesStorageMode", 1); // 0 para propiedades independientes, 1 para combinadas

try
{

$respuesta = $cliente->query($consulta);

$resp = $respuesta->getResponse();

print_r($respuesta);

print_r($resp);

} catch (Exception $e) {

print_r($e);

}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
