<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="solrclient.optimize" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SolrClient::optimize</refname>
  <refpurpose>Defragmenta el índice</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>SolrUpdateResponse</type><methodname>SolrClient::optimize</methodname>
   <methodparam choice="opt"><type>int</type><parameter>maxSegments</parameter><initializer>1</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>softCommit</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>waitSearcher</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Defragmenta el índice para un rendimiento de búsquda más rápido.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>maxSegments</parameter></term>
     <listitem>
      <para>
       Optimiza como máximo este número de segmentos. Desde Solr 1.3
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>softCommit</parameter></term>
     <listitem>
      <para>
       Refresca la 'vista' del índice para un mayor rendimiento, pero si sin garantizar "on-disk". (Solr4.0+)
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>waitSearcher</parameter></term>
     <listitem>
      <para>
       Bloqueo hasta que un nuevo buscador sea abierto y registrado como el buscador de consultas principal, haciendo los cambios visibles.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un objeto SolrUpdateResponse en caso de éxito y lanza una excepción en caso de error.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lanza una <classname>SolrClientException</classname> si el cliente falló o hubo un problema de conexión.
  </para>
  <para>
   Lanza una <classname>SolrServerException</classname> si el Servidor de Solr falló al procesar la petición.
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Solr &gt;= 2.0 de PECL solamente soporta Solr Server &gt;= 4.0 
   </para>
   <para>
    Antes de Solr 2.0 de PECL, este método solía aceptar estos argumentos: "int $maxSegments, bool $waitFlush, bool $waitSearcher".
   </para>
  </warning>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SolrClient::commit</methodname></member>
    <member><methodname>SolrClient::rollback</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
