<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325998 Maintainer: seros Status: ready -->

<chapter xml:id="inclued.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 
 <section xml:id="inclued.examples-implementation">
  <title>Ejemplo que implementa inclued en una aplicación</title>
  <para>
   Este ejemplo muestra el proceso de implementar inclued en una
   apliación existente, viendo los resultados.
  </para>
  <para>
   <example>
    <title>Obtener la información dentro de la aplicación misma de PHP (función)</title>
    <programlisting role="php">
<![CDATA[
<?php
// Archivo donde almacenar la información de inclued
$fp = fopen('/tmp/wp.ser', 'w');
if ($fp) {
    $clue = inclued_get_data();
    if ($clue) {
        fwrite($fp, serialize($clue));
    }
    fclose($fp);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Ahora que existe alguna información es hora de hacer que tenga sentido en la forma de un
   gráfico. La extension inclued incluye un archivo PHP llamado
   <filename>gengraph.php</filename> que crea un archivo dot que
   requiere la biblioteca <link xlink:href="&url.graphviz;">graphviz</link>.
   Sin embargo, en esta forma no se requiere.
  </para>
  <para>
   <example>
    <title>Ejemplo de uso de gengraph.php</title>
    <para>
     Este ejemplo crea una imagen llamada inclued.png que
     muestra la información de inclued.
    </para>
    <programlisting role="shell">
<![CDATA[
# Primero, creamos el archivo dot
$ php gengraph.php -i /tmp/wp.ser -o wp.dot

# Lo siguiente, creamos la imagen
$ dot -Tpng -o inclued.png wp.dot
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Listar información mediante volcados (configuración)</title>
    <para>
     Cuando se usa la directiva <link linkend="ini.inclued.dumpdir">inclued.dumpdir</link>,
     los archivos (incluidos rastros) son volcados con cada petición. Aquí hay una
     manera de listar esos archivos, y deserializarlos (<function>unserialize</function>).
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$ruta = ini_get('inclued.dumpdir');
if ($ruta && is_dir($ruta)) {

    echo "Ruta: $ruta", PHP_EOL;

    $inclues = new GlobIterator($ruta . DIRECTORY_SEPARATOR . 'inclued*');

    if ($inclues->count() === 0) {
        echo 'No hay rastros hoy', PHP_EOL;
        exit;
    }

    foreach ($inclues as $inclue) {

        echo 'Archivo inclued: ', $inclue->getFilename(), PHP_EOL;

        $data = file_get_contents($inclue->getPathname());
        if ($data) {
            $inc = unserialize($data);
            echo ' -- nombre de archivo: ', $inc['request']['SCRIPT_FILENAME'], PHP_EOL;
            echo ' -- número de inclusiones: ', count($inc['includes']), PHP_EOL;
        }
        echo PHP_EOL;
    }
} else {
    echo 'Hoy estoy lleno de rastros.', PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Ruta: /tmp/inclued
Archivo inclued: inclued.56521.1
 -- nombre de archivo: /Users/philip/test.php
 -- número de inclusiones: 1

Archivo inclued: inclued.56563.1
 -- nombre de archivo: /tmp/none.php
 -- número de inclusiones: 0

Archivo inclued: inclued.56636.1
 -- nombre de archivo: /tmp/three.php
 -- número de inclusiones: 3
]]>
    </screen>
   </example>
  </para>
 </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

