<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333317 Maintainer: jesusruiz Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="rarentry.extract" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarEntry::extract</refname>
  <refpurpose>Extraer entrada del archivo</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>RarEntry::extract</methodname>
   <methodparam><type>string</type><parameter>dir</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filepath</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>NULL</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>extended_data</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   <methodname>RarEntry::extract</methodname> extrae los datos de entrada.
   Esto creará un nuevo archivo en el 
   <parameter>dir</parameter> especificado con el mismo nombre que el nombre de la entrada,
   a menos que el segundo argumento sea especificado. Siga leyendo más abajo para obtener mayor información.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dir</parameter></term>
     <listitem>
      <para>
       Ruta al directorio donde los archivos deben ser extraídos. Este parámetro es
       considerado si y sólo si no es <parameter>filepath</parameter>. Si ambos 
       parámetros están vacíos se intentará una extracción en el directorio actual.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>filepath</parameter></term>
     <listitem>
      <para>
       Ruta (relativa o absoluta) que contiene el directorio y el nombre del
       archivo extraído. Este parámetro anula los parámetros
       <parameter>dir</parameter> y el nombre del archivo original.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       La contraseña utilizada para cifrar esta entrada. Si la entrada no está cifrada, este valor no se utilizará y puede
       ser omitido. Si se omite este parámetro y la entrada está cifrada, la contraseña dada a
       <function>rar_open</function>, será utlizada. Si una contraseña incorrecta es dada, de forma explicita
       o implicita via <function>rar_open</function>, la comprobación CRC fallará y este método fallará y devolverá &false;.
       Si no se da la contraseña y se requiere una, este método fallará y devolverá &false;.
       Puede comprobar si una entrada está cifrada con <methodname>RarEntry::isEncrypted</methodname>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>extended_data</parameter></term>
     <listitem>
      <para>
       Si &true;, información extendida tales como NTFS ACLs e información propietaria Unix será establecida en los archivos
      extraidos, siempre que esta esté presente en el archivo.
     </para>
    </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <warning>
   <para>Antes de la versión 2.0.0, esta función no manejaba las rutas
    relativas correctamente. Utilice <function>realpath</function> como una solución.</para>
  </warning>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>3.0.0</entry>
       <entry>
        <parameter>extended_data</parameter> fue añadido.
       </entry>
      </row>
      <row>
       <entry>3.0.0</entry>
       <entry>
        Soporte para archivos RAR con nombres de entrada que se repiten ya no es defectuoso
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>RarEntry::extract</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

$rar_file = rar_open('example.rar') or die("Failed to open Rar archive");

$entry = rar_entry_get($rar_file, 'Dir/file.txt') or die("Failed to find such entry");

$entry->extract('/dir/to'); // crear /dir/to/Dir/file.txt
$entry->extract(false, '/dir/to/new_name.txt'); // crear /dir/to/new_name.txt

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>¿Cómo extraer todos los archivos en archivo?: </title>
    <programlisting role="php">
<![CDATA[
<?php

/* ejemplo por Erik Jenssen también conocido como erix */

$filename = "foobar.rar";
$filepath = "/home/foo/bar/";

$rar_file = rar_open($filepath.$filename);
$list = rar_list($rar_file);
foreach($list as $file) {
    $entry = rar_entry_get($rar_file, $file);
    $entry->extract("."); // extraer el directorio actual
}
rar_close($rar_file);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>RarEntry::getStream</methodname></member>
    <member><link linkend="wrappers.rar"><literal>rar://</literal> wrapper</link></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
