<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: jesusruiz Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="rarexception.setusingexceptions" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RarException::setUsingExceptions</refname>
  <refpurpose>Activar y desactivar el manejador de errores con excepciones</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>RarException::setUsingExceptions</methodname>
   <methodparam><type>bool</type><parameter>using_exceptions</parameter></methodparam>
  </methodsynopsis>
  <para>
   Si y sólo si el argumento es &true;, entonces, en lugar de emitir advertencias y devolver un valor especial indicando error cuando la biblioteca UnRAR encuentre un error, una excepción de tipo <type>RarException</type> será lanzada.
  </para>
  <para>
   Las excepciones también será lanzado para los siguientes errores, que se producen fuera de la biblioteca (su código de error será -1):
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     intentar algunas operaciones en un objeto <type>RarArchive</type> cerrado o un objeto <type>RarEntry</type> relativo al primero;
    </simpara>
   </listitem>
   
   <listitem>
    <simpara>
     intentar obtener una entrada que no existe con <methodname>RarArchive::getEntry</methodname>.
    </simpara>
   </listitem>
  </itemizedlist>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>using_exceptions</parameter></term>
     <listitem>
      <para>
       Debe ser &true; para activar lanzamiento de excepciones, &false; para descativarlo (el valor por defecto).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>RarException::setUsingExceptions</function></title>
    <programlisting role="php">
<![CDATA[
<?php
var_dump(RarException::isUsingExceptions());
$arch = RarArchive::open("does_not_exist.rar");
var_dump($arch);

RarException::setUsingExceptions(true);
var_dump(RarException::isUsingExceptions());
$arch = RarArchive::open("does_not_exist.rar");
var_dump($arch); //not reached
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
bool(false)

Warning: RarArchive::open(): Failed to open does_not_exist.rar: ERAR_EOPEN (file open error) in C:\php_rar\trunk\tests\test.php on line 3
bool(false)
bool(true)

Fatal error: Uncaught exception 'RarException' with message 'unRAR internal error: Failed to open does_not_exist.rar: ERAR_EOPEN (file open error)' in C:\php_rar\trunk\tests\test.php:8
Stack trace:
#0 C:\php_rar\trunk\tests\test.php(8): RarArchive::open('does_not_exist....')
#1 {main}
  thrown in C:\php_rar\trunk\tests\test.php on line 8
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>RarException::isUsingExceptions</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
