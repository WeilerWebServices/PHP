<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: regiemix Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.svn-status" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_status</refname>
  <refpurpose>Devuelve el estado de la copia de trabajo de los ficheros y directorios</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_status</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el estado de la copia de trabajo de los ficheros y directorios, dando las modificaciones,
   adiciones, borrados y otros cambios a los elementos de la copia de trabajo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Path local al fichero o directorio del que se obtendrá el estado.
      </para>
      &svn.relativepath;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Cualquier combinación de <constant>SVN_NON_RECURSIVE</constant>,
       <constant>SVN_ALL</constant> (independientemente del estado de modificación),
       <constant>SVN_SHOW_UPDATES</constant> (se añadirán entradas para los elementos
       que estan desactualizados), <constant>SVN_NO_IGNORE</constant> (ignorar
       <literal>svn:ignore</literal> las propiedades cuando se busquen nuevos ficheros)
       y <constant>SVN_IGNORE_EXTERNALS</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array de arrays asociativos indexado numéricamente, detallando
   el estado de los elementos del repositorio:
  </para>
  <screen>
<![CDATA[
Array (
    [0] => Array (
        // información del elemento
    )
    [1] => ...
)
]]>
  </screen>
  <para>
   La información del elemento es un array asociativo que puede contener
   las siguientes claves:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>path</varname></term>
     <listitem>
      <simpara>
       String con el path al fichero/directorio de esta entrada en el sistema de ficheros local.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_status</varname></term>
     <listitem>
      <simpara>
       Estado del texto del elemento. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_text_status</varname></term>
     <listitem>
      <simpara>
       Estado del texto del elemento en el repositorio. Sólo es exacto si
       <parameter>update</parameter> se definió a &true;.
       &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_status</varname></term>
     <listitem>
      <simpara>
       Estado de las propiedades del elemento. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_prop_status</varname></term>
     <listitem>
      <simpara>
       Estado de la propiedad del elemento en el repositorio. Sólo exacto si
       <parameter>update</parameter> se definió a &true;. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>locked</varname></term>
     <listitem>
      <simpara>
       Si el elemento está bloqueado o no. (Sólo definido si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>copied</varname></term>
     <listitem>
      <simpara>
       Si el elemento fue copiado o no (planificado para adición con
       histórico). (Sólo definido si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>switched</varname></term>
     <listitem>
      <simpara>
       Si el elemento fue intercambiado con el comando switch.
       (Sólo definido si &true;)
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Estas claves sólo estan definidas si el elemento está versionado:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>name</varname></term>
     <listitem>
      <simpara>
       Nombre de base del elemento en el repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>url</varname></term>
     <listitem>
      <simpara>
       URL del elemento en el repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos</varname></term>
     <listitem>
      <simpara>
       URL base del repositorio.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>revision</varname></term>
     <listitem>
      <simpara>
       Entero con la revisión del elemento en la copia de trabajo.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>kind</varname></term>
     <listitem>
      <simpara>
       Tipo de elemento, p.e. fichero o directorio. &svn.referto.type;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>schedule</varname></term>
     <listitem>
      <simpara>
       Acción planificada para el elemento, p.e. adición o eliminación. Las constantes
       para estos números mágicos no estan disponibles, pueden ser 
       emuladas utilizando:
      </simpara>
       <programlisting role="php">
<![CDATA[
<?php
if (!defined('svn_wc_schedule_normal')) {
    define('svn_wc_schedule_normal',  0); // nada especial
    define('svn_wc_schedule_add',     1); // elemento será añadido
    define('svn_wc_schedule_delete',  2); // elemento será eliminado
    define('svn_wc_schedule_replace', 3); // elemento será reemplazado
}
?>
]]>
      </programlisting>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>deleted</varname></term>
     <listitem>
      <simpara>
       Si el elemento fue eliminado o no, pero las revisiones previas existen 
       todavía. (Sólo definido si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>absent</varname></term>
     <listitem>
      <simpara>
       Si el elemento está ausente o no, es decir, Subversion sabe que
       debería haber algo pero no está. (Sólo definido si
       &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>incomplete</varname></term>
     <listitem>
      <simpara>
       Si las entradas del fichero o directorio están incompletas o no.
       (Sólo definido si &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_date</varname></term>
     <listitem>
      <simpara>
       Entero con el timestamp de Unix con la última fecha de commit. (No afectado por el parámetro <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_rev</varname></term>
     <listitem>
      <simpara>
       Entero con la revisión del último commit. (No afectado por el parámetro <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_author</varname></term>
     <listitem>
      <simpara>
       String con el autor del último commit. (No afectado por el parámetro <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_time</varname></term>
     <listitem>
      <simpara>
       Entero con el timestamp de Unix con el último tiempo de actualización de las propiedades
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_time</varname></term>
     <listitem>
      <simpara>
       Entero con el timestamp de Unix del último tiempo de actualización para el texto
      </simpara>
     </listitem>
   </varlistentry>
   <!--
   <varlistentry>
    <term><varname></varname></term>
     <listitem>
      <simpara>
       
      </simpara>
     </listitem>
   </varlistentry>
   -->
  </variablelist>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo básico</title>
    <para>
     Este ejemplo muestra un uso básico, teórico de esta función.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
print_r(svn_status(realpath('wc')));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array (
    [0] => Array (
        [path] => /home/bob/wc/sandwich.txt
        [text_status] => 8 // elemento que fue modificado
        [repos_text_status] => 1 // sin información disponible, usar update
        [prop_status] => 3 // sin cambios
        [repos_prop_status] => 1 // sin información disponible, usar update
        [name] => sandwich.txt
        [url] => http://www.example.com/svnroot/deli/trunk/sandwich.txt
        [repos] => http://www.example.com/svnroot/
        [revision] => 123
        [kind] => 1 // fichero
        [schedule] => 0 // sin acciones especiales planificadas
        [cmt_date] => 1165543135
        [cmt_rev] => 120
        [cmt_author] => Alice
        [prop_time] => 1180201728
        [text_time] => 1180201729
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>svn_update</function></member>
    <member><function>svn_log</function></member>
    <member><link xlink:href="&url.svn.manual.status;">Documentación SVN para svn status</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
