<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328734 Maintainer: carlos Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xml:id="function.mysql-fetch-field" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_fetch_field</refname>
  <refpurpose>Obtiene la información de una columna de un resultado y la devuelve como un objeto</refpurpose>
 </refnamediv>
 
 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_fetch_field</function></member>
    <member><methodname>PDOStatement::getColumnMeta</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mysql_fetch_field</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>field_offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve un objeto que contiene la información de los campos. Esta función puede ser usada
   para obtener información sobre campos en el resultado de la consulta proporcionada.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.result.description;
    <varlistentry>
     <term><parameter>field_offset</parameter></term>
     <listitem>
      <para>
       El índice numérico del campo. Si el índice del campo no se especifica, se
       recuperará el siguiente campo que aún no haya recuperado esta función.
       Los índices de <parameter>field_offset</parameter> comienzan en <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un <type>object</type> que contiene la información del campo.
   Las propiedades del objeto son:
  </para>
  <para>
   <itemizedlist>
    <listitem>
     <simpara>
      name - nombre de la columna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      table - nombre de la tabla a la que pertenece la columna, el cual es el sobrenombre si alguno está definido
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      max_length - longitud máxima de la columna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      not_null - 1 si la columna no puede ser &null;
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      primary_key - 1 si la columna es una clave primaria
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      unique_key - 1 si la columna es una clave única
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      multiple_key - 1 si la colmuna es una clave no única
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      numeric - 1 si la columna es numérica
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      blob - 1 si la columna es un BLOB
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      type - el tipo de la columna
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      unsigned - 1 si la columna es sin signo
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      zerofill - 1 si la columna es rellena de ceros
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>mysql_fetch_field</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$conexión = mysql_connect('localhost', 'usuario_mysql', 'contraseña_mysql');
if (!$conexión) {
    die('No se pudo conectar: ' . mysql_error());
}
mysql_select_db('basedatos');
$resultado = mysql_query('select * from table');
if (!$resultado) {
    die('Falló la consulta: ' . mysql_error());
}
/* obtener los metadatos de la columna */
$i = 0;
while ($i < mysql_num_fields($resultado)) {
    echo "Información de la columna $i:<br />\n";
    $metadatos = mysql_fetch_field($resultado, $i);
    if (!$metadatos) {
        echo "No hay información disponible<br />\n";
    }
    echo "<pre>
blob:         $metadatos->blob
max_length:   $metadatos->max_length
multiple_key: $metadatos->multiple_key
name:         $metadatos->name
not_null:     $metadatos->not_null
numeric:      $metadatos->numeric
primary_key:  $metadatos->primary_key
table:        $metadatos->table
type:         $metadatos->type
unique_key:   $metadatos->unique_key
unsigned:     $metadatos->unsigned
zerofill:     $metadatos->zerofill
</pre>";
    $i++;
}
mysql_free_result($resultado);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &database.field-case;
  <note>
   <para>
    Si se usa un alias para los campos o los nombres de tablas en la consulta SQL se
    devolverá el nombre del alias. El nombre original se puede recuperar, por ejemplo, usando
    <methodname>mysqli_result::fetch_field</methodname>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_field_seek</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
