<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347555 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id="function.dbx-query" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>dbx_query</refname>
  <refpurpose>Enviar una consulta y traer todos los resultado (si hubo alguno)</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>dbx_query</methodname>
   <methodparam><type>object</type><parameter>link_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>sql_statement</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía una consulta u trae todos los resultados.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       El objeto de enlace de DBX devuelto por <function>dbx_connect</function>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sql_statement</parameter></term>
     <listitem>
      <para>
       Declaración SQL.
      </para>
      <para>
       La información dentro de la consulta deberíla ser <link
       linkend="function.dbx-escape-string">adecuadamente escapada</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       El parámetro <parameter>flags</parameter> se usa para controlar la cantidad de
       niformación que es devuelta. Puede ser cualquier combinación de las siguientes
       constantes con el operador a nivel de bit OR (|). Las banderas (flags) DBX_COLNAMES_*
       sobrescriben la configuración dbx.colnames_case del &php.ini;.
       <variablelist>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INDEX</constant>
         </term>
         <listitem>
          <simpara>
           Es <emphasis>siempre</emphasis> establecida, es decir, el objeto devuelto
           tiene la propiedad <property>data</property> que es una matriz de 2
           dimensiones indexada numéricamente. Por ejemplo, en la expresión
           <literal>data[2][3]</literal> <literal>2</literal> significa el número de fila
           (o registro) y <literal>3</literal> significa el número de columna
           (o campo). La primera fila y columna están indexadas como 0.
          </simpara>
          <simpara>
           Si también se especifica <constant>DBX_RESULT_ASSOC</constant>, el
           objeto devuelto contiene también la información relacionada con
           <constant>DBX_RESULT_INFO</constant>, incluso si no se especificó.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_INFO</constant>
         </term>
         <listitem>
          <simpara>
           Proporciona información acerca de las columnas, como los nombres y tipos de campos.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_ASSOC</constant>
         </term>
         <listitem>
          <simpara>
           Consigue que los valores de campos se puedan acceder con los respectivos
           nombres de columnas usados como claves a la propiedad <property>data</property>
           del objeto devuelto.
          </simpara>
          <simpara>
           Los resultados relacionados son en realidad referencias a la información indexada
           numéricamente, por lo que modificar <literal>data[0][0]</literal> causa que
           <literal>data[0]['nombre_del_campo_de_la_primera_columna']</literal> se mofique
           también.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_RESULT_UNBUFFERED</constant>
         </term>
         <listitem>
          <simpara>
           Esta bandera no creará la propiedad <property>data</property>, y
           la propiedad <property>rows</property> será inicialmente 0. Use esta
           bandera para conjuntos de datos grandes, y use <function>dbx_fetch_row</function> para
           recuperar los resultados fila por fila.
          </simpara>
          <simpara>
           La función <function>dbx_fetch_row</function> devolverá las filas que
           están en conformidad con las banderas establecidas con esta consulta. A propósito, también
           actualizará <property>rows</property> cada vez que sea llamada.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UNCHANGED</constant>
         </term>
         <listitem>
          <simpara>
           El caso de los nombres de columnas devueltos no serán cambiados.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_UPPERCASE</constant>
         </term>
         <listitem>
          <simpara>
           El caso de los nombres de columnas devueltos serán cambiados a
           mayúsculas.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>DBX_COLNAMES_LOWERCASE</constant>
         </term>
         <listitem>
          <simpara>
           El caso de los nombres de columnas devueltos serán cambiados a
           minúsculas.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
       Observer que <constant>DBX_RESULT_INDEX</constant> se usa siempre, a pesar del
       valor actual del parámetro <parameter>flags</parameter>. Esto significa
       que sólo son efectivas las siguientes combinaciones:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>DBX_RESULT_INDEX</constant> |
          <constant>DBX_RESULT_INFO</constant> |
          <constant>DBX_RESULT_ASSOC</constant> - esto es lo predeterminado si
          no se especificó <parameter>flags</parameter>.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>dbx_query</function> devuelve un objeto o <literal>1</literal> 
   si se tuvo éxtio, y <literal>0</literal> si falló. El objeto resultado es
   devuelto sólo si la consulta dada en <parameter>sql_statement</parameter>
   produce un conjunto de resultados (es decir, una consulta SELECT, incluso si el conjunto de resultados
   está vacío). 
  </para>
  <para>
   El objeto resultado tiene cuatro o cinco
   propiedades dependiendo de <parameter>flags</parameter>:
   <variablelist>
    <varlistentry>
     <term>
      <property>handle</property>
     </term>
     <listitem>
      <para>
       Es un gestor válido para la base de datos conectada, y como tal se puede
       usar en las funciones específicas del módulo (si se requiere).
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$resultado = dbx_query($enlace, "SELECT id FROM table");
mysql_field_len($resultado->handle, 0);
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>cols</property> y <property>rows</property>
     </term>
     <listitem>
      <para>
       Estas contienen el número de columnas (o campos) y de filas (o registros)
       respectivamente.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
$resultado = dbx_query($enlace, 'SELECT id FROM table');
echo $resultado->rows; // número de registros
echo $resultado->cols; // número de campos
?>
]]>
        </programlisting>
       </informalexample>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>info</property> (opcional)
     </term>
     <listitem>
      <simpara>
       Es devuelto sólo si se espscifica <constant>DBX_RESULT_INFO</constant> o
       <constant>DBX_RESULT_ASSOC</constant> en el parámetro
       <parameter>flags</parameter>. Es una matriz de 2 dimensiones
       que tiene dos filas nominadas (<literal>name</literal> y
       <literal>type</literal>) para recuperar la información de la columna.
      </simpara>
      <example>
       <title>listar cada nombre de campo y tipo</title>
       <programlisting role="php">
<![CDATA[
<?php
$resultado = dbx_query($enlace, 'SELECT id FROM table',
                     DBX_RESULT_INDEX | DBX_RESULT_INFO);

for ($i = 0; $i < $resultado->cols; $i++ ) {
    echo $resultado->info['name'][$i] . "\n";
    echo $resultado->info['type'][$i] . "\n";  
}
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <property>data</property>
     </term>
     <listitem>
      <simpara>
       Esta propiedad contiene la información resultante actual, posiblemente asociada
       tambien con los nombres de columna, dependiendo de <parameter>flags</parameter>.
       Si está establecido <constant>DBX_RESULT_ASSOC</constant>, es posible usar
       <literal>$resultado->data[2]["nombre_campo"]</literal>.
      </simpara>
      <example>
       <title>imprimir el contenido de la propiedad data en una tabla HTML</title>
       <programlisting role="php">
<![CDATA[
<?php
$resultado = dbx_query($link, 'SELECT id, parentid, description FROM table');

echo "<table>\n";
foreach ($resultado->data as $fila) {
    echo "<tr>\n";
    foreach ($fila as $campo) {
        echo "<td>$campo</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";
?>
]]>
       </programlisting>
      </example>
      <example>
       <title>Cómo tratar las consultas UNBUFFERED</title>
       <programlisting role="php">
<![CDATA[
<?php

$resultado = dbx_query ($enlace, 'SELECT id, parentid, description FROM table', DBX_RESULT_UNBUFFERED);

echo "<table>\n";
while ($fila = dbx_fetch_row($resultado)) {
    echo "<tr>\n";
    foreach ($fila as $campo) {
        echo "<td>$campo</td>";
    }
    echo "</tr>\n";
}
echo "</table>\n";

?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Cómo tratar el valor devuelto</title>
    <programlisting role="php">
<![CDATA[
<?php
$enlace   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("No se pudo conectar");

$resultado = dbx_query($enlace, 'SELECT id, parentid, description FROM table');

if (is_object($resultado) ) {
    // ... hacer algo aquí, ver ejemplos detallados más adelante ...
    // primero, imprimir los nombres de campos y tipos
    // después, dibujar una tabla rellenada con los valores de los campos devueltos
} else {
    exit("La consulta falló");
}

dbx_close($enlace);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Consulte siempre la documentación específica del módulo también.
   </para>
   <para>
    Los nombres de columnas en una base de datos Oracle son devueltos en minúsculas.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>dbx_escape_string</function></member>
    <member><function>dbx_fetch_row</function></member>
    <member><function>dbx_connect</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
