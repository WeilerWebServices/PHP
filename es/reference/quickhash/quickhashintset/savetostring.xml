<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 314459 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="quickhashintset.savetostring" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashIntSet::saveToString</refname>
  <refpurpose>Este método devuelve una versión serializada del conjunto</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>string</type><methodname>QuickHashIntSet::saveToString</methodname><void/>
  </methodsynopsis>
  <para>
   Este método devuelve una versión serializada del conjunto en el mismo formato que
   que puede leer loadFromString().
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Este método de vuelve un string que contiene un formato serializado del conjunto.
   Cada elementos se almacena como un valor de cuatro bytes en el Endianness que utilice
   el systema actual.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>QuickHashIntSet::saveToString</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$conjunto = new QuickHashIntSet( 1024 );
var_dump( $conjunto->exists( 4 ) );
var_dump( $conjunto->add( 4 ) );
var_dump( $conjunto->exists( 4 ) );
var_dump( $conjunto->add( 4 ) );

var_dump( $conjunto->saveToString() );
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
