<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 321911 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="quickhashinthash.loadfromfile" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashIntHash::loadFromFile</refname>
  <refpurpose>Este método de fabricación crea un hash desde un fichero</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>QuickHashIntHash</type><methodname>QuickHashIntHash::loadFromFile</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Este método de fabricación crea un nuevo hash desde un fichero de definición del disco. El
   formato del fichero consiste en una signatura 'QH\0x11\0', el número de elementos como
   un número entero de 32 con signo bits en el Endianness del sistema, seguido de
   números enteros de 32 con signo empaquetados juntos en el Endianness que use el sistema donde
   se ejecuta el código. Por cada elemento del hash existen dos números enteros de 32 bits con
   signo almacenados. El primero de cada elemento es la clave, y el segundo es el valor
   al que pertenece la clave. Un ejemplo podría ser:
  </para>
  <para>
   <example>
    <title>Formato de fichero de IntHash de QuickHash</title>
<screen><![CDATA[00000000  51 48 11 00 02 00 00 00  01 00 00 00 01 00 00 00  |QH..............|
00000010  03 00 00 00 09 00 00 00                           |........|
00000018
]]></screen>
   </example>
  </para>
  <para>
   <example>
    <title>Formato de fichero de IntHash de QuickHash</title>
<screen><![CDATA[signatura de cabecera ('QH'; tipo de clave: 1; tipo de valor: 1; relleno: \0x00)
00000000  51 48 11 00

número de elementos:
00000004  02 00 00 00

data string:
00000000  01 00 00 00 01 00 00 00  03 00 00 00 09 00 00 00

clave/valor 1 (clave = 1, valor = 1)
01 00 00 00  01 00 00 00

clave/valor 2 (clave = 3, valor = 9)
03 00 00 00  09 00 00 00
]]></screen>
   </example>
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       El nombre de fichero del fichero desde donde leer el hash.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Las mismas opciones que toma el constructor de la clase; excepto que se
       ignora la opción 'size'. Ésta se calcula automáticamente para que sea el mismo que el
       número de entradas del hash, redondeado hacia arriba a la potencia de dos más próxima
       con un límite máximo de 4194304.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un nuevo objeto QuickHashIntHash.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>QuickHashIntHash::loadFromFile</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fichero = dirname( __FILE__ ) . "/simple.hash";
$hash = QuickHashIntHash::loadFromFile(
    $fichero,
    QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC
);
foreach( range( 0, 0x0f ) as $clave )
{
    printf( "La clave %3d (%2x) %s\n",
        $clave, $clave, 
        $hash->exists( $clave ) ? 'está establecida' : 'no está establecida'
    );
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
La clave   0 ( 0) no está establecida
La clave   1 ( 1) está establecida
La clave   2 ( 2) está establecida
La clave   3 ( 3) está establecida
La clave   4 ( 4) no está establecida
La clave   5 ( 5) está establecida
La clave   6 ( 6) no está establecida
La clave   7 ( 7) está establecida
La clave   8 ( 8) no está establecida
La clave   9 ( 9) no está establecida
La clave  10 ( a) no está establecida
La clave  11 ( b) está establecida
La clave  12 ( c) no está establecida
La clave  13 ( d) está establecida
La clave  14 ( e) no está establecida
La clave  15 ( f) no está establecida
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
