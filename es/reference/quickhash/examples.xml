<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328942 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<chapter xml:id="quickhash.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.examples;
 <example>
  <title>Ejemplo de Quickhash</title>
  <programlisting role="php">
<![CDATA[
<?php
$conjunto = new QuickHashIntSet( 1024, QuickHashIntSet::CHECK_FOR_DUPES );
$conjunto->add( 1 );
$conjunto->add( 3 );

var_dump( $conjunto->exists( 3 ) );
var_dump( $conjunto->exists( 4 ) );

$conjunto->saveToFile( "/tmp/conjunto-prueba.set" );

$conjuntoNuevo = QuickHashIntSet::loadFromFile(
    "/tmp/conjunto-prueba.set"
);

var_dump( $conjuntoNuevo->exists( 3 ) );
var_dump( $conjuntoNuevo->exists( 4 ) );
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
bool(true)
bool(false)
bool(true)
bool(false)
]]>
  </screen>
 </example>
 <example>
  <title>Ejemplo de Quickhash con ArrayAccess</title>
  <programlisting role="php">
<![CDATA[
<?php
$hash = new QuickHashIntHash( 64 );

// Agregar y actualizar entradas hash.
$hash[3] = 145926;
$hash[3] = 1415926;
$hash[2] = 72;

// Comprobar si existen las claves
var_dump( isset( $hash[3] ) );

// Eliminación de entradas hash
unset( $hash[2] );

// Recuperar el valor almacenado para un hash
echo $hash[3], "\n";
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
bool(true)
1415926
]]>
  </screen>
 </example>
 <example>
  <title>Ejemplo de Quickhash con Iterator</title>
  <programlisting role="php">
<![CDATA[
<?php
$hash = new QuickHashIntHash( 64 );

// Añadir entradas hash
$hash[1] = 145926;
$hash[2] = 1415926;
$hash[3] = 72;
$hash[4] = 712314;
$hash[5] = -4234;

foreach( $hash as $clave => $valor )
{
    echo $clave, ' => ', $valor, "\n";
}
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
5 => -4234
4 => 712314
1 => 145926
2 => 1415926
3 => 72
]]>
  </screen>
 </example>
 <example>
  <title>Ejemplo de valores de tipo string de Quickhash</title>
  <programlisting role="php">
<![CDATA[
<?php
$hash = new QuickHashIntStringHash( 64 );

// Añadir entradas hash
$hash[1] = "un millón cuatrocientos quince mil novecientos ventiseis";
$hash->add( 2, "uno más" );

foreach( $hash as $clave => $valor )
{
    echo $clave, ' => ', $valor, "\n";
}
?>
]]>
  </programlisting>
  &example.outputs.similar;
  <screen>
<![CDATA[
1 => un millón cuatrocientos quince mil novecientos ventiseis
2 => uno más
]]>
  </screen>
 </example>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

