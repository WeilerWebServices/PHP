<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334591 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<reference xml:id="ref.hwapi" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>&Functions; de la API Hyperwave</title>
 
 <partintro>
  <section xml:id="hwapi.apache">
   <title>Integración con Apache</title>
   <para>
    La integración con Apache y con otros servidores está descrita
    en el <link linkend="hwapi.apache-integration">capítulo aparte</link>.
   </para>
  </section>
  
  <!-- FIXME: This extension apparently defines a class.. -->
  <section xml:id="hwapi.classes">
   <title>Clases</title>
   <para>
    La API proporcionada por la extensión HW_API está completamente orientada a objetos.
    Es similar a la interfaz de C++ del SDK de Hyperwave.
    Consiste en las siguientes clases.
    <itemizedlist>
     <listitem>
      <simpara>
       <classname>HW_API</classname>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>HW_API_Object</classname>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>HW_API_Attribute</classname>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>HW_API_Error</classname>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>HW_API_Content</classname>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>HW_API_Reason</classname>
      </simpara>
     </listitem>
    </itemizedlist>
    Algunas clases básicas como <classname>HW_API_String</classname>,
    <classname>HW_API_String_Array</classname>, etc., las cuales ya existen en el
    SDK de Hyperwave, no han sido implementadas porque PHP tiene poderosos
    sustitutos para ellas.
   </para>
   <para>
    Cada clase tiene ciertos métodos, cuyos nombres son idénticos a sus
    equivalentes del SDK de Hyperwave. El pasar argumentos a esta función
    difiere de todas las extensiones de PHP pero está cercano a la API de C++ del
    SDK de HW. En vez de pasar varios parámetros, éstos son puestos en
    un array asociativo y pasado como un parámetro. Los nombres de las claves
    son idénticos a aquellos documentados en el SDK de HW. Los parámetros más comunes
    están listados abajo. Si se requieren otros parámetros serán documentados y
    fuera necesrio.
    <itemizedlist>
     <listitem>
      <simpara>
       <classname>objectIdentifier</classname> El nombre o id de un objeto,
       p.ej. "rootcollection", "0x873A8768 0x00000002".
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>parentIdentifier</classname> El nombre o id de un objeto
       que está considerado que es un padre.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>object</classname> Una instancia de la clase HW_API_Object.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>parameters</classname> Una instancia de la clase HW_API_Object.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>version</classname> La versión de un objeto.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>mode</classname> Un valor de tipo integer determina la manera en
       que se ejecuta una operación.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>attributeSelector</classname> Cualquier array de cadenas, cada una
       conteniendo el nombre de un atributo. Se usa si recupera el
       registro de objetos y quiere incluir ciertos atributos.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <classname>objectQuery</classname> Una consulta para seleccionar ciertos objetos
       de una lista de objetos. Se usa para reducir el número de objetos
       que fueron despachados por una función como
       <function>hw_api::children</function> o <function>hw_api::find</function>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <note>
    <para>
     Los métodos que devuelven un valor <type>boolean</type> pueden devolver &true;, &false; o
     un objeto <classname>HW_API_Error</classname>.
    </para>
   </note>
  </section>
 </partintro>
 
 &reference.hwapi.entities.hw-api;
 &reference.hwapi.entities.hw-api-attribute;
 &reference.hwapi.entities.hw-api-content;
 &reference.hwapi.entities.hw-api-error;
 &reference.hwapi.entities.hw-api-object;
 &reference.hwapi.entities.hw-api-reason;
 &reference.hwapi.entities.functions;
 
</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
