<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 329237 Maintainer: chuso Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="reflectionclass.getdefaultproperties" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionClass::getDefaultProperties</refname>
  <refpurpose>Obtener propiedades predeterminadas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>array</type><methodname>ReflectionClass::getDefaultProperties</methodname>
   <void />
  </methodsynopsis>
  <para>
   Devuelve las propiedades predeterminadas de una clase (incluyendo las propiedades heredadas).
  </para>
    <note>
   <para>
    Este método sólo funciona para las propiedades estáticas cuando se utiliza en las clases internas. 
    El valor por defecto de una propiedad de clase estática no puede ser rastreada utilizando este método 
    sobre las clases definidas por el usuario.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Un <type>array</type> de propiedades predeterminadas, donde la clave es el nombre de la
   propiedad y el valor corresponde con el valor de la propiedad o &null; si la
   propiedad no tuviera ningún valor predeterminado. Esta función no hace distinción entre
   propiedades estáticas y no estáticas, y no tiene en cuenta los modificadores
   de visibilidad.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <methodname>ReflectionClass::getDefaultProperties</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php
class Bar {
    protected $propiedadHeredada = 'predeterminadoHeredada';
}

class Foo extends Bar {
    public $propiedad = 'predeterminadoPropiedad';
    private $propiedadPrivada = 'predeterminadoPropiedadPrivada';
    public static $propiedadEstatica = 'propiedadEstatica';
    public $propiedadSinValor;
}

$claseReflexion = new ReflectionClass('Foo');
var_dump($claseReflexion->getDefaultProperties());
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(5) {
   ["propiedadEstatica"]=>
   string(14) "propiedadEstatia"
   ["propiedad"]=>
   string(15) "predeterminadoPropiedad"
   ["propiedadPrivada"]=>
   string(22) "predeterminadoPropiedadPrivada"
   ["propiedadSinValor"]=>
   NULL
   ["propiedadHeredada"]=>
   string(16) "predeterminadoHeredada"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ReflectionClass::getProperties</methodname></member>
    <member><methodname>ReflectionClass::getStaticProperties</methodname></member>
    <member><methodname>ReflectionClass::getProperty</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
