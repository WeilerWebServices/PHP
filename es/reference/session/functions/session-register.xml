<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323674 Maintainer: seros Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.session-register">
 <refnamediv>
  <refname>session_register</refname>
  <refpurpose>Registrar una o más variables globales con la sesión actual</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>session_register</methodname>
   <methodparam><type>mixed</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_register</function> acepta un número variable de
   argumentos, cualquiera que pueda ser o una cadena que contenga el nombre de una
   variable o una matriz que consista en nombres de variables u otras matrices. Por
   cada nombre, <function>session_register</function> registra la variable
   global con ese nombre en la sesión actual.
  </para>
  <para>
   También se puede crear una variable de sesión estableciendo simplemente
   el miembro apropiado de la matriz <varname>$_SESSION</varname>
   o <varname>$HTTP_SESSION_VARS</varname> (PHP &lt; 4.1.0).
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// El uso de session_register() está obsoleto
$barney = "Un gran dinosaurio púrpura.";
session_register("barney");

// Se prefiere el uso de $_SESSION, a partir de PHP 4.1.0
$_SESSION["zim"] = "Un invasor de otro planeta.";

// La forma antigua era usar $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["bobesponja"] = "Tiene pantalones cuadrados.";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <para>
   Si no se llamó a <function>session_start</function> antes de llamar a esta
   función, se hará una llamada implícita a <function>session_start</function> sin
   parámetros. <varname>$_SESSION</varname> no imita
   este comportamiento y requiere que <function>session_start</function> se use antes.
  </para>
  &warn.deprecated.function-5-3-0.removed-5-4-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Una cadena de contiene el nombre de una variable o una matriz que consiste en
       nombres de variables u otras matrices.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Si quiere que su script funcione sin tener en cuenta <link
    linkend="ini.register-globals">register_globals</link>, necesita usar
    en su lugar la matriz <varname>$_SESSION</varname> ya que
    las entradas de <varname>$_SESSION</varname> se registran automáticamente. Si
    su script usa <function>session_register</function>, no funcionará
    en entornos donde la directiva de PHP <link
    linkend="ini.register-globals">register_globals</link> esté deshabilitada.
   </para>
  </caution>
  &note.registerglobals;
  <caution>
   <para>
    Esto registra una variable <emphasis>global</emphasis>. Si no desea
    registrar una variable de sesión desde dentro de una función, necesita asegurarse
    de hacerla global usando la palabra clave <link
    linkend="language.variables.scope"><command>global</command></link>
    o la matriz <varname>$GLOBALS[]</varname>, o use las matrices de
    sesión especiales como está anotado debajo.
   </para>
  </caution>
  <caution>
   <para>
    Si está usando <varname>$_SESSION</varname>
    (o <varname>$HTTP_SESSION_VARS</varname>), no use
    <function>session_register</function>,
    <function>session_is_registered</function>, y
    <function>session_unregister</function>.
   </para>
  </caution>
  <note>
   <para>
    Actualmente es imposible registrar variables de recursos en una sesión.
    Por ejemplo, no se puede crear una conexión a una base de datos y almacenar el
    id de conexión como una variable de sesión y esperar que la conexión aún sea
    válida la siguiente vez que se restaure la sesión. Las funciones de PHP que devuelven un
    recurso están identificadas por tener un tipo de retorno de
    <literal>resource</literal> en sus definiciones de función. Una lista de
    funciones que devuelven recursos está disponible en el apéndice <link
    linkend="resource">tipos de recursos</link>.
   </para>
   <para>
    Si se usa <varname>$_SESSION</varname> (o <varname>$HTTP_SESSION_VARS</varname>
    para PHP 4.0.6 o anterior), asigne valores a
    <varname>$_SESSION</varname>. Por ejemplo: $_SESSION['var'] = 'ABC';
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_is_registered</function></member>
    <member><function>session_unregister</function></member>
    <member><varname>$_SESSION</varname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
