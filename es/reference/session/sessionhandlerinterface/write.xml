<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 323626 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="sessionhandlerinterface.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandlerInterface::write</refname>
  <refpurpose>Escribir información de sesión</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type>bool</type><methodname>SessionHandlerInterface::write</methodname>
   <methodparam><type>string</type><parameter>session_id</parameter></methodparam>
   <methodparam><type>string</type><parameter>session_data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Escribe información de sesión al almacenamiento de sesiones. Llamado por
   <function>session_write_close</function>, cuando <function>session_register_shutdown</function> falla, o durante un cierre normal.
   Nota: <function>SessionHandlerInterface::close</function> es llamado inmediantamente después de esta función.
  </para>
  <para>
   PHP llamará a este método cuando la sesión esté lista para ser almacenada y cerrada. Codifica
   la información de sesión desde la variable superglobal <varname>$_SESSION</varname> a una cadena serializada y la pasa
   junto con el ID de sersión a este método para el almacenamiento. El método de serialización usado
   está especificado en la configuración <link linkend="ini.session.serialize-handler">session.serialize_handler</link>.
  </para>
  <para>
   Observe que este método normalmente es llamado por PHP después de que los buffers de salida hayan sido cerrados a menos que se llame
   explícitamente a <function>session_write_close</function>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>session_id</parameter></term>
    <listitem>
     <para>
      El ID de sesión.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>session_data</parameter></term>
    <listitem>
     <para>
      La información de sesión codificada. Esta información es el resultado de que PHP codifique internamente la variable supergobal <varname>$_SESSION</varname> a una cadena
      serializada y pasarla a este parámetro. Observe que las sesiones usan un método de serialización alternativo.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     La directiva de configuración
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>.
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
