<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344870 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<book xml:id="book.session" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="bundled" ?>
 <title>Manejo de sesiones</title>
 <titleabbrev>Sesiones</titleabbrev>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.session">
  &reftitle.intro;
  <para>
   El soporte para sesiones en PHP consiste en una forma de preservar cierta información
   a lo largo de accesos subsiguientes.
  </para>
  <para>
   A un visitante que accede a un sitio web se le asigna un id único,
   también llamado id de sesión. Éste es almacenado en una cookie en la
   parte del cliente o se propaga en el URL.
  </para>
  <para>
   El soporte para sesiones permite almacenar los datos entre peticiones en el array
   superglobal <varname>$_SESSION</varname>. Cuando un visitante acceda
   a un sitio web, PHP comprobará automáticamente (si <link linkend="ini.session.auto-start">session.auto_start</link>
   está establecido a 1), o sobre su petición (explícitamete a través de
   <function>session_start</function>), si se ha enviado un id de sesión
   específico con la petición. Si éste es el caso, se recrea
   el entorno anteriormente guardado.
  </para>
  <caution>
   <para>
    Si se activa <link linkend="ini.session.auto-start">
    session.auto_start</link>, la única manera de colocar objetos
    en las sesiones es cargar su definición de clase usando
    <link linkend="ini.auto-prepend-file">auto_prepend_file</link> ,
    en el que, además de cargar la definición de clase, se tendrá que
    emplear <function>serialize</function> para serializar el objeto
    y <function>unserialize</function> para deserializarlo
    después.
   </para>
  </caution>
  <para>
   <varname>$_SESSION</varname> (y todas las variables registradas) son serializadas 
   internamente por PHP utilizando el gestor de serialización especificado en el 
   ajuste ini <link linkend="ini.session.serialize-handler">session.serialize_handler</link>, 
   una vez finalizada la solicitud. Las variables registradas que están sin definir son 
   marcadas como no definidas. En accesos subsiguientes, éstas no estarán definidas
   por el módulo de sesión a menos que el usuario las defina después.
  </para>
  <warning>
   <para>
    Debido a que los datos de sesión son serializados, las variables <type>resource</type> 
    no pueden ser almacenadas en la sesión.
   </para>
   <para>
    Los gestortes serializados (<literal>php</literal>
    y <literal>php_binary</literal>) heredan las limitaciones de
    register_globals. Por lo tanto, no se pueden usar índices númericos o de string
    que contengan los caracteres especiales (<literal>|</literal>
    y <literal>!</literal>). Si se utilizan, se finalizará
    con errores al cierre del script. <literal>php_serialize</literal>
    no tiene tales limitaciones. <literal>php_serialize</literal>
    está disponible desde PHP 5.5.4.
   </para>
  </warning>
  <note>
   <para>
    Por favor, observe que al trabajar con sesiones, no se crea un registro
    de una sesión hasta que una variable haya sido registrada usando la
    función <function>session_register</function> o añadiendo una nueva
    clave al array superglobal <varname>$_SESSION</varname>. Esto siempre es
    así, sin importar si una sesión ha sido iniciada usando la
    función <function>session_start</function>.
   </para>
  </note>
  <note>
   <para>
    PHP 5.2.2 introdujo una característica no documentada para almacenar ficheros de sesiones
    en "/tmp" incluso si <link linkend="ini.open-basedir">open_basedir</link> 
    estaba habilitado y "/tmp" no estaba explícitamente añadido a la lista de rutas permitidas.
    Esta característica ha sido eliminada de PHP a partir de PHP 5.3.0.
   </para>
  </note>
 </preface>
 <!-- }}} -->
 
 &reference.session.setup;
 &reference.session.constants;
 &reference.session.examples;
 &reference.session.upload-progress;
 &reference.session.security;
 &reference.session.reference;
 &reference.session.sessionhandler;
 &reference.session.sessionhandlerinterface;
 &reference.session.sessionidinterface;
 &reference.session.sessionupdatetimestamphandlerinterface;
 
</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

