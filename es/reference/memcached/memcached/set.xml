<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: yago Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<refentry xml:id="memcached.set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Memcached::set</refname>
  <refpurpose>Guardar un ítem</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Memcached::set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expiration</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Memcached::set</function> guarda el valor dado por <parameter>value</parameter>
   en un servidor de memcached bajo la clave especificada por <parameter>key</parameter>. El
   parámetro <parameter>expiration</parameter> se puede emplear para controlar cuándo se
   considera que ha expirado el valor.
  </para>
  <para>
   El valor puede ser cualquier tipo de PHP válido excepto recursos, ya que estos no
   se pueden representar de forma serializada. Si la opción
   <constant>Memcached::OPT_COMPRESSION</constant> está activada, el
   valor serializado será además comprimido antes de guardarlo.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       &memcached.parameter.key;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       &memcached.parameter.value;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expiration</parameter></term>
     <listitem>
      <para>
       &memcached.parameter.expiration;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
   &memcached.result.getresultcode;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>Memcached::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$m = new Memcached();
$m->addServer('localhost', 11211);

$m->set('int', 99);
$m->set('string', 'una cadena sencilla');
$m->set('array', array(11, 12));
/* la clave 'object' expirará en 5 minutos */
$m->set('object', new stdclass, time() + 300);


var_dump($m->get('int'));
var_dump($m->get('string'));
var_dump($m->get('array'));
var_dump($m->get('object'));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
int(99)
string(19) "una cadena sencilla"
array(2) {
  [0]=>
  int(11)
  [1]=>
  int(12)
}
object(stdClass)#1 (0) {
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Memcached::setByKey</methodname></member>
    <member><methodname>Memcached::add</methodname></member>
    <member><methodname>Memcached::replace</methodname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
