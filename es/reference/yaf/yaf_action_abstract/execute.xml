<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 329516 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="yaf-action-abstract.execute" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Yaf_Action_Abstract::execute</refname>
  <refpurpose>Punto de entrada de una acción</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier><type>mixed</type><methodname>Yaf_Action_Abstract::execute</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>arg</parameter></methodparam>
   <methodparam
   choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   El usuario debería definir siempre este método para un acción, este es el punto de entrada
   de la misma.
   <methodname>Yaf_Action_Abstract::execute</methodname> podría tener argumentos.
   <note>
    <para>
     El valor recuperado desde la petición no es seguro. Se debería filtrar
     el trabajo antes de usarlo.
    </para>
   </note>
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>Yaf_Action_Abstract::execute</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/** 
 * Un ejemplo de controlador
 */
class ProductController extends Yaf_Controller_Abstract {
      protected $actions = array(
          "index" => "actions/Index.php",
      );
}
?>
]]>
   </programlisting>
  </example>
  <example>
   <title>Ejemplo de <function>Yaf_Action_Abstract::execute</function></title>
   <programlisting role="php">
<![CDATA[
<?php
/** 
 * ListAction
 */
class ListAction extends Yaf_Action_Abstract {
     public function execute ($name, $id) {
         assert($name == $this->getRequest()->getParam("name"));
         assert($id   == $this->getRequest()->getParam("id"));
     }
}
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
/**
 * Ahora asumimos que estamos usando la ruta Yaf_Route_Static 
 * para la petición: http://yourdomain/product/list/name/yaf/id/22
 * resultará:
 */
 bool(true)
 bool(true)
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member></member>
  </simplelist>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
