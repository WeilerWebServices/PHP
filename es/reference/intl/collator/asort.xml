<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 330543 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="collator.asort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Collator::asort</refname>
  <refname>collator_asort</refname>
  <refpurpose>Ordenar un array manteniendo la relación de índices</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis>
   <modifier>public</modifier>
   <type>bool</type>
   <methodname>Collator::asort</methodname>
   <methodparam><type>array</type><parameter role="reference">arr</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flag</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>bool</type>
   <methodname>collator_asort</methodname>
   <methodparam><type>Collator</type><parameter>coll</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">arr</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flag</parameter></methodparam>
  </methodsynopsis>
  <para>
   Esta función ordena un array de forma que sus índices mantienen su
   correlación con los elementos del array a los que están asociados. Se usa
   principalmente en la ordenación de arrays asociativos donde el orden real de los elementos es
   significativo. Los elementos del array estarán ordenados según las normas
   actuales regionales.
  </para>
  <para>
   Es equivalente al estándar de PHP
   <function>asort</function>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>coll</parameter></term>
     <listitem>
      <para>
       Un objeto <classname>Collator</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arr</parameter></term>
     <listitem>
      <para>El array de cadenas a ordenar.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flag</parameter></term>
     <listitem>
      <para>
       El tipo de ordenación opcional, uno de los siguientes:
       <itemizedlist>
        <listitem>
         <para>
          <constant>Collator::SORT_REGULAR</constant>
          - comparar los elementos de forma normal (no cambia los tipos)
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::SORT_NUMERIC</constant>
          - comparar los elementos de forma numérica
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::SORT_STRING</constant>
          - comparar los elementos como cadenas
         </para>
        </listitem>
       </itemizedlist>
      </para>
      <para>
       El valor predeterminado de $sort_flag value es
       <constant>Collator::SORT_REGULAR</constant>.
       También se utiliza si se ha especificado un valor no válido para $sort_flag.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>collator_asort</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$coll = collator_create( 'en_US' );
$arr = array(
     'a' => '100',
     'b' => '50',
     'c' => '7'
);
collator_asort( $coll, $arr, Collator::SORT_NUMERIC );
var_export( $arr );

collator_asort( $coll, $arr, Collator::SORT_STRING );
var_export( $arr );
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array (
  'c' => '7',
  'b' => '50',
  'a' => '100',
)array (
  'a' => '100',
  'b' => '50',
  'c' => '7',
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Las constantes de <link linkend="intl.collator-constants"><classname>Collator</classname></link></member>
    <member><function>collator_sort</function></member>
    <member><function>collator_sort_with_sort_keys</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
