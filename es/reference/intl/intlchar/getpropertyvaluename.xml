<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337779 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="intlchar.getpropertyvaluename" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlChar::getPropertyValueName</refname>
  <refpurpose>Obtener el nombre Unicode para un valor de una propiedad</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>string</type><methodname>IntlChar::getPropertyValueName</methodname>
   <methodparam><type>int</type><parameter>property</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>nameChoice</parameter><initializer><constant>IntlChar::LONG_PROPERTY_NAME</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el nombre Unicode para un valor de una propiedad dado, como se da en el fichero de la base de datos de Unicode PropertyValueAliases.txt.
  </para>
  <note>
   <para>
    Algunos de los nombres en PropertyValueAliases.txt solamente se pueden obtener con
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY_MASK</constant>, no con
    <constant>IntlChar::PROPERTY_GENERAL_CATEGORY</constant>.
    Estos son:
    <simplelist>
     <member>"C" / "Other"</member>
     <member>"L" / "Letter"</member>
     <member>"LC" / "Cased_Letter"</member>
     <member>"M" / "Mark"</member>
     <member>"N" / "Number"</member>
     <member>"P" / "Punctuation"</member>
     <member>"S" / "Symbol"</member>
     <member> "Z" / "Separator"</member>
    </simplelist>
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>property</parameter></term>
    <listitem>
     &intl.property.parameter;
     <para>
      Si está fuera de rango o si el método no funciona con el valor dado, devuelve &false;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      El selector para un valor de la propiedad dada. Si está fuera de rango, devuelve &false;.
     </para>
     <para>
      En general, los valores válidos de rangos van de <literal>0</literal> a un máximo. Existen un par de excepciones:
      <simplelist>
       <member>
        Los valores <constant>IntlChar::PROPERTY_BLOCK</constant> comienzan en el valor <constant>IntlChar::BLOCK_CODE_BASIC_LATIN</constant> distinto de cero.
       </member>
       <member>
        Los valores <constant>IntlChar::PROPERTY_CANONICAL_COMBINING_CLASS</constant> no son contiguos y su rango es 0..240.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>nameChoice</parameter></term>
    <listitem>
     <para>
      El selector a obtener por su nombre. Si está fuera de rango, devuelve &false;.
     </para>
     <para>     
      Todas las propiedades tienen un nombre largo. La mayoría tienen un nombre corto, otras no. Unicode tiene en cuenta nombres adicionales;
      si están presentes, serán devueltos añadiendo 1, 2, etc., a <constant>IntlChar::LONG_PROPERTY_NAME</constant>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el nombre, o &false; si <parameter>property</parameter> o <parameter>nameChoice</parameter>
   están fuera de rango.
  </para>
  <para>
   Si un <parameter>nameChoice</parameter> dado devuelve &false;, todos los valores mayores que <parameter>nameChoice</parameter>
   devolverán &false;, con una excepción: si se devuelve &false; para <constant>IntlChar::SHORT_PROPERTY_NAME</constant>,
   entonces <constant>IntlChar::LONG_PROPERTY_NAME</constant> (y mayores) podrían aún devolver un valor distinto de &false;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>&intl.property.example;</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::SHORT_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME));
var_dump(IntlChar::getPropertyValueName(IntlChar::PROPERTY_BLOCK, IntlChar::BLOCK_CODE_GREEK, IntlChar::LONG_PROPERTY_NAME + 1));
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
string(16) "Greek_And_Coptic"
string(5) "Greek"
string(16) "Greek_And_Coptic"
bool(false)
]]>
   </screen>
  </example>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
