<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331081 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="intldateformatter.gettimezone" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlDateFormatter::getTimeZone</refname>
  <refname>datefmt_get_timezone</refname>
  <refpurpose>Obtener la zona horaria del formateador</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis>
   <modifier>public</modifier> <type>IntlTimeZone</type><methodname>IntlDateFormatter::getTimeZone</methodname>
   <void />
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>IntlTimeZone</type>
   <methodname>datefmt_get_timezone</methodname>
   <void />
  </methodsynopsis>
  
  <para>
   Devuelve un objeto <classname>IntlTimeZone</classname> que representa la
   zona horaria que usará este objeto para formatear las fechas y las horas. Al
   formatear objetos <classname>IntlCalendar</classname> y
   <classname>DateTime</classname> con este
   <classname>IntlDateFormatter</classname>, la zona horaria usada será la
   devuelta por este método, no la asociada con los objetos que se están
   formateando.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El objeto <classname>IntlTimeZone</classname>
   asociado &return.falseforfailure;.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplos de <function>IntlDateFormatter::getTimeZone</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$madrid = IntlDateFormatter::create(NULL, NULL, NULL, 'Europe/Madrid');
$lisboa = IntlDateFormatter::create(NULL, NULL, NULL, 'Europe/Lisbon');

var_dump($madrid->getTimezone());
echo $madrid->getTimezone()->getDisplayName(
        false, IntlTimeZone::DISPLAY_GENERIC_LOCATION, "en_US"), "\n";
echo $lisboa->getTimeZone()->getId(), "\n";
//El id también puede ser recuperado con ->getTimezoneId()
echo $lisboa->getTimeZoneId(), "\n";

]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
object(IntlTimeZone)#4 (4) {
  ["valid"]=>
  bool(true)
  ["id"]=>
  string(13) "Europe/Madrid"
  ["rawOffset"]=>
  int(3600000)
  ["currentOffset"]=>
  int(7200000)
}
Spain Time
Europe/Lisbon
Europe/Lisbon

]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>IntlDateFormatter::getTimeZoneId</function></member>
    <member><function>IntlDateFormatter::setTimeZone</function></member>
    <member><classname>IntlTimeZone</classname></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
