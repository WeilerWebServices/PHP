<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332609 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="intlcalendar.fromdatetime" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>IntlCalendar::fromDateTime</refname>
  <refpurpose>Crear un IntlCalendar desde un objeto DateTime o tring</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>IntlCalendar</type><methodname>IntlCalendar::fromDateTime</methodname>
   <methodparam><type>mixed</type><parameter>dateTime</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>IntlCalendar</type><methodname>intlcal_from_date_time</methodname>
   <methodparam><type>mixed</type><parameter>dateTime</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crear un objeto <classname>IntlCalendar</classname> desde un objeto
   <classname>DateTime</classname> o desde un string desde el cual se
   pueda construir un objeto <classname>DateTime</classname>.
  </para>
  <para>
   El nuevo calendario representara no sólo el mismo instante que el
   <classname>DateTime</classname> dado (sujeto a la pérdida de preceisión para fechas
   muy lejanas en el pasado o futuro), sino también la misma zona horaria (sujeta a
   la advertencia de que se emplearán diferentes bases de datos de zonas horarias, por lo que
   los resultados podrían diferir).
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>dateTime</parameter></term>
    <listitem>
     <para>
      Un objeto <classname>DateTime</classname> o un <type>string</type>
      que pueda proporcianrse a <function>DateTime::__construct</function>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El objeto <classname>IntlCalendar</classname> creado o &null; en caso de
   error. Si se proporciona un <type>string</type>, cualquier excepción que ocurra
   dentro del constructor de <classname>DateTime</classname> se propagará.
  </para>
 </refsect1>
 
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>IntlCalendar::fromDateTime</function></title>
    <programlisting role="php">
<![CDATA[
<?php
ini_set('date.timezone', 'Europe/Lisbon');

// lo mismo que IntlCalendar::fromDateTime(new DateTime(...))
$cal1 = IntlCalendar::fromDateTime('2013-02-28 00:01:02 Europe/Berlin');

// Observe que la zona horaria es Europe/Berlin, no la predeterminada Europe/Lisbon
echo IntlDateFormatter::formatObject($cal1, 'yyyy MMMM d HH:mm:ss VVVV', 'de_DE'), "\n";

]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
2013 Februar 28 00:01:02 Deutschland Zeit
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
