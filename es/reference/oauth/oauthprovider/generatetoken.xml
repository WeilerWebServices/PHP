<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 300006 Maintainer: agarzon Status: ready -->

<refentry xml:id="oauthprovider.generatetoken" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>OAuthProvider::generateToken</refname>
  <refpurpose>Genera un token aleatorio</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>string</type><methodname>OAuthProvider::generateToken</methodname>
   <methodparam><type>int</type><parameter>size</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>strong</parameter><initializer>false</initializer></methodparam>
  </methodsynopsis>
  <para>
   Genera una <type>string</type> de bytes pseudo-aleatorios.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>size</parameter></term>
    <listitem>
     <para>
      La longitud The desired token length, in terms of bytes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>strong</parameter></term>
    <listitem>
     <para>
      Establecer a &true; significa que <literal>/dev/random</literal> será usada para 
      la entropía, de lo contrario <literal>/dev/urandom</literal> será usado.
      Este parámetro es ignorado en Windows.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El token generado, como un <type>string</type> de bytes.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Si el parámetro <parameter>strong</parameter> es &true;, entonces un 
   error <constant>E_WARNING</constant> será emitido cuando la implementación  
   <function>rand</function> sea usada para rellenar 
   los restantes bytes aleatorios (Ejemplo, cuando no suficientes datos aleatorios fueron encontrados,
   inicialmente).
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>OAuthProvider::generateToken</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$p = new OAuthProvider();

$t = $p->generateToken(4);

echo strlen($t),  PHP_EOL;
echo bin2hex($t), PHP_EOL;

?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
4
b6a82c27
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Cuando no suficientes datos aleatorios están disponibles para el sistema, esta función 
    llenará los restantes bytes aleatorios usando la implementación interna de PHP <function>rand</function>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>openssl_random_pseudo_bytes</function></member>
   <member><function>mcrypt_create_iv</function></member>
  </simplelist>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
