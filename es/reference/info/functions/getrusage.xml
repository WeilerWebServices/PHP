<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336808 Maintainer: agarzon Status: ready -->
<refentry xml:id="function.getrusage" xmlns="http://docbook.org/ns/docbook">
 <refnamediv> 
  <refname>getrusage</refname>
  <refpurpose>Obtiene el uso de los recursos actuales</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>getrusage</methodname>
   <methodparam choice="opt"><type>int</type><parameter>who</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta es una interfaz de <command>getrusage(2)</command>. Obtiene datos devueltos 
   de la llamada al sistema. 
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>who</parameter></term>
     <listitem>
      <para>
       Si el parámetro <parameter>who</parameter> es 1, getrusage será llamado con 
       <constant>RUSAGE_CHILDREN</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array asociativo que contiene los datos devueltos por la llamada al 
   sistema. Todas las entradas son accesibles mediante el uso de sus nombres de campo documentado.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>getrusage</function> ejemplo</title>
    <programlisting role="php">
<![CDATA[
<?php
$dat = getrusage();
echo $dat["ru_oublock"];       // número de operaciones de salida en bloque
echo $dat["ru_inblock"];       // número de operaciones de entrada de bloques
echo $dat["ru_msgsnd"];        // número de mensajes de IPC enviados
echo $dat["ru_msgrcv"];        // número de mensajes de IPC recibidos
echo $dat["ru_maxrss"];        // tamaño máximo de los conjuntos de residentes
echo $dat["ru_ixrss"];         // tamaño de memoria integral compartida
echo $dat["ru_idrss"];         // tamaño integral de los datos no compartidos
echo $dat["ru_minflt"];        // número de reivindicaciones de página (fallos suaves de página)
echo $dat["ru_majflt"];        // número de fallos de página (fallos duros de página)
echo $dat["ru_nsignals"];      // número de señales recibidas
echo $dat["ru_nvcsw"];         // número de cambios de contexto voluntarios
echo $dat["ru_nivcsw"];        // número de cambios de contexto involuntarios
echo $dat["ru_nswap"];         // número de intercambios
echo $dat["ru_utime.tv_usec"]; // tiempo de usuario utilizado (microsegundos)
echo $dat["ru_utime.tv_sec"];  // tiempo de usuario utilizado (segundos)
echo $dat["ru_stime.tv_usec"]; // tiempo del sistema utilizado (microsegundos)
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.0</entry>
       <entry>
        Esta función ahora está soportada en Windows
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    En Windows, <function>getrusage</function> solamente devolverá los siguientes
    miembros:
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
     <member>
      <literal>"ru_majflt"</literal> (solo si <parameter>who</parameter> es
      <constant>RUSAGE_SELF</constant>)
     </member>
     <member>
      <literal>"ru_maxrss"</literal> (solo si <parameter>who</parameter> es
      <constant>RUSAGE_SELF</constant>)
     </member>
    </simplelist>
   </para>
   <para>
    Si a <function>getrusage</function> se le llama con <parameter>who</parameter> 
    establecido a <literal>1</literal> (<constant>RUSAGE_CHILDREN</constant>), se
    recopilan los usos de recursos para los hilos (lo que significa que la función es
    llamada internamente con <constant>RUSAGE_THREAD</constant>).
   </para>
  </note>
  <note>
   <para>
    En BeOS 2000, solamente se devuelven los siguientes miembros:
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
    </simplelist>
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Página principal de sistema sobre <command>getrusage(2)</command></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
