<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yago Status: ready -->
<!-- splitted from ./en/functions/exec.xml, last change in rev 1.24 -->
<refentry xml:id="function.system" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>system</refname>
  <refpurpose>Ejecutar un programa externo y mostrar su salida</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>system</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">return_var</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>system</function> es similar a la versión C de
   la función de mismo nombre, dado que ejecuta el
   <parameter>command</parameter> dado y muestra el resultado.
  </para>
  <para>
   La llamada a <function>system</function> también intenta
   volcar automáticamente el búfer de salida del
   servidor web después de cada línea de salida, si
   PHP está corriendo como un módulo de servidor.
  </para>
  <para>
   Si necesita ejecutar un comando y recibir de vuelta todo los
   datos del mismo sin interferencias, use la
   función <function>passthru</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>comando</parameter></term>
     <listitem>
      <para>
       El comando que será ejecutado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>return_var</parameter></term>
     <listitem>
      <para>
       Si el argumento <parameter>return_var</parameter> se encuentra
       presente, entonces el status devuelto por el comando ejecutado
       será almacenado en esta variable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la última línea de la salida del comando en
   caso de tener éxito, y &false; si ocurre un error.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>system</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<pre>';

// Muestra el resultado completo del comando "ls", y devuelve la
// ultima linea de la salida en $ultima_linea. Almacena el valor de
// retorno del comando en $retval.
$ultima_linea = system('ls', $retval);

// Imprimir informacion adicional
echo '
</pre>
<hr />Ultima linea de la salida: ' . $ultima_linea . '
<hr />Valor de retorno: ' . $retval;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.escapeshell;
  &note.exec-bg;
  &note.exec-path;
  &warn.sm.exec;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exec</function></member>
    <member><function>passthru</function></member>
    <member><function>popen</function></member>
    <member><function>escapeshellcmd</function></member>
    <member><function>pcntl_exec</function></member>
    <member><link linkend="language.operators.execution">el operador
    de comillas invertidas</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->