<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 317663 Maintainer: seros Status: ready -->

<refentry xml:id="imagick.importimagepixels" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Imagick::importImagePixels</refname>
  <refpurpose>Importa los píxeles de una imagen</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Imagick::importImagePixels</methodname>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>width</parameter></methodparam>
   <methodparam><type>int</type><parameter>height</parameter></methodparam>
   <methodparam><type>string</type><parameter>map</parameter></methodparam>
   <methodparam><type>int</type><parameter>storage</parameter></methodparam>
   <methodparam><type>array</type><parameter>pixels</parameter></methodparam>
  </methodsynopsis>
  <para>
   Importa los píxeles desde una matriz a un imagen. El mapa <parameter>map</parameter> normalmete es
   'RGB'. Este método impone las siguientes limitaciones para los parámetros: la cantidad de píxeles
   en la matriz debe coincidir con <parameter>width</parameter> x <parameter>height</parameter> x
   longitud del mapa.
   &imagick.method.available.0x645;
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       La posición x de la imagen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       La posición y de la imagen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>width</parameter></term>
     <listitem>
      <para>
       El ancho de la imagen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>height</parameter></term>
     <listitem>
      <para>
       El alto de la imagen
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>map</parameter></term>
     <listitem>
      <para>
       Mapa de píxeles ordenados, como una cadena. Esto puede ser por ejemplo <literal>RGB</literal>.
       El valor puede ser cualquier combinación u orden de R = rojo, G = verde, B = azul, A = alfa
       (0 es transparente), O = opacidad (0 es opaco), C = cian, Y = amarillo, M = magenta, K = negro,
       I = intensidad (para escala de grises), P = relleno.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>storage</parameter></term>
     <listitem>
      <para>
       El método de almacenamiento de los píxeles.
       Consulte esta lista de <link linkend="imagick.constants.pixel">constantes de píxel</link>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pixels</parameter></term>
     <listitem>
      <para>
       La matriz de píxeles
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   &imagick.imagick.throws;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de<methodname>Imagick::importImagePixels</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Generar una matriz de píxeles. 2000 píxeles por raya de color */
$cuenta = 2000 * 3;

$píxeles = 
   array_merge(array_pad(array(), $cuenta, 0),
               array_pad(array(), $cuenta, 255), 
               array_pad(array(), $cuenta, 0),
               array_pad(array(), $cuenta, 255),
               array_pad(array(), $cuenta, 0));

/* Ancho y alto. El área es la cantidad de píxeles dividido
   por tres. Tres viene de 'RGB', tres valores por píxel */
$ancho = $alto = pow((count($píxeles) / 3), 0.5);

/* Crear una imagen vacía */
$im = new Imagick();
$im->newImage($ancho, $alto, 'gray');

/* Importar los píxeles a la imagen.
   ancho * alto * strlen("RGB") debe coincidir con count($píxeles) */
$im->importImagePixels(0, 0, $ancho, $alto, "RGB", Imagick::PIXEL_CHAR, $píxeles);

/* Imprimir como una imagen jpeg */
$im->setImageFormat('jpg');
header("Content-Type: image/jpg");
echo $im;

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo : Imagick::importImagePixels()</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/importimagepixels.jpg"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

<!-- TODO: document exportimagepixels
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>Imagick::exportImagePixels</methodname></member>
   </simplelist>
  </para>
 </refsect1> -->

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
