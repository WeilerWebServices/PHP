<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333103 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<refentry xml:id="imagick.functionimage" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Imagick::functionImage</refname>
  <refpurpose>Aplica una función a la imagen</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>Imagick::functionImage</methodname>
   <methodparam><type>int</type><parameter>function</parameter></methodparam>
   <methodparam><type>array</type><parameter>arguments</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>channel</parameter><initializer>Imagick::CHANNEL_DEFAULT</initializer></methodparam>
  </methodsynopsis>
  <para>
   Aplica una expresión aritmética, relacional o lógica a una imagen. 
  </para>
  <para>
   Véase también <link xlink:href="&url.imagemagick.usage.transform.function;">ImageMagick
   v6 Examples - Image Transformations — Function, Multi-Argument Evaluate</link>
  </para>
  <para>
   &imagick.method.available.0x649;
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       Consulte esta lista de <link linkend="imagick.constants.function">constantes de función</link>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arguments</parameter></term>
     <listitem>
      <para>
       Array de argumentos a pasar a esta función.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &imagick.return.success;
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   &imagick.imagick.throws;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crear un degradado sinusoide</title>
    <programlisting role="php">
<![CDATA[
<?php
$imagick = new Imagick();
$imagick->newPseudoImage(200, 200, 'gradient:black-white');
$argumentos = array(3, -90);
$imagick->functionImage(Imagick::FUNCTION_SINUSOID, $argumentos);

header("Content-Type: image/png");
$imagick->setImageFormat("png");
echo $imagick->getImageBlob();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida de crear un degradado sinusoidal</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/functionImage_sinusoidal.png"/>
     </imageobject>
    </mediaobject>
   </example>
   
   <example>
    <title>Crear un degradado desde el polinomio (4x^2 - 4x + 1) </title>
    <programlisting role="php">
<![CDATA[
<?php
$imagick = new Imagick();
$imagick->newPseudoImage(200, 200, 'gradient:black-white');
$argumentos = array(4, -4, 1);
$imagick->functionImage(Imagick::FUNCTION_POLYNOMIAL, $argumentos);

header("Content-Type: image/png");
$imagick->setimageformat("png");
echo $imagick->getImageBlob();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida de crear un degradado polinómico</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/functionImage_polynomial.png"/>
     </imageobject>
    </mediaobject>
   </example>
   
   <example>
    <title>Crear un degradao complejo a partir del polinomio (4x^2 - 4x^2 + 1) modulado por un degradao sinusoide</title>
    <programlisting role="php">
<![CDATA[
<?php
$imagick1 = new Imagick();
$imagick1->newPseudoImage(200, 200, 'gradient:black-white');
$argumentos = array(9, -90);
$imagick1->functionImage(Imagick::FUNCTION_SINUSOID, $argumentos);

$imagick2 = new Imagick();
$imagick2->newPseudoImage(200, 200, 'gradient:black-white');
$argumentos = array(0.5, 0);
$imagick2->functionImage(Imagick::FUNCTION_SINUSOID, $argumentos);
$imagick1->compositeimage($imagick2, Imagick::COMPOSITE_MULTIPLY, 0, 0);

header("Content-Type: image/png");
$imagick1->setImageFormat("png");
echo $imagick1->getImageBlob();
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida de craer un degradado complejo</alt>
     <imageobject>
      <imagedata fileref="en/reference/imagick/figures/functionImage_multiplied.png"/>
     </imageobject>
    </mediaobject>
   </example>
   
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
