<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: seros Status: ready -->
<refentry xml:id="function.com-get-active-object" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>com_get_active_object</refname>
  <refpurpose>Devuelve un gestor a una instancia de un objeto COM ya en ejecución</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>variant</type><methodname>com_get_active_object</methodname>
   <methodparam><type>string</type><parameter>progid</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>code_page</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>com_get_active_object</function> es similar a crear una nueva
   instancia de un objeto <xref linkend="class.com"/>, excepto que sólo
   devolverá un objeto a su script si el objeto ya está en ejecución.
   Las aplicaciones OLE usan algo conocido como la "<literal>Tabla de Objetos en Ejecución</literal>" para
   permitir a las famosas aplicaciones que se lancen solo una vez; esta función
   expone la función de la biblioteca COM, GetActiveObject(), para obtener un gestor sobre
   una instancia en ejecución.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>progid</parameter></term>
     <listitem>
      <para>
       <parameter>progid</parameter> puede ser el ProgID o el CLSID del
       objeto al que se quiere acceder (por ejemplo
       <literal>Word.Application</literal>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>code_page</parameter></term>
     <listitem>
      <para>
       Actúa exactamente de la misma forma que lo hace la clase <xref
       linkend="class.com"/>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Si el objeto solicitado está ejecutándose será devuelto a su script
   al igual que otro objeto COM.
  </para>
 </refsect1>
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Existen diversas razones para que esta función pueda fallar, la más común
   siendo que el objeto no está ejecutándose aún. En esta situación,
   el código de error de excepción será <constant>MK_E_UNAVAILABLE</constant>;
   se puede usar el método <literal>getCode</literal> del objeto excepción
   para comprobar el código de excepción.
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Usar <function>com_get_active_object</function> en un contexto de servidor web
    no es siempre una idea inteligente. La mayoría de las aplicaciones COM/OLE no están diseñadas
    para tratar más de un cliente al mismo tiempo, incluso (¡o especialmente!)
    Microsoft Office. Debería leer <link
    xlink:href="&url.msoffice.serverside;">Consideraciones para la Automatización
    del Lado del Servidor de Office</link> para más información sobre los temas generales
    involucrados.
   </para>
  </warning>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
