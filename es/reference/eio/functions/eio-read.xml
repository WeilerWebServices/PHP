<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347831 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="function.eio-read" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>eio_read</refname>
  <refpurpose>Leer de un descriptor de fichero en un índice dado</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>eio_read</methodname>
   <methodparam><type>mixed</type><parameter>fd</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
   <methodparam><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam><type>int</type><parameter>pri</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam
   choice="opt"><type>mixed</type><parameter>data</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>eio_read</function> lee hasta <parameter>length</parameter>
   bytes desde el descriptor de fichero <parameter>fd</parameter> empezando en
   <parameter>offset</parameter>. Los bytes leídos son almacenados en el
   argumento <parameter>result</parameter> de <parameter>callback</parameter>.
  </para>
  
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>fd</parameter></term>
    <listitem>
     <para>
      Un flujo, un recurso Socket, o un descriptor numérico de fichero.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>length</parameter></term>
    <listitem>
     <para>
      El número máximo de bytes a leer.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>offset</parameter></term>
    <listitem>
     <para>
      El índice dentro del fichero.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>pri</parameter></term>
    <listitem>
     &eio.request.pri.values;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>callback</parameter></term>
    <listitem>
     &eio.callback.proto;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>data</parameter></term>
    <listitem>
     <para>
      Variable arbitraria pasada a <parameter>callback</parameter>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eio_read</function> almacena los bytes leídos en el
   argumento <parameter>result</parameter> de la función
   <parameter>callback</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Ejemplo de <function>eio_read</function></title>
   <programlisting role="php">
<![CDATA[
<?php
// Abrir un fichero temporal y escribir algunos bytes en él
$nombre_fichero_temp = "eio-temp-file.tmp";
$fp = fopen($nombre_fichero_temp, "w");
fwrite($fp, "1234567890");
fclose($fp);

/* Es llamada cuando eio_read() termina */
function mi_llamada_retorno_read($datos, $resultado) {
    global $nombre_fichero_temp;

 // Imprimir los bytes leídos
    var_dump($resultado);

 // Cerrar el fichero
    eio_close($datos);
    eio_event_loop();

 // Eliminar el fichero temporal
    @unlink($nombre_fichero_temp);
}

/* Es llamada cuanco eio_open() termina */
function mi_llamada_retorno_fichero abierto($datos, $resultado) {
 // $resultado debería contener el descriptor del fichero
    if ($resultado > 0) {
  // Leer 5 bytes empezando desde el tercero
        eio_read($resultado, 5, 2, EIO_PRI_DEFAULT, "mi_llamada_retorno_read", $resultado);
        eio_event_loop();
    } else {
  // eio_open() falló
        unlink($datos);
    }
}

// Abrir el fichero para leer y escribir
eio_open($nombre_fichero_temp, EIO_O_RDWR, NULL,
    EIO_PRI_DEFAULT, "mi_llamada_retorno_fichero abierto", $nombre_fichero_temp);
eio_event_loop();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(5) "34567"
]]>
   </screen>
  </example>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>eio_open</function></member>
   <member><function>eio_write</function></member>
   <member><function>eio_close</function></member>
   <member><function>eio_event_loop</function></member>
  </simplelist>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
