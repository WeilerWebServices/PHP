<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324122 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="function.eio-readdir" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>eio_readdir</refname>
  <refpurpose>Leer un directorio al completo</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>eio_readdir</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam><type>int</type><parameter>pri</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam
   choice="opt"><type>string</type><parameter>data</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
    <para>
     Leer un directorio al completo (mediante las llamadas al sistema de <literal>opendir</literal>,
     <literal>readdir</literal> y <literal>closedir</literal>) y devuelve o los nombres o un array en
     el argumento <parameter>result</parameter> de la función <parameter>callback</parameter>,
     dependiendo del argumento <parameter>flags</parameter>.
    </para>
    
   </refsect1>
    
    <refsect1 role="parameters">
     &reftitle.parameters;
     <variablelist>
      <varlistentry>
       <term><parameter>path</parameter></term>
       <listitem>
        <para>
         La ruta del directorio.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>flags</parameter></term>
       <listitem>
        <para>
         Una combinación de constantes <emphasis>EIO_READDIR_*</emphasis>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pri</parameter></term>
       <listitem>
        &eio.request.pri.values;
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>callback</parameter></term>
       <listitem>
        &eio.callback.proto;
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>data</parameter></term>
       <listitem>
        <para>
         Variable arbitraria pasada a <parameter>callback</parameter>.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </refsect1>
    
    <refsect1 role="returnvalues">
     &reftitle.returnvalues;
     <para>
      <function>eio_readdir</function> devuelve un recurso de petición en caso de éxito, o
      &false; en caso de error. Establece el argumento <parameter>result</parameter> de
      la función <parameter>callback</parameter> function según
      el parámetro <parameter>flags</parameter>:
     </para>
     
     <para>
      <variablelist>
       
       <!--{{{ EIO_READDIR_* -->
       <varlistentry>
        <term>
         <constant>EIO_READDIR_DENTS</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Bandera <function>eio_readdir</function>. Si se especifica, el argumento resultante de la llamada de retorno
          se convierte en un array con las siguientes claves:
          <literal>'names'</literal> - array de nombres de directorios
          <literal>'dents'</literal> - array de <literal>structura eio_dirent</literal>-como
          los arrays pero teniendo las siguientes claves:
          <literal>'name'</literal> - el nombre del directorio;
          <literal>'type'</literal> - una de las constantes
          <emphasis>EIO_DT_*</emphasis>;
          <literal>'inode'</literal> - el número de inodo, si está disponible, de otro modo
          sin especificar;
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_READDIR_DIRS_FIRST</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Cuando se especifica esta bandera, los nombres serán devueltos en un orden
          donde probablemente los directorios vallan primero, en un orden de estadísticas óptimo.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_READDIR_STAT_ORDER</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Cuando se especifica esta bandera, los nombres serán devueltos en un orden
          apropiado para realizar estadísticas (<literal>stat</literal>) con cada uno. Cuando se planea usar
          la función <function>stat</function> para realizar estadísticas de todos los archivos del directorio dado, el
          orden devuelto probablemente sea
          más rápido.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_READDIR_FOUND_UNKNOWN</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          
         </simpara>
        </listitem>
       </varlistentry>
       <!--}}}-->
       
      </variablelist>
     </para>
     
     <para>Tipos de nodos:
      <variablelist>
       
       <!--{{{ EIO_DT_* -->
       <varlistentry>
        <term>
         <constant>EIO_DT_UNKNOWN</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo desconocido(muy común). Se necistan más estadísticas (<function>stat</function>).
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_FIFO</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo FIFO
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_CHR</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_MPC</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo de dispositivo de caracteres multiplexado (v7+coherent)
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_DIR</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo de directorio
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_NAM</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo de fichero Xenix nominado especial
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_BLK</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_MPB</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Dispositivo de bloqueo multiplexado (v7+coherent)
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_REG</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_NWK</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_CMP</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de noto especial de red HP-UX
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_LNK</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo de vínculo
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_SOCK</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo socket
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_DOOR</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo de puerta de Solaris
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_WHT</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Tipo de nodo
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term>
         <constant>EIO_DT_MAX</constant>
         (<type>integer</type>)
        </term>
        <listitem>
         <simpara>
          Valor de tipo de nodo más alto
         </simpara>
        </listitem>
       </varlistentry>
       
       <!--}}}-->
       
      </variablelist>
     </para>
    </refsect1>
    
    <refsect1 role="examples">
     &reftitle.examples;
     <example>
      <title><function>eio_readdir</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
/* Es llamada cuando eio_readdir() finaliza */
function mi_llamada_retorno_readdir($datos, $resultado) {
    echo __FUNCTION__, " llamada\n";
    echo "datos: "; var_dump($datos);
    echo "resultado: "; var_dump($resultado);
    echo "\n";
}

eio_readdir("/var/spool/news", EIO_READDIR_STAT_ORDER | EIO_READDIR_DIRS_FIRST,
  EIO_PRI_DEFAULT, "mi_llamada_retorno_readdir");
eio_event_loop();
?>
]]>
      </programlisting>
      &example.outputs.similar;
      <screen>
<![CDATA[
mi_llamada_retorno_readdir llamada
datos: NULL
resultado: array(2) {
 ["names"]=>
  array(7) {
   [0]=>
    string(7) "archive"
    [1]=>
    string(8) "articles"
    [2]=>
    string(8) "incoming"
    [3]=>
    string(7) "innfeed"
    [4]=>
    string(8) "outgoing"
    [5]=>
    string(8) "overview"
    [6]=>
    string(3) "tmp"
  }
 ["dents"]=>
  array(7) {
   [0]=>
    array(3)
    {
     ["name"]=>
      string(7)
      "archive"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393265)
    }
   [1]=>
    array(3)
    {
     ["name"]=>
      string(8)
      "articles"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393266)
    }
   [2]=>
    array(3)
    {
     ["name"]=>
      string(8)
      "incoming"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393267)
    }
   [3]=>
    array(3)
    {
     ["name"]=>
      string(7)
      "innfeed"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393269)
    }
   [4]=>
    array(3)
    {
     ["name"]=>
      string(8)
      "outgoing"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393270)
    }
   [5]=>
    array(3)
    {
     ["name"]=>
      string(8)
      "overview"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393271)
    }
   [6]=>
    array(3)
    {
     ["name"]=>
      string(3)
      "tmp"
      ["type"]=>
      int(4)
      ["inode"]=>
      int(393272)
    }
  }
}
]]>
      </screen>
     </example>
    </refsect1>
    
    
   </refentry>
    
    <!-- Keep this comment at the end of the file
    Local variables:
    mode: sgml
    sgml-omittag:t
    sgml-shorttag:t
    sgml-minimize-attributes:nil
    sgml-always-quote-attributes:t
    sgml-indent-step:1
    sgml-indent-data:t
    indent-tabs-mode:nil
    sgml-parent-document:nil
    sgml-default-dtd-file:"~/.phpdoc/manual.ced"
    sgml-exposed-tags:nil
    sgml-local-catalogs:nil
    sgml-local-ecat-files:nil
    End:
    vim600: syn=xml fen fdm=syntax fdl=2 si
    vim: et tw=78 syn=sgml
    vi: ts=1 sw=1
    -->
