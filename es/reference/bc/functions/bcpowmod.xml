<?xml version="1.0" encoding="utf-8"?> 
<!-- $Revision$ -->
<!-- EN-Revision: 333260 Maintainer: chuso Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.bcpowmod" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bcpowmod</refname>
  <refpurpose>Eleva un número de precisión arbitraria a otro, reducido por un módulo especificado</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>bcpowmod</methodname>
   <methodparam><type>string</type><parameter>left_operand</parameter><initializer>""</initializer></methodparam>
   <methodparam><type>string</type><parameter>right_operand</parameter><initializer>""</initializer></methodparam>
   <methodparam><type>string</type><parameter>modulus</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>scale</parameter><initializer>int</initializer></methodparam>
  </methodsynopsis>
  <para>
   Usa el método de exponenciación rápida para aumentar el 
   <parameter>left_operand</parameter> a la potencia
   <parameter>right_operand</parameter> con respecto al módulo
   <parameter>modulus</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>left_operand</parameter></term>
     <listitem>
      <para>
       El left operand, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>right_operand</parameter></term>
     <listitem>
      <para>
       El right operand, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>modulus</parameter></term>
     <listitem>
      <para>
       El modulus, como una cadena.
      </para>
     </listitem>
    </varlistentry>
    &bc.scale.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el resultado como una cadena, o &null; si <parameter>modulus</parameter>
   es 0.
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Debido a que este método utiliza la operación módulo, podrían obtenerse resultados
    inesperados en números enteros no positivos.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Los siguientes dos comandos son funcionalmente idénticos. La version
   <function>bcpowmod</function> sin embargo, se ejecuta
   en menos tiempo y admite mas parametros.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
$a = bcpowmod($x, $y, $mod);

$b = bcmod(bcpow($x, $y), $mod);

// $a and $b are equal to each other.

?>
]]>
    </programlisting>
   </informalexample>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>bcpow</function></member>
    <member><function>bcmod</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
