<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341360 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: seros -->
<refentry xml:id="function.preg-match" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_match</refname>
  <refpurpose>Realiza una comparación con una expresión regular</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>preg_match</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">matches</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Busca en <parameter>subject</parameter> una coincidencia con la expresión regular
   dada en <parameter>pattern</parameter>.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       El patrón de búsqueda, como cadena.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       La cadena de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>matches</parameter></term>
     <listitem>
      <para>
       Si se proporciona <parameter>matches</parameter>, entonces éste se llena con
       los resultados de la búsqueda. <varname>$matches[0]</varname> contendrá el
       texto que coincidió con el patrón completo, <varname>$matches[1]</varname>
       tendrá el texto que coincidió con el primer sub-patrón entre paréntesis capturado,
       y así sucesivamente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       <parameter>flags</parameter> puede estar seguido de la siguiente bandera:
       <variablelist>
        <varlistentry>
         <term><constant>PREG_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           Si se pasa esta bandera, por cada coincidencia producida, el índice de la cadena
           añadida también será devuelto. Observe que esto cambia el valor de
           <parameter>matches</parameter> dentro de una matriz donde cada elemento es una
           matriz consistente en la cadena coincidente en el índice <literal>0</literal>
           y su índice dentro de la cadena <parameter>subject</parameter> en el índice
           <literal>1</literal>.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match('/(foo)(bar)(baz)/', 'foobarbaz', $matches, PREG_OFFSET_CAPTURE);
print_r($matches);
?>
]]>
            </programlisting>
            &example.outputs;
            <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => foobarbaz
            [1] => 0
        )

    [1] => Array
        (
            [0] => foo
            [1] => 0
        )

    [2] => Array
        (
            [0] => bar
            [1] => 3
        )

    [3] => Array
        (
            [0] => baz
            [1] => 6
        )

)
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Normalmente, la búsqueda comienza por el principio de la cadena objetivo.
       El parámetro opcional <parameter>offset</parameter> se puede usar para
       especificar el lugar alternativo desde el cual comenzar la búsqueda (en bytes).
      </para>
      <note>
       <para>
        Usar <parameter>offset</parameter> no es equivalente a pasar
        <literal>substr($sujeto, $índice)</literal> a
        <function>preg_match</function> en lugar de la cadena objetivo,
        ya que <parameter>pattern</parameter> puede contener declaraciones como
        <emphasis>^</emphasis>, <emphasis>$</emphasis> o
        <emphasis>(?&lt;=x)</emphasis>. Compare:
        <informalexample>
         <programlisting role="php">
<![CDATA[
<?php
$sujeto = "abcdef";
$patrón = '/^def/';
preg_match($patrón, $sujeto, $coincidencias, PREG_OFFSET_CAPTURE, 3);
print_r($coincidencias);
?>
]]>
         </programlisting>
         &example.outputs;
         <screen>
<![CDATA[
Array
(
)
]]>
         </screen>
         <para>
          mientras que este ejemplo
         </para>
         <programlisting role="php">
<![CDATA[
<?php
$sujeto = "abcdef";
$patrón = '/^def/';
preg_match($patrón, substr($sujeto,3), $coincidencias, PREG_OFFSET_CAPTURE);
print_r($coincidencias);
?>
]]>
         </programlisting>
         <para>
          producirá
         </para>
         <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => def
            [1] => 0
        )

)
]]>
         </screen>
        </informalexample>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>preg_match</function> devuelve 1 si <parameter>pattern</parameter>
   coincide con el <parameter>subject</parameter> dado, 0 si no, o &false;
   si ocurrió un error.
  </para>
  &return.falseproblem;
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.6</entry>
       <entry>
        Devuelve &false; si <parameter>offset</parameter> es mayor que la longitud de
        <parameter>subject</parameter>.
       </entry>
      </row>
      <row>
       <entry>5.2.2</entry>
       <entry>
        Los sub-patrones nominados ahora aceptan la
        sintaxis <literal>(?&lt;nombre&gt;)</literal>
        y <literal>(?'nombre')</literal> así como
        <literal>(?P&lt;nombre&gt;)</literal>. Las versiones anteriores
        sólo aceptaban <literal>(?P&lt;nombre&gt;)</literal>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Busca la cadena de texto "php"</title>
    <programlisting role="php">
<![CDATA[
<?php
// La "i" después del delimitador de patrón indica una búsqueda
// sin tener en cuenta mayúsculas/minúsculas
if (preg_match("/php/i", "PHP es el lenguaje de secuencias de comandos web preferido.")) {
    echo "Se encontró una coincidencia.";
} else {
    echo "No se encontró ninguna coincidencia.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Busca la palabra "web"</title>
    <programlisting role="php">
<![CDATA[
<?php
/* El \b en el patrón indica un límite de palabra, por lo que sólo la palabra
 * definida "web" se compara, y no una palabra parcial como "webbing" o "cobweb" */
if (preg_match("/\bweb\b/i", "PHP es el lenguaje de secuencias de comandos web preferido.")) {
    echo "Se encontró una coincidencia.";
} else {
    echo "No se encontró ninguna coincidencia.";
}

if (preg_match("/\bweb\b/i", "PHP es el lenguaje de secuencias de comandos website preferido.")) {
    echo "Se encontró una coincidencia.";
} else {
    echo "No se encontró ninguna coincidencia.";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Obtener el nombre de dominio de una URL</title>
    <programlisting role="php">
<![CDATA[
<?php
// obtiene el nombre del host de la URL
preg_match('@^(?:http://)?([^/]+)@i',
    "http://www.php.net/index.html", $coincidencias);
$host = $coincidencias[1];

// obtiene los dos últimos segmentos del nombre del host
preg_match('/[^.]+\.[^.]+$/', $host, $coincidencias);
echo "El nombre de dominio es: {$coincidencias[0]}\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
El nombre de dominio es: php.net
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Usar sub-patrones nominados</title>
    <programlisting role="php">
<![CDATA[
<?php

$cadena = 'foobar: 2008';

preg_match_all('/(?P<nombre>\w+): (?P<dígito>\d+)/', $cadena, $coincidencias);

/* Esto también funciona en PHP 5.2.2 (PCRE 7.0) y posteriores, sin embargo
 * la forma de arriba es la recomendada por compatibilidad con versiones anteriores */
// preg_match_all('/(?<nombre>\w+): (?<dígito>\d+)/', $cadena, $coincidencias);

print_r($coincidencias);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => foobar: 2008
    [name] => foobar
    [1] => foobar
    [digit] => 2008
    [2] => 2008
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <tip>
   <para>
    No use <function>preg_match</function> si solo quiere comprobar si
    una cadena está contenida en otra cadena. Use
    <function>strpos</function> en su lugar ya que será más rápida.
   </para>
  </tip>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">Patrones de PCRE</link></member>
    <member><function>preg_quote</function></member>
    <member><function>preg_match_all</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_split</function></member>
    <member><function>preg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
