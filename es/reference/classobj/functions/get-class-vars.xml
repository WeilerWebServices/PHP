<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341814 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->
<refentry xml:id="function.get-class-vars" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>get_class_vars</refname>
  <refpurpose>Obtener las propiedades predeterminadas de una clase</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>get_class_vars</methodname>
   <methodparam><type>string</type><parameter>class_name</parameter></methodparam>
  </methodsynopsis>
  <para>
   Obtiene las propiedades predeterminadas de la clase dada.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       El nombre de la clase
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve una matriz asociativa de las propiedades declaradas visibles desde el
   ámbito actual, con su valor predeterminado.
   Los elementos del array resultante están en la forma
   <literal>nombre_variable => valor</literal>.
   En caso de error devuelve &false;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.0.3</entry>
       <entry>
        <function>get_class_vars</function> 
        devolverá sólo las propiedades que pueden ser accedidas desde el ámbito
        actual.
       </entry>
      </row>
      <row>
       <entry>5.0.2</entry>
       <entry>
        Al llamar a <function>get_class_vars</function> ahora se expondrán
        todas las propiedades como una matriz, a diferencia del comportamiento anterior donde
        las propieades protected y private eran prefijadas con bytes nul.
       </entry>
      </row>
      <row>
       <entry>5.0.1</entry>
       <entry>
        Al llamar a <function>get_class_vars</function> se expondrán todas
        las propiedades, como cuando se convierte un objeto en una clase.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>get_class_vars</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class miclase {

    var $var1; // esta no tiene valor predeterminado...
    var $var2 = "xyz";
    var $var3 = 100;
    private $var4;

    // constructor
    function __construct() {
        // cambiar algunas propiedades
        $this->var1 = "foo";
        $this->var2 = "bar";
        return true;
    }

}

$mi_clase = new miclase();

$vars_clase = get_class_vars(get_class($mi_clase));

foreach ($vars_clase as $nombre => $valor) {
    echo "$nombre : $valor\n";
}

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
var1 :
var2 : xyz
var3 : 100
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>get_class_vars</function> y comportamiento de ámbito</title>
    <programlisting role="php">
<![CDATA[
<?php
function formato($matriz)
{
    return implode('|', array_keys($matriz)) . "\r\n";
}

class TestCase
{
    public $a    = 1;
    protected $b = 2;
    private $c   = 3;

    public static function expose()
    {
        echo formato(get_class_vars(__CLASS__));
    }
}

TestCase::expose();
echo formato(get_class_vars('TestCase'));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
// 5.0.0
a| * b| TestCase c
a| * b| TestCase c

// 5.0.1 - 5.0.2
a|b|c
a|b|c

// 5.0.3 +
a|b|c
a
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class_methods</function></member>
    <member><function>get_object_vars</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
