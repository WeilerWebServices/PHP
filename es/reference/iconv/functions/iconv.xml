<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: tatai Status: ready -->
<refentry xml:id="function.iconv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>iconv</refname>
  <refpurpose>Convierte un string a la codificación de caracteres indicada</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>iconv</methodname>
   <methodparam><type>string</type><parameter>in_charset</parameter></methodparam>
   <methodparam><type>string</type><parameter>out_charset</parameter></methodparam>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Realiza una conversión del set de caracteres en el string
   <parameter>str</parameter> desde <parameter>in_charset</parameter> a
   <parameter>out_charset</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>in_charset</parameter></term>
     <listitem>
      <para>
       Codificación inicial.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>out_charset</parameter></term>
     <listitem>
      <para>
       Codificación final.
      </para>
      <para>
       Si se añade el string <literal>//TRANSLIT</literal> a
       <parameter>out_charset</parameter>, se activa la transliteración. Esto
       significa que cuando un caracter no puede ser representado en el set de
       caracteres final, se puede aproximar a uno o varios caracteres
       parecidos. Si se añade el string <literal>//IGNORE</literal>, los
       caracteres que no puedan ser representados en el set de caracteres
       final son descartados sin generar error. De otro modo,
       <parameter>str</parameter> se corta desde el primer caracter ilegal y
       se genera un <constant>E_NOTICE</constant>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       El string a ser convertido.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna el string convertido &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>iconv</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$text = "Este es el símbolo del euro: '€'.";

echo 'Original : ', $text, PHP_EOL;
echo 'TRANSLIT : ', iconv("UTF-8", "ISO-8859-1//TRANSLIT", $text), PHP_EOL;
echo 'IGNORE   : ', iconv("UTF-8", "ISO-8859-1//IGNORE", $text), PHP_EOL;
echo 'Plain    : ', iconv("UTF-8", "ISO-8859-1", $text), PHP_EOL;

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Original : Este es el símbolo del euro: '€'.
TRANSLIT : Este es el símbolo del euro: 'EUR'.
IGNORE   : Este es el símbolo del euro: ''.
Plain    :
Notice: iconv(): Detected an illegal character in input string in .\iconv-example.php on line 7
Este es el símbolo del euro: '
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
