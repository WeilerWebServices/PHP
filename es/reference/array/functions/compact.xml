<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331477 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.compact" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>compact</refname>
  <refpurpose>Crear un array que contiene variables y sus valores</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>compact</methodname>
   <methodparam><type>mixed</type><parameter>varname1</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crea un array que contiene variables y sus valores.
  </para>
  <para>
   Por cada variable, <function>compact</function> busca una
   variable con ese nombre en la tabla de símbolos actual y las añade
   al array de salida de modo que el nombre de la variable se convierte en la clave
   y el contenido de la variable se convierte en el valor para esa clave.
   En pocas palabras, hace lo contrario que <function>extract</function>.
  </para>
  <note>
   <para>
    Antes de PHP 7.3, cualquier cadena que no esté establecida se omitirá silenciosamente. 
   </para>
  </note>   
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>varname1</parameter></term>
     <listitem>
      <para>
       <function>compact</function> toma un número variable de parámetros.
       Cada parámetro puede ser una cadena que contiene el nombre de la
       variable, o un array de nombres de variables. El array puede contener otros
       arrays de nombres de variables dentro de él; <function>compact</function>
       los trata recursivamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array de salida con todas las variables añadidas a él.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>compact</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$ciudad  = "San Francisco";
$estado = "CA";
$evento = "SIGGRAPH";

$vars_región = array("ciudad", "estado");

$resultado = compact("evento", "nada_aquí", $vars_región);
print_r($resultado);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [evento] => SIGGRAPH
    [ciudad] => San Francisco
    [estado] => CA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <title>A tener en consideración</title>
   <para>
    Ya que las <link linkend="language.variables.variable">variables
    variables</link> no se pueden usar con
    <link linkend="language.variables.superglobals">Arrays Superglobales
    </link> de PHP dentro de funciones, los arrays Superglobales no pueden ser pasados
    a <function>compact</function>.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
