<?xml version='1.0' encoding='utf-8'?>
<!-- $Revision$ -->
<!-- EN-Revision: 331477 Maintainer: yago Status: ready -->
<refentry xml:id="function.array-walk-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk_recursive</refname>
  <refpurpose>Aplicar una función de usuario recursivamente a cada miembro de un array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk_recursive</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Aplica la función definida por el usuario <parameter>callback</parameter> a cada
   elemento del <parameter>array</parameter>. Esta función opera de forma recursiva
   sobre arrays con más niveles.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callback</parameter></term>
     <listitem>
      <para>
       Por lo general, <parameter>callback</parameter> recibe dos
       parámetros. El valor del parámetro <parameter>array</parameter> es
       el primero, y la clave/índice es el segundo.
      </para>
      <note>
       <para>
        Si <parameter>callback</parameter> necesita trabajar con los
        valores reales del array, especifique el primer parámetro de
        <parameter>callback</parameter> como una 
        <link linkend="language.references">referencia</link>. Entonces, cualquier
        cambio realizado sobre esos elementos será efectuado sobre el array
        original mismo.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>userdata</parameter></term>
     <listitem>
      <para>
       Si se define el parámetro opcional <parameter>userdata</parameter>, éste será 
       pasado como el tercer parámetro al
       <parameter>callback</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_walk_recursive</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$dulce = array('a' => 'manzana', 'b' => 'banano');
$frutas = array('dulce' => $dulce, 'acido' => 'limón');

function prueba_imprimir($item, $clave)
{
    echo "$clave contiene $item\n";
}

array_walk_recursive($frutas, 'prueba_imprimir');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
a contiene manzana
b contiene banano
acido contiene limón
]]>
    </screen>
    <para>
     Notará que la clave '<literal>dulce</literal>' nunca es mostrada. Cualquier clave que
     contenga un valor <type>array</type> no será pasada a la función.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_walk</function></member>
    <member>&seealso.callback;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
