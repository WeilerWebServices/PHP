<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336764 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_diff_assoc</refname>
  <refpurpose>Calcula la diferencia entre arrays con un chequeo adicional de índices</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_diff_assoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Compara <parameter>array1</parameter> con <parameter>array2</parameter> y
   devuelve la diferencia. A diferencia de <function>array_diff</function>,
   también se usan las claves de los arrays en la comparación.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       El array a comparar.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Un array con el que comparar
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Más arrays con los que comparar
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un <type>array</type> que contiene todos los valores de
   <parameter>array1</parameter> que no están presentes en ninguno de los otros arrays.
  </para>
 </refsect1>
 
 <!--
 <refsect1 role="errors">
  &reftitle.errors;
  &errors.no.unusual.errors;
 </refsect1>
-->
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_diff_assoc</function></title>
    <para>
     En este ejemplo se ve que el par <literal>"a" =&gt; "green"</literal>
     está presente en ambos arrays y, por lo tanto, no está en la salida de
     la función. Al contrario, el par <literal>0 =&gt; "red"</literal>
     está en la salida ya que en el segundo argumento <literal>"red"</literal>
     tiene una clave que es <literal>1</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1    = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2    = array("a" => "green", "yellow", "red");
$resultado = array_diff_assoc($array1, $array2);
print_r($resultado);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Ejemplo de <function>array_diff_assoc</function></title>
    <para>
     Dos valores de pares <emphasis>clave =&gt; valor</emphasis> son
     considerados iguales sólo si <literal>(string) $elem1 === (string)
     $elem2 </literal>. En otras palabras, se realiza un un chequeo estricto
     de tal forma que las representaciones de string debe ser las mismas.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array(0, 1, 2);
$array2 = array("00", "01", "2");
$resultado = array_diff_assoc($array1, $array2);
print_r($resultado);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => 0
    [1] => 1
    )
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Esta función sólo comprueba una dimensión de un array n-dimensional.
    Por supuesto, se pueden comprobar arrays de más dimensiones usando,
    por ejemplo, <literal>array_diff_assoc($array1[0], $array2[0]);</literal>.
   </simpara>
  </note>
  <note>
   <simpara>
    Asegúrese de proporcionar los argumentos en el orden corrector al comparar arrays
    similares con más claves. El nuev array debería ser el primero de la lista.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
