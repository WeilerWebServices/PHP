<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331477 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xml:id="function.array-push" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_push</refname>
  <refpurpose>Inserta uno o más elementos al final de un array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>array_push</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value1</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_push</function> trata <parameter>array</parameter> como si fuera
   una pila y coloca la variable que se le proporciona al final del
   <parameter>array</parameter>. El tamaño del <parameter>array</parameter>
   será incrementado por el número de variables insertados. Tiene el mismo efecto que:
   <programlisting role="php">
<![CDATA[
<?php
$array[] = $var;
?>
]]>
   </programlisting>
   repetido por cada valor proporcionado.
  </para>
  <note>
   <simpara>
    Si se utiliza <function>array_push</function> para añadir un solo elemento
    al array, es mejor utilizar <literal>$array[] = </literal> ya que de esta
    forma no existe la sobrecarga de llamar a una función.
   </simpara>
  </note>
  <note>
   <simpara>
    <function>array_push</function> generará una advertencia si el primer
    argumento no es un array. Esto difiere del comportamiento de
    <literal>$var[]</literal> donde se creará un nuevo array.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       El array de entrada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value1</parameter></term>
     <listitem>
      <para>
       El primer valor a colocar al final de <parameter>array</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el nuevo número de elementos del array.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>array_push</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$pila = array("naranja", "plátano");
array_push($pila, "manzana", "arándano");
print_r($pila);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => naranja
    [1] => plátano
    [2] => manzana
    [3] => arándano
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_pop</function></member>
    <member><function>array_shift</function></member>
    <member><function>array_unshift</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
