<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: yago Status: ready -->
<refentry xml:id="function.array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array</refname>
  <refpurpose>Crea un array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Crea un array. Leer la sección <link linkend="language.types.array">el tipo array</link> para más información
   sobre que es un array.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Sintaxis "índice =&gt; valores", separados por comas, define índice
       y valores. El índice puede ser de tipo cadena o numérico. Cuando se omite
       el índice, se genera un índice numérico automáticamente, empezando 
       por 0. Si el índice es numérico, el siguiente índice generado será 
       el número del índice mayor +1. Nótese que cuando se crean dos índices
       idénticos, el último sobrescribe el primero. 
      </para>
      <para>
       Tener una coma al final de la última entrada definida en el array,
       aunque no es usual, sigue siendo sintaxis válida.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve un array de parámetros. Los parámetros puede ser devolver un
   índice con el operador <literal>=&gt;</literal>. Leer la sección
   en <link linkend="language.types.array">El tipo array</link> para más
   información en que es un array.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   El siguiente ejemplo demuestra como crear un array
   de dos dimensiones, como especificar claves para un array
   asociativo y como omitir y continuar índices numéricos en
   array normales.
   <example>
    <title>Ejemplo de <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array (
    "frutas"  => array("a" => "naranja", "b" => "plátano", "c" => "manzana"),
    "números" => array(1, 2, 3, 4, 5, 6),
    "hoyos"   => array("primero", 5 => "segundo", "tercero")
);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>Array</function> con índice automático</title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array(1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Nótese que el índice '3' se ha definido en dos ocasiones y mantiene su valor final de 13.
   El índice 4 se ha definido después del índice 8 y el siguiente índice generado (valor 19)
   es 9, ya que el índice mayor era 8.
  </para>
  <para>
   Este ejemplo crea un array de base 1.
   <example>
    <title><function>array</function> con índice de base 1</title>
    <programlisting role="php">
<![CDATA[
<?php
$firstquarter = array(1 => 'Enero', 'Febrero', 'Marzo');
print_r($firstquarter);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [1] => Enero
    [2] => Febrero
    [3] => Marzo
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Como en perl, se puede acceder al valor del array dentro de comillas dobles.
   Sin embargo, con PHP se necesita adjuntar el array enter claves.
   <example>
    <title>Accessing an array inside double quotes</title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Hola {$foo['bar']}!"; // Hola baz!

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <para>
   <note>
    <para>
     <function>array</function> es un constructor de lenguaje
     para representar arrays y no es una función.
    </para>
   </note>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_pad</function></member>
    <member><function>list</function></member>
    <member><function>count</function></member>
    <member><function>range</function></member>
    <member>&foreach;</member>
    <member>El <link linkend="language.types.array">tipo array</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
