<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309972 Maintainer: seros Status: ready -->
<refentry xml:id="function.imagegif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagegif</refname>
  <refpurpose>&gd.image.output;</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagegif</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagegif</function> crea el archivo <acronym>GIF</acronym>
   en filename desde la imagen <parameter>image</parameter>. El
   argumento <parameter>image</parameter> es el devuelto por la función
   <function>imagecreate</function> o <literal>imagecreatefrom*</literal>.
  </para>
  <para>
   El formato de la imagen será <acronym>GIF87a</acronym> a menos que la
   imagen haya sido hecha transparente con
   <function>imagecolortransparent</function>, en cuyo caso el
   formato de la imagen será <acronym>GIF89a</acronym>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>&gd.image.path;</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Imprimir una imagen usando <function>imagegif</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Crear una nueva instancia de imagen
$im = imagecreatetruecolor(100, 100);

// Hacer el fondo blanco
imagefilledrectangle($im, 0, 0, 99, 99, 0xFFFFFF);

// Dibujar una cadena de texto en la imagen
imagestring($im, 3, 40, 20, 'Biblioteca GD', 0xFFBA00);

// Imprimir la imagen al navegador
header('Content-Type: image/gif');

imagegif($im);
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Convertir una imagen PNG en GIF usando <function>imagegif</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Cargar el PNG
$png = imagecreatefrompng('./php.png');

// Guardar la imagen como un GIF
imagegif($png, './php.gif');

// Liberar memoria
imagedestroy($png);

// Hemos acabado
echo '¡La converisón de la imagen PNG a GIF tuvo éxtio!';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    El soporte para <acronym>GIF</acronym> se eliminó de la biblioteca <acronym>GD</acronym> en la Versión 1.6,
    y se volvió a añdir en la Versión 2.0.28. Esta función no está
    disponible entre estas versiones. Para más información vea el portal del
    <link xlink:href="&url.gd;">Proyecto GD</link>.
   </para>
   <para>
    El siguiente trozo de código permite escribir apliaciones
    PHP más portables, autodetectando el tipo
    de soporte de GD que está disponible. Reemplace
    la secuencia <literal>header ("Content-Type: image/gif");
    imagegif ($im);</literal> por la secuencia más flexible:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
// Crear una nueva instancia de imagen
$im = imagecreatetruecolor(100, 100);

// Hacer algunas operaciones con la imagen aquí

// Gestionar la salida
if(function_exists('imagegif'))
{
    // Para GIF
    header('Content-Type: image/gif');

    imagegif($im);
}
elseif(function_exists('imagejpeg'))
{
    // Para JPEG
    header('Content-Type: image/jpeg');

    imagejpeg($im, NULL, 100);
}
elseif(function_exists('imagepng'))
{
    // Para PNG
    header('Content-Type: image/png');

    imagepng($im);
}
elseif(function_exists('imagewbmp'))
{
    // Para WBMP
    header('Content-Type: image/vnd.wap.wbmp');

    imagewbmp($im);
}
else
{
    imagedestroy($im);

    die('No hay soporte de imagen en este servidor PHP');
}

// Si se encontró soporte para imágenes de uno de estos
// cuatro formatos, se libera de la memoria
if($im)
{
    imagedestroy($im);
}
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
  <note>
   <para>
    A partir de PHP 4.0.2 se puede usar la funcion
    <function>imagetypes</function> en lugar de
    <function>function_exists</function> para verificar
    la presencia de los distintos formatos de imagen soportados:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
if(imagetypes() & IMG_GIF)
{
    header('Content-Type: image/gif');
    imagegif($im);
}
elseif(imagetypes() & IMG_JPG)
{
    /* ... etc. */
}
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagepng</function></member>
    <member><function>imagewbmp</function></member>
    <member><function>imagejpeg</function></member>
    <member><function>imagetypes</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
