<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325917 Maintainer: seros Status: ready -->
<refentry xml:id="function.imagecolortransparent" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolortransparent</refname>
  <refpurpose>Definir un color como transparente</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>imagecolortransparent</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter></methodparam>
  </methodsynopsis>
  <para>
   Establece el color transparente en <parameter>image</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       Un identificador de color creado con
       <function>imagecolorallocate</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El identificador del nuevo (o actual, si no se especificó nada)
   color transparente es devuelto. Si <parameter>color</parameter>
   no se especifica y la imagen no tiene color transparente, el
   identificador devuelto será -1.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>imagecolortransparent</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Crear una imagen de 55x30
$im = imagecreatetruecolor(55, 30);
$rojo = imagecolorallocate($im, 255, 0, 0);
$negro = imagecolorallocate($im, 0, 0, 0);

// Hacer el fondo transparente
imagecolortransparent($im, $negro);

// Dibujar un rectángulo rojo
imagefilledrectangle($im, 4, 4, 50, 25, $rojo);

// Guardar la imagen
imagepng($im, './imagecolortransparent.png');
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Salida del ejemplo : imagecolortransparent()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecolortransparent.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    La transpariencia se copia sólo con <function>imagecopymerge</function> y con
    imágenes de color verdadero, no con <function>imagecopy</function> o con imágenes de paleta.
   </para>
  </note>
  <note>
   <para>
    El color transparente es una propiedad de la imagen, la transparencia no es una
    propiedad del color. Una vez que se ha establecido un color a color transparente,
    cualquier región de la imagen en ese color que se haya dibujado previamente
    será transparente.
   </para>
  </note>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
