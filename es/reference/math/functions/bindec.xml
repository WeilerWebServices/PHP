<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334617 Maintainer: gerardocdc Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xml:id="function.bindec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bindec</refname>
  <refpurpose>Binario a decimal</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>number</type><methodname>bindec</methodname>
   <methodparam><type>string</type><parameter>binary_string</parameter></methodparam>
  </methodsynopsis>
  <para>
   Devuelve el equivalente decimal del número binario representado por
   el argumento <parameter>binary_string</parameter>.
  </para>
  <para>
   <function>bindec</function> convierte un número binario a un 
   <type>integer</type> o, si es necesario por razones de tamaño, a un <type>float</type>.
  </para>
  <para>
   <function>bindec</function> interpreta todos los valores de
   <parameter>binary_string</parameter> como enteros sin signo.
   Esto es debido a que <function>bindec</function> considera 
   al bit más significativo como otro orden de magnitud 
   en lugar de como el bit de signo.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>binary_string</parameter></term>
     <listitem>
      <para>
       El string binario a convertir
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <warning>
   <para>
    Este parámetro debe ser un string.
    Cualquier otro tipo de dato empleado puede producir resultados inesperados.
   </para>
  </warning>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   El valor decimal de <parameter>binary_string</parameter>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>bindec</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo bindec('110011') . "\n";
echo bindec('000110011') . "\n";

echo bindec('111');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
51
51
7
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>bindec</function> interpreta las entradas como enteros sin signo</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
 * La lección de este ejemplo es el resultado 
 * más que el código de PHP en sí.
 */

$magnitude_lower = pow(2, (PHP_INT_SIZE * 8) - 2);
p($magnitude_lower - 1);
p($magnitude_lower, '¿Ve el incremento?  Obsérvelo la próxima vez...');

p(PHP_INT_MAX, 'PHP_INT_MAX');
p(~PHP_INT_MAX, 'interpretado como uno más que PHP_INT_MAX');

if (PHP_INT_SIZE == 4) {
    $nota = 'interpretado como el mayor entero sin signo';
} else {
    $nota = 'interpretado como el mayor entero sin signo
              (18446744073709551615) aunque sesgado por la precisión del float';
}
p(-1, $nota);


function p($entrada, $nota = '') {
    echo "entrada:      $entrada\n";

    $formato = '%0' . (PHP_INT_SIZE * 8) . 'b';
    $bin = sprintf($formato, $entrada);
    echo "binario:      $bin\n";

    ini_set('precision', 20);  // Para la legibilidad en bloques de 64 bits.
    $dec = bindec($bin);
    echo 'bindec():     ' . $dec . "\n";

    if ($nota) {
        echo "NOTA:         $nota\n";
    }

    echo "\n";
}
?>
]]>
    </programlisting>
    &example.outputs.32bit;
    <screen>
<![CDATA[
entrada:      1073741823
binario:      00111111111111111111111111111111
bindec():     1073741823

entrada:      1073741824
binario:      01000000000000000000000000000000
bindec():     1073741824
NOTA:         ¿Ve el incremento?  Obsérvelo la próxima vez...

entrada:      2147483647
binario:      01111111111111111111111111111111
bindec():     2147483647
NOTA:         PHP_INT_MAX

entrada:      -2147483648
binario:      10000000000000000000000000000000
bindec():     2147483648
NOTA:         interpretado como uno más que PHP_INT_MAX

entrada:      -1
binario:      11111111111111111111111111111111
bindec():     4294967295
NOTA:         interpretado como el mayor entero sin signo
]]>
    </screen>
    &example.outputs.64bit;
    <screen>
<![CDATA[
entrada:      4611686018427387903
binario:      0011111111111111111111111111111111111111111111111111111111111111
bindec():     4611686018427387903

entrada:      4611686018427387904
binario:      0100000000000000000000000000000000000000000000000000000000000000
bindec():     4611686018427387904
NOTA:         ¿Ve el incremento?  Obsérvelo la próxima vez...

entrada:      9223372036854775807
binario:      0111111111111111111111111111111111111111111111111111111111111111
bindec():     9223372036854775807
NOTA:         PHP_INT_MAX

entrada:      -9223372036854775808
binario:      1000000000000000000000000000000000000000000000000000000000000000
bindec():     9223372036854775808
NOTA:         interpretado como uno más que PHP_INT_MAX

entrada:      -1
binario:      1111111111111111111111111111111111111111111111111111111111111111
bindec():     18446744073709551616
NOTA:         interpretado como el mayor entero sin signo
              (18446744073709551615) aunque sesgado por la precisión del float
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Esta función puede convertir números que son demasiado grandes para caber en el tipo
    <type>integer</type> de cada plataforma, devolviendo en este caso un valor de tipo
    <type>float</type> para los valores mayores.
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>decbin</function></member>
    <member><function>octdec</function></member>
    <member><function>hexdec</function></member>
    <member><function>base_convert</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
