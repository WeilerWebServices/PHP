<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334621 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-sign">
 <refnamediv>
  <refname>openssl_sign</refname>
  <refpurpose>Genera una firma</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>openssl_sign</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">signature</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>priv_key_id</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>signature_alg</parameter><initializer>OPENSSL_ALGO_SHA1</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_sign</function> computa una firma para la información
   <parameter>data</parameter> especificada, generando una firma digital
   criptográfica usando la clave privada asociada con
   <parameter>priv_key_id</parameter>. Observe que la información misma no
   está encriptada.
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       El string de datos que se quieren firmar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>signature</parameter></term>
     <listitem>
      <para>
       Si la llamada tuvo éxito, la firma es devuelta en
       <parameter>signature</parameter>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>priv_key_id</parameter></term>
     <listitem>
      <para>
       <type>resource</type> - una clave, devuelta por <function>openssl_get_privatekey</function>
      </para>
      <para>
       <type>string</type> - una clave con formato PEM
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>signature_alg</parameter></term>
     <listitem>
      <para>
       <type>int</type> - uno de estos <link linkend="openssl.signature-algos">Algoritmos de firma</link>.
      </para>
      <para>
       <type>string</type> - un string válido devuelto por <function>openssl_get_md_methods</function>; p.ej., "sha256WithRSAEncryption" o "sha384".
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de <function>openssl_sign</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// se asume que $datos contiene la información que se va a firmar

// obtener la clave privada desde el fichero y prepararla
$pkeyid = openssl_pkey_get_private("file://src/openssl-0.9.6/demos/sign/key.pem");

// computar la firma
openssl_sign($datos, $firma, $pkeyid);

// liberar la clave de la memoria
openssl_free_key($pkeyid);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Ejemplo de <function>openssl_sign</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// datos que se quieren firmar
$datos = 'mis datos';

// crear unas claves pública y privada nuevas
$new_key_pair = openssl_pkey_new(array(
    "private_key_bits" => 2048,
    "private_key_type" => OPENSSL_KEYTYPE_RSA,
));
openssl_pkey_export($new_key_pair, $private_key_pem);

$details = openssl_pkey_get_details($new_key_pair);
$public_key_pem = $details['key'];

// crear la firma
openssl_sign($datos, $firma, $private_key_pem, OPENSSL_ALGO_SHA256);

// guardar para después
file_put_contents('private_key.pem', $private_key_pem);
file_put_contents('public_key.pem', $public_key_pem);
file_put_contents('signature.dat', $firma);

// comprobar la firma
$r = openssl_verify($datos, $firma, $public_key_pem, "sha256WithRSAEncryption");
var_dump($r);
?>
]]>
    </programlisting>
   </example>
   
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_verify</function></member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
