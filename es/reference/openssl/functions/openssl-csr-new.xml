<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312693 Maintainer: chuso Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.openssl-csr-new">
 <refnamediv>
  <refname>openssl_csr_new</refname>
  <refpurpose>Genera una CSR</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>openssl_csr_new</methodname>
   <methodparam><type>array</type><parameter>dn</parameter></methodparam>
   <methodparam><type>resource</type><parameter role="reference">privkey</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>configargs</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>extraattribs</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>openssl_csr_new</function> genera una nueva CSR (Certificate Signing Request - Petición
   de Firma de Certificado) basada en la información proporcionada por <parameter>dn</parameter>, el
   cuál representa el Nombre Distinguido que se va a usar en el certificado.
  </para>
  &note.openssl.cnf;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dn</parameter></term>
     <listitem>
      <para>
       El Nombre Distinguido que se va a usar en el certificado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>privkey</parameter></term>
     <listitem>
      <para>
       <parameter>privkey</parameter> podría estar establecida a una clave privada que fue
       generada previamente por <function>openssl_pkey_new</function> (o
       de otro modo, obtenida desde la otra familia de funciones openssl_pkey).
       La parte pública correspondiente de la clave será usada para firmar la
       CSR.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>configargs</parameter></term>
     <listitem>
      <para>
       Por defecto, la información de su sistema <literal>openssl.conf</literal>
       se usa para inicializar la petición; puede especificar una sección del archivo de
       configuración estableciendo la clave <literal>config_sección_sección</literal> de
       <parameter>configargs</parameter>. También puede especificar un archivo de configuración
       de openssl alternativo estableciendo el valor de la clave
       <literal>config</literal> a la ruta del archivo que quiere utilizar.
       Las siguientes claves, si están presentes en <parameter>configargs</parameter>,
       se comportan como sus equivalentes en el archivo <literal>openssl.conf</literal>, como
       está listado en la tabla de abajo.
       <table>
        <title>Sobrescritura de Configuración</title>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>clave <parameter>configargs</parameter></entry>
           <entry>tipo</entry>
           <entry>equivalente <literal>openssl.conf</literal></entry>
           <entry>descripción</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>digest_alg</entry>
           <entry><type>string</type></entry>
           <entry>default_md</entry>
           <entry>Selecciona qué método de resumen (digest) se va a usar</entry>
          </row>
          <row>
           <entry>x509_extensions</entry>
           <entry><type>string</type></entry>
           <entry>x509_extensions</entry>
           <entry>Selecciona qué extensiones debería usarse cuando se crea un certificado
           x509</entry>
          </row>
          <row>
           <entry>req_extensions</entry>
           <entry><type>string</type></entry>
           <entry>req_extensions</entry>
           <entry>Selecciona qué extensiones debería usarse cuando se crea una CSR</entry>
          </row>
          <row>
           <entry>private_key_bits</entry>
           <entry><type>integer</type></entry>
           <entry>default_bits</entry>
           <entry>Specifica cuántos bits deberían usarse para generar una clave
            privada</entry>
          </row>
          <row>
           <entry>private_key_type</entry>
           <entry><type>integer</type></entry>
           <entry>ninguno</entry>
           <entry>Especifica el tipo de clave privada a crear. Ésta puede ser
            <constant>OPENSSL_KEYTYPE_DSA</constant>,
            <constant>OPENSSL_KEYTYPE_DH</constant> o
            <constant>OPENSSL_KEYTYPE_RSA</constant>.
            El valor por defecto es <constant>OPENSSL_KEYTYPE_RSA</constant> el cuál
            es el úncio tipo de clave soportado actualmente.
           </entry>
          </row>
          <row>
           <entry>encrypt_key</entry>
           <entry><type>boolean</type></entry>
           <entry>encrypt_key</entry>
           <entry>¿Debería ser encriptada una clave exportada (con frase de contraseña)?</entry>
          </row>
          <row>
           <entry>encrypt_key_cipher</entry>
           <entry><type>integer</type></entry>
           <entry>none</entry>
           <entry>
            Una de las <link linkend="openssl.ciphers">constantes de cipher</link>.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extraattribs</parameter></term>
     <listitem>
      <para>
       <parameter>extraattribs</parameter> se usa para especificar opciones de
       configuración adicionales para la CSR. Ambos, <parameter>dn</parameter> y
       <parameter>extraattribs</parameter>, son matrices asociativas cuyas claves son
       convertidas a identificadores de objetos y aplicadas a las partes relevantes de la petición.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve la CSR.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Crear un certificado autofirmado</title>
    <programlisting role="php">
<![CDATA[
<?php
// Rellenar la información del nombre distinguido que se va a usar en el certificado
// Debe cambiar los valores de estas claves para que coincidan con su nombre y
// compañía, o para se más exactos, el nombre y la compañía de la persona/sitio
// para el que va a generar el certificado.
// Para los certificados SSL, el nombre común (commonName) normalmente es el nombre de
// dominio que va a usar el certificado, pero para certificados S/MIME,
// el nombre común será el nombre de la persona que usará el
// certificado.
$dn = array(
    "countryName" => "UK",
    "stateOrProvinceName" => "Somerset",
    "localityName" => "Glastonbury",
    "organizationName" => "The Brain Room Limited",
    "organizationalUnitName" => "PHP Documentation Team",
    "commonName" => "Wez Furlong",
    "emailAddress" => "wez@example.com"
);

// Generar una nueva pareja de clave privada (y pública)
$privkey = openssl_pkey_new();

// Generar una petición de firma de certificado
$csr = openssl_csr_new($dn, $privkey);

// Normalmente querrá crear un certificado autofirmado en este
// punto hasta que su AC satisfaga su petición.
// Esto crea un certificado autofirmado que es válido por 365 días
$sscert = openssl_csr_sign($csr, null, $privkey, 365);

// Ahora querrá preservar su clave privada, CSR y certificado
// autofirmado por lo que pueden ser instalados en su servidor web, servidor de correo
// o cliente de correo (dependiendo del uso previsto para el certificado).
// Este ejemplo muestra cómo obtener estas cosas con variables, pero
// también puede almacenarlas directamente en archivos.
// Normalmente, enviará la CSR a su AC, la cuál se la emitirá después
// con el certificado "real".
openssl_csr_export($csr, $csrout) and var_dump($csrout);
openssl_x509_export($sscert, $certout) and var_dump($certout);
openssl_pkey_export($privkey, $pkeyout, "mypassword") and var_dump($pkeyout);

// Mostrar cualquier error que ocurra
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
