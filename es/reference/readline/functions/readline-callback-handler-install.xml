<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324122 Maintainer: mariano Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<refentry xml:id="function.readline-callback-handler-install" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>readline_callback_handler_install</refname>
  <refpurpose>Inicializa la interfaz de llamada de readline y la terminal, imprime el mensaje y retorna inmediatamente</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>readline_callback_handler_install</methodname>
   <methodparam><type>string</type><parameter>prompt</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
  </methodsynopsis>
  <para>
   Configura una interfaz de llamada readline y luego imprime 
   <parameter>mensaje</parameter>, luego de lo cual retorna.
   Si llamas a esta función más de una vez sin eliminar la interfaz 
   de llamada anterior automaticamente reemplazará la versión anterior.
  </para>
  <para>
   La interfaz de llamada es útil cuando se combina con
   <function>stream_select</function> ya que permite la intercalación de IO (entrada/salida)
   y entrada del usuario, a diferencia de <function>readline</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>mensaje</parameter></term>
     <listitem>
      <para>
       El mensaje a imprimir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>funcion</parameter></term>
     <listitem>
      <para>
       La función <parameter>funcion</parameter> recibe un parámetro;
       la entrada del usuario retornada.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
 <refsect1 role="description">
  &reftitle.examples;
  <para>
   <example>
    <title>Ejemplo de interfaz de llamada readline</title>
    <programlisting role="php">
<![CDATA[
<?php
function rl_callback($ret)
{
    global $c, $prompting;

    echo "Has ingresado: $ret\n";
    $c++;

    if ($c > 10) {
        $prompting = false;
        readline_callback_handler_remove();
    } else {
        readline_callback_handler_install("[$c] Ingresa algo: ", 'rl_callback');
    }
}

$c = 1;
$prompting = true;

readline_callback_handler_install("[$c] Ingresa algo: ", 'rl_callback');

while ($prompting) {
    $w = NULL;
    $e = NULL;
    $n = stream_select($r = array(STDIN), $w, $e, null);
    if ($n && in_array(STDIN, $r)) {
        // lee un carácter, llama a la funcion cuando una nueva línea es ingresada
        readline_callback_read_char();
    }
}

echo "Mensaje deshabilitado. Todo hecho.\n";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readline_callback_handler_remove</function></member>
    <member><function>readline_callback_read_char</function></member>
    <member><function>stream_select</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
