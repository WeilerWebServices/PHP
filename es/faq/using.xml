<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346458 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<chapter xml:id="faq.using" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Utilizar PHP</title>
 <titleabbrev>Utilizar PHP</titleabbrev>
 
 <para>
  Esta sección reúne varios errores comunes a los que se puede enfrentar
  mientras se escriben scripts de PHP.
 </para>
 
 <qandaset>
  
  <qandaentry xml:id="faq.using.parameterorder">
   <question>
    <para>
     No puedo recordar el orden de los parámetros de las funciones de PHP, ¿son aleatorios?
    </para>
   </question>
   <answer>
    <para>
     PHP es un pegamento que une cientos de bibliotecas externas y esto, a veces, lo complica.
     Por eso, una simple regla de oro es la siguiente: 
    </para>
    <para>
     Los parámetros de las <link linkend="book.array">funciones de Array</link> están ordenados
     como "<emphasis>aguja, pajar</emphasis>", mientras que sucede lo contrario con las  
     <link linkend="book.strings">funciones de String</link>, esto es,
     "<emphasis>pajar, aguja</emphasis>".
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.anyform">
   <question>
    <para>
     Me gustaría escribir un script genérico en PHP que pueda manejar datos provenientes
     de cualquier formulario. ¿Cómo puedo saber qué variables del método POST están disponibles?
    </para>
   </question>
   <answer>
    <para>
     PHP ofrece muchas <link linkend="language.variables.predefined">
     variables predefinidas</link>, como la variable superglobal <varname>
     $_POST</varname>. Se puede recorrer la variable <varname>$_POST</varname>,
     ya que es un array asociativo con todos los valores provenientes de POST. Por ejemplo,
     vamos a recorrerla simplemente con &foreach;,
     comprobar los valores vacíos, <function>empty</function>,
     y mostrarlos todos.
     <programlisting role="php">
<![CDATA[
<?php
$vacío = $post = array();
foreach ($_POST as $nombre_variable => $nombre_valor) {
    if (empty($nombre_valor)) {
        $vacío[$nombre_variable] = $nombre_valor;
    } else {
        $post[$nombre_variable] = $nombre_valor;
    }
}

print "<pre>";
if (empty($vacío)) {
    print "Ninguno de los valores de POST esta vacío, se envió:\n";
    var_dump($post);
} else {
    print "Tenemos " . count($vacío) . " valores vacíos\n";
    print "Registrados:\n"; var_dump($post);
    print "Vacíos:\n";  var_dump($vacío);
    exit;
}
?>
]]>
     </programlisting>
    </para>
    
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.addslashes">
   <question>
    <para>
     Necesito convertir todas las comillas simples (') en barras invertidas
     seguidas de comillas simples (\'). ¿Cómo puedo hacer esto con
     expresiones regulares? También me gustaría convertir " en \" y
     \ en \\.
    </para>
   </question>
   <answer>
    <para>
     Asumiendo que esto es para una base de datos, utilice el mecanismo de escape que
     viene con esta. Por ejemplo, emplee la función
     <function>mysql_real_escape_string</function> con MYSQL y
     <function>pg_escape_string</function> con PostgreSQL. Existen
     también las funciones genéricas <function>addslashes</function> y
     <function>stripslashes</function>, las cuales son más comunes
     en código PHP antiguo.
    </para>
    
    &note.magicquotes.gpc;
    
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.stripslashes">
   <question>
    <para>
     Todas mis " se convirtieron en \" y mis ' en \', ¿cómo puedo deshacerme
     de todas esas barras no deseadas? ¿Cómo y por qué están ahí?
    </para>
   </question>
   <answer>
    <para>
     Lo más probable es que esas barras invertidas existan porque la directiva de PHP
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> está activada.
     Esta es una característica antigua de PHP que debería deshabilitarse y no
     usarse más. También se puede utilizar la función <function>stripslashes</function>
     para eliminar las barras invertidas de un <type>string</type>.
    </para>
    
    &note.magicquotes.gpc;
    
   </answer>
  </qandaentry>   
  
  <qandaentry xml:id="faq.register-globals">
   <question>
    <para>
     ¿Cómo me afecta la directiva register_globals de PHP?
    </para>
   </question>
   <answer>
    &warn.deprecated.feature-5-3-0.removed-5-4-0;
    <para>
     En primer lugar, una explicación de lo que hace este ajuste ini. 
     Digamos que se está utilizando el siguiente URL:
     <literal>http://example.com/foo.php?animal=cat</literal>
     y en el fichero <filename>foo.php</filename> tuviéramos el siguiente
     código PHP:
    </para>
    <para>
     <programlisting role="php">
<![CDATA[
<?php
// Aquí es preferible usar $_GET
echo $_GET['animal'];

// Para que $animal exista, register_globlas debe estar activado
// NO HAGA ESTO
echo $animal;

// Esto se aplica a todas las variables, inclusve a $_SERVER
echo $_SERVER['PHP_SELF'];

// De nuevo, para que $PHP_SELF exista, register_globals debe estar activado
// NO HAGA ESTO
echo $PHP_SELF;
?>
]]>
     </programlisting>
    </para>
    <para>
     El código anterior demuestra cómo register_globals crea muchas
     variables. Durante años, este tipo de código ha sido mal visto, y durante
     años ha estado deshabilitado por defecto. Así que, aunque la mayoría de alojamientos
     web deshabilitan register_globals, aun existen artículos, tutoriales y libros
     desactualizados que requieren que esté habilitado. Actúe en consecuencia.
    </para>
    <para>
     Véase también los siguientes recursos para más información:
     <simplelist>
      <member>La directiva <link linkend="ini.register-globals">register_globals</link></member>
      <member>El <link linkend="security.globals">capítulo de seguridad acerca de register globals</link></member>
      <member><link linkend="language.variables.external">Manejo de variables externas</link></member>
      <member>Usar <link linkend="language.variables.superglobals">superglobals</link> en su lugar</member>
     </simplelist>
    </para>
    <note>
     <para>
      En el ejemplo anterior, usamos un <acronym>URL</acronym> que contenía un
      QUERY_STRING. El paso de información como esta se hace a través de una solicitud 
      GET de HTTP, y es esta la razón por la que se usa la superglobal <varname>$_GET</varname>.
     </para>
    </note>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.wrong-order">
   <question>
    <para>
     Cuando hago lo siguiente, la salida se muestra en
     el orden equivocado:
     <programlisting role="php">
<![CDATA[
<?php
function mi_función($argumento)
{
    echo $argumento + 10;
}
$variable = 10;
echo "mi_función($variable) = " . mi_función($variable);
?>
]]>
     </programlisting>
     ¿Qué está pasando?
    </para>
   </question>
   <answer>
    <para>
     Para poder usar los resultados de funciones en una expresión (como la
     concatenación con otras cadenas del ejemplo anterior), es necesario
     devolver el valor con <function>return</function>;
     no utilzar <function>echo</function>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.newlines">
   <question>
    <para>
     ¡Eh!, ¿qué les pasa a mis nuevas líneas?
     <programlisting role="php">
<![CDATA[
<pre>
<?php echo "Esto debería ser la primer línea."; ?>
<?php echo "Esto debería mostrarse después de la línea anterior."; ?>
</pre>
]]>
     </programlisting>
    </para>
   </question>
   <answer>
    <para>
     En PHP, la terminación de un bloque de código se realiza bien con "?&gt;" o
     con "?&gt;\n" (donde \n significa una nueva línea). Con el ejemplo anterior,
     las sentencias de 'echo' estarán en una línea debido a que PHP omite
     las nuevas líneas después del final de un bloque. Esto significa que es necesario
     agregar una nueva línea extra después de cada bloque de código PHP para
     poder imprimir una nueva línea.
    </para>
    <para>
     ¿Por qué PHP hace esto? Porque cuando se formatea HTML normal, esto
     hace la vida más fácil ya que normalmente no se desea esa nueva línea,
     pero se tendrían que crear líneas extremadamente largas o, de lo contrario,
     hacer el código fuente de la pagina ilegible para obtener tal efecto.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.headers-sent">
   <question>
    <para>
     Recibo el mensaje 'Warning: Cannot send session cookie - headers already
     sent...' o 'Cannot add header information - headers already sent...'.
    </para>
   </question>
   <answer>
    <para>
     Las funciones <function>header</function>, <function>setcookie</function>,
     y las funciones de <link linkend="ref.session">sesión</link>
     necesitan agregar cabeceras al flujo de salida, pero las cabeceras solo
     pueden enviarse antes de cualquier otro contenido. No puede haber ninguna
     salida antes de usar esas funciones, salidas como HTML. La función
     <function>headers_sent</function> comprobará si un script ya ha enviado
     las cabeceras. Véase también las <link linkend="ref.outcontrol">funciones
     de control de salida</link>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.header">
   <question>
    <para>
     Necesito acceder directamente a información de las cabeceras de una petición.
     ¿Cómo puedo hacerlo?
    </para>
   </question>
   <answer>
    <para>
     La función <function>getallheaders</function> lo hará si
     se está ejecutando PHP como un módulo de Apache. El siguiente trozo
     de código mostrará todas las cabeceras de la petición:
     <programlisting role="php">
<![CDATA[
<?php
$cabeceras = getallheaders();
foreach ($cabeceras as $nombre => $contenido) {
    echo "headers[$nombre] = $contenido<br />\n";
}
?>
]]>
     </programlisting>
    </para>
    <para>
     Véae también 
     <function>apache_lookup_uri</function>,
     <function>apache_response_headers</function>, y
     <function>fsockopen</function>
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.authentication">
   <question>
    <para>
     Cuando intento usar la autenticación con IIS obtengo el mensaje 'No Input file specified'.
    </para>
   </question>
   <answer>
    <para>
     El modelo de seguridad de IIS es el culpable en este caso. Es un problema
     común a todos los programas CGI que se ejecutan bajo IIS. Una solución es
     crear un fichero de HTML plano (no analizado por PHP) como la página de entrada
     en un directorio autenticado. Se debe utilizar entonces una etiqueta META para redirigir
     a la página de PHP, o tener un enlace a dicha página. PHP
     reconocerá así la autenticación correctamente. Con el módulo ISAPI,
     esto no es un problema. Esto no debería afectar a otros servidores
     web NT. Para más información, véase: 
     <link xlink:href="&url.iis;">&url.iis;</link> y la sección del manual
     sobre <link linkend="features.http-auth">Autenticación HTTP
     </link>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.iis.sharing">
   <question>
    <para>
     Windows: No puedo acceder a ficheros compartidos en otra computadora usando IIS
    </para>
   </question>
   <answer>
    <para>
     Ha de cambiar <literal>Ir a los Servicios de Información de
     Internet</literal>. Localice su fichero PHP y vaya a sus propiedades.
     Luego vaya a la pestaña <literal>Seguridad de Archivos</literal>, <literal>Editar -&lt;
     Acceso anónimo y control de autenticación</literal>.
    </para>
    <para>
     Se puede corregir el problema ya sea desmarcando <literal>Acceso
     anónimo</literal> y dejando <literal>Autenticación integrada de
     Windows</literal> marcado, o marcando <literal>Acceso
     anónimo</literal> y editando el usuario, que ya no tendría que
     tener derecho de acceso.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.mixml">
   <question>
    <para>
     ¿Cómo se supone que mezclo XML y PHP? ¡A este no le gustan
     mis etiquetas &lt;?xml!
    </para>
   </question>
   <answer>
    <para>
     Con el fin de integrar directamente &lt;?xml en código de PHP, se han de desactivar
     las etiquetas abreviadas estableciendo la directiva de PHP
     <link linkend="ini.short-open-tag">short_open_tags</link> a
     <literal>0</literal>. Esta directiva no se puede establecer con
     <function>ini_set</function>. Independientemente de que
     <link linkend="ini.short-open-tag">short_open_tags</link> esté activada o
     no, se puede hacer algo como: <literal>&lt;?php echo '&lt;?xml'; ?&gt;</literal>.
     El valor predeterminado de esta directiva es <literal>On</literal>.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.variables">
   <question>
    <para>
     ¿Dónde puedo encontrar un listado completo de las variables disponibles
     de PHP?
    </para>
   </question>
   <answer>
    <para>
     Lea la página del manual sobre <link linkend="language.variables.predefined">
     variables predefinidas</link>, que incluye un listado parcial de variables
     predefinidas disponibles para su script. Se pude ver un listado completo
     de las variables disponibles (y mucha mas información) llamando a la
     función <function>phpinfo</function>. Asegúrese de leer la sección del manual
     sobre <link linkend="language.variables.external">variables desde
     fuentes externas a PHP</link>, la cual describe escenarios comunes para
     variables externas, como desde un formulario HTML, una cookie, y un URL.
    </para>
    
    &note.registerglobals;
    
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.freepdf">
   <question>
    <para>
     ¿Cómo puedo generar ficheros PDF sin usar bibliotecas no gratuitas o
     comerciales como
     <link linkend="ref.pdf">PDFLib</link>? Me gustaría algo que sea
     gratis y no requiera bibliotecas de PDF externas.
    </para>
   </question>
   <answer>
    <para>
     Hay algunas alternativas escritas en PHP como
     <link xlink:href="&url.pdf.fpdf;">FPDF</link> y
     <link xlink:href="&url.pdf.tcpdf;">TCPDF</link>.
    </para>
    <para>
     También esta la extensión <link linkend="book.haru">Haru</link>
     que utiliza la biblioteca externa libHaru gratuita.
    </para>
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.cgi-vars">
   <question>
    <para>
     Estoy intentando acceder a una de las variables estándar
     de CGI (como <varname>$DOCUMENT_ROOT</varname> o
     <varname>$HTTP_REFERER</varname>) en una función definida
     por el usuario, y parece que no puede encontrarla. ¿Qué está mal?
    </para>
   </question>
   <answer>
    <para>
     Es importante saber que la directiva de PHP <link
     linkend="ini.register-globals">register_globals</link> también afecta
     a variables de servidor y de entorno. Cuando register_globals = off (el
     valor por defecto desde PHP 4.2.0), <varname>$DOCUMENT_ROOT</varname>
     no existirá. En su lugar, se debe usar <varname>$_SERVER['DOCUMENT_ROOT']
     </varname>. Si register_globals = on, las variables
     <varname>$DOCUMENT_ROOT</varname> y
     <varname>$GLOBALS['DOCUMENT_ROOT']</varname> también existirán.
    </para>
    <para>
     Si se está seguro de que register_globals = on y se pregunta por qué
     <varname>$DOCUMENT_ROOT</varname> no está disponible dentro de las funciones,
     es porque son como las demás variables, requiriendo dentro
     de la función <literal>global $DOCUMENT_ROOT</literal>.
     Véase también la página del manual sobre
     <link linkend="language.variables.scope">ámbito de las variables</link>.
     Es preferible codificar con register_globals = off.
    </para>
    
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.shorthandbytes">
   <question>
    <para>
     Algunas directivas de PHP pueden también tomar una abreviatura de valores de bytes, en lugar
     de solo valores de bytes <type>integer</type>. ¿Cuáles son todas las opciones de
     abreviaturas de bytes disponibles?
    </para>
   </question>
   <answer>
    <para>
     Las opciones disponibles son K (para Kilobytes), M (para Megabytes) y G (para
     Gigabytes; disponible desde PHP 5.1.0). Ninguna considera las mayúsculas/minúsculas.
     Cualquier otra cosa asume bytes. <literal>1M</literal> es igual a un Megabyte o
     <literal>1048576</literal> bytes. <literal>1K</literal> es igual a un
     Kilobyte o <literal>1024</literal> bytes. Estas notaciones abreviadas pueden
     utlizarse en &php.ini; y en la función <function>ini_set</function>.
     Observe que el valor numérico se moldea a <type>integer</type>; 
     por ejemplo, <literal>0.5M</literal> es interpretado como <literal>0</literal>.
    </para>
    <note>
     <title>kilobyte contra kibibyte</title>
     <para>
      La notación de PHP describe que un kilobyte equivale a 1024 bytes, mientras que
      el estándar <acronym>IEC</acronym> considera que debe ser un kibibyte.
      Resumiendo: k y K = 1024 bytes.
     </para>
    </note>     
   </answer>
  </qandaentry>
  
  <qandaentry xml:id="faq.using.windowslocalhostissue">
   <question>
    <para>
     Windows: Mis conexiones caducan al utilizar <literal>localhost</literal>, 
     mientras que <literal>"127.0.0.1"</literal> funciona.
    </para>
   </question>
   <answer>
    <para>
     Antes de PHP 5.3.4, existía un error en el código de resolución de red dentro de PHP que 
     ocasionaba que <literal>localhost</literal> fallase en todas las situaciones relacionadas con flujos si IPv6 
     estaba habilitado. Para solucionar este problema se puede usar tanto <literal>"127.0.0.1"</literal> 
     como deshabilitar la resolución de IPv6 en el fichero <filename>hosts</filename>.
    </para>
   </answer>
  </qandaentry>
  
 </qandaset>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
