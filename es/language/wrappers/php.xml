<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 347043 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="wrappers.php" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" role="noversion">
 <refnamediv>
  <refname>php://</refname>
  <refpurpose>Acceso a distintos flujos de E/S</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <para>
   PHP ofrece una serie de flujos de E/S generales que permiten acceder tanto a los
   flujos de entrada y salida de PHP, a la entrada estándar, a descriptores de ficheros de
   salida y de errores, a flujos de ficheros temporales en memoria y en disco, y a filtros
   para poder manipular otros recursos de ficheros según se lee desde o se escribe
   en ellos.
  </para>
  
  <refsect2 xml:id="wrappers.php.std">
   <title>php://stdin, php://stdout y php://stderr</title>
   <simpara>
    <filename>php://stdin</filename>, <filename>php://stdout</filename> y
    <filename>php://stderr</filename> permiten acceder directamente al correspondiente
    flujo de entrada o salida del proceso de PHP. El flujo hace referencia a un
    descriptor de fichero duplicado, de modo que si se abre <filename>php://stdin</filename>
    y más tarde se cierra, sólo se cerraría la copia del descriptor; el flujo
    real al que se refiere <constant>STDIN</constant> no se vería afectado. Tenga en cuenta que
    PHP mostraba un comportamiento irregular en este aspecto hasta PHP 5.2.1. Se
    recomienda utilizar simplemente las constantes <constant>STDIN</constant>,
    <constant>STDOUT</constant> y <constant>STDERR</constant> en lugar de
    abrir flujos manualmente usando estas envolturas.
   </simpara>
   <simpara>
    <filename>php://stdin</filename> es de sólo lectura, mientras que
    <filename>php://stdout</filename> y <filename>php://stderr</filename> son de
    sólo escritura.
   </simpara>
  </refsect2>
  
  <refsect2 xml:id="wrappers.php.input">
   <title>php://input</title>
   <simpara>
    <filename>php://input</filename> es un flujo de sólo lectura que permite
    leer datos del cuerpo solicitado. En el caso de peticiones POST, es
    preferible usar <filename>php://input</filename> en vez de <varname>$HTTP_RAW_POST_DATA</varname> ya que no depende de
    directivas &php.ini; especiales. Sin embargo, cuando no se genera
    automáticamente <varname>$HTTP_RAW_POST_DATA</varname>,
    se trata de una alternativa que hace un uso menos intensivo de memoria
    que activando <link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link>.
    <filename>php://input</filename> no está disponible con
    <literal>enctype="multipart/form-data"</literal>.
   </simpara>
   <note>
    <simpara>
     Antes de PHP 5.6, un flujo abierto con <filename>php://input</filename>
     solamente podía leerse una vez; el flujo no admite operaciones de búsqueda.
     Sin embargo, dependiendo de la implementación de la SAPI, podría ser posible abrir
     otro flujo <filename>php://input</filename> y reiniciar la lectura. Esto
     solamente es posible si los datos del cuerpo de la petición se han guardado. Este
     caso es típico en peticiones POST, pero no en otros métodos de petición, como PUT
     o PROPFIND.
    </simpara>
   </note>
  </refsect2>  
  
  <refsect2 xml:id="wrappers.php.output">
   <title>php://output</title>
   <para>
    <filename>php://output</filename> es un flujo de sólo escritura que permite
    escribir en el buffer de salida tal como lo hacen
    <function>print</function> y <function>echo</function>.
   </para>
  </refsect2>
  
  <refsect2 xml:id="wrappers.php.fd">
   <title>php://fd</title>
   <simpara>
    <filename>php://fd</filename> permite el acceso directo al descriptor de archivo
    dado. Por ejemplo, <filename>php://fd/3</filename> refiere al descriptor
    de archivo 3.
   </simpara>
  </refsect2>
  
  <refsect2 xml:id="wrappers.php.memory">
   <title>php://memory y php://temp</title>
   <simpara>
    <filename>php://memory</filename> y <filename>php://temp</filename> son flujos de
    lectura-escritura que permiten almacenar datos temporales en una envoltura similar a un
    fichero. La única diferencia entre las dos es que
    <filename>php://memory</filename> siempre almacenará sus datos en memoria,
    mientras que <filename>php://temp</filename> utilizará un fichero temporal cuando
    la cantidad de datos almacenados superen el límite predefinido (por omisión, 2 MB). La
    ubicación de este fichero temporal está determinada de la misma manera que la
    función<function>sys_get_temp_dir</function>,
   </simpara>
   <simpara>
    El límite de memoria de <filename>php://temp</filename> se puede controlar añadiendo
    <literal>/maxmemory:NN</literal>, donde <literal>NN</literal> es
    la cantidad en bytes máxima de datos a almacenar en memoria antes de recurrir a
    un fichero temporal.
   </simpara>
  </refsect2>
  
  <refsect2 xml:id="wrappers.php.filter">
   <title>php://filter</title>
   <simpara> 
    <filename>php://filter</filename> es una especie de meta-envoltura diseñada
    para permitir aplicar <link linkend="filters">filtros</link> a los flujos en las aperturas.
    Esto es muy útil en las funciones todo en uno, como
    <function>readfile</function>, <function>file</function>, y
    <function>file_get_contents</function> donde, por otra parte,
    no se pueden aplicar filtros a los flujos antes de que se lea
    su contenido.
   </simpara>
   <para>
    <filename>php://filter</filename> acepta los siguientes parámetros como parte
    de su ruta. Se pueden especifcar múltiples filtros en una ruta.
    Por favor, consulte los ejemplos para los usos concretors de estos parámetros.
   </para>
   <para>
    <table>
     <title>parámetros de php://filter</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Nombre</entry>
        <entry>Descripción</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>
         <literal>resource=&lt;flujo a filtrar&gt;</literal>
        </entry>
        <entry>
         Este parámetro es obligatorio. Especifica el flujo que se desea
         filtrar.
        </entry>
       </row>
       <row>
        <entry>
         <literal>read=&lt;listra de filtros a aplicar a la cadena de lectura&gt;</literal>
        </entry>
        <entry>
         Este parámetro es opcional. Se pueden enumerar uno o más filtros,
         separados por el carácter <literal>|</literal>.
        </entry>
       </row>
       <row>
        <entry>
         <literal>write=&lt;lista de filtros a aplicar a la cadena de escritura&gt;</literal>
        </entry>
        <entry>
         Este parámetro es opcional. Se puedene enumerar uno o más filtros,
         separados por el carácter <literal>|</literal>.
        </entry>
       </row>
       <row>
        <entry>
         <literal>&lt;lista de filtros a aplicar a las dos cadenas&gt;</literal>
        </entry>
        <entry>
         Cualquier listra de filtros que no esté precedida ni por <literal>read=</literal>
         ni por <literal>write=</literal> se aplicará tanto a las cadenas de lectura
         como de escritura según proceda.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </refsect2>
 </refsect1>
 
 <refsect1 role="options"><!-- {{{ -->
  &reftitle.options;
  <para>
   <table>
    <title>
     Resumen de la Envoltura (Para <literal>php://filter</literal>,
     consúltese el resumen de la envoltura que se filtra)
    </title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Atributo</entry>
       <entry>Permitido</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Restringido por <link linkend="ini.allow-url-fopen">allow_url_fopen</link></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Restringido por <link linkend="ini.allow-url-include">allow_url_include</link></entry>
       <entry>
        <literal>php://input</literal>,
        <literal>php://stdin</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Lecturas</entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://input</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Escrituras</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite Añadir contenidos</entry>
       <entry>
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://output</literal>,
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente. (Equivalente a escrituras)
       </entry>
      </row>
      <row>
       <entry>Permite Lecturas y Escrituras Simultáneas</entry>
       <entry>
        <literal>php://fd</literal>,
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite usar la función <function>stat</function></entry>
       <entry>
        <literal>php://memory</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
      <row>
       <entry>Permite usar la función <function>unlink</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>rename</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>mkdir</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>rmdir</function></entry>
       <entry>No</entry>
      </row>
      <row>
       <entry>Permite usar la función <function>stream_select</function></entry>
       <entry>
        <literal>php://stdin</literal>,
        <literal>php://stdout</literal>,
        <literal>php://stderr</literal>,
        <literal>php://fd</literal> y
        <literal>php://temp</literal> solamente.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1> <!-- }}} -->
 
 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        <filename>php://input</filename> se puede reutilzar.
       </entry>
      </row>
      <row>
       <entry>5.3.6</entry>
       <entry>
        Se añadió <filename>php://fd</filename>.
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Se añadieron <filename>php://memory</filename> y
        <filename>php://temp</filename>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->
 
 <refsect1 role="examples"><!-- {{{ -->
  &reftitle.examples;
  <example><!-- {{{ -->
   <title>php://temp/maxmemory</title>
   <para>
    Este parámetro opcional permite establecer el límite de memoria a partir del cual
    <filename>php://temp</filename> comienza a usar un fichero temporal.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
// Establecer el límite a 5 MB.
$fiveMBs = 5 * 1024 * 1024;
$fp = fopen("php://temp/maxmemory:$fiveMBs", 'r+');

fputs($fp, "hello\n");

// Leer lo que hemos escrito.
rewind($fp);
echo stream_get_contents($fp);
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/resource=&lt;flujo a filtrar&gt;</title>
   <para>
    Este parámetro tiene que ubicarse
    al final de la especificación de <filename>php://filter</filename> y
    tiene que apuntar al flujo que se desea filtrar.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Esto es equivalente a:
  readfile("http://www.example.com");
  dado que no se especifica ningún filtro */

readfile("php://filter/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/read=&lt;lista de filtros a aplicar a la cadena de lectura&gt;</title>
   <para>
    Este parámetro contiene uno o más
    nombres de filtros separados por el caracter <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Devolverá el contenido de
  www.example.com en mayúsculas */
readfile("php://filter/read=string.toupper/resource=http://www.example.com");

/* Hará lo mismo que el ejemplo de arriba
  pero además lo codificará en ROT13 */
readfile("php://filter/read=string.toupper|string.rot13/resource=http://www.example.com");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example><!-- {{{ -->
   <title>php://filter/write=&lt;lista de filtros a aplicar a la cadena de escritura&gt;</title>
   <para>
    Este parámetro contiene uno o más
    nombres de filtros separados por el caracter <literal>|</literal>.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
/* Filtrará el string "Hello World" con
  el filtro rot13, y después lo escribirá en
  example.txt dentro del directorio actual */
file_put_contents("php://filter/write=string.rot13/resource=example.txt","Hello World");
?>
]]>
   </programlisting>
  </example><!-- }}} -->
  <example>
   <title>php://memory y php://temp no son reutilizables</title>
   <para>
    <filename>php://memory</filename> y <filename>php://temp</filename>
    no son reutilizabes, esto es, debepués de que los flujos hayan sido cerrados, no
    hay forma de hacer referencia a ellos de nuevo.
   </para>
   <programlisting role="php">
<![CDATA[
file_put_contents('php://memory', 'PHP');
echo file_get_contents('php://memory'); // no imprime nada
]]>
   </programlisting>
  </example>
 </refsect1><!-- }}} -->
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

