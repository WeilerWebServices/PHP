<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312947 Maintainer: jpberdejo Status: ready -->

<sect1 xml:id="control-structures.while" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>while</literal></title>
 <?phpdoc print-version-for="while"?>
 <para>
  Los bucles <literal>while</literal> son el tipo más sencillo de bucle en
  PHP. Se comportan igual que su contrapartida en C. La forma básica
  de una sentencia <literal>while</literal> es:
  <informalexample>
   <programlisting>
<![CDATA[
while (expr)
    sentencia
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  El significado de una sentencia <literal>while</literal> es simple. Le
  dice a PHP que ejecute las sentencias anidadas, tanto
  como la expresión <literal>while</literal> se evalúe como
  &true;. El valor de la expresión es verificado
  cada vez al inicio del bucle, por lo que incluso si este valor
  cambia durante la ejecución de las sentencias anidadas, la ejecución
  no se detendrá hasta el final de la iteración (cada vez que PHP ejecuta
  las sentencias contenidas en el bucle es una iteración). A veces, si la
  expresión <literal>while</literal> se evalúa como
  &false; desde el principio, las sentencias 
  anidadas no se ejecutarán ni siquiera una vez.
 </simpara>
 <para>
  Al igual que con la sentencia <literal>if</literal>, se pueden agrupar
  varias instrucciones dentro del mismo bucle <literal>while</literal>
  rodeando un grupo de sentencias con corchetes, o 
  utilizando la sintaxis alternativa:
  <informalexample>
   <programlisting>
<![CDATA[
while (expr):
    sentencias
    ...
endwhile;
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  Los siguientes ejemplos son idénticos y ambos presentan los números
  del 1 al 10:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
/* ejemplo 1 */

$i = 1;
while ($i <= 10) {
    echo $i++;  /* el valor presentado sería
                   $i antes del incremento
                   (post-incremento) */
}

/* ejemplo 2 */

$i = 1;
while ($i <= 10):
    echo $i;
    $i++;
endwhile;
?>
]]>
   </programlisting>
  </informalexample>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
