<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344782 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: andresdzphp -->

<sect1 xml:id="function.return" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>return</title>
 <?phpdoc print-version-for="return"?>
 <simpara>
  <literal>return</literal> devuelve el control del programa al módulo que lo invoca.
  La ejecución vuelve a la siguiente expresión después del módulo que lo invoca.
 </simpara>
 <simpara>
  Si se llama desde una función, la sentencia <literal>return</literal>
  inmediatamente termina la ejecución de la función actual, y
  devuelve su argumento como el valor de la llamada a la
  función. <literal>return</literal> también termina la ejecución de
  una sentencia <function>eval</function> o un archivo de script.
 </simpara>
 <simpara>
  Si se llama desde el ámbito global, entonces la ejecución del script
  actual se termina. Si el archivo script actual fue incluido o requerido con
  <function>include</function> o <function>require</function>,
  entonces el control es pasado de regreso al archivo que hizo el llamado. Además, si
  el archivo script actual fue incluido con <function>include</function>, entonces
  el valor dado a <literal>return</literal> será retornado como
  el valor de la llamada <function>include</function>. Si
  <literal>return</literal> es llamado desde dentro del fichero del script
  principal, entonces termina la ejecución del script. Si el archivo script actual fue
  nombrado por las opciones de configuración <link
  linkend="ini.auto-prepend-file">auto_prepend_file</link> o <link
  linkend="ini.auto-append-file">auto_append_file</link>
  en &php.ini;, entonces se 
  termina la ejecución de ese archivo script.
 </simpara>
 <simpara>Para más información, ver <link
  linkend="functions.returning-values">Retornando valores</link>.
 </simpara>
 <para>
  <note>
   <simpara>
    Cabe señalar que dado que <literal>return</literal> es un constructor
    del lenguaje y no una función, los paréntesis que rodean su argumento
    no son obligatorios y se desaconseja su uso.
   </simpara>
  </note>
  <note>
   <simpara>
    Si no se suministra un parámetro, entonces el paréntesis debe omitirse
    y &null; será
    retornado. Llamadas a <literal>return</literal> con paréntesis pero
    sin argumentos resultarán en un error del intérprete.
   </simpara>
  </note>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
