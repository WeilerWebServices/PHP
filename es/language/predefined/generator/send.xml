<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 340503 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->

<refentry xml:id="generator.send" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Generator::send</refname>
  <refpurpose>Enviar un valor al generador</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>mixed</type><methodname>Generator::send</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Envía el valor dado al generador como resultado de la expresión &yield;
   actual y reanuda la ejecución del generador.
  </para>
  <para>
   Si el generador no es una expresión &yield; en el momento de invocar a este método,
   se permitirá avanzar a la primera expresión &yield; antes de enviar el
   valor. Por tanto, no es necesario «preparar» generadores de PHP con una
   llamada a <methodname>Generator::next</methodname> (como se hace en Python).
  </para>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <para>
      El valor a enviar al generador. Este valor será el valor devuelto de la
      expresión &yield; en la que está actualmente el generador.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Devuelve el valor producido.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Empleo de <methodname>Generator::send</methodname> para inyectar valores</title>
    <programlisting role="php">
<![CDATA[
<?php
function printer() {
    echo "¡Soy una impresora!".PHP_EOL;
    while (true) {
        $string = yield;
        echo $string;
    }
}

$printer = printer();
$printer->send('¡Hola mundo!');
$printer->send('¡Adiós mundo!');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
¡Soy una impresora!
¡Hola mundo!
¡Adiós mundo!
]]>
    </screen>
   </example>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
