<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 342129 Maintainer: seros Status: ready -->
<!-- Reviewed: yes Maintainer: seros -->
<sect1 xml:id="language.oop5.changelog" xmlns="http://docbook.org/ns/docbook">
 <title>Registro de cambios de la POO</title>
 <para>
  Aquí se registran los cambios del modelo de POO de PHP 5. Las descripciones y otras notas respecto
  a estas nuevas funcionalidades están documentadas dentro de la documentación de POO 5.
 </para>
 <para>
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.0.0</entry>
      <entry>
       Definir propiedades (compatibles) en dos rasgos («traits») ya no lanza un error.
      </entry>
     </row>
     <row>
      <entry>5.6.0</entry>
      <entry>
       Añadido: El método <link linkend="object.debuginfo">__debugInfo()</link>.
      </entry>
     </row>
     <row>
      <entry>5.5.0</entry>
      <entry>
       Añadido: La constante mágica <link linkend="language.oop5.basic.class.class">::class</link>.
      </entry>
     </row>
     <row>
      <entry>5.5.0</entry>
      <entry>
       Añadido: <link linkend="language.exceptions">finally</link> para manejar excepciones.
      </entry>
     </row>
     <row>
      <entry>5.4.0</entry>
      <entry>
       Añadido: <link linkend="language.oop5.traits">traits</link>.
      </entry>
     </row>
     <row>
      <entry>5.4.0</entry>
      <entry>
       Cambiado: Si una clase <link linkend="language.oop5.abstract">abstracta</link> 
       define una firma para el constructor, ahora se hará cumplir.
      </entry>
     </row>
     <row>
      <entry>5.3.3</entry>
      <entry>
       Cambiado: Los métodos con el mismo nombre que el último elemento de un nombre
       de clase perteneciente a un <link linkend="language.namespaces">espacio de nombres</link>
       ya no serán tratados como un
       <link linkend="language.oop5.decon">constructor</link>. Este cambio no
       afecta a las clases que no pertenecen a un espacio de nombres.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Cambiado: Ya no es necesario que los valores predeterminados
       de los métodos de una clase que implemente un interfaz coincidan con
       los valores predeterminados de los prototipos de la interfaz.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Cambiado: Ahora es posible hacer referencia a la clase utilizando una variable
       (p.ej., <literal>echo $nombreclase::constante;</literal>).
       La variable no puede contener como valor una palabra reservada (p.ej., <literal>self</literal>,
       <literal>parent</literal> o <literal>static</literal>).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Cambiado: Se emite un error de nivel <constant>E_WARNING</constant> si
       al <link linkend="language.oop5.overloading">sobrecargar</link> un método
       mágico se le declara como <link linkend="language.oop5.static">estático</link>.
       Además, hace necesario que tenga visibilidad pública.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Cambiado: Antes de 5.3.0, las excepciones lanzadas en la función 
       <function>__autoload</function> no podían capturarse
       en el bloque <link linkend="language.exceptions">catch</link>, y provocaban
       un error fatal. Ahora, las excepciones lanzadas dentro de la función __autoload
       pueden capturarse en el bloque <link linkend="language.exceptions">catch</link>, con
       una única salvedad: Si se lanza una excepción definida por el usuario, esta excepción
       debería estar disponible. Se puede utilizar recursivamente la función __autoload para
       cargar automáticamente la clase de la excepción definida por el usuario.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Añadido: El método <link linkend="language.oop5.overloading">__callStatic</link>.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Añadido: El soporte para <link linkend="language.types.string.syntax.heredoc">heredoc</link>
       y <link linkend="language.types.string.syntax.heredoc">nowdoc</link>
       para <emphasis>constantes</emphasis> de clase y definición de propiedades.
       Nota: los valores heredoc deben seguir las mismas reglas que los string de
       comillas dobles (p.ej., no contener variables).
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Añadido: <link linkend="language.oop5.late-static-bindings">Enlaces estáticos en tiempo de ejecución</link>.
      </entry>
     </row>
     <row>
      <entry>5.3.0</entry>
      <entry>
       Añadido: El método <link linkend="object.invoke">__invoke()</link>.
      </entry>
     </row>
     <row>
      <entry>5.2.0</entry>
      <entry>
       Cambiado: Al método <link linkend="object.tostring">__toString()</link>
       sólo se le invocaba cuando se le combinaba con <function>echo</function> o con
       <function>print</function>. Pero ahora, se le invoca en cualquier contexto de string
       (p.ej, en <function>printf</function> con el modificador <literal>%s</literal>) pero no
       en contextos de otro tipo (p.ej. con el modificador <literal>%d</literal>).
       Desde PHP 5.2.0, convertir objetos a string sin el método <literal>__toString</literal>
       emitirá un error de nivel <constant>E_RECOVERABLE_ERROR</constant>.
      </entry>
     </row>
     <row>
      <entry>5.1.3</entry>
      <entry>
       Cambiado: En versiones anteriores de PHP 5, se consideraba obsoleto
       el uso de <literal>var</literal> y emitía un error de nivel
       <constant>E_STRICT</constant>. Ya no está obsoleto, y por tanto no emite el error.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       Cambiado: Ahora se invoca al método estático
       <link linkend="object.set-state">__set_state()</link> en las clases
       exportadas por <function>var_export</function>.
      </entry>
     </row>
     <row>
      <entry>5.1.0</entry>
      <entry>
       Añadido: Los métodos <link linkend="object.isset">__isset()</link> 
       y <link linkend="object.unset">__unset()</link>.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
