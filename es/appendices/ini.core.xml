<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 341282 Maintainer: seros Status: ready -->
<!-- Reviewed: no Maintainer: seros -->

<section xml:id="ini.core" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Descripción de las directivas del núcleo de &php.ini;</title>
 <para>
  Esta lista incluye las directivas del núcleo de &php.ini; que se pueden establecer para
  la configuración de PHP. Las directivas manejadas por extensiones están enumeradas
  y detalladas en las respectivas páginas de la documentación de cada extensión.
  La información sobre las directivas de sesión, por ejemplo, se puede encontrar en la
  <link linkend="session.configuration">página de sesiones</link>.
 </para>
 <note>
  <para>
   Las opciones predeterminadas enumeradas aquí se usan cuando &php.ini; no está cargado; los valores para el &php.ini; de producción y desarrollo podrían variar.
  </para>
 </note>
 <section xml:id="ini.sect.language-options">
  <title>Opciones del lenguaje</title>
  <para>
   <table>
    <title>Opciones del lenguaje y configuración variada</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.short-open-tag">short_open_tag</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.asp-tags">asp_tags</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Eliminada in PHP 7.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.precision">precision</link></entry>
       <entry>"14"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.serialize-precision">serialize_precision</link></entry>
       <entry>"17"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Hasta PHP 5.3.5, el valor predeterminado era 100.</entry>
      </row>
      <row>
       <entry><link linkend="ini.y2k-compliance">y2k_compliance</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Eliminado en PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.allow-call-time-pass-reference">allow_call_time_pass_reference</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Eliminada en PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-functions">disable_functions</link></entry>
       <entry>""</entry>
       <entry>Sólo en PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-classes">disable_classes</link></entry>
       <entry>""</entry>
       <entry>Sólo en &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.exit-on-timeout">exit_on_timeout</link></entry>
       <entry>""</entry>
       <entry>INI_ALL</entry>
       <entry>Disponible desde PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.expose-php">expose_php</link></entry>
       <entry>"1"</entry>
       <entry>Sólo en &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.multibyte">zend.multibyte</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Disponible desde PHP 5.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.script-encoding">zend.script_encoding</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Disponible desde PHP 5.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.detect-unicode">zend.detect-unicode</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Disponible desde PHP 5.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.signal-check">zend.signal_check</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.assertions">zend.assertions</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL con restricciones</entry>
       <entry>Disponible desde PHP 7.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.ze1-compatibility-mode">zend.ze1_compatibility_mode</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Eliminada en PHP 5.3.0</entry>
      </row>
      <row>
       <entry>detect_unicode</entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Disponible desde PHP 5.1.0. Renombrada a <link linkend="ini.zend.detect-unicode">zend.detect-unicode</link> desde PHP 5.4.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.short-open-tag">
     <term>
      <parameter>short_open_tag</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Indica a PHP si debería permitirse la forma abreviada de las etiquetas de apertura
       de PHP (<userinput>&lt;? ?&gt;</userinput>). Si se quiere utilizar PHP
       junto con XML, se puede desactivar esta opción para poder
       usar <userinput>&lt;?xml ?&gt;</userinput> en línea. Si no, puede
       imprimirse con PHP, por ejemplo: <userinput>&lt;?php echo '&lt;?xml
       version="1.0"?&gt;'; ?&gt;</userinput>. Además, si está desactivada, se debe usar
       siempre la forma no abreviada de la etiqueta de apertura de PHP (<userinput>&lt;?php ?&gt;</userinput>).
      </para>
      <note>
       <para>
        Esta directiva también afecta a la abreviatura
        <userinput>&lt;?=</userinput> en versiones anteriores a PHP 5.4.0,
        la cual es lo mismo que <userinput>&lt;? echo</userinput>. El uso de esta
        abreviatura requería que <systemitem role="directive">short_open_tag</systemitem>
        estuviese activada.
        Desde PHP 5.4.0, <userinput>&lt;?=</userinput> siempre está disponible.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.asp-tags">
     <term>
      <parameter>asp_tags</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Activa el uso de las etiquetas estilo ASP (&lt;% %&gt;) además de
       las normales (&lt;?php ?&gt;). Esto incluye la
       abreviatura de variable-valor &lt;%= $valor %&gt;. Para
       más información, véase <link
       linkend="language.basic-syntax.phpmode">Salir de HTML</link>.
      </simpara>
      <para>
       <table>
        <title>Registro de cambios para <literal>asp_tags</literal></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Version;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>7.0.0</entry>
           <entry>
            Eliminada de PHP.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.precision">
     <term>
      <parameter>precision</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       El número de dígitos significativos que se muestran en números de punto flotante.
       <literal>-1</literal> significa que se utilizará el algoritmo mejorado
       para redondear dichos números.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.serialize-precision">
     <term>
      <parameter>serialize_precision</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       El número de dígitos significativos almacenados durante la serialización de números de punto flotante.
       <literal>-1</literal> significa que se utilizará el algoritmo mejorado
       para redondear dichos números.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.y2k-compliance">
     <term>
      <parameter>y2k_compliance</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Asegura la compatibilidad con el año 2000 (causará problemas con navegadores no compatibles)
      </simpara>
     </listitem>
    </varlistentry>
    
    
    <varlistentry xml:id="ini.allow-call-time-pass-reference">
     <term>
      <parameter>allow_call_time_pass_reference</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Sirve para avisar cuándo los argumentos son pasados por referencia al llamar a una función.
       El método recomendado para especificar los argumentos que deberían parsarse por
       referencia es en la declaración de la función. Se anima a probar y desactivar
       esta opción para asegurarse de que los scripts funcionen adecuadamente también
       en futuras versiones del lenguaje (si está característica está desactivada,
       se mostrará una advertencia cada vez que se utilice).
      </para>
      <para>
       El paso de argumentos por referencia en el momento de llamar a una función quedó obsoleto por
       razones de limpieza en el código. Una función puede modificar sus argumentos de una
       manera no documentada si no declaró que dichos argumentos deberían ser pasados por
       referencia. Para evitar efectos secundarios, es mejor especificar qué
       argumentos son pasados por referencia solamente en la declaración de la función.
      </para>
      <para>
       Véase también <link linkend="language.references">Explicación de las referencias</link>.
      </para>
      <para>
       <table>
        <title>Registro de cambios de <literal>allow_call_time_pass_reference</literal></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Version;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>5.4.0</entry>
           <entry>
            Eliminada de PHP.
           </entry>
          </row>
          <row>
           <entry>5.3.0</entry>
           <entry>
            Emite un error de nivel <constant>E_DEPRECATED</constant>.
           </entry>
          </row>
          <row>
           <entry>5.0.0</entry>
           <entry>
            Obsoleta, y genera un error de nivel <constant>E_COMPILE_WARNING</constant>.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.expose-php">
     <term>
      <parameter>expose_php</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Expone al mundo que PHP está instalado en el servidor, lo que incluye la
       versión de PHP en la cabecera HTTP (p.ej., X-Powered-By: PHP/5.3.7).
       Antes de PHP 5.5.0, los GUIDs del logotipo de PHP también eran expuestos, por lo que
       al añadirlos a la URL de un script de PHP, se mostraba el logotipo correspondiente 
       (p.ej., <link xlink:href="&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42">&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42</link>).
       Esto también afectaba a la salida de <function>phpinfo</function>, ya que cuando estaba desactivada,
       no se mostraban el logotipo de PHP y la información de los créditos.
      </para>
      <note>
       <para>
        Desde PHP 5.5.0, estos GUIDs y la función <function>php_logo_guid</function>
        han sido eliminados de PHP, y los GUIDs han sido reemplazados en su lugar con URIs de datos.
        Por lo tanto, ya no funciona el acceso al logotipo de PHP mediante la adición del GUID a la URL.
        Similarmente, desactivar <parameter>expose_php</parameter> no afectará
        a la visualización del logotipo de PHP en <function>phpinfo</function>.
       </para>
      </note>
      <para>
       Véase también <function>php_logo_guid</function> y <function>phpcredits</function>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.disable-functions">
     <term>
      <parameter>disable_functions</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Esta directiva permite desactivar ciertas funciones por razones de
       <link linkend="security">seguridad</link>. Requiere una lista
       con los nombres de las funciones delimitados por comas. disable_functions
       no se ve afectada por el <link linkend="ini.safe-mode">Modo Seguro</link>.
      </para>
      <para>
       Solamente las <link linkend="functions.internal">funciones internas</link> pueden
       ser desactivadas usando esta directiva. Las <link linkend="functions.user-defined">funciones definidas por el usuario</link>
       no se ven afectadas.
      </para>
      <para>
       Esta directiva debe ser establecida en el fichero &php.ini;. Por ejemplo,
       no puede establecerse en &httpd.conf;.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.disable-classes">
     <term>
      <parameter>disable_classes</parameter>
      <type>string</type>
     </term>
     <listitem>
      <simpara>
       Esta directiva permite desactivar ciertas clases por razones
       de <link linkend="security">seguridad</link>. Requiere una lista
       con los nombres de las clases delimitados por comas. disable_classes
       no se ve afectada por el  <link linkend="ini.safe-mode">Modo Seguro</link>.
      </simpara>
      <simpara>
       Esta directiva debe ser establecida en el fichero &php.ini;. Por ejemplo,
       no puede establecerse en &httpd.conf;.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.assertions">
     <term>
      <parameter>zend.assertions</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       Cuando se establece a <literal>1</literal>, se generará y se ejecutará código
       de afirmaciones (modo desarrollo). Si se establece a <literal>0</literal>,
       el código de afirmaciones se generará aunque será saltado (no ejecutado)
       durante la ejecución. Cuando se establece a <literal>-1</literal>, el código de afirmaciones no
       se generará, haciendo que las afirmaciones tengan un coste de cero (modo producción).
      </simpara>
      <note>
       <para>
        Si un proceso se inicia en modo de producción, <link linkend="ini.zend.assertions">zend.assertions</link>
        no podrá ser cambiado durante la ejecución, ya que no se generó el código para las afirmaciones.
       </para>
       <para>
        Si un proceso se inicia en modo desarrollo, <link linkend="ini.zend.assertions">zend.assertions</link>
        no podrá ser establecido a <literal>-1</literal> durante la ejecución.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.ze1-compatibility-mode">
     <term>
      <parameter>zend.ze1_compatibility_mode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Activa el modo de compatibilidad con El Motor Zend 1 (PHP 4). Esto afecta
       a la clonación, conversión (los objectos sin propiedades son convertidos a &false; o 0),
       y <link linkend="language.oop5.object-comparison">comparación de objetos</link>.
       En este modo, los objetos son pasados por valor en lugar de por referencia de
       forma predeterminada.
      </para>
      <para>
       Véase también la sección titulada
       <link linkend="migration5">Migración de PHP 4 a PHP 5</link>.
      </para>
      <warning>
       <simpara>Esta característica ha quedado <emphasis>OBSOLETA</emphasis> y fue <emphasis>ELIMINADA</emphasis>
        a partir de PHP 5.3.0.
       </simpara>
      </warning>
      
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.multibyte">
     <term>
      <parameter>zend.multibyte</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Permite el análisis de ficheros de código fuente en codificaciones multibyte. Se requiere
       la habilitación de zend.multibyte para emplear codificaciones de caracteres como SJIS, BIG5, etc.,
       que contienen caracteres especiales en datos de string multibyte. Las codificaciones compatibles
       con ISO-8859-1 como UTF-8, EUC, etc., no requieren esta opción.
      </para>
      <para>
       Para habilitar zend.multibyte es necesario que la extensión mbstring esté disponible.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.script-encoding">
     <term>
      <parameter>zend.script_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Este valor será usado a menos que una directiva
       <link linkend="control-structures.declare.encoding">declare(encoding=...)</link>
       aparezca al principio del script. Cuando se emplea una codificación incompatible
       con ISO-8859-1, se deben utilizar zend.multibyte y zend.script_encoding.
      </para>
      <para>
       Los string literales se transliterarán de zend.script_enconding a
       mbstring.internal_encoding, como si
       <function>mb_convert_encoding</function> hubiera sido llamada.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.detect-unicode">
     <term>
      <parameter>zend.detect_unicode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Comprobar la marca BOM (Byte Order Mark) y verificar si el fichero contiene caracteres
       multibyte válidos.
       Esta detección se realiza antes de procesar
       <function>__halt_compiler</function>.
       Disponible solamente en modo Zend Multibyte.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.signal-check">
     <term>
      <parameter>zend.signal_check</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Para verficar gestores de señales reemplazados en el apagado.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.exit-on-timeout">
     <term>
      <parameter>exit_on_timeout</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Esta es una directiva mod_php-only de Apache1 que fuerza a un subproceso de Apache a salir si expiró el tiempo de ejecución de PHP.
       Este tiempo de espera provoca una llamada interna a longjmp() en Apache1, que puede dejar algunas extensiones en un estado de 
       incoherencia. Al terminar el proceso, será limpiado cualquier bloqueo pendiente o la memoria.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.resource-limits">
  <title>Límite de recursos</title>
  <para>
   <table>
    <title>Límite de recursos</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.memory-limit">memory_limit</link></entry>
       <entry>"128M"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>"8M" antes de PHP 5.2.0, "16M" en PHP 5.2.0</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.memory-limit">
     <term>
      <parameter>memory_limit</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Establece el máximo de memoria en bytes que un script puede consumir.
       Ayuda a prevenir que scripts mal programados consuman toda la memoria
       disponible en el servidor. Observe que para no tener límite de memoria,
       se ha de establecer esta directiva a <literal>-1</literal>.
      </para>
      <para>
       En versiones anteriores a PHP 5.2.1, esta directiva tenía que
       estar habilitada en tiempo de compilación usando
       <option role="configure">--enable-memory-limit</option> en la línea
       de configuración. Esta bandera en tiempo de compilación también se requería para
       definir las funciones <function>memory_get_usage</function> y
       <function>memory_get_peak_usage</function> en versiones anteriores a PHP 5.2.1.
      </para>
      
      &ini.shorthandbytes;
      
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   Véase también: <link linkend="ini.max-execution-time">max_execution_time</link>.
  </para>
 </section>
 
 <section xml:id="ini.sect.performance">
  <title>Ajuste del rendimiento</title>
  <para>
   <table>
    <title>Ajuste del rendimiento</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.realpath-cache-size">realpath_cache_size</link></entry>
       <entry>"16K"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.1.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.realpath-cache-ttl">realpath_cache_ttl</link></entry>
       <entry>"120"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.1.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  &ini.descriptions.title;
  <para>
   <variablelist>
    <varlistentry xml:id="ini.realpath-cache-size">
     <term>
      <parameter>realpath_cache_size</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Determina el tamaño de la caché de realpath que va a ser usada por PHP.
       Este valor debe ser incrementado en sistemas donde PHP abra muchos ficheros,
       para reflejar la cantidad de operaciones realizadas con ficheros.
      </para>
      <para>
       El tamaño representa el número total de bytes de los strings de rutas
       almacenadas, más el tamaño de los datos asociados con la entrada de la caché. Esto
       significa que para poder almacenar rutas mayores en la caché, el tamaño de esta
       debe ser mayor. Este valor no controla directamente el número de
       rutas distintas que pueden ser almacenadas en caché.
      </para>
      <para>
       El tamaño requerido para los datos de entrada de la caché depende del sistema.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.realpath-cache-ttl">
     <term>
      <parameter>realpath_cache_ttl</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Tiempo (en segundos) durante el cual almacenar en caché información de realpath
       para un determinado fichero o directorio. Para sistemas que raramente cambian
       ficheros, considere incrementar este valor.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.data-handling">
  <title>Manejo de datos</title>
  <para>
   <table>
    <title>Opciones de configuración de manejo de datos</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.arg-separator.output">arg_separator.output</link></entry>
       <entry>"&amp;"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.arg-separator.input">arg_separator.input</link></entry>
       <entry>"&amp;"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.variables-order">variables_order</link></entry>
       <entry>"EGPCS"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL en PHP &lt;= 5.0.5.</entry>
      </row>
      <row>
       <entry><link linkend="ini.request-order">request_order</link></entry>
       <entry>""</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Disponible desde PHP 5.3.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-globals-jit">auto_globals_jit</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Disponible desde PHP 5.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.register-globals">register_globals</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Eliminada en PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.register-argc-argv">register_argc_argv</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.register-long-arrays">register_long_arrays</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Obsoleta en PHP 5.3.0. Eliminada en PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.enable-post-data-reading">enable_post_data_reading</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Disponible desde PHP 5.4.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.post-max-size">post_max_size</link></entry>
       <entry>"8M"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-prepend-file">auto_prepend_file</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-append-file">auto_append_file</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.default-mimetype">default_mimetype</link></entry>
       <entry>"text/html"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.default-charset">default_charset</link></entry>
       <entry>"UTF-8"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Se predetermina a "UTF-8" desde PHP &gt;= 5.6.0, vacío para PHP &lt; 5.6.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Eliminada en PHP 7.0.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.arg-separator.output">
     <term>
      <parameter>arg_separator.output</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El separador usado en PHP para distinguir argumentos en las URLs generadas.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.arg-separator.input">
     <term>
      <parameter>arg_separator.input</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Lista de separadores empleados por PHP para convertir datos de URLs en variables.
      </para>
      <note>
       <para>
        Cada carácter de esta directiva es considerado un separador.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.variables-order">
     <term>
      <parameter>variables_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Establece el orden de interpretación de variables EGPCS (<literal>E</literal>ntorno,
       <literal>G</literal>et, <literal>P</literal>ost,
       <literal>C</literal>ookie, y <literal>S</literal>ervidor).
       Por ejemplo, si variables_order
       es <literal>"SP"</literal>, PHP creará las
       &link.superglobals; <varname>$_SERVER</varname> y
       <varname>$_POST</varname>, pero no creará
       <varname>$_ENV</varname>, <varname>$_GET</varname>, y
       <varname>$_COOKIE</varname>. Si se establece a "", las variables
       &link.superglobals; no estarán disponibles.
      </para>
      <para>
       Si la directiva obsoleta
       <link linkend="ini.register-globals">register_globals</link>
       está activada, entonces variables_order
       también configura el orden en que las variables <literal>ENV</literal>,
       <literal>GET</literal>, <literal>POST</literal>,
       <literal>COOKIE</literal> y <literal>SERVER</literal>
       son rellenadas en el ambito global. Por ejemplo, si variables_order
       está establecido a <literal>"EGPCS"</literal>, register_globals está activada,
       y <varname>$_GET['acción']</varname> y
       <varname>$_POST['acción']</varname> están establecidos, entonces
       <varname>$acción</varname> contendrá el valor de
       <varname>$_POST['acción']</varname> ya que <literal>P</literal> está
       después de <literal>G</literal> en el ejemplo que se muestra.
      </para>
      <warning>
       <para>
        En ambas SAPIs, CGI y FastCGI,
        <varname>$_SERVER</varname> también
        es rellenada con los valores de entorno; <literal>S</literal>
        siempre es equivalente a <literal>ES</literal> independientemente de la
        posición de <literal>E</literal> en esta directiva.
       </para>
      </warning>
      <note>
       <para>
        El contenido y el orden de
        <varname>$_REQUEST</varname> también se ve
        afectado por esta directiva. 
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.request-order">
     <term>
      <parameter>request_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Esta directiva describe el orden en que PHP registra las variables GET, POST
       y Cookie en el array _REQUEST. El registro se hace de izquierda a derecha;
       los nuevos valores reemplazan los valores más antiguos.
      </para>
      <para>
       Si esta directiva no está definida, <link
       linkend="ini.variables-order">variables_order</link> se usa para
       el contenido de <varname>$_REQUEST</varname>.
      </para>
      <para>
       Observe que la distribución predeterminada de los ficheros <filename>php.ini</filename>
       no contienen <literal>'C'</literal> para cookies, por motivos de seguridad.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-globals-jit">
     <term>
      <parameter>auto_globals_jit</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Cuando está activada, las variables SERVER y EVN son creadas la primera vez que
       se necesitan ("Just In Time") en lugar de hacerlo cuando el script se inicia. Si
       estas variables no son usadas en un script, el tener esta directiva activada
       resultará en una mejora del rendimiento.
      </para>
      <para>
       Las directivas PHP
       <link linkend="ini.register-globals">register_globals</link>,
       <link linkend="ini.register-long-arrays">register_long_arrays</link>,
       y <link linkend="ini.register-argc-argv">register_argc_argv</link>
       deben estar desactivadas para que esta directiva tenga efecto. Desde
       PHP 5.1.3 no es necesario que esté desactivada <link
       linkend="ini.register-argc-argv">register_argc_argv</link>.
      </para>
      <warning>
       <para>
        El uso de las variables SERVER y ENV se comprueba durante el tiempo de compilación,
        por lo que utilizarlas a través de, por ejemplo, <link
        linkend="language.variables.variable">variables variables</link> no
        causará su inicialización.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-globals">
     <term>
      <parameter>register_globals</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Si registrar o no las variables EGPCS (Entorno, GET,
       POST, Cookie, Servidor) como variables globales.
      </para>
      <para>
       A partir de <link xlink:href="&url.php.release4.2.0;">PHP 4.2.0</link>,
       el valor predeterminado de esta directiva es <emphasis>off</emphasis>.
      </para>
      <para>
       Para información relacionada,
       por favor lea el capítulo de seguridad
       <link linkend="security.globals">Utilizar register_globals</link>.
      </para>
      <para>
       Por favor, observe que <systemitem role="directive">register_globals</systemitem>
       no puede ser establecida en tiempo de ejecución (<function>ini_set</function>).
       Aún así, puede usar &htaccess; si el servidor lo permite, tal como
       se muestra abajo. Un ejemplo de una entrada de &htaccess;:
       <userinput>php_flag register_globals off</userinput>.
      </para>
      <note>
       <para>
        <systemitem role="directive">register_globals</systemitem>
        se ve afectada por la directiva
        <link linkend="ini.variables-order">variables_order</link>.
       </para>
      </note>
      &warn.deprecated.feature-5-3-0.removed-6-0-0;
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-argc-argv">
     <term>
      <parameter>register_argc_argv</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Indica a PHP si debe declarar las variables argv y argc 
       (que pueden que contengan la información de GET).
      </simpara>
      <simpara>
       Véase también <link linkend="features.commandline">la línea de comandos</link>.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-long-arrays">
     <term>
      <parameter>register_long_arrays</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Indica a PHP si registrar o no las obsoletas <link
       linkend="language.variables.predefined">variables
       predefinidas</link> del tipo <varname>$HTTP_*_VARS</varname>.
       Cuando esté activada (predeterminado), las variables largas predefinidas
       de PHP, como <varname>$HTTP_GET_VARS</varname>, estarán definidas.
       Si no se utilizan, se recomienda desactivarlas
       por razones de rendimiento. En su lugar, use los arrays superglobales,
       como <varname>$_GET</varname>.
      </simpara>
      <simpara>
       Esta directiva empezó a estar disponible en PHP 5.0.0.
      </simpara>
      &warn.deprecated.feature-5-3-0.removed-6-0-0;
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.enable-post-data-reading">
     <term>
      <parameter>enable_post_data_reading</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Al deshabilitar esta opción hace que <varname>$_POST</varname> y
       <varname>$_FILES</varname> <emphasis>no</emphasis> sean rellenados.
       La única manera de leer datos de POST será a través de la
       envoltura de flujo <link linkend="wrappers.php">php://input</link>.
       Esto puede ser útil en peticiones de proxys o para procesar
       los datos de POST de una manera efeciente en cuestión de memoria.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.post-max-size">
     <term>
      <parameter>post_max_size</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       Define el tamaño máximo de datos de POST permitidos. Esta opción también afecta
       a la subida de ficheros. Para subir ficheros grandes, este valor debe ser mayor 
       que <link linkend="ini.upload-max-filesize">upload_max_filesize</link>.
      </simpara>
      <simpara>
       Por norma general,
       <link linkend="ini.memory-limit">memory_limit</link> debe ser
       mayor que <parameter>post_max_size</parameter>.
      </simpara>
      
      &ini.shorthandbytes;
      
      <simpara>
       Si el tamaño de los datos de POST es mayor que post_max_size, las
       <link linkend="language.variables.superglobals">superglobales</link>
       <varname>$_POST</varname> y <varname>$_FILES</varname> estarán vacías.
       Esto se puede rastrear de varias maneras, por ejemplo, pasando la variable
       <varname>$_GET</varname> al script que procesa los datos,
       esto es, <literal>&lt;form action="edit.php?procesado=1"&gt;</literal>,
       y luego comprobar si la variable <varname>$_GET['procesado']</varname> existe.
      </simpara>
      <para>
       <note>
        <para>
         PHP acepta abreviaturas para valores de byte, incluyendo K (kilo), M (mega)
         y G (giga). PHP hará las conversión automaticamente si utiliza cualesquiera
         de estas abreviaturas. Tenga cuidado de no execeder el límite de los enteros
         con signo de 32 bits (si está usando veriones de 32 bits), puesto que hará que
         el script falle.
        </para>
       </note>
      </para>
      <para>
       <table>
        <title>Registro de cambios para <literal>post_max_size</literal></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Version;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>5.3.4</entry>
           <entry>
            <parameter>post_max_size</parameter> = 0 no deshabilitará el límite cuando el tipo
            de contenido sea application/x-www-form-urlencoded o no esté registrado en PHP.
           </entry>
          </row>
          <row>
           <entry>5.3.2 , 5.2.12</entry>
           <entry>
            Permitir un tamaño de post ilimitado estableciendo <parameter>post_max_size</parameter> a 0.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-prepend-file">
     <term>
      <parameter>auto_prepend_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Especifica el nombre del fichero que será analizado automáticamente
       antes del fichero principal. El fichero es incluido como si fuera
       llamado con la función <function>require</function>, por lo que se usa
       <link linkend="ini.include-path">include_path</link>.</para>
      <para>
       El valor especial <literal>none</literal>
       desactiva esta directiva.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-append-file">
     <term>
      <parameter>auto_append_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Especifica el nombre del fichero que será analizado automaticamente
       después del fichero principal. El fichero es incluido como si fuera
       llamado con la función <function>require</function>, por que se utiliza
       <link linkend="ini.include-path">include_path</link>.</para>
      <para>
       El valor especial <literal>none</literal>
       desactiva el esta directiva.
       <note>
        <simpara>
         Si el script finaliza con <function>exit</function>,
         está funcionalidad <emphasis>no</emphasis> será llevada a cabo.</simpara>
       </note>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.default-mimetype">
     <term>
      <parameter>default_mimetype</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Por defecto, PHP generará un tipo de medio empleando la cabecera Content-Type.
       Para deshabilitarlo, simplemente se ha de establecer a vacía.
      </para>
      <para>
       El tipo de medio predeterminado interno de PHP está establecido a text/html.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.default-charset">
     <term>
      <parameter>default_charset</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       A partir de PHP 5.6, "UTF-8" es el valor predeterminado empleándose su valor
       como la codificación de caracterse predeterminada para
       <function>htmlentities</function>,
       <function>html_entity_decode</function> y
       <function>htmlspecialchars</function> si se
       omite el parámetro <parameter>encoding</parameter>. El valor de
       <parameter>default_charset</parameter> también se empleará para establecer el
       conjunto de caracteres predeterminado para las funciones de
       <link linkend="book.iconv">iconv</link> si las opciones de configuración
       <link linkend="ini.iconv.input-encoding"><parameter>iconv.input_encoding</parameter></link>,
       <link linkend="ini.iconv.output-encoding"><parameter>iconv.output_encoding</parameter></link> y
       <link linkend="ini.iconv.internal-encoding"><parameter>iconv.internal_encoding</parameter></link>
       están desestablecidas, y para
       las funciones de <link linkend="book.mbstring">mbstring</link> si las opciones de configuración
       <link linkend="ini.mbstring.http-input"><parameter>mbstring.http_input</parameter></link>
       <link linkend="ini.mbstring.http-output"><parameter>mbstring.http_output</parameter></link>
       <link linkend="ini.mbstring.internal-encoding"><parameter>mbstring.internal_encoding</parameter></link>
       están desestablecidas.
      </para>
      <para>
       Todas las versiones de PHP utilizarán este valor como el conjunto de caracteres dentro de la
       cabecera Content-Type predeterminada enviada por PHP si la cabecera no ha sido sobrescrita
       por una llamada a <function>header</function>.
      </para>
      <para>
       No se recomienda establecer <parameter>default_charset</parameter>
       a un valor vacío.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.input-encoding">
     <term>
      <parameter>input_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Disponible desde PHP 5.6.0. Este ajuste se usa para módulos multibyte
       comos mbstring e iconv. El valor predeterminado es vacío.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.output-encoding">
     <term>
      <parameter>output_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Disponible desde PHP 5.6.0. Este ajuste se usa para módulos multibyte
       comos mbstring e iconv. El valor predeterminado es vacío.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.internal-encoding">
     <term>
      <parameter>internal_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Disponible desde PHP 5.6.0. Este ajuste se usa para módulos multibyte
       comos mbstring e iconv. El valor predeterminado es vacío. Si está vacío,
       se usará <link linkend="ini.default-charset">default_charset</link>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.always-populate-raw-post-data">
     <term>
      <parameter>always_populate_raw_post_data</parameter>
      <type>mixed</type>
     </term>
     <listitem>
      &warn.deprecated.feature-5-6-0.removed-7-0-0;
      <para>
       Si se establece a &true;, PHP rellenará siempre
       <varname>$HTTP_RAW_POST_DATA</varname> que contiene los datos POST sin tratar.
       De lo contrario, la variable se rellena solamente cuando el tipo MIME de los
       datos es irreconocible.
      </para>
      <para>
       El método preferido para acceder a los datos POST sin tratar es
       <link linkend="wrappers.php">php://input</link>, ya que
       <varname>$HTTP_RAW_POST_DATA</varname> está obsoleta a partir de
       PHP 5.6.0. Al establecer <parameter>always_populate_raw_post_data</parameter>
       a <literal>-1</literal> se optará por el nuevo comportamiento que será
       implementado en una futura versión de, donde
       <varname>$HTTP_RAW_POST_DATA</varname> nunca está definida.
      </para>
      <para>
       Independientemente del ajuste, <varname>$HTTP_RAW_POST_DATA</varname> no
       está disponible con <literal>enctype="multipart/form-data"</literal>.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
  <para>
   Véase también: <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
   <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>,
   y
   <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
  </para>
 </section>
 
 <section xml:id="ini.sect.path-directory">
  <title>Rutas y directorios</title>
  <para>
   <table>
    <title>Opciones de configuración de rutas y directorios</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.include-path">include_path</link></entry>
       <entry>".;/path/to/php/pear"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.open-basedir">open_basedir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>PHP_INI_SYSTEM en PHP &lt; 5.3.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.doc-root">doc_root</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.user-dir">user_dir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension-dir">extension_dir</link></entry>
       <entry>"/path/to/php"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension">extension</link></entry>
       <entry>NULL</entry>
       <entry>Solamente en &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension">zend_extension</link></entry>
       <entry>NULL</entry>
       <entry>Solamente en &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-debug">zend_extension_debug</link></entry>
       <entry>NULL</entry>
       <entry>Solamente en &php.ini;</entry>
       <entry>Disponible antes de PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-debug-ts">zend_extension_debug_ts</link></entry>
       <entry>NULL</entry>
       <entry>Solamente en &php.ini;</entry>
       <entry>Disponible antes de PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-ts">zend_extension_ts</link></entry>
       <entry>NULL</entry>
       <entry>Solamente en &php.ini;</entry>
       <entry>Disponible antes de PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.check-shebang-line">cgi.check_shebang_line</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.2.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.discard-path">cgi.discard_path</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL antes de PHP 5.2.1.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.force-redirect">cgi.force_redirect</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL antes de PHP 5.2.1.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.nph">cgi.nph</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL antes de PHP 5.2.1.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.impersonate">fastcgi.impersonate</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL antes de PHP 5.2.1.</entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.logging">fastcgi.logging</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL antes de PHP 5.2.1.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.include-path">
     <term>
      <parameter>include_path</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Especifica la lista de directorios donde las funciones
       <function>require</function>, <function>include</function>,
       <function>fopen</function>, <function>file</function>,
       <function>readfile</function> y <function>file_get_contents</function>
       buscarán ficheros. El formato es como la variable de entorno
       <envar>PATH</envar> del sistema: una lista de directorios
       separados por dos puntos en Unix o separados por punto y coma en Windows.
      </para>
      <para>
       PHP considera cada entrada de la ruta de inclusión por separado cuando está buscando
       ficheros a incluir. Primero buscará en la primera ruta, y si no lo encuentra ahí,
       buscará en la siguiente, hasta que encuentre el fichero incluido, o
       devuelva una
       <link linkend="errorfunc.constants.errorlevels.e-warning">advertencia</link>
       o un <link linkend="errorfunc.constants.errorlevels.e-error">error</link>.
       Se puede modificar o establecer una ruta de incluición propia en tiempo de ejecucción usando       
       <function>set_include_path</function>.
      </para>
      <para>
       <example>
        <title>include_path en Unix</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       <example>
        <title>include_path en Windows</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       El uso de <literal>.</literal> en la ruta de inclusión permite el uso de
       inclusiones relativas, ya que significa el directorio actual. Sin embargo,
       es más eficiente usar explícitamente
       <literal>include './fichero'</literal> que hacer que PHP compruebe siempre
       el directorio actual para cada inclusión.
      </para>
      <note>
       <para>
        Las variables <literal>ENV</literal> también son accesibles en ficheros .ini.
        Por lo tanto, es posible hacer referencia al directorio raíz utilizando
        <literal>${LOGIN}</literal> y <literal>${USER}</literal>.
       </para>
       <para>
        Las variables de entorno podrían variar entre APIs de servidores, ya que sus entornos
        pueden ser diferentes.
       </para>       
      </note>
      <para>
       <example>
        <title>include_path en Unix usando la variable de entorno ${USER}</title>
        <programlisting role="php.ini">
<![CDATA[
include_path = ".:${USER}/pear/php"
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.open-basedir">
     <term>
      <parameter>open_basedir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El límite de los ficheros a los que PHP puede acceder en el árbol
       de directorios especificado, incluyendo el fichero en sí. Esta directiva
       <emphasis>NO</emphasis> se ve afectada si el Modo Seguro está activado
       (On) o desactivado (Off).
      </para>
      <para>
       Cuando un script intenta acceder al sistema de ficheros, por ejemplo, usando
       <function>include</function>, o <function>fopen</function>, se comprueba la
       ubicación del fichero.
       Cuando el fichero está fuera del árbol de directorio especificado, PHP rechazará acceder a él.
       Todos los enlaces simbólicos se resuelven, por lo que no es posible evitar esta restricción
       con un enlace simbólico. Si el fichero no existe, el enlace simbólico no podría ser
       resuelto, por lo que el nombre de fichero se compara con (uno resuelto) <option>open_basedir</option>.
      </para>
      
      <para>
       <option>open_basedir</option> puede afectar no sólo a las funciones del sistema de ficheros; por ejemplo,
       si <literal>MySQL</literal> está configurado para usar los controladores de <literal>mysqlnd</literal>,
       <literal>LOAD DATA INFILE</literal> se verá afectado por <option>open_basedir</option>.
       Mucha de la funcionalidad ampliada de PHP usa <literal>open_basedir</literal> de esta manera.
      </para>
      <para>
       El valor especial <systemitem class="filesystem">.</systemitem>
       indica que el directorio de trabajo del script será usado como directorio base.
       Esto es, sin embargo, un poco peligroso, ya que el directorio de trabajo
       del script puede ser fácilmente cambiado con la función <function>chdir</function>.
      </para>
      <para>
       En <filename>httpd.conf</filename>, se puede desactivar <option>open_basedir</option>
       (p.ej. para algunos servidores virtuales)
       <link linkend="configuration.changes.apache">de la misma manera</link> que
       cualquier otra directiva de configuración con "<literal>php_admin_value open_basedir
       none</literal>".
      </para>
      <para>
       Bajo Windows, los directorios se han de separar con punto y coma. En
       cualquier otro sistema, se ha de hacer con dos puntos. Como módulo de
       Apache, las rutas de <option>open_basedir</option> de los directorios superiores
       se heredan automáticamente.
      </para>
      <para>
       La restricción especificada en <option>open_basedir</option> es un
       nombre de directorio desde PHP 5.2.16 y 5.3.4. Las versiones anteriores lo usaban
       como un prefijo. Esto quiere decir que "<literal>open_basedir
       = /dir/incl</literal>" también tiene acceso a "<literal>/dir/include</literal>" y
       "<literal>/dir/incls</literal>, si existen. Cuando se quiera restringir el acceso
       solamente a un directorio específico, se ha de finalizar con una barra. Por ejemplo:
       <literal>open_basedir = /dir/incl/</literal>
      </para>
      <para>
       El valor predeterminado permite abrir cualquier fichero.
      </para>
      <note>
       <para>
        A partir de PHP 5.3.0, open_basedir puede usarse en tiempo de ejecución. Esto
        significa que si open_basedir está establecido como <literal>/www/</literal>
        en &php.ini;, un script puede reforzar la configuración a
        <literal>/www/tmp/</literal> en tiempo de ejecución con
        <function>ini_set</function>. Cuando se enumeran varios directorios, se puede
        usar la constante <constant>PATH_SEPARATOR</constant> como separador,
        independientemente del sistema operativo.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.doc-root">
     <term>
      <parameter>doc_root</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El "directorio raíz" de PHP en el servidor. Solamente usada si
       no está vacía. Si PHP está configurado con &safemode;, ningún otro
       fichero fuera de este directorio será servido.
       Si PHP no se compiló con FORCE_REDIRECT, <emphasis>debería
       </emphasis> establecerse doc_root si se está usando PHP como CGI bajo
       cualquier tipo de servidor (que no sea IIS). La alternativa es usar
       la configuación de <link linkend="ini.cgi.force-redirect">
       cgi.force_redirect</link> de más abajo.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.user-dir">
     <term>
      <parameter>user_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El nombre base del directorio usado en un directorio principal de usuario para
       ficheros PHP, por ejemplo <filename class="directory">public_html
       </filename>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.extension-dir">
     <term>
      <parameter>extension_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       En qué directorio debería buscar PHP extensiones que se pueden cargar
       dinámicamente. Véase también: <link linkend="ini.enable-dl">enable_dl</link>,
       y <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.extension">
     <term>
      <parameter>extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Qué extensiones se cargarán dinámicamente cuando se inicie PHP.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension">
     <term>
      <parameter>zend_extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El nombre de la extesnión Zend cargable dinámicamente (por ejemplo
       <link linkend="book.apd">APD</link>) cuando se inicie PHP.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-debug">
     <term>
      <parameter>zend_extension_debug</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante de <link linkend="ini.zend-extension">zend_extension</link>
       para extensiones compiladas con información de depuración antes de PHP 5.3.0.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-debug-ts">
     <term>
      <parameter>zend_extension_debug_ts</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante de <link linkend="ini.zend-extension">zend_extension</link>
       para extensiones compiladas con información de depuración y subprocesamiento
       seguro antes de PHP 5.3.0.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-ts">
     <term>
      <parameter>zend_extension_ts</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante de <link linkend="ini.zend-extension">zend_extension</link>
       para extensiones compiladas con subprocesamiento seguro antes de PHP 5.3.0.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.check-shebang-line">
     <term>
      <parameter>cgi.check_shebang_line</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Controla si PHP en modo <acronym>CGI</acronym> comprueba líneas que empiezan
       por <literal>#!</literal> (shebang) en el inicio del script que se está ejecutando.
       Esta línea podría ser necesaria si el script admite su ejecución tanto como un script
       independiente como mediante el modo <acronym>CGI</acronym> de PHP.
       El modo <acronym>CGI</acronym> de PHP omite esta línea e ignora su contenido si
       esta directiva si está activada.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.discard-path">
     <term>
      <parameter>cgi.discard_path</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Si está habilitado, el binario de CGI de PHP puede ser colocado sin riesgo fuera
       del árbol web, no siendo posible así eludir la seguridad de .htaccess.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.fix-pathinfo">
     <term>
      <parameter>cgi.fix_pathinfo</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Proporciona soporte <emphasis>real</emphasis> de <literal>PATH_INFO</literal> /
       <literal>PATH_TRANSLATED</literal> para <acronym>CGI</acronym>.
       El comportamiento anterior de PHP era establecer <literal>PATH_TRANSLATED</literal>
       a <literal>SCRIPT_FILENAME</literal>, por lo que no comprendía lo que era
       <literal>PATH_INFO</literal>. Para más información sobre
       <literal>PATH_INFO</literal>, véanse las especificaciones de <acronym>CGI</acronym>.
       Si se establece el valor de esta directiva a <literal>1</literal>, el modo
       <acronym>CGI</acronym> de PHP corregirá sus rutas conforme a las especificaciones. Si
       se establece a cero, funcionará como anteriormente. Esta directiva está activada
       de forma predeterminada. Debería corregir sus scripts para que utilicen
       <literal>SCRIPT_FILENAME</literal> en lugar de
       <literal>PATH_TRANSLATED</literal>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.force-redirect">
     <term>
      <parameter>cgi.force_redirect</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       cgi.force_redirect es necesario para proporcionar seguridad al ejecutar PHP como
       <acronym>CGI</acronym> bajo la mayoría de servidores web. Si no se define, PHP
       activa esta directiva de forma predeterminada. Puede desactivarla
       <emphasis>bajo su propia responsabilidad</emphasis>.
      </para>
      <note>
       <para>
        Para usuarios de Windows: Al usar IIS, esta ocpción <emphasis>debe</emphasis>
        estar desactivada. Para OmniHTTPD o Xitami se aplica lo mismo.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.nph">
     <term>
      <parameter>cgi.nph</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Si cgi.nph está habilitado, forzará a que cgi siempre envíe Status: 200 en
       cada petidión.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.redirect-status-env">
     <term>
      <parameter>cgi.redirect_status_env</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Si cgi.force_redirect está activada, y no se están usando servidores
       web Apache o Netscape (iPlanet), <emphasis>podría</emphasis> ser necesario
       establecer el nombre de una variable de entorno que PHP buscará para saber
       que se puede continuar con la ejecucción.
      </para>
      <note>
       <para>
        Establecer esta variable <emphasis>podría</emphasis> causar problemas de
        seguridad, <emphasis>no la cambie a no ser que sepa lo que está haciendo</emphasis>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.rfc2616-headers">
     <term>
      <parameter>cgi.rfc2616_headers</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Le indica a PHP qué tipo de encabezados usar cuando envía el código de respuesta
       HTTP. Si está establecida a 0, PHP envía una cabecera "Status:" <link xlink:href="&url.rfc;3875">RFC 3875</link>
       la cual es admitida por Apache y otros servidores web. Cuando esta opción
       está establecida a 1, PHP enviará encabezados compatibles con la
       <link xlink:href="&url.rfc;2616">RFC 2616</link>.
      </para>
      <para>
       Si esta opción está habiltada, y está ejecutándose PHP en un entorno CGI (p.ej. PHP-FPM)
       no se deberían usar las cabeceras de respuesta de estado HTTP estilo estándar RFC 2616, se debería
       usar en su lugar sus equivalentes RFC 3875, p.ej., en lugar de header("HTTP/1.0 404 Not found"); 
       se debería usar header("Status: 404 Not Found");
      </para>
      <para>
       Déjelo establecido a 0 a menos que sepa lo que está haciendo.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.fastcgi.impersonate">
     <term>
      <parameter>fastcgi.impersonate</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       FastCGI bajo IIS (en SO basados en WINNT) admite la capacidad de imitar
       tokens de seguridad del cliente que llama. Esto permite a IIS definir
       el contexto de seguridad en el que la petición se ejecuta. mod_fastgci bajo Apache
       actualmente no admite esta característica (17/03/2002).
       Establézcalo a 1 si usa IIS. El valor predeterminado es cero.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.fastcgi.logging">
     <term>
      <parameter>fastcgi.logging</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Activa la identificación de la SAPI cuando se usa FastCGI. El valor predeterminado
       es habilitar la identificación.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.file-uploads">
  <title>Subida de ficheros</title>
  <para>
   <table>
    <title>Opciones de configuración de subida de ficheros</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.file-uploads">file_uploads</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL en PHP &lt;= 4.2.3. Disponible desde PHP 4.0.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-tmp-dir">upload_tmp_dir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
       <entry>64</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Disponible desde PHP 5.3.9.</entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
       <entry>1000</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Disponible desde PHP 5.3.9.</entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-max-filesize">upload_max_filesize</link></entry>
       <entry>"2M"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL en PHP &lt;= 4.2.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.max-file-uploads">max_file_uploads</link></entry>
       <entry>20</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Disponible desde PHP 5.2.12.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.file-uploads">
     <term>
      <parameter>file_uploads</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Si permitir o no la <link linkend="features.file-upload">subida de ficheros</link>
       mediante HTTP. Véanse también las directivas
       <link linkend="ini.upload-max-filesize">upload_max_filesize</link>,
       <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link>, y
       <link linkend="ini.post-max-size">post_max_size</link>.
      </para>   
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.upload-tmp-dir">
     <term>
      <parameter>upload_tmp_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       El directorio temporal usado para almacenar ficheros durante el proceso de subida.
       Es necesario tener permisos de escritura para el usuario que está ejecutando PHP.
       Si no está especificado, PHP usará el predeterminado del sistema.
      </para>
      <para>
       Si el directorio especificado no tiene permisos de escritura, PHP recurrirá
       al directorio temporal predeterminado del sistema. Si la directiva 
       <link linkend="ini.open-basedir">open_basedir</link> está activada, al
       directorio predeterminado del sistema se le ha de permitir la subida de ficheros
       para que funcione.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.upload-max-filesize">
     <term>
      <parameter>upload_max_filesize</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       El tamaño máximo de un fichero subido.
      </para>
      
      &ini.shorthandbytes;
      
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.max-file-uploads">
     <term>
      <parameter>max_file_uploads</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       El número máximo de ficheros a subir permitidos de forma simultánea.
       A partir de PHP 5.3.4, los campos de subida de ficheros dejados en blanco
       en el momento del envío no cuentan en este límite.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.sql-general">
  <title>Configuración de SQL en general</title>
  <para>
   <table>
    <title>Opciones de configuración de SQL en general</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.sql.safe-mode">sql.safe_mode</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.sql.safe-mode">
     <term>
      <parameter>sql.safe_mode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Si está activado, las funciones de conexión a bases de datos que especifiquen valores predeterminados
       emplearán dichos valores en lugar cualquier argumento proporcionado por el usuario. Para los detalles
       de los valores predeterminados, veáse la documentación de las funciones de conexión
       relevantes.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.windows">
  <title>Específico de Windows</title>
  <para>
   <table>
    <title>Opciones de configuración específicas de Windows</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.windows-show-crt-warning">windows.show_crt_warning</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Disponibe desde PHP 5.4.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.windows-show-crt-warning">
     <term>
      <parameter>windows_show_crt_warning</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Esta directiva muestra las advertencias CRT de Windows cuando está establecida.
       Estas advertencias eran mostradas de forma predeterminada hasta PHP 5.4.0.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
