<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 348038 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration74.deprecated">
 <title>Características obsoletas</title>

 <sect2 xml:id="migration74.deprecated.core">
  <title>Núcleo PHP</title>

  <sect3 xml:id="migration74.deprecated.core.nested-ternary">
   <title>Operadores ternarios anidados sin paréntesis explícitos</title>

   <para>
    Las operaciones ternarias anidadas deben utilizar explícitamente paréntesis
    para dictar el orden de las operaciones.  Anteriormente, cuando se usaba
    sin paréntesis, la asociatividad izquierda no resultaría
    en el comportamiento esperado en la mayoría de los casos.
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
1 ? 2 : 3 ? 4 : 5;   // obsoleto
(1 ? 2 : 3) ? 4 : 5; // ok
1 ? 2 : (3 ? 4 : 5); // ok
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-string-access-curly-brace">
   <title>Acceso al desplazamiento de Array y string usando llaves</title>

   <para>
    La sintaxis de acceso de desplazamiento en array y string con llaves es 
    obsoleto. Use <literal>$var[$idx]</literal> en vez de
    <literal>$var{$idx}</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.real">
   <title>La llamada (real) y la función <function>is_real</function></title>

   <para>
    La llamada <literal>(real)</literal> es obsoleta,
    use <literal>(float)</literal> en su lugar.
   </para>
   <para>
    La función <function>is_real</function> es también obsoleta,
    use <function>is_float</function> en su lugar.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.unbind-this">
   <title>Desencadenando <literal>$this</literal> cuando <literal>$this</literal> es usado</title>

   <para>
    Desencadenando <literal>$this</literal> de un cierre no estático
    que use <literal>$this</literal> es obsoleto.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.parent">
   <title>palabra clave <literal>parent</literal> sin clase de padre</title>

   <para>
    Usar <literal>parent</literal> dentro de una clase sin un padre
    es obsoleto, y lanzará un error de compilación en el futuro.
    Actualmente sólo se generará un error si/cuando el padre es
    accedido en tiempo de ejecución.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.allow-url-include">
   <title>Opción INI allow_url_include</title>

   <para>
    La directiva ini <link linkend="ini.allow-url-include">allow_url_include</link>
    es obsoleta. Habilitar esta generará
    un aviso de depreciación en el arranque.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.invalid-base-characters">
   <title>Caracteres inválidos en las funciones de conversión de base</title>

   <para>
    Pasar caracteres inválidos a <function>base_convert</function>,
    <function>bindec</function>, <function>octdec</function> y
    <function>hexdec</function> generará ahora un aviso de depreciación.
    El resultado se seguirá calculando como si los caracteres inválidos no existieran.
    Liderando y siguiendo el espacio blanco, así como prefijos de tipo 0x (dependiendo de la base)
    siguen estando permitidos.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.array-key-exists-objects">
   <title>Usar <function>array_key_exists</function> en objetos</title>

   <para>
    Usar <function>array_key_exists</function> en objetos es obsoleto.
    En lugar de eso, debe usar <function>isset</function> o <function>property_exists</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.magic-quotes-functions">
   <title>Funciones de comillas mágicas</title>

   <para>
    Las funciones <function>get_magic_quotes_gpc</function> y <function>get_magic_quotes_runtime</function>
    son obsoletas. Estas siempre devolverán &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.hebrevc">
   <title>función <function>hebrevc</function></title>

   <para>
    La función <function>hebrevc</function> es obsoleta.
    Esta puede ser reemplazada con <literal>nl2br(hebrev($str))</literal> o,
    preferiblemente, el uso del soporte RTL de Unicode.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.convert-cyr-string">
   <title>función <function>convert_cyr_string</function></title>

   <para>
    La función <function>convert_cyr_string</function> es obsoleta.
    Esta puede ser reemplazada con <function>mb_convert_string</function>,
    <function>iconv</function> o <classname>UConverter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.money-format">
   <title>función <function>money_format</function></title>

   <para>
    La función <function>money_format</function> es obsoleta.
    Esta puede ser reemplazada con la funcionalidad intl <classname>NumberFormatter</classname>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.ezmlm-hash">
   <title>función <function>ezmlm_hash</function></title>

   <para>
    La función <function>ezmlm_hash</function> es obsoleta.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.restore-include-path">
   <title>función <function>restore_include_path</function></title>

   <para>
    La función <function>restore_include_path</function> es obsoleta.
    Esta puede ser reemplazada con <literal>ini_restore('include_path')</literal>.
   </para>
  </sect3>

  <sect3 xml:id="migration74.deprecated.core.implode-reverse-parameters">
   <title>Implode con el orden de los parámetros históricos</title>

   <para>
    Pasar parámetros a <function>implode</function> en orden inverso
    es obsoleto, use <literal>implode($glue, $parts)</literal>
    en vez de <literal>implode($parts, $glue)</literal>.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration74.deprecated.com">
  <title>COM</title>

  <para>
   La importación de bibliotecas de tipos con registro constante que no distingue entre mayúsculas y
   y minúsculas es obsoleto.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.filter">
  <title>Filter</title>

  <para>
   <constant>FILTER_SANITIZE_MAGIC_QUOTES</constant> es obsoleto,
   use <constant>FILTER_SANITIZE_ADD_SLASHES</constant> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.mbstring">
  <title>Multibyte String</title>

  <para>
   Pasar un patrón sin string a <function>mb_ereg_replace</function>
   es obsoleto. Actualmente, los patrones sin string se interpretan como
   puntos de código ASCII. En PHP 8, el patrón será interpretado como 
   un string en su lugar.
  </para>
  <para>
   Pasar la codificación como tercer parámetro a <function>mb_strrpos</function>
   es obsoleto. En su lugar, pasar un offset de 0, y codificar como cuarto parámetro.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.ldap">
  <title>Protocolo ligero de acceso a directorios</title>

  <para>
   <function>ldap_control_paged_result_response</function> y
   <function>ldap_control_paged_result</function> son obsoletas.
   Los controles de paginación pueden ser enviados junto con
   <function>ldap_search</function> en su lugar.
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.reflection">
  <title>Reflection</title>

  <para>
   Llamar a <methodname>ReflectionType::__toString</methodname> ahora generará
   un aviso de depreciación. Este método ha sido desaprobado en favor de
   <methodname>ReflectionNamedType::getName</methodname> en la documentación
   desde PHP 7.1, pero no lanzó un aviso de depreciación por razones técnicas.
  </para>
  <para>
   Los métodos <literal>export()</literal> en todas las clases <classname>Reflection</classname>
   están obsoletos. Contruir un objeto <classname>Reflection</classname> y
   convertir este a string en su lugar:
   <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
// ReflectionClass::export(Foo::class, false) is:
echo new ReflectionClass(Foo::class), "\n";

// $str = ReflectionClass::export(Foo::class, true) is:
$str = (string) new ReflectionClass(Foo::class);
?>
]]>
     </programlisting>
    </informalexample>
  </para>
 </sect2>

 <sect2 xml:id="migration74.deprecated.socket">
  <title>Socket</title>

  <para>
   Las flags <constant>AI_IDN_ALLOW_UNASSIGNED</constant> y
   <constant>AI_IDN_USE_STD3_ASCII_RULES</constant> para
   <function>socket_addrinfo_lookup</function> sob obsoletas,
   debido a una depreciación ascendente en el glibc.
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
