<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 346396 Maintainer: andresdzphp Status: ready -->
<!-- Reviewed: no -->

<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nuevas características</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>Sintaxis Heredoc y Nowdoc más flexible</title>

   <para>
    Ya no es necesario que el marcador de cierre de los string de documento vaya seguido de un
    punto y coma o línea nueva. Además, el marcador de cierre puede ser sangrado, en
    en cuyo caso la indentación se quitará de todas las líneas del string de documento.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>La Desestructuración de Arrays soporta las Asignaciones de Referencia</title>

   <para>
    La desestructuración de arrays ahora soporta asignaciones de referencia utilizando la sintaxis
    <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal>. Lo mismo se soporta también
    para <function>list</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>Operador Instanceof acepta literales</title>

   <para>
    <literal>instanceof</literal> ahora permite los literales como el primer operando, en
    en cuyo caso el resultado es siempre &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>Excepción del error de compilación en lugar de algunos errores de compilación</title>

   <para>
    Una nueva excepción <classname>CompileError</classname> ha sido añadida, de
    la cual hereda <classname>ParseError</classname>. Un pequeño número de
    errores de compilación lanzarán ahora <classname>CompileError</classname>
    en vez de generar un error fatal. Actualmente esto sólo afecta a los errores
    de compilación que pueden ser lanzados por <function>token_get_all</function> en
    modo <constant>TOKEN_PARSE</constant>, pero más errores pueden ser convertidos
    en el futuro.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>Se permite el uso de comas en las llamadas</title>

   <para>
    Ahora se permiten las comas en las llamadas a funciones y métodos.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Soporte de Argon2id</title>

   <para>
    El argumento de configuración<option role="configure">--with-password-argon2[=dir]</option> 
    ahora proporciona soporte tanto para los hashes de Argon2i como de Argon2id en las fuynciones 
    <function>password_hash</function>, <function>password_verify</function>,
    <function>password_get_info</function>, y
    <function>password_needs_rehash</function>. Las contraseñas pueden ser descifradas
    y verificadas usando la constante <constant>PASSWORD_ARGON2ID</constant>.
    El soporte tanto para Argon2i como para Argon2id en las funciones <function>password_*</function>
    ahora requiere que PHP esté enlazado con la biblioteca de referencia libargon2 ≥
    20161029.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>FastCGI Process Manager</title>

  <para>
   Se han añadido nuevas opciones para personalizar el registro de FPM:
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       Esta opción global puede utilizarse para establecer el límite de registro para la
       línea que permite registrar mensajes de más de 1024 caracteres sin
       envoltura. También arregla varios problemas de envoltura.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       Esta opción global permite un registro experimental sin buffer extra.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       Esta opción de pool permite deshabilitar la decoración de salida para la salida de los trabajadores
       cuando se habilita <literal>catch_workers_output</literal>.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>Funciones matemáticas de BC</title>

  <para>
   <function>bcscale</function> ahora también puede ser usado como getter para 
   recuperar la escala actual en uso.
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>Protocolo ligero de acceso a directorios</title>

  <para>
   El soporte completo para los controles de LDAP se ha añadido a las funciones de consulta <link
   linkend="book.ldap">LDAP</link> y
   <itemizedlist>
    <listitem>
     <simpara>
      Un parámetro <literal>$serverctrls</literal> para enviar controles al 
      servidor en <function>ldap_add</function>,
      <function>ldap_mod_replace</function>, <function>ldap_mod_add</function>,
      <function>ldap_mod_del</function>, <function>ldap_rename</function>,
      <function>ldap_compare</function>, <function>ldap_delete</function>,
      <function>ldap_modify_batch</function>,
      <function>ldap_search</function>, <function>ldap_list</function> y
      <function>ldap_read</function> ha sido añadido.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      El parámetro de salida <literal>$serverctrls</literal> para obtener los controles del servidor en
      <function>ldap_parse_result</function> ha sido añadido.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Soporte para <constant>LDAP_OPT_SERVER_CONTROLS</constant> y
      <constant>LDAP_OPT_CLIENT_CONTROLS</constant> en
      <function>ldap_get_option</function> y
      <function>ldap_set_option</function> ha sido arreglado.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>Funciones de string multibyte</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>Soporte completo de mapeo y plegado de casos</title>

   <para>
    Se ha añadido soporte al mapeo completo y el plegado de casos. A diferencia del
    mapeo simple, el mapeo completo de los casos puede cambiar la longitud del string. Por
    ejemplo:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Produces STRAßE en PHP 7.2
// Produces STRASSE en PHP 7.3
?>
]]>
     </programlisting>
    </informalexample>
    Los diferentes modos de mapeo y plegado están disponibles a través de
    <function>mb_convert_case</function>:
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant> (usado por <function>mb_strtolower</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant> (usado por <function>mb_strtoupper</function>)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant> (utilizado en operaciones que no tienen en cuenta los casos)
      </simpara>
     </listitem> 
    </itemizedlist>
    Sólo se realiza un mapeo de casos completo incondicional y agnóstico del lenguaje.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>Las operaciones de string insensible a los casos que utilizan el plegado de casos</title>

   <para>
    Las operaciones de string insensible a las mayúsculas y minúsculas utilizan ahora el plegado de mayúsculas 
    en lugar del mapeo de mayúsculas y minúsculas durante las comparaciones. Esto significa que más caracteres serán
    considerado (caso insensible) igual ahora.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE realiza la conversión de casos de título</title>

   <para>
    <function>mb_convert_case</function> con <constant>MB_CASE_TITLE</constant>
    ahora realiza una conversión de título-caso basado en Cased y CaseIgnorable
    propiedades derivadas de Unicode. En particular, esto también mejora el manejo de
    comillas y apóstrofes.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Soporte Unicode 11</title>

   <para>
    La tabla de datos <link linkend="book.mbstring">Multibyte String</link> 
    ha sido actualizado para Unicode 11.
   </para> 
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>Soporte de string largos</title>

   <para>
    Las <link linkend="ref.mbstring">Funciones Multibyte String</link> ahora
    soportan correctamente strings de más de 2GB.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>Mejoras en el rendimiento</title>

   <para>
    Funcionamiento de la extensión <link linkend="book.mbstring">Multibyte String</link>
    extension ha mejorado significativamente en todos los aspectos. Las mayores
    mejoras son en las funciones de conversión de casos.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>Soporte de capturas nombradas</title>

   <para>
    Las funciones <literal>mb_ereg_*</literal> ahora soportan capturas nombradas.
    Las funciones de coincidencia como <function>mb_ereg</function> ahora retornarán
    capturas nombradas usando su número de grupo como su nombre, de forma similar a la PCRE:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    Adicionalmente, <function>mb_ereg_replace</function> ahora soporta la notación 
    <code>\k&lt;&gt;</code> y <code>\k''</code> para referirse a las capturas nombradas
    en el string de reemplazo:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> y <code>\k''</code> también puede utilizarse para referencias 
    numeradas, que también funciona con números de grupo mayores de 9.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   Soporte para las opciones <literal>completion_append_character</literal> y
   <literal>completion_suppress_append</literal> ha sido añadido para
   <function>readline_info</function>. Estas opciones sólo están disponibles si PHP
   está vinculado con libreadline (más que con libedit).
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
