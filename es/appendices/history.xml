<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: seros Status: ready -->
<!-- Reviewed: no -->
<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Historia de PHP y Proyectos Relacionados</title>
 <para>
  PHP ha recorrido un largo camino desde su nacimiento a mediados de los 90.
  Desde sus humildes comienzos hasta ser uno de los más importantes
  lenguajes de programación web, la evolución de PHP es un cuento de hadas
  para "geeks". Pero ojo, un crecimiento explosivo como tal no era una tarea
  fácil. Aquellos de ustedes que estén interesados en ver brevemente cómo PHP
  creció hasta convertirse en lo que es hoy, lean. Si le gustaría tocar una
  pieza de la historia de Internet, puede encontrar versiones antiguas de PHP
  en el <link xlink:href="&url.php.museum;">Museo de PHP</link>.
 </para>
 
 <sect1 xml:id="history.php">
  <title>Historia de PHP</title>
  
  <sect2 xml:id="history.phpfi">
   <title>PHP Tools, FI, Equipo de Construcción, y PHP/FI</title>
   <para>
    PHP tal y como se conoce hoy en día es en realidad el sucesor de un
    producto llamado PHP/FI. Creado en 1994 por Rasmus Lerdorf,
    la primera encarnación de PHP era un conjunto simple de
    ficheros binarios Common Gateway Interface (CGI) escritos en el
    lenguaje de programación C. Originalmente utilizado para rastrear visitas
    de su currículum online, llamó al conjunto de scripts "Personal
    Home Page Tools", más frecuentemente referenciado como "PHP Tools".
    Con el paso del tiempo se quiso más funcionalidad, y Rasmus reescribió
    PHP Tools, produciendo una implementación más grande y rica.
    Este nuevo modelo fue capaz de interaccionar con bases de datos, y mucho más,
    proporcionando un entorno de trabajo sobre cuyos usuarios podían desarrollar aplicaciones web
    dinámicas sencillas tales como libros de visitas. En junio de 1995, Rasmus
    <link xlink:href="&url.php.release1.0.0;">publicó</link>
    el código fuente de PHP Tools, lo que permitió a
    los desarrolladores usarlo como considerasen apropiado. Esto también permitió
    -y animó- a los usuarios a proporcionar soluciones a los errores del código,
    y generalmente a mejorarlo.
   </para>
   <para>
    En septiembre de ese mismo año, Rasmus amplió PHP y -por un corto
    periodo de tiempo- abandonó el nombre de PHP. Ahora, refiriéndose a las
    herramientas como FI (abreviatura de "Forms Interpreter"), la nueva implementación
    incluía algunas de las funciones básicas de PHP tal y como la conocemos
    hoy. Tenía variables como las de Perl, interpretación automática de
    variables de formulario y sintaxis incrustada HTML. La sintaxis por sí misma
    era similar a la de Perl, aunque mucho más limitada, simple
    y algo inconsistente. De hecho, para embeber el código en un
    fichero HTML, los desarrolladores tenían que usar comentarios de HTML. Aunque este
    método no era completamente bien recibido, FI continuó gozando de expansión
    y aceptación como una herramienta CGI --- pero todavía no completamente como lenguaje.
    Sin embargo, esto comenzó a cambiar al mes siguiente; en octubre de 1995
    Rasmus publicó una versión nueva del código. Recordando el
    nombre PHP, ahora era llamado (resumidamente) "Personal Home Page Construction
    Kit," y fue la primera versión que presumía de ser, en aquel momento,
    considerada como una interfaz de scripts avanzada. El lenguaje fue
    deliberadamente diseñado para asemejarse a C en estructura, haciéndolo una adopción
    sencilla para desarrolladores familiarizados con C, Perl, y lenguajes similares.
    Habiendo sido así bastante limitado a sistemas UNIX y compatibles con POSIX,
    el potencial para una implementación de Windows NT estaba siendo explorada.
   </para>
   <para>
    El código fue completamente rehecho de nuevo, y en abril de 1996,
    combinando los nombres de versiones anteriores, Rasmus introdujo PHP/FI.
    Esta implementación de segunda generación comenzó realmente a desarrollar PHP
    desde un conjunto de herramientas dentro de un lenguaje de programación de derecho
    propio. Incluía soporte interno para DBM, mSQL, y bases de datos
    Postgres95, cookies, soporte para funciones definidas por el usuario, y mucho más.
    Ese mes de junio, PHP/FI brindó una versión 2.0. Sin embargo, un
    interesante hecho sobre esto, es que sólo había una única versión
    completa de PHP 2.0. Cuando finalmente pasó de la versión beta
    en noviembre de 1997, el motor de análisis subyacente ya estaba
    siendo reescrito por completo.
   </para>
   <para>
    Aunque vivió una corta vida de desarrollo, continuó gozando
    de un crecimiento de popularidad en el aún joven mundo del desarrollo. En
    1997 y 1998, PHP/FI tenía un culto de varios miles de usuarios en todo
    el mundo. Una encuesta de Netcraft en mayo de 1998 indicó que
    cerca de 60,000 dominios reportaron que tenían cabeceras que contenían
    "PHP", indicando en efecto que el servidor host lo tenía instalado.
    Este número se correspondía con aproximadamente el 1% de todos los dominios de
    Internet del momento. A pesar de estas impresionantes cifras, la maduración
    de PHP/FI estaba condenada por limitaciones; mientras habían varios contribuidores
    menores, aún era desarrollado principalmente por un individuo.
   </para>
   <para>
    <example>
     <title>Ejemplo de Código PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Hey, ¡está usando Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Lo siento, esta entrada no existe<p>
<!--endif exit-->
  Bienvenido <!--$user-->!<p>
  Le quedan <!--$index:0--> créditos en su cuenta.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>
  
  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>    
    PHP 3.0 fue la primera versión que más se parecía al PHP que 
    existe hoy. Encontrando todavía PHP/FI 2.0 ineficiente y
    falto de las características que necesitaban para impulsar una aplicación de comercio electrónico
    que estaban desarrollando para un proyecto de universidad, Andi Gutmans y
    Zeev Suraski, de Tel Aviv, Israel, comenzaron otra nueva
    versión del analizador subyacente en 1997. Proponiendo Rasmus
    online, discutieron varios aspectos de la implementación
    actual y su redesarrollo de PHP. En un esfuerzon para
    mejorar el motor y comenzar a construir sobre la base de usuario de
    PHP/FI existente, Andi, Rasmus y Zeev decidieron colaborar en
    el desarrollo de un nuevo e independiente lenguaje de programación.
    Este lenguaje completamente nuevo fue publicado bajo un nuevo nombre, que
    eliminó la implicación del uso limitado personal que el
    nombre PHP/FI tenía. Fue renombrado simplemente como 'PHP', con el
    significado de un acrónimo recursivo - PHP: Hypertext Preprocessor.
   </para>
   <para>
    Una de las mejores características de PHP 3.0 era su
    gran extensibilidad. Además de proveer a los usuarios finales
    de una interfaz madura para múltiplies bases de datos, protocolos,
    y APIs, la sencillez de ampliar el lenguaje mismo atrajo a
    docenas de desarrolladores que presentaron variedad de módulos. Podría decirse
    que esta fue la clave para el tremendo éxito de PHP 3.0. Otras características
    clave introducidas en PHP 3.0 incluían el soporte para programación orientada a
    objetos y una sintaxis de lenguaje mucho más potente y consistente.
   </para>
   <para>
    En junio de 1998, con muchos nuevos desarrolladores de todo el mundo
    unidos al esfuerzon, PHP 3.0 fue anunciado por el nuevo Equipo de Desarrollo
    de PHP como el sucesor oficial de PHP/FI 2.0. El desarrollo activo
    de PHP/FI 2.0, que estaba casi parado desde noviembre del
    año anterior, fue oficialmente finalizado. Después de aproximadamente nueve meses
    de pruebas públicas, cuando el anuncio de la versión
    oficial de PHP 3.0 vino, ya estaba instalado en más de 70,000
    dominios de todo el mundo, y ya no estaba limitado a
    sistemas operativos compatibles con POSIX. Una relativamente pequeña parte de
    de los dominios que tenían instalado PHP estaban albergados en servidores
    que ejecutaban Windows 95, 98, y NT, y Macintosh. En este punto, PHP 3.0
    estaba instalado en aproximadamente el 10% de los servidores web de
    Internet.
   </para>
  </sect2>
  
  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    En el invierno de 1998, poco después del lanzamiento oficial
    de PHP 3.0, Andi Gutmans y Zeev Suraski comenzaron a trabajar
    en una nueva versión del núcleo de PHP. Los objetivos de diseño fueron mejorar
    la ejecución de aplicaciones complejas y mejorar la
    modularidad del código base de PHP. Estas aplicaciones se hicieron
    posibles por las nuevas características de PHP 3.0 y el apoyo de una gran
    variedad de bases de datos y APIs de terceros, pero PHP 3.0 no estaba
    diseñado para un mantenimiento tan complejo de aplicaciones eficientemente.
   </para>
   <para>
    El nuevo motor, apodado 'Motor Zend' (proviene de sus
    nombres de pila, Zeev y Andi), alcanzó estos objetivos de diseño
    satisfactoriamente, y se introdujo por primera vez a mediados de 1999. PHP 4.0,
    basado en este motor, y asociado con un gran rango de
    nuevas características adicionales, fue oficialmente publicado en Mayo
    del 2000, casi dos años después que su predecesor. Además
    de la mejora de rendimiento de esta versión, PHP 4.0
    incluía otras características clave como el soporte para la mayoría
    de los servidores Web, sesiones HTTP, buffers de salida, formas más
    seguras de controlar las entradas de usuario y muchas nuevas construcciones de lenguaje.
   </para>
  </sect2>
  
  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 fué lanzado en Julio del 2004 después de un largo desarrollo y
    varios pre-releases. Está básicamente impulsado por su núcleo,
    <literal>Zend Engine 2.0</literal> que contiene un nuevo modelo de 
    objectos y docenas de nuevas opciones.
   </para>
   <para>
    El equipo de desarrollo de PHP incluye docenas de desarrolladores, así como
    docenas de otras personas trabajando en proyectos relacionados y de soporte para PHP,
    como PEAR, PECL, y documentación, y una infraestructura en red
    subyacente de más de cien servidores web individuales
    en seis de los siete continentes del mundo. Aunque es solo una
    estimación basada en estadísticas de años ateriores, es seguro
    suponer que PHP ahora está instalado en diez o quizá cien
    millones de dominios en todo el mundo.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="history.php.related">
  <title>Historia de los proyectos relacionados con PHP</title>
  
  <!-- Hope Stig and/or Egon can do this
  
  <sect2 xml:id="history.phpdoc">
  <title>PHP Documentation Project</title>
  <para>
 </para>
 </sect2>
  
  -->
  
  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, la <literal>extensión de PHP y 
    repositorio de aplicaciones</literal> (originalmente, extensión de PHP y
    repositorio add-on) es la base de clases para PHP y en un futuro seguramente
    será la forma de distribuir extensiones PHP entre desarrolladores.
   </para>
   <para>
    PEAR nació de las discusiones mantenidas en el PHP Developers'
    Meeting (PDM) transcurrido en Enero de 2000 en Tel Aviv. Fue
    creado por Stig S. Bakken, y lo dedicó a su primogénita, Malin Bakken.
   </para>
   <para>
    Hasta principios de 2000, PEAR fue creciendo hasta ser un gran y
    significativo proyecto con un gran número de programadores
    trabajando en la implementación común, funcionalidad reutilizable
    para el beneficio de toda la comunidad PHP. PEAR hoy incluye
    una gran variedad de clases de infraestructura
    para acceso a bases de datos, caché de contenido, cálculos
    matemáticos, comercio electrónico y mucho más.
   </para>
   <para>
    Más información sobre PEAR se puede encontrar en <link
    xlink:href="&url.php.pear.manual;">el manual</link>.
   </para>
  </sect2>
  
  <sect2 xml:id="history.phpqa">
   <title>Garantía de calidad de PHP</title>
   <para>
    La <link xlink:href="&url.php.prerelease;">Iniciativa para la
    Garantía de Calidad de PHP</link> se configuró en
    el verano de 2000 en respuesta a los que criticaban que las
    versiones de PHP se liberaban sin que fueran comprobadas
    suficientemente para entornos de producción. El equipo
    ahora consiste en un grupo central de desarrolladores con un buen
    entendimiento del código base de PHP. Estos desarrolladores
    están mucho tiempo localizando y solucionando problemas con PHP.
    Además, hay muchos miembros de otros equipos que testean y
    prueban estas soluciones usando una gran variedad de plataformas.
   </para>
  </sect2>
  
  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> es la solución
    PHP para escribir las aplicaciones GUI del lado del
    cliente. Andrei Zmievski nos recuerda la planificación y la
    creación del proceso de PHP-GTK:
   </para>
   <blockquote>
    <para>
     Programar GUI siempre ha estado entre mis intereses, y
     he encontrado que Gtk+ es una herramienta muy buena,
     salvo que programar con ella en C es algo tedioso. Tras
     presenciar las implementaciones de PyGtk y GTK-Perl,
     decidí ver si PHP se podría hacer con la interfaz Gtk+,
     incluso mínimamente. En Agosto de 2000
     empecé a tener más tiempo libre, con lo que comencé
     a experimentar. Mi principal guía fue la implementación
     PyGtk con características completas bastante buenas
     y con un buen interfaz orientado a objetos. James Henstridge,
     el autor de PyGtk, proveyó mucha ayuda adicional durante
     esos estados iniciales.
    </para>
    <para>
     Escribir las interfaces de todas las funciones Gtk+ estaba fuera
     de cuestión, por lo que mantuve la idea de generador de código,
     similar a cómo PyGtk lo hizo. El generador de código es un
     programa PHP que lee un conjunto de ficheros <filename>.defs</filename>
     que contienen las clases Gtk+, constantes e información de métodos 
     y genera código C que interactúa PHP con ellos. Lo que no se puede
     generar automáticamente puede escribirse a mano en ficheros
     <filename>.overrides</filename>.
    </para>
    <para>
     Trabajar en el generador de código y la infraestructura llevó algo
     de tiempo, porque pude dedicar poco tiempo a PHP-GTK durante
     el otoño de 2000. Después mostré PHP-GTK a Frank Kromann,
     que se interesó y empezó a ayudarme con el trabajo del generador
     de código y con la implementación para Win32. Cuando escribimos
     el primer programa Hola Mundo y funcionó, fue extremadamente
     excitante. Llevó un par de meses más llevar el proyecto a una condición
     presentable y la versión inicial se liberó el 1 de Marzo de 2001. La
     historia rápidamente llegó a SlashDot.
    </para>
    <para>
     Dándome cuenta que PHP-GTK podría extenderse, configuré listas
     de correo separadas y repositorios CVS para ello, así como
     el sitio web gtk.php.net con la ayuda de Colin Viebrock. La
     documentación también tenía que hacerse y James Moore
     se únio al proyecto para ayudar en esto.
    </para>
    <para>
     Desde su lanzamiento PHP-GTK fue ganando popularidad.
     Tenemos nuestro propio equipo de documentación, el manual
     sigue mejorando, la gente ha comenzado a escribir extensiones
     para PHP-GTK, y con ello más y mejores aplicaciones.
    </para>
   </blockquote>
  </sect2>
 </sect1>
 
 <sect1 xml:id="history.php.books">
  <title>Libros sobre PHP</title>
  <para>
   Según crecía PHP, empezó a ser reconocido como una popular
   plataforma de desarrollo web. Una de las más interesantes formas
   de ver esta tendencia fué observando los libros de PHP que
   han ido publicando a lo largo de los años.
  </para>
  <para>
   Por lo que nosotros sabemos, el primer libro dedicado a PHP fue
   'PHP - tvorba interaktivních internetových aplikací' (<emphasis>PHP
   - Creando aplicaciones interactivas en internet</emphasis>) - un libro
   checo publicado en 1999, cuyo autor fue Jirka Koseksiendo.  Al mes
   siguiente le siguió un libro alemán cuyos autores fueron Egon
   Schmid, Christian Cartus y Richard Blume. El primer libro en
   Inglés sobre PHP se publicó poco después, y fue 'Core PHP Programming' 
   de Leon Atkinson. Los dos libros cubrían PHP 3.0.
  </para>
  <para>
   Mientras estos libros fueron los primeros de su tipo - fueron
   seguidos por un gran número de libros de una multitud de
   autores y editores. ¡Existen más 400 libros en inglés,
   100 libros en alemán, y más de 50 libros en
   francés o español! Además, se pueden encontrar libros sobre PHP
   en la mayoría de las demás lenguas, incluyendo
   coreano, japonés y hebreo.
  </para>
  <para>
   Evidentemente, este gran número de libros, escritos por diferentes
   autores, publicados por muchos editores, y  su disponibilidad en tantas
   lenguas - son un fuerte testimonio del éxito mundial de PHP.
  </para>
 </sect1>
 
 <sect1 xml:id="history.php.publications">
  <title>Publicaciones sobre PHP</title>
  <para>
   Por lo que sabemos, el primer artículo sobre PHP en una
   revista impresa se publicó en la version checa de
   Computerworld en la primavera de 1998, y cubría PHP
   3.0. Como con los libros, fue el primero en una serie de muchos
   artículos publicados sobre PHP en varias revistas
   importantes.
  </para>
  <para>
   Artículos sobre PHP han aparecido en Dr. Dobbs, Linux
   Enterprise, Linux Magazine y muchas otras. Artículos sobre
   migración de aplicaciones basadas en PHP bajo Windows ¡han
   aparecido incluso en el <acronym>MSDN</acronym> de 
   <productname>Microsoft</productname>!
  </para>
 </sect1>
 
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
