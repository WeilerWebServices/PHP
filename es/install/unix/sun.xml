<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: lduran Status: ready -->
   <sect1 xml:id="install.unix.sun" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Servidores Sun, iPlanet y Netscape sobre Sun Solaris</title>
    <para>
     Esta sección contiene notas y consejos específicos al servidor web Sun Java System,
     servidor web Sun ONE, instalaciones de servidores iPlanet y Netscape de PHP sobre Sun Solaris.
    </para>
    <para>
     A partir de PHP 4.3.3 en adelante se pueden utilizar scripts PHP con el
     <link linkend="ref.nsapi">módulo NSAPI</link> para 
     <link linkend="install.unix.sun.specialpages">generar listados de directorio y páginas de
     errores personalizados</link>. Funciones adicionales para compatibilidad con Apache
     también se encuentran disponibles. Para soporte en servidores web actuales, léase
     la <link linkend="install.unix.sun.notes">nota sobre subpeticiones</link>.
    </para>
    <para>
     Se puede encontrar más información acerca de configurar PHP para Netscape
     Enterprise Server (NES) aquí:
     <link xlink:href="&url.netscape.nsapi;">&url.netscape.nsapi;</link>
    </para>
    
    <para>
     Para construir PHP con los servidores web Sun JSWS/Sun ONE WS/iPlanet/Netscape,
     introduzca el directorio de instalación apropiado para la opción
     <link linkend="configure.with-nsapi">--with-nsapi=[DIR]</link>.
     El directorio por omisión es comúnmente
     <filename class="directory">/opt/netscape/suitespot/</filename>.
     Por favor también léase <filename>/php-xxx-version/sapi/nsapi/nsapi-readme.txt</filename>.
    </para>
    <para>
     <orderedlist>
      <listitem>
       <para>
        Instalar los siguientes paquetes de <link xlink:href="&url.sun.freeware;">
        &url.sun.freeware;</link> o algún otro sitio de descargas:
        <simplelist>
         <member><filename>autoconf-2.13</filename></member>
         <member><filename>automake-1.4</filename></member>
         <member><filename>bison-1_25-sol26-sparc-local</filename></member>
         <member><filename>flex-2_5_4a-sol26-sparc-local</filename></member>
         <member><filename>gcc-2_95_2-sol26-sparc-local</filename></member>
         <member><filename>gzip-1.2.4-sol26-sparc-local</filename></member>
         <member><filename>m4-1_4-sol26-sparc-local</filename></member>
         <member><filename>make-3_76_1-sol26-sparc-local</filename></member>
         <member>
          <filename>mysql-3.23.24-beta</filename> (si se desea soporte para mysql)
         </member>
         <member><filename>perl-5_005_03-sol26-sparc-local</filename></member>
         <member><filename>tar-1.13</filename> (GNU tar)</member>
        </simplelist>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Asegurar que la ruta de acceso incluye los directorios apropiados
        <literal>PATH=.:/usr/local/bin:/usr/sbin:/usr/bin:/usr/ccs/bin</literal>
        y hacer que esté disponible al sistema <userinput>export PATH</userinput>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>gunzip php-x.x.x.tar.gz</userinput> (si se tiene una distribución <filename>.gz</filename>,
        de lo contrario ir a 4).
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <userinput>tar xvf php-x.x.x.tar</userinput>
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Cambiarse al directorio de PHP ya extraído:
        <userinput>cd ../php-x.x.x</userinput>
       </simpara>
      </listitem>
      <listitem>
       <para>
        Para el siguiente paso, asegurar que
        <filename class="directory">/opt/netscape/suitespot/</filename> sea
        donde el servidor netscape está instalado. De no ser así, cambiar a la
        ruta de acceso correcta y ejecutar:
        <programlisting role="shell">
<![CDATA[
./configure --with-mysql=/usr/local/mysql \
--with-nsapi=/opt/netscape/suitespot/ \
--enable-libgcc
]]>
        </programlisting>
       </para>
      </listitem>
      <listitem>
       <simpara>
        Ejecutar <command>make</command> seguido por <command>make install</command>.
       </simpara>
      </listitem>
     </orderedlist>
    </para>
    <para>
     Después de realizar la instalación base y de leer el fichero readme apropiado,
     es posible que sea necesario realizar algunos pasos adicionales de configuración.
    </para>
    <formalpara>
     <title>Instrucciones de configuración para Sun/iPlanet/Netscape</title>
     <para>
      Primeramente quizás sea necesario agregar algunas rutas de acceso al entorno <varname>LD_LIBRARY_PATH</varname>
      para que el servidor encuentre todas las librerías compartidas. Esto puede hacerse de mejor manera
      en el script de arranque del servidor web. El script de arranque se encuentra comúnmente localizado
      en: <filename class="directory">/ruta/al/servidor/https-servername/start</filename>.
      Quizás también sea necesario editar los ficheros de configuración que están
      ubicados en: <filename
      class="directory">/ruta/al/servidor/https-servername/config/</filename>.
      <orderedlist>
       <listitem>
        <para>
         Agregar la siguiente línea a <filename>mime.types</filename> (se puede hacer
         esto por medio del servidor de administración):
         <screen>
<![CDATA[
type=magnus-internal/x-httpd-php exts=php
]]>
         </screen>
        </para>
       </listitem>
       <listitem>
        <para>
         Editar <filename>magnus.conf</filename> (para servidores &gt;= 6) u
         <filename>obj.conf</filename> (para servidores &lt; 6) y agregar lo siguiente,
         shlib variará dependiendo del sistema, será algo así como
         <filename>/opt/netscape/suitespot/bin/libphp4.so</filename>. Se deben
         colocar las siguientes líneas después de <literal>mime types init</literal>.
         <programlisting>
<![CDATA[
Init fn="load-modules" funcs="php4_init,php4_execute,php4_auth_trans" shlib="/opt/netscape/suitespot/bin/libphp4.so"
Init fn="php4_init" LateInit="yes" errorString="Failed to initialize PHP!" [php_ini="/path/to/php.ini"]
]]>
         </programlisting>
         (PHP &gt;= 4.3.3) El parámetro <literal>php_ini</literal> es
         opcional pero con él se puede colocar &php.ini; en el directorio de
         configuración del servidor web.
        </para>
       </listitem>
       <listitem>
        <para>
         Configurar el objeto por omisión en <filename>obj.conf</filename>
         (para clases de servidor virtual [versión 6.0+] en
         su <filename>vserver.obj.conf</filename>):
         <programlisting>
<![CDATA[
<Object name="default">
.
.
.
.#NOTA esta siguiente línea debería ocurrir después de todos las líneas 'ObjectType' y antes de todas las líneas 'AddLog'
Service fn="php4_execute" type="magnus-internal/x-httpd-php" [inikey=value inikey=value ...]
.
.
</Object>
]]>
         </programlisting>
         (PHP &gt;= 4.3.3) Como parámetros adicionales se pueden agregar algunos valores
         especiales de &php.ini;, por ejemplo se puede fijar una
         <literal>docroot=&quot;/ruta/a/raíz_de_documentos&quot;</literal> específica
         al contexto <literal>php4_execute</literal> es llamado. Para llaves ini boleanas
         favor de utilizar 0/1 como valor, no
         <literal>&quot;On&quot;,&quot;Off&quot;,...</literal>
         (esto no funcionará correctamente), por ejemplo.
         <literal>zlib.output_compression=1</literal> en vez de
         <literal>zlib.output_compression=&quot;On&quot;</literal>
        </para>
       </listitem>
       <listitem>
        <para>
         Esto es sólo necesario si se quiere configurar un directorio que solamente consiste de
         scripts de PHP (igual que un directorio <filename class="directory">cgi-bin</filename>):
         <programlisting>
<![CDATA[
<Object name="x-httpd-php">
ObjectType fn="force-type" type="magnus-internal/x-httpd-php"
Service fn=php4_execute [inikey=value inikey=value ...]
</Object>
]]>
         </programlisting>
         Después de configurar un directorio en el servidor de administración y asignarle
         el estilo <literal>x-httpd-php</literal>. Todos los ficheros en éste se ejecutarán como PHP.
         Esto está bien para esconder el uso de PHP renombrando los ficheros a <filename>.html</filename>.
        </para>
       </listitem>
       <listitem>
        <para>
         Configuración de la autenticación: La autenticación PHP no puede ser utilizada con ninguna
         otra autenticación. TODA AUTENTICACION LE ES PASADA AL SCRIPT DE PHP.
         Para configurar la autenticación de PHP para el servidor entero, agregar la
         línea siguiente al objeto por omisión:
         <programlisting>
<![CDATA[
<Object name="default">
AuthTrans fn=php4_auth_trans
.
.
.
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Para utilizar autenticación de PHP en sólo un directorio, agregar lo siguiente:
         <programlisting>
<![CDATA[
<Object ppath="d:\ruta\al\directorio\auntenticado\*">
AuthTrans fn=php4_auth_trans
</Object>
]]>
         </programlisting>
        </para>
       </listitem>
      </orderedlist>
     </para>
    </formalpara>
    <note>
     <para>
      El tamaño de la pila que utiliza PHP depende de la configuración del servidor web. Si se tienen
      fallas generales con scripts de PHP muy grandes, se recomienda elevarlo con el servidor de administración
      (en la sección &quot;MAGNUS EDITOR&quot;).
     </para>
    </note>
   
   <sect2 xml:id="install.unix.sun.phpini">
    <title>Ambiente CGI y modificaciones recomendadas en &php.ini;</title>
    <para>
     Importante cuando se escriben scripts de PHP, es el hecho de que Sun JSWS/Sun ONE
     WS/iPlanet/Netscape es un servidor web multihilos. Por ello todas las
     peticiones se corren en el mismo espacio de proceso (el espacio del servidor web
     mismo) y este espacio tiene solamente un ambiente. Si se quiere tener variables CGI
     como <literal>PATH_INFO</literal>, <literal>HTTP_HOST</literal>
     etc. la manera correcta no es intentar esto al viejo estilo de PHP con
     <function>getenv</function> o una manera similar (registrar globales al
     ambiente, <varname>$_ENV</varname>). Solamente se obtendrá el ambiente
     del servidor web que se está ejecutando. ¡Sin ninguna variable CGI válida!
    </para>
    <note>
     <para>
      ¿Por qué hay variables CGI (inválidas) en el ambiente?
     </para>
     <para>
      Respuesta: Esto es por que se inició el proceso del servidor web desde el servidor de administración
      que ejecuta el script de arranque del servidor web, que se quería iniciar, como un script de CGI
      (¡Un script de CGI dentro del servidor de administración!). Esto es el porque el ambiente de
      el servidor web iniciado tiene algunas variables de CGI en él. Se puede probar esto
      iniciando el servidor web, no desde el servidor de administración. Utilizar
      la línea de comando como usuario root e iniciarlo manualmente - se verá
      que no hay variables de ambiente a la CGI.
     </para>
    </note>
    <para>
     Simplemente cámbiense los scripts para obtener las variables CGI de la manera correcta para
     PHP 4.x utilizando la superglobal <varname>$_SERVER</varname>. Si se tienen scripts más antiguos
     que usan <varname>$HTTP_HOST</varname>, etc., se debe activar
     <literal>register_globals</literal> en &php.ini; y cambiar el orden de las
     variables también (importante: quitar <literal>&quot;E&quot;</literal> de ésta,
     porque no se necesita el entorno aquí):
     <programlisting>
<![CDATA[
variables_order = "GPCS"
register_globals = On
]]>
     </programlisting>
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.specialpages">
    <title>Uso especial para páginas de error o listados personalizados de directorios (PHP &gt;= 4.3.3)</title>
    <para>
     Se puede utilizar PHP para generar páginas de errores para <literal>"404 Not Found"</literal>
     o similares. Agregar la siguiente línea al objeto en <filename>obj.conf</filename> por
     cada página de error que se quiera sobreescribir:
     <programlisting>
<![CDATA[
Error fn="php4_execute" code=XXX script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     donde <literal>XXX</literal> es el código de error HTTP. Favor de borrar
     cualquier otra directiva <literal>Error</literal> que pudiese interferir con la propia.
     Si se desea colocar una página para todos los errores que puedan existir, dejar fuera
     el parámetro <literal>code</literal>. El script puede obtener el código de estado HTTP
     con <varname>$_SERVER['ERROR_TYPE']</varname>.
    </para>
    <para>
     Otra posibilidad es generar listados de directorio personalizados.
     Solamente creando un script PHP que despliegue un listado de directorio y
     reemplazando la línea por omisión correspondiente <literal>Service</literal> por
     <literal>type=&quot;magnus-internal/directory&quot;</literal>
     en <filename>obj.conf</filename> con lo siguiente:
     <programlisting>
<![CDATA[
Service fn="php4_execute" type="magnus-internal/directory" script="/path/to/script.php" [inikey=value inikey=value...]
]]>
     </programlisting>
     Para ambas páginas, de error y listados de directorio la URI original y la
     URI traducida están en las variables <varname>$_SERVER['PATH_INFO']</varname> y
     <varname>$_SERVER['PATH_TRANSLATED']</varname>.
    </para>
   </sect2>
   
   <sect2 xml:id="install.unix.sun.notes">
    <title>Nota acerca de <function>nsapi_virtual</function> y subpeticiones (PHP &gt;= 4.3.3)</title>
    <para>
     El módulo NSAPI ahora soporta la función <function>nsapi_virtual</function>
     (alias: <function>virtual</function>)
     para realizar subpeticiones en el servidor web e insertar el resultado en la página web.
     Esta función utiliza algunas características no documentadas de la librería NSAPI.
     En Unix el módulo automáticamente busca las funciones necesarias y las
     utiliza si están disponibles. Si no, se deshabilita <function>nsapi_virtual</function>.
    </para>
    <note>
     <para>
      Pero se advierte: El soporte para <function>nsapi_virtual</function> es ¡¡¡EXPERIMENTAL!!!
     </para>
    </note>
   </sect2>   
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
