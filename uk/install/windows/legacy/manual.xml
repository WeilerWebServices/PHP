<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 339251 Maintainer: ktretyak Status: ready -->
<!-- $Revision$ -->
   <sect2 xml:id="install.windows.legacy.manual" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
    <title>Ручне встановлення</title>
    <para>
     Цей розділ містить інструкції для ручного встановлення та конфігурування
     PHP на Microsoft Windows. 
    </para>
    <sect3 xml:id="install.windows.legacy.manual.download">
     <title>Вибір та скачування пакета PHP</title>
     <para>
      Скачайте бінарний архів PHP зі сторінки
      <link xlink:href="&url.php.win.downloads;">PHP для Windows: Бінарники та Сирці</link>. 
      Існує декілька різних zip-архівів - щоб вибрати правильну версію для вас, дотримуйтесь докладного керівництва на сторінці
      <link xlink:href="&url.php.win.downloads;">завантаження</link>.
     </para>
    </sect3>
    <sect3 xml:id="install.windows.legacy.manual.package">
     <title>Структура та вміст PHP-пакета</title>
     <para>
      Розпакуйте вміст zip-архіву куди вам буде зручно, наприклад в C:\PHP\.
      Директорія та файлова структура після розпакування матиме приблизно такий вигляд:
      <example>
       <title>Структура пакета з PHP 5</title>
        <programlisting>
<![CDATA[

c:\php
   |
   +--dev
   |  |
   |  |-php5ts.lib                 -- файл php5.lib є у версії "non thread safe" (без багатопоточності)
   |
   +--ext                          -- DLL-розширення для PHP
   |  |
   |  |-php_bz2.dll
   |  |
   |  |-php_cpdf.dll
   |  |
   |  |-...
   |
   +--extras                       -- пусто 
   |
   +--pear                         -- ініціалізуюча копія PEAR
   |
   |
   |-go-pear.bat                   -- скрипт встановлення PEAR
   |
   |-...
   |
   |-php-cgi.exe                   -- виконуючий файл CGI
   |
   |-php-win.exe                   -- файл, що виконує скрипти без відкриття консолі
   |
   |-php.exe                       -- виконуючий файл для командного рядка (CLI)
   |
   |-...
   |
   |-php.ini-development           -- початкове налаштування php.ini
   |
   |-php.ini-production            -- рекомендовані php.ini налаштування
   |
   |-php5apache2_2.dll             -- відсутній у версії "non thread safe" (без багатопоточності)
   |
   |-php5apache2_2_filter.dll      -- відсутній у версії "non thread safe" (без багатопоточності)
   |
   |-...
   |
   |-php5ts.dll                    -- ядро PHP DLL (php5.dll - у версії "non thread safe")
   | 
   |-...

]]>
       </programlisting>
      </example>
     </para>
     <para>
      Нижче наведено список модулів та виконавчих файлів вміщених в PHP zip-архів:
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <filename>go-pear.bat</filename> - скрипт для встановлення PEAR.
         Детальнішу інформацію можна знайти на сторінці
         <link xlink:href="&url.pear.installation;">Встановлення (PEAR)</link>.
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php-cgi.exe</filename> - виконавчий CGI-файл, який може
         використовуватись при запуску PHP на IIS через CGI або FastCGI.
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php-win.exe</filename> - файл для виконання PHP-скриптів
         без використання консолі (наприклад PHP-застосунки, що використовують
         Windows GUI).
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php.exe</filename> - файл для виконання PHP скриптів через консоль (CLI).
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php5apache2_2.dll</filename> - модуль Apache 2.2.X.
        </para>
       </listitem>
       <listitem>
        <para>
         <filename>php5apache2_2_filter.dll</filename> - фільтр Apache 2.2.X.
        </para>
       </listitem>
      </itemizedlist>
     </para>
    </sect3>
    <sect3 xml:id="install.windows.legacy.manual.phpini">
     <title>Зміна файла <filename>php.ini</filename></title>
     <para>
     Після того, як php-пакет розпакували, скопіюйте файл
     <filename>php.ini-production</filename> в ту ж папку, та перейменуйте його на
     <filename>php.ini</filename>. Якщо необхідно, файл <filename>php.ini</filename>
     можна розміщувати в будь-якому іншому місці, але це вимагає додаткових
     кроків <link linkend="configuration.file">конфігурування PHP</link>.
     </para>
     <para>
      Файл <filename>php.ini</filename> говорить PHP, яку їй мати конфігурацію,
      та як працювати в тому середовищі, де її встановлено. Далі наведено кілька
      налаштувань файла <filename>php.ini</filename>, що допомагають PHP
      працювати краще у Windows. Деякі з них є необов'язковими. Також є багато
      інших директив, що можуть стосуватись вашого середовища - прогляньте
      <link linkend="ini.list">список директив php.ini</link> для детальнішої інформації.
     </para>
     <para>
      Необхідні директиви:
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <varname>extension_dir</varname> = <literal>&lt;шлях до директорії
         розширень&gt;</literal> - <varname>extension_dir</varname> повинен 
         вказувати на директорію, де зберігаються файли розширення PHP. Шлях може
         бути абсолютним (напр. &quot;C:\PHP\ext&quot;) або відносним
         (напр. &quot;.\ext&quot;). Розширення, які йтимуть нижче в списку
         файла <filename>php.ini</filename> повинні розміщуватись в цій директорії
         <varname>extension_dir</varname>.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>extension</varname> = <literal>xxxxx.dll</literal> - Для кожного
         розширення, яке ви хочете підключити, повинен бути відповідний запис
         з директивою &quot;extension=&quot;, що говорить PHP, які саме розширення в
         <varname>extension_dir</varname> потрібно завантажувати при старті.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>log_errors</varname> = <literal>On</literal> - PHP має
         механізм ведення логів помилок, який можна використовувати щоб відправити
         помилки до файла або до сервіса (напр. syslog). Цей механізм працює в
         зв'язці з директивою <varname>error_log</varname>, яку зазначено нижче.
         При роботі на IIS, <varname>log_errors</varname> потрібно включати з
         визначеним <varname>error_log</varname>.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>error_log</varname> = <literal>&lt;шлях до файла логу
         помилок&gt;</literal> - Директиву error_log потрібно визначати через
         абсолютний або відносний шлях до файла, де повинні зберігатись логи
         помилок PHP. Веб-сервер повинен мати права на запис до цього файла.
         Найбільш звичне місце для нього - тимчасові (TEMP) директорії,
         наприклад,
         &quot;C:\inetpub\temp\php-errors.log&quot;.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>cgi.force_redirect</varname> = <literal>0</literal> - Дана
         директива необхідна для роботи PHP на IIS. Це засіб захисту директорії,
         який вимагається багатьма іншими веб-серверами. Тим не менш, встановлення
         ненульового значення для неї, викличе проблеми роботи ядра PHP під IIS на Windows.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>cgi.fix_pathinfo</varname> = <literal>1</literal> - Дозволяє
         PHP мати доступ до інформації про real path (реальний шлях), згідно зі
         специфікацією CGI. Впровадження FastCGI на IIS потребує цього визначення.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>fastcgi.impersonate</varname> = <literal>1</literal> - FastCGI
         на IIS підтримує здатність ідентифікувати маркери безпеки викликаючого
         клієнта. Це дозволяє IIS визначати контекст безпеки, під яким було
         запущено запит.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>fastcgi.logging</varname> = <literal>0</literal> - Запис
         FastCGI-логів потрібно відключити на IIS. Якщо цього не зробити, 
         то будь-які повідомлення від будь-якого класу будуть сприйматись
         FastCGI як помилки умов, через що IIS генеруватиме HTTP 500 винятки.
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Необов'язкові директиви:
      <itemizedlist spacing="compact">
       <listitem>
        <para>
         <varname>max_execution_time</varname> = <literal>##</literal> - Ця
         директива визначає максимальну кількість часу, яку PHP може витратити
         на виконання будь-якого сценарію. Початково встановлено 30 секунд.
         Збільшіть значення цієї директиви, якщо застосунок PHP потребує більше
         часу.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>memory_limit</varname> = <literal>###M</literal> - Кількість
         доступної пам'яті для процесів PHP, в мегабайтах. Початково -
         128 МБ, що є цілком достатньо для більшості PHP застосунків, але
         інколи цього буває недостатньо.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>display_errors</varname> = <literal>Off</literal> - Ця
         директива говорить PHP, чи потрібно включати будь-які помилки в потік,
         що повертається до веб-сервера. Якщо задати значення &quot;On&quot;,
         то PHP буде відправляти помилки, визначені через директиву
         <varname>error_reporting</varname>. З міркувань безпеки, рекомендовано
         встановлювати значення &quot;Off&quot; на робочих серверах, щоб часом
         не відправити певну інформацію, небажану для розголошення, разом з помилками.
        </para>
       </listitem>
       <listitem>
        <para>
         <varname>open_basedir</varname> = <literal>&lt;шляхи до директорій,
         розділені крапкою з комою&gt;</literal>, наприклад,
         openbasedir=&quot;C:\inetpub\wwwroot;C:\inetpub\temp&quot;. Ця директива
         визначає шляхи до директорій, де для PHP є дозвіл на виконання операцій
         з файловою системою. Будь-які операції з файлами, за межами визначених
         шляхів, призводитиме до помилки. Ця директива особливо корисна для
         обмеження PHP, яка встановлена в середовищі загального хостинга
         (shared hosting), з метою запобігання доступів для PHP-скриптів до
         будь-яких файлів за межами кореневої директорії веб-сервера.
        </para>
       </listitem>
       <listitem>
         <para>
          <varname>upload_max_filesize</varname> = <literal>###M</literal> та
          <varname>post_max_size</varname> = <literal>###M</literal> - Максимально
          дозволені розміри файлів, що завантажуються на сервер, та відправляються
          методом POST, відповідно. Значення цих директив потрібно збільшити,
          якщо є необхідність обробляти великі файли, наприклад, фото чи відео.
         </para>
        </listitem>
      </itemizedlist>
     </para>
    <para>
     Далі, після встановлення PHP на вашу систему, потрібно вибрати веб-сервер,
     та включити в ньому підтримку для PHP.
    </para>
    <para>
     Окрім роботи через веб-сервер, PHP також може працювати і через командний
     рядок, як <literal>.BAT</literal> скрипт.
     <!--Детальнішу інформацію з цього
     приводу можна отримати в розділі
     <link linkend="install.windows.commandline">Командний рядок PHP на Microsoft
     Windows</link>.-->
    </para>
    </sect3>
   </sect2>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
