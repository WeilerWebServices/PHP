<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 306611 Maintainer: ktretyak Status: ready -->
<!-- $Revision$ -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>Вступ</title></info>

  <section xml:id="intro-whatis">
   <info><title>Що таке PHP?</title></info>
   <para>
    <acronym>PHP</acronym> (рекурсивний акронім словосполучення <literal>PHP: Hypertext
    Preprocessor</literal>) це найпоширеніша мова програмування загального призначення
    з відкритим сирцевим кодом. PHP сконструйована спеціально для ведення веб-розробок,
    а її код може впроваджуватися безпосередньо в HTML.
   </para>
   <para>
    Проста відповідь, але що вона може означати?
   </para>
   <para>
    <example>
     <info><title>Ознайомлення</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
    "http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Приклад</title>
    </head>
    <body>

        <?php
            echo "Привіт, я - PHP скрипт!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Замість багатьох команд для виведення HTML (як це ми бачимо в C або Perl),
    PHP сторінки містять HTML з вбудованим кодом, який "щось" робить
    (в нашому випадку, виводить "Привіт, я - PHP скрипт!").
    Код PHP відокремлюється спеціальними <link
    linkend="language.basic-syntax.phpmode">початковими і кінцевими тегами
  <code>&lt;?php</code> та <code>?&gt;</code>
  </link>,
    які дозволяють "переключатись" в "PHP режим" і виходити з нього.
   </para>
   <para>
    PHP відрізняється від JavaScript тим, що PHP-скрипти виконуються
    на сервері і генерують HTML, яка видається клієнту.
  Клієнт отримуватиме результат виконання певного скрипта, але
  не знатиме який саме код його згенерував. Ви навіть можете сконфігурувати
    веб-сервер, щоб обробляти всі файли HTML через PHP так, що клієнти
  навіть не зможуть дізнатися, чи отримують вони звичайний HTML-файл,
  чи результат виконання скрипта.
   </para>
   <para>
    Найкращою річчю при використанні PHP є те, що вона дуже проста для новачків,
    але пропонує багато додаткових функцій для професійних програмістів.
    Не бійтесь читання довгого списку можливостей PHP. Ви можете легко
  почати, та вже на протязі кількох годин зможете писати прості скрипти.
   </para>
   <para>
    Хоча розробники PHP сфокусовані на скриптах на стороні сервера,
    область застосування не обмежується лише цим. Читайте далі, та не пропустіть
    розділ <link linkend="intro-whatcando">Можливості PHP</link>,
    або зразу почніть з <link linkend="tutorial">простого посібника</link>,
  якщо вас цікавить виключно веб-програмування.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>Що може робити PHP?</title></info>
   <para>
    Будь-що. Головним чином PHP сфокусована на написанні скриптів, що працюють
    на стороні сервера, отже ви можете робити будь-що, що роблять CGI програми,
    наприклад, обробку даних форм, генерування вмісту динамічних сторінок, або
    відправлення та отримання куків. Але PHP має значно ширші можливості.
   </para>
   <para>
    Існують три основні області застосування PHP-скриптів.
    <itemizedlist>
     <listitem>
      <simpara>
       Написання скриптів для виконання на стороні сервера. PHP традиційно і
       найбільш широко використовується саме таким чином. Для цього вам потрібні
       будуть всього три речі. Парсер PHP (CGI або модуль сервера),
       веб-сервер та веб-браузер. Вам потрібно запустити веб-сервер з встановленою
       на ньому PHP.
       Через веб-сервер можна пропускати сторінку з кодом PHP, та проглядати
       результат її роботи через веб-браузер. Все це можна робити на вашому
       домашньому комп'ютері, якщо ви просто експерементуєте програмування на PHP.
       Читайте розділ з <link linkend="install">інструкціями встановлення</link>
       для детальнішої інформації.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Створення скриптів для виконання в командному рядку. Ви можете створювати
       PHP-скрипти, що можуть запускатись без будь-якого сервера чи браузера. Для
       цього вам потрібно лише PHP-парсер. Цей тип використання ідеальний для
       скриптів, що регулярно запускаються через cron (на *nix чи Linux) або
       Планувальник Задач (на Windows). Ці скрипти можуть також використовуватись
       для простої обробки текстів. Детальнішу інформацію можна знайти в розділі
       <link linkend="features.commandline">Використання командного рядка PHP</link>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Написання настільних застосунків. Мабуть PHP не найкраща мова для
       створення настільних застосунків з графічним користувальницьким
       інтерфейсом, але якщо ви знаєте PHP дуже добре, та маєте бажання
       спробувати якісь додаткові можливості PHP у ваших застосунках на стороні
       сервера, то маєте можливість використовувати PHP-GTK для створення таких
       програм. В цьому разі можна писати крос-платформені
       застосунки. PHP-GTK є розширенням для PHP, яке недоступне в головному
       дистрибутиві PHP. Якщо ви зацікавлені в PHP-GTK, відвідайте
        <link xlink:href="&url.php.gtk;">їх власний веб-сайт</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP може <link linkend="install">використовуватись</link> на більшості
    операційних системах, включаючи Linux, багато варіантів Unix (включаючи
    HP-UX, Solaris та OpenBSD), Microsoft Windows, Mac OS X, RISC OS, та можливо
    інші. PHP має також підтримку для більшості сучасних веб-серверів, таких як
    Apache, IIS, та багато інших. Окрім цього, підтримка є на будь-якому
    веб-сервері, що використовує бінарники FastCGI PHP, наприклад на lighttpd
    та nginx. PHP працює або як модуль, або як CGI процесор.
   </para>
   <para>
    Так що з PHP ви маєте свободу вибору серед операційних систем та
    веб-серверів. Крім того, ви маєте можливість вибрати процедурне
    програмування або об'єктно-орієнтоване (ООП), чи їх поєднання.
   </para>
   <para>
    З PHP ви не обмежені видачою лише HTML. PHP здатна включати видачу
    зображень, PDF-файлів та навіть Flash роликів (використовуючи libswf та
    Ming), що генеруються на льоту. Ви також можете легко виводити будь-який
    текст, такий як XHTML та будь-який інший XML-файл. PHP може автоматично
    генерувати ці файли, та зберігати їх у файловій системі (а не лише
    виводити текст), формувати кеш на стороні сервера для динамічного вмісту.
   </para>
   <para>
    Одна з найсильніших та найбільш істотних особливостей в PHP - це
    підтримка <link linkend="refs.database">широкого кола баз даних</link>.
    Написання веб-сторінки із застосуванням бази даних - неймовірно просто,
    при використанні одного зі спеціальних розширень (наприклад, для
    <link linkend="book.mysqli">mysql</link>), або при використанні абстрактного
    прошарку, такого як <link linkend="book.pdo">PDO</link>. Також можна просто
    під'єднатись до будь-якої бази даних, що підтримує стандарт Open Database
    Connection через розширення <link linkend="book.uodbc">ODBC</link>. Інші
    бази даних, такі як CouchDB, можуть використовувати
    <link linkend="book.curl">cURL</link> або
    <link linkend="book.sockets">sockets</link>.
   </para>
   <para>
    PHP також підтримує взаємодію з іншими сервісами використовуючи протоколи,
    такі як LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (на Windows) та багато
    інших. Крім того, ви маєте можливість відкривати сирцеві мережеві сокети та
    взаємодіяти з будь-яким іншим протоколом. PHP має підтримку обміну для складних
    структур даних WDDX практично між всіма мовами веб-програмування. Говорячи
    про взаємодію PHP між різними мовами, варто згадати про підтримку об'єктів
    Java та можливість їх прозорого використання в якості об'єктів PHP.
   </para>
   <para>
    PHP має корисні можливості для <link linkend="refs.basic.text">обробки текста</link>,
    включаючи Perl-сумісні регулярні вирази (<link linkend="book.pcre">PCRE</link>),
    і багато розширень та інструментів для <link linkend="refs.xml">обробки та
    маніпуляцій з XML документами</link>. PHP стандартизує всі розширення XML
    на солідній базі бібліотеки <link linkend="book.libxml">libxml2</link>,
    та розширює набір функцій додаючи підтримку <link linkend="book.simplexml">SimpleXML</link>,
    <link linkend="book.xmlreader">XMLReader</link> та
    <link linkend="book.xmlwriter">XMLWriter</link>.
   </para>
   <para>
    Існує ще багато інших цікавих розширень, які можна проглянути як в
    <link linkend="extensions">алфавітному порядку</link> так і по
    <link linkend="funcref">категоріям</link>. Також в даному посібнику по PHP
    є багато додаткових PECL розширень, таких як
    <link xlink:href="&url.xdebug;">XDebug</link>, що вже документовані, або ще ні.
   </para>
   <para>
    Як бачите - цієї сторінки не достатньо, щоб охопити весь список можливостей
    та переваг, що пропонує PHP. Читайте в наступному розділі про
    <link linkend="install">встановлення PHP</link>, та прогляньте розділ
    <link linkend="funcref">Довідник Функцій</link> для більш детальних
    пояснень про згадані тут розширення.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
