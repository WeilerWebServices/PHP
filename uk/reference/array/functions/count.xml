<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334605 Maintainer: iSensetivity Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>Підраховує кількість елементів масиву або чогось в об’єкті</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>count</methodname>
   <methodparam><type>mixed</type><parameter>array_or_countable</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>COUNT_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Підраховує кількість елементів масиву або чогось в об’єкті.
  </para>
  <para>
   Для об’єктів: якщо у вас встановлена
   <link linkend="ref.spl">SPL</link>, то ви можете перехопити
   <function>count</function> шляхом реалізації інтерфейсу
   <classname>Countable</classname>. Інтерфейс має тільки один метод,
   <methodname>Countable::count</methodname>, який повертає значення, яке поверне 
   функція <function>count</function>.
  </para>
  <para>
   Для додаткових пояснень, щодо масивів та їх роботи у PHP читайте 
   розділ документації <link linkend="language.types.array">Масиви</link>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array_or_countable</parameter></term>
     <listitem>
      <para>
       Масив або об’єкт який реалізує <classname>Countable</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Якщо необов’язковий парамерт <parameter>mode</parameter> встановлений у
       <constant>COUNT_RECURSIVE</constant> (або 1), функція 
       <function>count</function>
       рахуватиме кількість елементів масиву рекурсивно.
       Це особливо корисно для підрахунку всіх елементів багатовимірних масивів.
      </para>
      <caution>
       <para>
        <function>count</function> вміє визначати рекурсію для 
        уникнення нескінченного циклу, але при кожному виявленні 
        виводить помилку рівня <constant>E_WARNING</constant> 
        (у випадку, якщо масив містить себе більше одного разу) 
        і повертає більшу кількість, ніж могло б очікуватися.
       </para>
      </caution>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Повертає кількість елементів у <parameter>array_or_countable</parameter>.
   Якщо параметр не є масивом або об'єктом, що реалізує інтерфейс 
   <classname>Countable</classname>, буде повернено 
   <literal>1</literal>.
   Однак є виняток. Якщо параметр <parameter>array_or_countable</parameter> є &null;,
   тоді повернеться <literal>0</literal>.
  </para>
  <caution>
   <para>
    <function>count</function> може повернути 0 як для 
    не ініційованих змінних так і для змінних, ініційованих пустим масивом. 
    Скористайтеся функцією <function>isset</function> аби перевірити ініційованість змінної.
   </para>
  </caution>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Використання <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count($a);
// $result == 3

$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
$result = count($b);
// $result == 3

$result = count(null);
// $result == 0

$result = count(false);
// $result == 1
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Використання рекурсивного <function>count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$food = array('fruits' => array('orange', 'banana', 'apple'),
              'veggie' => array('carrot', 'collard', 'pea'));

// рекурсивний count
echo count($food, COUNT_RECURSIVE); // виведе 8

// нормальний count
echo count($food); // виведе 2

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_array</function></member>
    <member><function>isset</function></member>
    <member><function>strlen</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->