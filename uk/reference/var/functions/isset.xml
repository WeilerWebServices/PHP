<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 336715 Maintainer: ktretyak Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.isset" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>isset</refname>
  <refpurpose>Визначає, чи для змінної встановлено значення та воно не рівне &null;</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
 &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>isset</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Визначає, чи для змінної встановлено значення та воно не рівне &null;.
  </para>
  <para>
   Якщо змінну було видалено через <function>unset</function>, то вона більше
   не вважається встановленою. При перевірці змінної зі значенням &null;,
   <function>isset</function> буде повертати &false;.
   Також зауважте, що символ &null; (<literal>"\0"</literal>) не є еквівалентом
   PHP-константі &null;.
  </para>
  <para>
   Якщо буде передаватись кілька параметрів, то <function>isset</function> буде
   повертати &true;, тільки якщо всі параметри мають встановлене значення.
   Оцінювання відбуватиметься зліва на право та зупинеться там, де зустріне
   змінну, для якої не встановлено значення.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Змінна, яка буде перевірятись.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Інша змінна ...
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Повертає &true;, якщо <parameter>var</parameter> існує та має інше значення,
   ніж &null;, в противному разі - &false;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        <para>
         Перевірка при нечисловому зміщенні для рядка, тепер
         повертає &false;.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Використання <function>isset</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Цей вираз оцінюватиметься як дійсний, а тому текст буде надруковано.
if (isset($var)) {
    echo "Цій змінній встановлено значення, отже текст надрукується.";
}

// В наступних прикладах ми будемо використовувати var_dump() для виводу
// значень, що повертає isset().

$a = "перевірка";
$b = "іншаперевірка";

var_dump(isset($a));      // TRUE
var_dump(isset($a, $b)); // TRUE

unset ($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Функція також працює з елементами масива:
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php

$a = array ('test' => 1, 'hello' => NULL, 'pie' => array('a' => 'apple'));

var_dump(isset($a['test']));            // TRUE
var_dump(isset($a['foo']));             // FALSE
var_dump(isset($a['hello']));           // FALSE

// Ключ 'hello' еквівалентний NULL, а тому вважається, що для нього не встановлено значення
// Якщо ви хочете перевірити значення ключа на наявність NULL, спробуйте це зробити так:
var_dump(array_key_exists('hello', $a)); // TRUE

// Перевірка глибших значень в масиві
var_dump(isset($a['pie']['a']));        // TRUE
var_dump(isset($a['pie']['b']));        // FALSE
var_dump(isset($a['cake']['a']['b']));  // FALSE

?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <example>
   <title>Робота <function>isset</function> при рядковому зміщенні</title>
   <para>
    PHP 5.4 змінює те, як <function>isset</function> поводиться
    при передачі рядкового зміщення.
   </para>
   <programlisting role="php">
<![CDATA[
<?php
$expected_array_got_string = 'somestring';
var_dump(isset($expected_array_got_string['some_key']));
var_dump(isset($expected_array_got_string[0]));
var_dump(isset($expected_array_got_string['0']));
var_dump(isset($expected_array_got_string[0.5]));
var_dump(isset($expected_array_got_string['0.5']));
var_dump(isset($expected_array_got_string['0 Mostel']));
?>
]]>
   </programlisting>
   &example.outputs.53;
   <screen>
<![CDATA[
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
]]>
   </screen>
   &example.outputs.54;
   <screen>
<![CDATA[
bool(false)
bool(true)
bool(true)
bool(true)
bool(false)
bool(false)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    <function>isset</function> працює тільки зі змінними, передача
    будь-чого іншого спричинятиме виведення синтаксичної помилки. Для перевірки,
    чи встановлено значення для
    <link linkend="language.constants">констант</link>, використовуйте функцію
    <function>defined</function>.
   </para>
  </warning>
  &note.language-construct;
  <note>
   <para>
    При використанні <function>isset</function> для перевірки недоступних
    властивостей об'єкта, буде викликатись метод
    <link linkend="object.isset">__isset()</link>, якщо його оголошено.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>empty</function></member>
    <member><link linkend="object.isset">__isset()</link></member>
    <member><function>unset</function></member>
    <member><function>defined</function></member>
    <member><link linkend="types.comparisons">Порівняльна таблиця типів</link></member>
    <member><function>array_key_exists</function></member>
    <member><function>is_null</function></member>
    <member>оператор управління виводу помилок <link linkend="language.operators.errorcontrol">@</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
