<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 334726 Maintainer: joeaccord Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: sobak -->
 <chapter xml:id="features.safe-mode" xmlns="http://docbook.org/ns/docbook">
  <title>Tryb bezpieczny</title>

  <para>
   Tryb bezpieczny (ang. safe mode) jest próbą rozwiązania problemów bezpieczeństwa
   na współdzielonym serwerze. Co prawda rozwiązywanie ich na poziomie PHP
   nie jest najlepszym rozwiązaniem, ale jeśli nie ma możliwości zrobienia
   tego na poziomie serwera WWW lub systemu operacyjnego, na wielu serwerach,
   zwłaszcza u usługodawców internetowych, używa się trybu bezpiecznego.
  </para>

  &warn.deprecated.feature-5-3-0.removed-5-4-0;

  <para>
   <table>
    <title>Rejestr zmian dla <literal>safe mode</literal></title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        Usunięto z PHP. Generuje błąd typu <constant>E_CORE_ERROR</constant>
        jeżeli jest włączone.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Przestarzałe. Generuje błąd <constant>E_DEPRECATED</constant> jeżeli jest włączone.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  <sect1 xml:id="ini.sect.safe-mode">
   <title>Zabezpieczenia i tryb bezpieczny</title>
   <para>
    <table>
     <title>Dyrektywy konfiguracyjne zabezpieczeń i trybu bezpiecznego</title>
     <tgroup cols="4">
      <thead>
       <row>
        <entry>&Name;</entry>
        <entry>&Default;</entry>
        <entry>&Changeable;</entry>
        <entry>&Changelog;</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><link linkend="ini.safe-mode">safe_mode</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.safe-mode-gid">safe_mode_gid</link></entry>
        <entry>"0"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link></entry>
        <entry>NULL</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link></entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.safe-mode-allowed-env-vars">safe_mode_allowed_env_vars</link></entry>
        <entry>"PHP_"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
       <row>
        <entry><link linkend="ini.safe-mode-protected-env-vars">safe_mode_protected_env_vars</link></entry>
        <entry>"LD_LIBRARY_PATH"</entry>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>Usunięta w PHP 5.4.0.</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    &ini.php.constants;
   </para>

   &ini.descriptions.title;

   <para>
    <variablelist>
     <varlistentry xml:id="ini.safe-mode">
      <term>
       <parameter>safe_mode</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Określa czy należy włączyć w PHP tryb bezpieczny.
        Jeśli PHP zostało skompilowane z parametrem <literal>--enable-safe-mode</literal>
        to domyślną wartością jest On. W przeciwnym przypadku domyślną wartością jest Off.
       </para>
       &warn.deprecated.feature-5-3-0.removed-5-4-0;
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-gid">
      <term>
       <parameter>safe_mode_gid</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Domyślnie tryb bezpieczny sprawdza, czy właścicielem uruchamianego skryptu
        lub pliku, do którego funkcja chce uzyskać dostęp, jest ten sam użytkownik (UID).
        Jeśli chcemy aby porównywana dotyczyły całej grupy (GID), należy włączyć safe_mode_gid.
        Określa czy używać <literal>UID</literal> (&false;) lub
        <literal>GID</literal> (&true;) podczas sprawdzania dostępu do pliku.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-include-dir">
      <term>
       <parameter>safe_mode_include_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Sprawdza czy nie nastąpiło obejście <literal>UID</literal>/<literal>GID</literal>
        podczas dołączania plików z tego katalogu i jego podkatalogów (ścieżka do katalogu
        powinna być podana w <link linkend="ini.include-path">include_path</link>
        lub też powinna być dołączona pełna nazwa ścieżki).
       </para>
       <simpara>
        Ta dyrektywa może zawierać dwukropek (w Windows
        średnik) oddzielający ścieżki, podobnie jak w przypadku dyrektywy
        <link linkend="ini.include-path">include_path</link>,
        a nie tylko pojedyńczy katalog.
       </simpara>
       <simpara>
        Rejestrowanie ścieżki określane jest obecnie przez przedrostek, a nie
        nazwę katalogu. To oznacza, że "<literal>safe_mode_include_dir = /dir/incl</literal>" pozwala
        uzyskać dostęp do "<literal>/dir/include</literal>" i "<literal>/dir/incls</literal>" (jeżeli istnieją).
        Gdy chcemy ograniczyć dostęp tylko do określonego katalogu, dodajemy
        na końcu ukośnik. Na przykład: "<literal>safe_mode_include_dir = /dir/incl/</literal>"
       </simpara>
       <simpara>
        Jeśli wartość dyrektywy jest pusta, to żadne pliki - inne niż należące do
        <literal>UID</literal>/<literal>GID</literal> nie mogą być dołączone.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-exec-dir">
      <term>
       <parameter>safe_mode_exec_dir</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Jeśli PHP działa w trybie bezpiecznym, <function>system</function> i inne
        <link linkend="ref.exec">funkcje wykonujące programy systemowe</link>
        otrzymają odmowę uruchomienia programów, tych które nie znajdują się w tym katalogu.
        Używamy <literal>/</literal> jako separatora katalogu dla wszystkich środowisk,
        włącznie z Windows.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-allowed-env-vars">
      <term>
       <parameter>safe_mode_allowed_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Ustawienie pewnych zmiennych środowiskowych może być potencjalnym naruszeniem bezpieczeństwa.
        Ta dyrektywa zawiera listę przedrostków oddzielonych przecinkami.  W trybie bezpiecznym
        użytkownik może wyłącznie zmieniać zmienne środowiskowe, których nazwy zaczynają się
        od przedrostków tutaj wymienionych.  Domyślnie użytkownicy mają tylko możliwość ustawiania
        zmiennych środowiskowych zaczynających się od <literal>PHP_</literal>
        (np. <literal>PHP_FOO=BAR</literal>).
       </para>
       <note>
        <para>
         Jeśli ta dyrektywa jest pusta, PHP pozwoli użytkownikowi zmieniać WSZYSTKIE
         zmienne środowiskowe!
        </para>
       </note>
      </listitem>
     </varlistentry>
     <varlistentry xml:id="ini.safe-mode-protected-env-vars">
      <term>
       <parameter>safe_mode_protected_env_vars</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Ta dyretywa zawiera listę zmiennych środowiskowych oddzielonych
        przecinkami, których użytkownik końcowy nie może zmienić za pomocą
        <function>putenv</function>. Te zmienne są zawsze chronione
        nawet jeśli safe_mode_allowed_env_vars pozwala na ich zmianę.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Patrz także: <link linkend="ini.open-basedir">open_basedir</link>,
    <link linkend="ini.disable-functions">disable_functions</link>,
    <link linkend="ini.disable-classes">disable_classes</link>,
    <link linkend="ini.register-globals">register_globals</link>,
    <link linkend="ini.display-errors">display_errors</link>,
    i <link linkend="ini.log-errors">log_errors</link>.
   </para>

  <para>
   Gdy opcja <link linkend="ini.safe-mode">safe_mode</link> jest włączona, PHP sprawdza
   czy właścicielem wykonywanego skryptu jest właściciel pliku, na którym chce
   operować funkcja, lub czy jest to katalog tego samego użytkownika. Na Przykład:
   <programlisting role="ls">
<![CDATA[
-rw-rw-r--    1 rasmus   rasmus       33 Jul  1 19:20 script.php
-rw-r--r--    1 root     root       1116 May 26 18:01 /etc/passwd
]]>
   </programlisting>
   Uruchomienie <filename>script.php</filename>:
   <programlisting role="php">
<![CDATA[
<?php
 readfile('/etc/passwd');
?>
]]>
   </programlisting>
   zwraca błąd jeśli tryb bezpieczny jest włączony:
   <screen>
<![CDATA[
Warning: SAFE MODE Restriction in effect. The script whose uid is 500 is not
allowed to access /etc/passwd owned by uid 0 in /docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Jednakże mogą być środowiska, gdzie zbyt restrykcyjna weryfikacja <literal>UID</literal>
   nie jest stosownym rozwiązaniem, a łagodniejsze sprawdzanie <literal>GID</literal> jest
   w pełni wystarczające.  Można to zmienić za pomocą <link
   linkend="ini.safe-mode-gid">safe_mode_gid</link>. Ustawienie tej opcji na
   <literal>On</literal> włącza łagodniejsze sprawdzanie <literal>GID</literal>,
   a ustawienie na <literal>Off</literal> (domyślnie) przełącza na
   sprawdzanie <literal>UID</literal>.
  </para>
  <para>
   Jeśli zamiast <link linkend="ini.safe-mode">safe_mode</link> ustawiamy
   katalog <link linkend="ini.open-basedir">open_basedir</link> wtedy wszystkie
   operacje na plikach będą ograniczone do plików znajdujących się w nim.
   Na przykład (Apache &httpd.conf;):
   <programlisting role="ini">
<![CDATA[
<Directory /docroot>
  php_admin_value open_basedir /docroot
</Directory>
]]>
   </programlisting>
   Jeśli uruchominy plik <filename>script.php</filename> z ustawieniem
   <link linkend="ini.open-basedir">open_basedir</link>
   wówczas otrzymamy wynik:
   <screen>
<![CDATA[
Warning: open_basedir restriction in effect. File is in wrong directory in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <para>
   Możemy wyłączyć obsługę wybranych funkcji. Zauważmy, że dyrektywa
   <link linkend="ini.disable-functions">disable_functions</link>
   nie może być ustawiana poza plikiem &php.ini; co oznacza, że
   nie możemy wyłączyć funkcji dla wybranego wirtualnego hosta lub katalogu
   zdefiniowanego w pliku &httpd.conf;.
   Jeśli dodamy następującą dyrektywę do naszego pliku &php.ini;:
   <programlisting role="ini">
<![CDATA[
disable_functions = readfile,system
]]>
   </programlisting>
   Otrzymamy następujący wynik:
   <screen>
<![CDATA[
Warning: readfile() has been disabled for security reasons in
/docroot/script.php on line 2
]]>
   </screen>
  </para>
  <warning>
   <para>
    Naturalnie restrykcje PHP nie obowiązują w plikach wykonywalnych.
   </para>
  </warning>
 </sect1>

  <sect1 xml:id="features.safe-mode.functions">
   <title>Funkcje ograniczane/wyłączone w trybie bezpiecznym</title>
   <para>
    Jest to najprawdopodobniej wciąż niekompletna lista funkcji
    ograniczonych przez
    <link linkend="features.safe-mode">tryb bezpieczny</link>.
    <!-- TODO: add &note.sm.*; to the functions mentioned here.
    That entity should link to this section -->
    <table>
     <title>Funkcje ograniczone w trybie bezpiecznym</title>
     <tgroup cols="2">
      <thead>
       <row>
        <entry>Funkcja</entry>
        <entry>Ogranicznenia</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><function>dbmopen</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>dbase_open</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_rowcount</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>filepro_retrieve</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry>ifx_*</entry>
        <entry>Podlega ograniczeniom narzuconym przez sql_safe_mode, (!= tryb bezpieczny)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>ingres_*</entry>
        <entry>Podlega ograniczeniom narzuconym przez sql_safe_mode, (!= tryb bezpieczny)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry>mysql_*</entry>
        <entry>Podlega ograniczeniom narzuconym przez sql_safe_mode, (!= tryb bezpieczny)</entry>
        <!-- TODO: more info on sql-safe-mode -->
       </row>
       <row>
        <entry><function>pg_lo_import</function></entry>
        <entry>&sm.uidcheck;</entry>
        <!-- source TODO: there is no PHP-warning for that safe-mode-restriction -->
       </row>
       <row>
        <entry><function>posix_mkfifo</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>putenv</function></entry>
        <entry>Podlega dyrektywom safe_mode_protected_env_vars i
        safe_mode_allowed_env_vars;. Zobacz również dokumantację
        do <function>putenv</function></entry>
        <!-- TODO: document those directives in chapters/config.xml -->
       </row>
       <row>
        <entry><function>move_uploaded_file</function></entry>
        <entry>&sm.uidcheck; <!-- TODO: check this --></entry>
       </row>

       <!-- TODO: from here on, add warning to the function itself -->

       <row>
        <entry><function>chdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>dl</function></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><link linkend="language.operators.execution">lewy apostrof</link></entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>shell_exec</function> (funkcja równoważna z
        lewym apostrofem)</entry>
        <entry>&sm.disabled;</entry>
       </row>
       <row>
        <entry><function>exec</function></entry>
        <entry>Możemy uruchamiać programy jedynie z katalogu zdefiniowanego za pomocą dyrektywy <link
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Ze względów praktycznych obecnie nie ma możliwości stosowania
        <literal>..</literal> w ścieżce do programu.
        Wykonywana jest <function>escapeshellcmd</function> na argumencie tej
        funkcji.</entry>
       </row>
       <row>
        <entry><function>system</function></entry>
        <entry>Możemy uruchamiać programy jedynie z katalogu zdefiniowanego za pomocą dyrektywy <link
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Ze względów praktycznych obecnie nie ma możliwości stosowania
        <literal>..</literal> w ścieżce do programu.
        Wykonywana jest <function>escapeshellcmd</function> na argumencie tej
        funkcji.</entry>
       </row>
       <row>
        <entry><function>passthru</function></entry>
        <entry>Możemy uruchamiać programy jedynie z katalogu zdefiniowanego za pomocą dyrektywy <link
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Ze względów praktycznych obecnie nie ma możliwości stosowania
        <literal>..</literal> w ścieżce do programu.
        Wykonywana jest <function>escapeshellcmd</function> na argumencie tej
        funkcji.</entry>
       </row>
       <row>
        <entry><function>popen</function></entry>
        <entry>Możemy uruchamiać programy jedynie z katalogu zdefiniowanego za pomocą dyrektywy <link
        linkend="ini.safe-mode-exec-dir">safe_mode_exec_dir</link>.
        Ze względów praktycznych obecnie nie ma możliwości stosowania
        <literal>..</literal> w ścieżce do programu.
        Wykonywana jest <function>escapeshellcmd</function> na argumencie tej
        funkcji.</entry>
        <!-- TODO: not sure. popen uses a completely different implementation
        Don't know why, don't know whether it's behaving the same -->
       </row>
       <row>
        <entry><function>fopen</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>mkdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rmdir</function></entry>
        <entry>&sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>rename</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;<!-- on the old name only, it seems. Is rename preventing moving files? --></entry>
       </row>
       <row>
        <entry><function>unlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>copy</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (dla
        <parameter>źródła</parameter> i
        <parameter>przeznaczenia</parameter>)</entry>
       </row>
       <row>
        <entry><function>chgrp</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chown</function></entry>
        <entry>&sm.uidcheck;</entry>
       </row>
       <row>
        <entry><function>chmod</function></entry>
        <entry>&sm.uidcheck; Dodatkowo, nie można ustawić bitów
        SUID, SGID i sticky bit</entry>
       </row>
       <row>
        <entry><function>touch</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir;</entry>
       </row>
       <row>
        <entry><function>symlink</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (notatka: sprawdzany jest jedynie element,
        do którego utworzone jest dowiązanie symboliczne)</entry>
       </row>
       <row>
        <entry><function>link</function></entry>
        <entry>&sm.uidcheck; &sm.uidcheck.dir; (notatka: sprawdzany jest jedynie element,
        do którego utworzone jest dowiązanie)</entry>
       </row>
       <row>
        <entry><function>apache_request_headers</function></entry>
        <entry>W trybie bezpiecznym, nie są zwracane nagłówki zaczynające
        się od 'authorization' (wielkość liter nie ma znaczenia).</entry>
       </row>
       <row>
        <entry><function>header</function></entry>
        <entry>W trybie bezpiecznym UID skryptu jest dodawana do
        <literal>nazwy</literal> - części nagłówka
        <literal>Uwierzytelnienia-WWW</literal>, jeśli ustawimy ten nagłówek
        (używane w Uwierzytelnieniu HTTP).</entry>
       </row>
       <row>
        <entry><link linkend="features.http-auth">PHP_AUTH variables</link></entry>
        <entry>
         W trybie bezpiecznym zmienne <varname>PHP_AUTH_USER</varname>,
         <varname>PHP_AUTH_PW</varname>, i <varname>AUTH_TYPE</varname>
         nie są dostępne w <varname>$_SERVER</varname>. Niezależnie od tego, możemy
         nadal używać <varname>REMOTE_USER</varname> dla użytkownika.
         (notatka: dostępna tylko od PHP 4.3.0)
        </entry>
       </row>
       <row>
        <entry>
         <function>highlight_file</function>,
         <function>show_source</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
        </entry>
       </row>
       <row>
        <entry>
         <function>parse_ini_file</function>
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir;
        </entry>
       </row>
       <row>
        <entry>
         <function>set_time_limit</function>
        </entry>
        <entry>
         Nie ma żadnego skutku, gdy PHP działa w trybie &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <link linkend="ini.max-execution-time">max_execution_time</link>
        </entry>
        <entry>
         Nie ma żadnego skutku, gdy PHP działa w trybie &safemode;.
        </entry>
       </row>
       <row>
        <entry>
         <function>mail</function>
        </entry>
        <entry>
         W trybie bezpiecznym, piąty parametr jest nieaktywny.
        </entry>
       </row>
       <row>
        <entry>
         <function>session_start</function>
        </entry>
        <entry>
         Właściciel skryptu musi być również właścicielem katalogu<link
         linkend="ini.session.save-path">session.save_path</link>, gdy wartość <link
         linkend="ini.session.save-handler">session.save_handler</link> jest
         ustawiona na <literal>files</literal>.
        </entry>
       </row>
       <row>
        <entry>
         Wszystkie funkcje systemu plików oraz strumieni.
        </entry>
        <entry>
         &sm.uidcheck; &sm.uidcheck.dir; (zobacz opcję <link
          linkend="ini.safe-mode-include-dir">safe_mode_include_dir</link>
         &php.ini;.
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
