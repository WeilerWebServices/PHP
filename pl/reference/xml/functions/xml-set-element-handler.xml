<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 324122 Maintainer: adi Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: cyb0org, sobak -->
<refentry xml:id="function.xml-set-element-handler" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>xml_set_element_handler</refname>
  <refpurpose>Ustawia początkową i końcową procedurę obsługi elementu</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>xml_set_element_handler</methodname>
   <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
   <methodparam><type>callbable</type><parameter>początkowa_procedura_obsługi_elementu</parameter></methodparam>
   <methodparam><type>callbable</type><parameter>końcowa_procedura_obsługi_elementu</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ustawia funkcje procedury obsługi elementu dla <parameter>parser</parameter> XML.
   <parameter>początkowa_procedura_obsługi_elementu</parameter> i
   <parameter>końcowa_procedura_obsługi_elementu</parameter> są ciągami znaków zawierającymi
   nazwy funkcji, które muszą istnieć podczas wywołania <function>xml_parse</function>
   dla <parameter>parser</parameter>.
  </para>
</refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>parser</parameter></term>
     <listitem>
      <para>
       Referencja do parsera XML do ustawiania obsługi funkcji początku i końca elementu.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>początkowa_procedura_obsługi_elementu</parameter></term>
     <listitem>
      <para>
       Funkcja nazwana przez <parameter>początkowa_procedura_obsługi_elementu</parameter>
       musi przyjmować trzy parametry:
       <methodsynopsis>
        <methodname><replaceable>początkowa_procedura_obsługi_elementu</replaceable></methodname>
        <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
        <methodparam><type>string</type><parameter>nazwa</parameter></methodparam>
        <methodparam><type>array</type><parameter>atrybuty</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
       <varlistentry>
        <term><parameter>parser</parameter></term>
        <listitem>
         <simpara>
           Pierwszy parametr, <replaceable>parser</replaceable>,
           jest referencją do parsera XML wywołującego procedurę obsługi.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><parameter>nazwa</parameter></term>
        <listitem>
         <simpara>
          Drugi parametr, <parameter>nazwa</parameter>, zawiera nazwę elementu
          dla którego procedura obsługi została wywołana. Jeśli dla tego parsera
          włączony jest <link linkend="xml.case-folding">case-folding</link>,
          wówczas nazwa elementu będzie zamieniona na duże litery.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><parameter>atrybuty</parameter></term>
        <listitem>
         <simpara>
          Trzeci parametr, <parameter>atrybuty</parameter>, zawiera tablicę
          asocjacyjną z atrybutami elementów (jeśli jakiekolwiek są).
          Kluczami tych tablic są nazwy atrybutów a wartościami wartości artybutów.
          Nazwy atrybutów są zamieniane na duże litery za pomocą opcji <link
          linkend="xml.case-folding">case-folding</link> na tej samej zasadzie jak
          nazwy elementów. Wartości atrybutów opcja case-folded <emphasis>nie
          dotyczy</emphasis>.
         </simpara>
         <simpara>
          Oryginalna kolejność atrybutów może być odzyskana za pomocą normalnego
          przejścia przez <parameter>atrybuty</parameter> używając <function>each</function>.
          Pierwszy klucz w tablicy był pierwszym atrybutem itd.
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
     &note.func-callback;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>końcowa_procedura_obsługi_elementu</parameter></term>
     <listitem>
     <para>
      Funkcja nazwana przez <parameter>końcowa_procedura_obsługi_elementu</parameter>
      musi przyjmować dwa parametry:
      <methodsynopsis>
       <methodname><replaceable>końcowa_procedura_obsługi_elementu</replaceable></methodname>
       <methodparam><type>resource</type><parameter>parser</parameter></methodparam>
       <methodparam><type>string</type><parameter>nazwa</parameter></methodparam>
      </methodsynopsis>
      <variablelist>
       <varlistentry>
        <term><parameter>parser</parameter></term>
        <listitem>
         <simpara>
          Pierwszy parametr, <replaceable>parser</replaceable>,
          jest referencją do parsera XML wywołującego procedurę obsługi.
         </simpara>
        </listitem>
       </varlistentry>
       <varlistentry>
        <term><parameter>nazwa</parameter></term>
        <listitem>
         <simpara>
          Drugi parametr, <parameter>nazwa</parameter>, zawiera nazwę elementu
          dla którego procedura obsługi została wywołana. Jeśli dla tego parsera
          włączony jest <link linkend="xml.case-folding">case-folding</link>,
          wówczas nazwa elementu będzie zamieniona na duże litery.
         </simpara>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
      <para>
       Jeśli funkcja procedury obsługi jest podana jako pusty ciąg znaków lub &false;,
       wówczas procedura obsługi w zapytaniu jest wyłączona.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
