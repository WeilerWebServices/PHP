<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 342074 Maintainer: sobak Status: ready -->
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.number-format" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>number_format</refname>
  <refpurpose>Formatuje liczbę grupując tysiące</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>liczba</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>miejsc_dziesiętnych</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>liczba</parameter></methodparam>
   <methodparam><type>int</type><parameter>miejsc_dziesiętnych</parameter><initializer>0</initializer></methodparam>
   <methodparam><type>string</type><parameter>separator_dziesiętnych</parameter><initializer>"."</initializer></methodparam>
   <methodparam><type>string</type><parameter>separator_tysięcy</parameter><initializer>","</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ta funkcja akceptuje jeden, dwa lub cztery parametry (ale nie trzy):
  </para>
  <para>
   Jeżeli podano tylko jeden parametr,
   <parameter>number</parameter> zostanie sformatowana bez miejsc dziesiętnych,
   ale z przecinkiem pomiędzy każdą grupą tysięcy.
  </para>
  <para>
   Jeżeli podano dwa paramery, <parameter>liczba</parameter> zostanie
   sformatowana z ilością miejsc dziesiętnych podanych w drugim argumencie,
   poprzedzonych kropką (".") i z przecinkiem rozdzielającym każdą grupę
   tysięcy.
  </para>
  <para>
   Jeżeli podano wszystkie cztery parametry, <parameter>liczba</parameter> zostanie
   sformatowana z ilością miejsc dziesiętnych podanych w drugim argumencie,
   poprzedzonych kropką (".") i <parameter>separator_tysięcy</parameter> zostanie
   użyty do rozdzielenia grup tysięcy, zamiast przecinka (",").
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>liczba</parameter></term>
     <listitem>
      <para>
       Liczba do sformatowania.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>miejsc_dziesiętnych</parameter></term>
     <listitem>
      <para>
       Ustawia liczbę miejsc dziesiętnych.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator_dziesiętnych</parameter></term>
     <listitem>
      <para>
       Ustawia separator dla miejsc dziesiętnych.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator_tysięcy</parameter></term>
     <listitem>
      <para>
       Ustawia separator dla tysięcy.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Sformatowana <parameter>liczba</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        Funkcja wspiera wiele bajtów w argumentach
        <parameter>separator_dziesiętnych</parameter> oraz
        <parameter>separator tysięcy</parameter>. W starszych
        wersjach używany był tylko pierwszy bajt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>number_format</function></title>
    <para>
     Przykładowo, notacja francuska zazwyczaj używa dwóch miejsc dziesiętnych,
     przecinka (',') jako ich separatora i spacji (' ') jako
     separatora tysięcy. Poniższy przykład demonstruje rózne sposoby sformatowania liczb:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$number = 1234.56;

// notacja angielska (domyślna)
$english_format_number = number_format($number);
// 1,235

// notacja francuska
$nombre_format_francais = number_format($number, 2, ',', ' ');
// 1 234,56

$number = 1234.5678;

// notacja angielska bez separatora tysięcy
$english_format_number = number_format($number, 2, '.', '');
// 1234.57

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>money_format</function></member>
    <member><function>sprintf</function></member>
    <member><function>printf</function></member>
    <member><function>sscanf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
