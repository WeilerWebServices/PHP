<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 297028 Maintainer: joeaccord Status: ready -->
<!-- $Revision$ -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id='function.ibase-blob-get'>
 <refnamediv>
  <refname>ibase_blob_get</refname>
  <refpurpose>Pobiera X bajtów danych z otwartego BLOBa</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>ibase_blob_get</methodname>
   <methodparam><type>resource</type><parameter>uchwyt_do_bloba</parameter></methodparam>
   <methodparam><type>int</type><parameter>X</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ta funkcja zwraca <parameter>X</parameter> bajtów danych z BLOBa,
   który został otwarty do odczytu za pomocą <function>ibase_blob_open</function>.
  </para>
  <note>
   <para>
    Nie jest możliwe odczytywanie informacji o BLOBie, który jest otwarty
    do zapisu za pomocą <function>ibase_blob_create</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>uchwyt_do_bloba</parameter></term>
     <listitem>
      <para>
       Uchwyt do BLOBa otwartego za pomocą <function>ibase_blob_open</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>X</parameter></term>
     <listitem>
      <para>
       Rozmiar zwracanych danych.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca maksymalnie <parameter>X</parameter> bajtów z BLOBa, lub &false;
   w przypadku niepowodzenia.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład <function>ibase_blob_get</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$wynik           = ibase_query("SELECT wartosc_bloba FROM tabela");
$dane            = ibase_fetch_object($wynik);
$dane_bloba      = ibase_blob_info($dane->WARTOSC_BLOBA);
$uchwyt_do_bloba = ibase_blob_open($dane->WARTOSC_BLOBA);
echo               ibase_blob_get($uchwyt_do_bloba, $dane_bloba[0]);
?>
]]>
    </programlisting>
   </example>
   Podczas gdy ten przykład nie robi niczego więcej, co można uzyskać wywołując
   'ibase_blob_echo($dane->WARTOSC_BLOBA)', pokazuje natomiast jak możemy
   pobierać do $zmiennej informacje aby manipulować nimi tak, jak sobie tego życzymy.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ibase_blob_open</function></member>
    <member><function>ibase_blob_close</function></member>
    <member><function>ibase_blob_echo</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
