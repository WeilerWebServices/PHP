<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
  <refentry xml:id="function.session-register" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>
     Zarejestruj jedną lub więcej zmiennych globalnych w bieżącej sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_register</methodname>
      <methodparam><type>mixed</type><parameter>nazwa</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_register</function> jest funkcją o zmiennej liczbie
     argumentów, z których każdy może być albo stringiem zawierającym nazwę
     zmiennej lub tablicą zawierającą nazwy zmiennych lub inne tablice. Dla
     każdej napotkanej nazwy zmiennej, <function>session_register</function>
     rejestruje w bieżącej sesji globalną zmienną o danej nazwie.
    </para>
    <caution>
     <para>
      Jeśli skrypt ma działać niezależnie od ustawienia
      <link linkend="ini.register-globals">register_globals</link>, niezbędne
      jest użycie tablicy
      <link linkend="reserved.variables.session">$_SESSION</link>, jako że
      elementy <varname>$_SESSION</varname> są atomatycznie rejestrowane.
      Jeśli skrypt korzysta z <function>session_register</function>, nie
      będzie on działać w środowisku z wyłączoną dyrektywą
      <link linkend="ini.register-globals">register_globals</link>.
     </para>
    </caution>
    &note.registerglobals;
    <caution>
     <para>
      Funkcja ta rejestruje <emphasis>globalną</emphasis> zmienną. Jeśli
      zachodzi konieczność zarejestrowania zmiennej sesyjnej z wnętrza
      funkcji, należy uczynić ją globalną poprzez użycie instrukcji
      <link
       linkend="language.variables.scope"><command>global</command></link>,
      przez tablicę <varname>$GLOBALS[]</varname> lub prez użycie specjalnych
      tablic opisanych poniżej.
     </para>
    </caution>
    <caution>
     <para>
      Przy korzystaniu z tablicy <varname>$_SESSION</varname>
      (lub <varname>$HTTP_SESSION_VARS</varname>) nie nalezy korzystać z
      funkcji <function>session_register</function>,
      <function>session_is_registered</function> i
      <function>session_unregister</function>.
     </para>
    </caution>
    <para>
     Funkcja ta zwraca wartość &true; jeśli wszystkie zmienne zostały
     pomyślnie zarejestrowane w sesji.
    </para>
    <para>
     Jeśli przed wywołaniem tej funkcji nie wywołano
     <function>session_start</function>, dokonane zostanie niejawne wywołanie
     <function>session_start</function> bez żadnych parametrów. Tablica
     <varname>$_SESSION</varname> nie naśladuje tego zachowania i wymaga
     wywołania <function>session_start</function> przed korzystaniem z niej.
    </para>
    <para>
     Możesz tworzyć zmienne sesyjne po prostu przez dopisywanie odpowiednich
     wpisów do tablic <varname>$_SESSION</varname> lub 
     <varname>$HTTP_SESSION_VARS</varname> (PHP &lt; 4.1.0).
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// Nie powinno się już używać session_register()
$barney = "Duży fioletowy dinozaur.";
session_register("barney");

// Od PHP 4.1.0 Preferowane jest użycie $_SESSION
$_SESSION["zim"] = "Najeźdźca z innej planety.";

// Stara metoda opiera się o $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["spongebob"] = "Ma kwadratowe spodnie.";
?>
]]>       
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      W chwili obecnej niemożliwe jest zarejestrowanie w sesji zmiennych
      zawierających zasoby. Na przykład, nie możesz stworzyć połączenia do
      bazy danych i zachować identyfikator połączenia jako zmienną sesyjną i
      oczekować, że połączenie ciągle będzie aktywne po odtworzeniu danych
      sesji. Funkcję PHP, która zwraca zasoby, identyfikuje się przez
      zwracanie typu <literal>resource</literal> w definicji funkcji. Listę
      funkcji, które zwracają zasoby, można znaleźć w załączniku
      <link linkend="resource">typy zasobów</link>.
     </para>
     <para>
      Jeśli użyta jest tablica <varname>$_SESSION</varname> (lub
      <varname>$HTTP_SESSION_VARS</varname> dla PHP 4.0.6 i starszych),
      przypisz vartość do <varname>$_SESSION</varname>, na przykład
      $_SESSION['var'] = 'ABC';
     </para>
    </note>
    <para>
     Patrz także: <function>session_is_registered</function>,
     <function>session_unregister</function> i
     <link linkend="reserved.variables.session">$_SESSION</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
