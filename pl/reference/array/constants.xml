<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 341282 Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
<appendix xml:id="array.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants.core;
 <para>
 <variablelist>
  <varlistentry xml:id="constant.case-lower">
   <term>
    <constant>CASE_LOWER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_LOWER</constant> jest używana w funkcji
     <function>array_change_key_case</function> do konwersji kluczy tablicy do
     samych małych liter. Jest to także domyślny przypadek dla
     <function>array_change_key_case</function>.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.case-upper">
   <term>
    <constant>CASE_UPPER</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>CASE_UPPER</constant> jest używana w funkcji
     <function>array_change_key_case</function> do konwersji kluczy tablicy do
     samych dużych liter.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> Flagi kolejności sortowania:
 <variablelist>
  <varlistentry xml:id="constant.sort-asc">
   <term>
    <constant>SORT_ASC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_ASC</constant> używana jest w połączeniu z
     <function>array_multisort</function> do sortowania w porządku rosnącym.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-desc">
   <term>
    <constant>SORT_DESC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_DESC</constant> używana jest w połączeniu z
     <function>array_multisort</function> do sortowania w porządku rosnącym.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>

 <para> Flagi typu sortowania - używane przez różne funkcje sortujące
 <variablelist>
  <varlistentry xml:id="constant.sort-regular">
   <term>
    <constant>SORT_REGULAR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_REGULAR</constant> używana jest do porównywania
     elementów w normalny sposób.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-numeric">
   <term>
    <constant>SORT_NUMERIC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_NUMERIC</constant> używana jest do porównywania
     elementów liczbowo.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-string">
   <term>
    <constant>SORT_STRING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_STRING</constant> używana jest do porównywania elementów
     jako ciągi tekstowe.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-locale-string">
   <term>
    <constant>SORT_LOCALE_STRING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>SORT_LOCALE_STRING</constant> używana jest do porównywania elementów
     jako ciągi tekstowe w oparciu o bieżące ustawienia locale. Dodane w PHP 5.0.2.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-natural">
   <term>
    <constant>SORT_NATURAL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_NATURAL</constant> jest używana do porównywania elementów
    jako ciągi tekstowe, przy użyciu sortowania naturalnego, jak w <function>natsort</function>. Dodano w PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.sort-flag-case">
   <term>
    <constant>SORT_FLAG_CASE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
    <constant>SORT_FLAG_CASE</constant> może zostać połączone
         (bitowe OR) z
         <constant>SORT_STRING</constant> lub
         <constant>SORT_NATURAL</constant> aby posortować elemnenty nie zwracając uwagi na wielkość znaków. Dodano w PHP 5.4.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
 
 <para> Flagi filtrowania:
 <variablelist>
  <varlistentry xml:id="constant.array-filter-use-key">
   <term>
    <constant>ARRAY_FILTER_USE_KEY</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>ARRAY_FILTER_USE_KEY</constant> jest używana z funkcją
     <function>array_filter</function>, aby przekazać każdy klucz jako pierwszy argument do podanej funkcji zwrotnej.
     Dodano w PHP 5.6.0.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.array-filter-use-both">
   <term>
    <constant>ARRAY_FILTER_USE_BOTH</constant> 
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     <constant>ARRAY_FILTER_USE_BOTH</constant> jest używana z funkcją
     <function>array_filter</function>, aby przekazać zarówno wartość i klucz do podanej funkcji zwrotnej.
     Dodano w PHP 5.6.0.
    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
 
 <variablelist>
  <varlistentry xml:id="constant.count-normal">
   <term>
    <constant>COUNT_NORMAL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.count-recursive">
   <term>
    <constant>COUNT_RECURSIVE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-overwrite">
   <term>
    <constant>EXTR_OVERWRITE</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-skip">
   <term>
    <constant>EXTR_SKIP</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-same">
   <term>
    <constant>EXTR_PREFIX_SAME</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-all">
   <term>
    <constant>EXTR_PREFIX_ALL</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-invalid">
   <term>
    <constant>EXTR_PREFIX_INVALID</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-prefix-if-exists">
   <term>
    <constant>EXTR_PREFIX_IF_EXISTS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-if-exists">
   <term>
    <constant>EXTR_IF_EXISTS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.extr-refs">
   <term>
    <constant>EXTR_REFS</constant>
     (<type>integer</type>)
   </term>
   <listitem>
    <simpara>

    </simpara>
   </listitem>
  </varlistentry>
 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
