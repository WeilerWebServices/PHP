<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.array-merge" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_merge</refname>
  <refpurpose>Łączy jedną lub więcej tablic</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Opis</title>
  <methodsynopsis>
   <type>array</type><methodname>array_merge</methodname>
   <methodparam><type>array</type><parameter>tablica1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>tablica2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_merge</function> łączy elementy jednej lub więcej tablic
   razem, tak że wartości jednej tablicy są wstawiane na koniec poprzedniej
   tablicy. Funkcja ta zwraca tablicę wynikową.
  </para>
  <para>
   Jeśli tablice wejściowe mają takie same klucze tekstowe, najnowsza
   wartość nadpisze starszą. Jednakże jeśli tablice będą miały takie same
   klucze liczbowe, późniejsza wartość <emphasis
   role="strong">nie</emphasis> nadpisze starszej, lecz zostanie
   dopisana na koniec tablicy.
  </para>
  <para>
   Jeśli podana zostanie tylko jedna tablica i jest ona indeksowana
   numerycznie, to klucze tablicy zostaną przeindeksowane w sposób ciągły.
  </para>
  <para>
   <example>
    <title>Przykład użycia <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array("kolor" => "czerwony", 2, 4);
$tablica2 = array("a", "b", "kolor" => "zielony", "kształt" => "trapezoid", 4);
$wynik = array_merge($tablica1, $tablica2));
print_r($wynik);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [kolor] => zielony
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [kształt] => trapezoid
    [4] => 4
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Prosty przykład użycia <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik    = array_merge($tablica1, $tablica2);
?>
]]>
    </programlisting>
    <para>
     Nie zapomnij że klucze numeryczne będą przenumerowane!
    </para>
    <screen role="php">
<![CDATA[
Array
(
[0] => dane
)
]]>
    </screen>
    <para>
     Jeśli chcesz całkowicie zachować tablice i tylko dodać jedną na końcu
     drugiej, użyj operatora <literal>+</literal>:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik = $tablica1 + $tablica2;
?>
]]>
    </programlisting>
    <para>
     Klucze numeryczne pozostaną zachowane a co za tym idzie asocjacje
     zostaną niezmienione.
    </para>
    <screen role="php">
<![CDATA[
Array
(
    [1] => dane
)
]]>
    </screen>
   </example>
  </para>
  <warning>
   <para>
    Zachowanie <function>array_merge</function> zostało zmienione w PHP 5.
    Inaczej niż w PHP 4, <function>array_merge</function> akceptuje teraz
    tylko parametry typu <type>array</type>. Jednakże można użyć rzutowania
    typów aby łączyć zmienne innych typów. Ilustruje to poniższy przykład.
   </para>
   <para>
    <example>
     <title>Przykład użycia <function>array_merge</function> w PHP 5</title>
     <programlisting role="php">
 <![CDATA[
 <?php
 $poczatek = 'foo';
 $koniec = array(1 => 'bar');
 $wynik = array_merge((array)$poczatek, (array)$koniec);
 print_r($wynik);
 ?>
 ]]>
     </programlisting>
     &example.outputs;
     <screen role="php">
 <![CDATA[
 Array
 (
     [0] => foo
     [1] => bar
 )
 ]]>
     </screen>
    </example>
   </para>
  </warning>
  <para>
   Patrz także: <function>array_merge_recursive</function>,
   <function>array_combine</function> i <link
    linkend="language.operators.array">operatory tablic</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
