<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: slawek Status: ready -->
<!-- $Revision$ -->
  <refentry xml:id="function.mysql-pconnect" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_pconnect</refname> 
    <refpurpose>
     Otwiera stałe połączenie z serwerem MySQL
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>resource</type><methodname>mysql_pconnect</methodname>
      <methodparam choice="opt"><type>string</type><parameter>
        serwer
       </parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>użytkownik</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>hasło</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Zwraca identyfikator połączenia w przypadku powodzenia, lub
     &false; jeśli wystąpi błąd.
    </para>
    <para>
     <function>mysql_connect</function> nawiązuje połączenie z serwerem
     MySQL. Jeśli nie podano argumentów, przyjmowane są następujące
     wartości domyślne: <parameter>host:port</parameter> =
     'localhost:3306', <parameter>użytkownik</parameter> = nazwa użytkownika
     będącego właścicielem procesu serwera, <parameter>hasło</parameter> =
     puste hasło.
    </para>
    <para>
     Argument <parameter>host</parameter> może również zawierać
     numer portu, np. &quot;host:port&quot; lub ścieżkę do gniaza np.
     &quot;:/sciezka/do/gniazda&quot; dla localhosta.
     <note>
      <para>
       Obsługę &quot;:port&quot; dodano w PHP 3.0B4.
      </para>
      <para>
       Obsługę &quot;:/sciezka/do/gniazda&quot; dodano w PHP 3.0.10.
      </para>
     </note>
    </para>     
    
    <!-- TODO move the story to features.persistent, and refer to that -->
    <para>
     <function>mysql_pconnect</function> zachowuje się prawie jak
     <function>mysql_connect</function> z dwoma zasadniczymi różnicami.
    </para>
    <para> 
     Pierwsza, podczas łączenia funkcja najpierw spróbuje znaleźć
     połączenie (stałe) już otwarte dla tego samego hosta,
     użytkownika i hasła. Jeżeli je znajdzie, jego identyfikator
     zostanie zwrócony zamiast otwierania nowego połączenia.
    </para>
    <para> 
     Druga, połączenie z serwerem SQL nie zostanie zamknięte po
     zakończeniu wykonywania skryptu. Zamiast tego połączenie
     pozostanie otwarte do późniejszego użycia
     (<function>mysql_close</function> nie zamyka połączeń
     nawiązanych za pomocą <function>mysql_pconnect</function>).
    </para>
    <para> 
     Dlatego też ten typ połączeń nazywany jest 'stałym'.
    </para>
    <note>
     <para>
      Trzeba zaznaczyć, że stałe połączenia działają jedynie z PHP pracującym
      jako moduł. Przeczytaj rozdział
      <link linkend="features.persistent-connections">Stałe połączenia z bazami
      danych</link> by dowiedzieć się więcej.
     </para>
    </note>
    <warning>
     <para>
      Używanie stałych połączeń może wymagać dostrojenia konfiguracji
      Apache'a i MySQLa, aby nie przekroczyć limitu jednoczesnych połączeń
      dozwolonych przez MySQL.
     </para>
    </warning>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
