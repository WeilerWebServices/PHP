<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 337755 Maintainer: joeaccord Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: slawek, mroq, sobak -->
<refentry xml:id="function.mysql-real-escape-string" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_real_escape_string</refname>
  <refpurpose>Dodaje znaki unikowe w łańcuchu znaków do użycia w instrukcji SQL</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_real_escape_string</function></member>
    <member><methodname>PDO::quote</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mysql_real_escape_string</methodname>
   <methodparam><type>string</type><parameter>łańcuch_bez_znaków_unikowych</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>identyfikator_połączeniar</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Dodaje znaki unikowe do <parameter>łańcucha_bez_znaków_unikowych</parameter>, 
   mając na uwadze aktualnie używany w połączeniu zestaw znaków by tak przygotowanego łańcucha
   można bezpiecznie użyc w funkcji <function>mysql_query</function>. Jeśli dopisywane 
   dane mają postać binarną wymagane jest użycie tej funkcji.
  </para>
  <para>
   <function>mysql_real_escape_string</function> wywołuje funkcję biblioteki MySQL
   mysql_real_escape_string, która dodaje lewe ukośniki (backslash) do następujących znaków:
   <literal>\x00</literal>, <literal>\n</literal>,
   <literal>\r</literal>, <literal>\</literal>, <literal>'</literal>,
   <literal>"</literal> and <literal>\x1a</literal>.
  </para>
  <para>
   Użycie tej funkcji jest wymagane zawsze (poza kilkoma wyjątkami) przed wysłaniem
   zapytania do bazy danych, aby zabezpieczyć dane. 
  </para>
  <caution>
   <title>Bezpieczeństwo: domyślne kodowanie znaków</title>
   <para>
    Domyślne kodowanie znaków musi zostać ustawione na poziomie serwera lub
    funkcją <function>mysql_set_charset</function> aby miało wpływ na
    <function>mysql_real_escape_string</function>. Zobacz sekcję o
    on <link linkend="mysqlinfo.concepts.charset">kodowaniu znaków</link>, aby
    zdobyć więcej informacji.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>łańcuch_bez_znaków_unikowych</parameter></term>
     <listitem>
      <para>
       Łańcuch, do którego zostaną dodane znaki unikowe.
      </para>
     </listitem>
    </varlistentry>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Zwraca łańcuch ze znakami unikowymi lub &false; w przypadku błędu.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wywołanie tej funkcji bez ustanowionego połączenia MySQL spowoduje
   wyemitowanie błędu o poziomie <constant>E_WARNING</constant>. Używaj
   tej funkcji tylko przy ustanowionym poprawnym połączeniu MySQL.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład użycia <function>mysql_real_escape_string</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Połączenie
$link = mysql_connect('host', 'uzytkownik', 'haslo')
    OR die(mysql_error());

// Zapytanie
$query = sprintf("SELECT * FROM uzytkownicy WHERE uzytkownik='%s' AND haslo='%s'",
            mysql_real_escape_string($uzytkownik),
            mysql_real_escape_string($haslo));
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_real_escape_string</function> wymaga połączenia</title>
    <para>
     Ten przykład przedstawia co dzieje się gdy nie ma ustanowionego połączenia
     MySQL przy wywoływaniu tej funkcji.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Nie jesteśmy połączeni z MySQL

$nazwisko  = "O'Reilly";
$_nazwisko = mysql_real_escape_string($nazwisko);

$zapytanie = "SELECT * FROM aktorzy WHERE nazwisko = '$_nazwisko'";

var_dump($_nazwisko);
var_dump($zapytanie);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Warning: mysql_real_escape_string(): No such file or directory in /this/test/script.php on line 5
Warning: mysql_real_escape_string(): A link to the server could not be established in /this/test/script.php on line 5

bool(false)
string(41) "SELECT * FROM aktorzy WHERE nazwisko = ''"
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Przykład ataku SQL Injection</title>
    <programlisting role="php">
<![CDATA[
<?php
// Nie sprawdziliśmy zmiennej $_POST['password'], która może zawierać wszystko czego chciał użytkownik! Na przykład:
$_POST['username'] = 'aidan';
$_POST['password'] = "' OR ''='";

// Zapytanie pobierające pasujących użytkowników
$query = "SELECT * FROM users WHERE user='{$_POST['username']}' AND password='{$_POST['password']}'";
mysql_query($query);

// Oznacza to, że zapytanie ma postać:
echo $query;
?>
]]>
    </programlisting>
     <para>
      Zapytanie wysłane do bazy danych:
     </para>
    <screen>
<![CDATA[
SELECT * FROM users WHERE user='aidan' AND password='' OR ''=''
]]>
    </screen>
    <para>
     Zapytanie to pozwala zalogować się każdemu bez znajomości poprawnego hasła.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Przed użyciem <function>mysql_real_escape_string</function> należy otworzyć
    połączenie z MySQL, w przeciwnym razie zostanie wygenerowany błąd poziomu
    <literal>E_WARNING</literal> i zwrócona zostanie wartość &false;.
    Jeśli <parameter>identyfikator_połączenia</parameter> nie został zdefiniowany, zostanie
    użyte ostatnie połączenie do serwera MySQL.
   </para>
  </note>
  <note>
   <para>
    Jeśli opcja <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> została włączona,
    najpierw na danych należy użyć <function>stripslashes</function>. Użycie tej funkcji samej
    spowoduje, że do danych zostaną dodane podwójne znaki unikowe.
   </para>
  </note>
  <note>
   <para>
    Jeśli funkcja ta nie zostanie użyta na danych, zapytanie będzie podatne
    na ataki <link linkend="security.database.sql-injection">SQL Injection Attacks</link>.
   </para>
  </note>
  <note>
   <simpara>
    <function>mysql_real_escape_string</function> nie dodaje znaków unikowych
    do <literal>%</literal> i <literal>_</literal>. Te maski są stosowane
    w zapytaniach MySQL w połączeniu z <literal>LIKE</literal>, <literal>GRANT</literal>
    lub <literal>REVOKE</literal>.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_set_charset</function></member>
    <member><function>mysql_client_encoding</function></member>
    <member><function>addslashes</function></member>
    <member><function>stripslashes</function></member>
    <member>Dyrektywa <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link></member>
    <member>Dyrektywa <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
